// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.orders_magento_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: orders_magento Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class orders_magento implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(concat != null){
				
					this.setProperty("concat", concat.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(data != null){
				
					this.setProperty("data", data.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String concat;
public String getConcat(){
	return this.concat;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String data;
public String getData(){
	return this.data;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "orders_magento";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				orders_magento.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(orders_magento.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tHttpRequest_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHttpRequest_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHttpRequest_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHttpRequest_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tREST_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tReplicate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFilterRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tExtractJSONFields_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_1_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_1_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_1_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tREST_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_2_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_2_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_2_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHttpRequest_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tREST_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String ResponseContent;

				public String getResponseContent () {
					return this.ResponseContent;
				}

				public Boolean ResponseContentIsNullable(){
				    return true;
				}
				public Boolean ResponseContentIsKey(){
				    return false;
				}
				public Integer ResponseContentLength(){
				    return 0;
				}
				public Integer ResponseContentPrecision(){
				    return 0;
				}
				public String ResponseContentDefault(){
				
					return "";
				
				}
				public String ResponseContentComment(){
				
				    return null;
				
				}
				public String ResponseContentPattern(){
				
				    return null;
				
				}
				public String ResponseContentOriginalDbColumnName(){
				
					return "ResponseContent";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.ResponseContent = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.ResponseContent = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ResponseContent,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ResponseContent,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ResponseContent="+ResponseContent);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String ResponseContent;

				public String getResponseContent () {
					return this.ResponseContent;
				}

				public Boolean ResponseContentIsNullable(){
				    return true;
				}
				public Boolean ResponseContentIsKey(){
				    return false;
				}
				public Integer ResponseContentLength(){
				    return 0;
				}
				public Integer ResponseContentPrecision(){
				    return 0;
				}
				public String ResponseContentDefault(){
				
					return "";
				
				}
				public String ResponseContentComment(){
				
				    return null;
				
				}
				public String ResponseContentPattern(){
				
				    return null;
				
				}
				public String ResponseContentOriginalDbColumnName(){
				
					return "ResponseContent";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.ResponseContent = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.ResponseContent = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ResponseContent,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ResponseContent,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ResponseContent="+ResponseContent);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHttpRequest_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHttpRequest_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
row4Struct row4 = new row4Struct();





	
	/**
	 * [tLogRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_2", false);
		start_Hash.put("tLogRow_2", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tLogRow_2 = 0;
		

	///////////////////////
	
         class Util_tLogRow_2 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[1];

        public void addRow(String[] row) {

            for (int i = 0; i < 1; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 0 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 0 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);	                

                  
                    //last column
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() - fillChars[1].length()+2; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_2 util_tLogRow_2 = new Util_tLogRow_2();
        util_tLogRow_2.setTableName("ResponseContent");
        util_tLogRow_2.addRow(new String[]{"ResponseContent",});        
 		StringBuilder strBuffer_tLogRow_2 = null;
		int nb_line_tLogRow_2 = 0;
///////////////////////    			



 



/**
 * [tLogRow_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tHttpRequest_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHttpRequest_1", false);
		start_Hash.put("tHttpRequest_1", System.currentTimeMillis());
		
	
	currentComponent="tHttpRequest_1";
	
	
		int tos_count_tHttpRequest_1 = 0;
		

 



/**
 * [tHttpRequest_1 begin ] stop
 */
	
	/**
	 * [tHttpRequest_1 main ] start
	 */

	

	
	
	currentComponent="tHttpRequest_1";
	
	


int connectTimeOut_tHttpRequest_1 = Integer.valueOf(30)*1000;
int readTimeOut_tHttpRequest_1 = Integer.valueOf(0)*1000;

java.net.URL url_tHttpRequest_1 = new java.net.URL("https://palaciodasferramentas.com.br/rest/V1/integration/admin/token");

java.net.HttpURLConnection urlConn_tHttpRequest_1 = null;

if ("local".equals(System.getProperty("http.proxySet"))) {
    java.net.Proxy proxyToUse = org.talend.proxy.TalendProxySelector.getInstance().getProxyForUriString("https://palaciodasferramentas.com.br/rest/V1/integration/admin/token");
    urlConn_tHttpRequest_1 = (java.net.HttpURLConnection) url_tHttpRequest_1.openConnection(proxyToUse); 
} else {
    urlConn_tHttpRequest_1 = (java.net.HttpURLConnection) url_tHttpRequest_1.openConnection();
}
urlConn_tHttpRequest_1.setRequestMethod("POST");
urlConn_tHttpRequest_1.setDoOutput(true);
urlConn_tHttpRequest_1.setDoInput(true);
urlConn_tHttpRequest_1.setUseCaches(false);

  urlConn_tHttpRequest_1.setRequestProperty("Content-Type", "application/json");
boolean connected_tHttpRequest_1 = false;
int responseCode_tHttpRequest_1 = 0;
globalMap.put("tHttpRequest_1_CONNECTED", false);
try{
    urlConn_tHttpRequest_1.connect();
    connected_tHttpRequest_1 = true;
    globalMap.put("tHttpRequest_1_CONNECTED", true);

    byte[] buffer_tHttpRequest_1 = new byte[1024];
    int bos_buffer_tHttpRequest_1 = 0;java.io.ByteArrayOutputStream bytestream_tHttpRequest_1 = new java.io.ByteArrayOutputStream(); 
            java.io.InputStream bisParam_tHttpRequest_1 = new java.io.BufferedInputStream(new java.io.FileInputStream("C:/Talend/Variavel/Body.txt"));
            java.io.OutputStream bosParam_tHttpRequest_1 = new java.io.BufferedOutputStream(urlConn_tHttpRequest_1.getOutputStream());

            while ((bos_buffer_tHttpRequest_1 = bisParam_tHttpRequest_1.read(buffer_tHttpRequest_1)) != -1) {
                bosParam_tHttpRequest_1.write(buffer_tHttpRequest_1,0,bos_buffer_tHttpRequest_1);
            }
            bosParam_tHttpRequest_1.flush();
            bosParam_tHttpRequest_1.close();
            bisParam_tHttpRequest_1.close();

    responseCode_tHttpRequest_1 = urlConn_tHttpRequest_1.getResponseCode();
    globalMap.put("tHttpRequest_1_RESPONSE_CODE", responseCode_tHttpRequest_1);

    if ( responseCode_tHttpRequest_1 >= 200 && responseCode_tHttpRequest_1 < 300) { //Status code 2XX indicates success
        java.io.InputStream bis_tHttpRequest_1 = new java.io.BufferedInputStream(urlConn_tHttpRequest_1.getInputStream());
        while ((bos_buffer_tHttpRequest_1 = bis_tHttpRequest_1.read(buffer_tHttpRequest_1)) != -1) {bytestream_tHttpRequest_1.write(buffer_tHttpRequest_1,0,bos_buffer_tHttpRequest_1);
        }
        bis_tHttpRequest_1.close();
    } else {
    	String responseMessage_tHttpRequest_1 = urlConn_tHttpRequest_1.getResponseMessage();
    
        //get details response information which will be used when error appear
        java.io.InputStream err_stream_tHttpRequest_1 = urlConn_tHttpRequest_1.getErrorStream();
        if(err_stream_tHttpRequest_1!=null) {
            java.io.InputStream es_tHttpRequest_1 = new java.io.BufferedInputStream(err_stream_tHttpRequest_1);
        	java.io.ByteArrayOutputStream baos_tHttpRequest_1 = new java.io.ByteArrayOutputStream();
        	
        	byte[] buf_tHttpRequest_1 = new byte[1024];
            int read_tHttpRequest_1 = -1;
        	try {
            	while ((read_tHttpRequest_1 = es_tHttpRequest_1.read(buf_tHttpRequest_1)) > 0) {
            		baos_tHttpRequest_1.write(buf_tHttpRequest_1, 0, read_tHttpRequest_1);
            	}
        	} finally {
        		es_tHttpRequest_1.close();
        	}
        
        	responseMessage_tHttpRequest_1 += ("\n" + new String(baos_tHttpRequest_1.toByteArray()));
        }
    	
            System.err.println(responseCode_tHttpRequest_1 + " " + responseMessage_tHttpRequest_1);
            globalMap.put("tHttpRequest_1" + "_ERROR_MESSAGE","Request failed:" + responseCode_tHttpRequest_1 + " " + responseMessage_tHttpRequest_1);
    }

                    row3.ResponseContent = new String(bytestream_tHttpRequest_1.toByteArray());
    urlConn_tHttpRequest_1.disconnect();
}catch(Exception e){
globalMap.put("tHttpRequest_1_ERROR_MESSAGE",e.getMessage());
        System.err.println(e.getMessage());
}

 


	tos_count_tHttpRequest_1++;

/**
 * [tHttpRequest_1 main ] stop
 */
	
	/**
	 * [tHttpRequest_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHttpRequest_1";
	
	

 



/**
 * [tHttpRequest_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

    //Code generated according to input schema and output schema
row4.ResponseContent = "Bearer "+ row3.ResponseContent.replaceAll("\"", "");

context.concat = "Bearer "+ row3.ResponseContent.replaceAll("\"", "");
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_2 main ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_2 = new String[1];
   				
	    		if(row4.ResponseContent != null) { //              
                 row_tLogRow_2[0]=    						    
				                String.valueOf(row4.ResponseContent)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_2.addRow(row_tLogRow_2);	
				nb_line_tLogRow_2++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_2++;

/**
 * [tLogRow_2 main ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tHttpRequest_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHttpRequest_1";
	
	

 



/**
 * [tHttpRequest_1 process_data_end ] stop
 */
	
	/**
	 * [tHttpRequest_1 end ] start
	 */

	

	
	
	currentComponent="tHttpRequest_1";
	
	

 

ok_Hash.put("tHttpRequest_1", true);
end_Hash.put("tHttpRequest_1", System.currentTimeMillis());




/**
 * [tHttpRequest_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tLogRow_2 end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_2 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_2 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_2 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_2);
                    }
                    
                    consoleOut_tLogRow_2.println(util_tLogRow_2.format().toString());
                    consoleOut_tLogRow_2.flush();
//////
globalMap.put("tLogRow_2_NB_LINE",nb_line_tLogRow_2);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tLogRow_2", true);
end_Hash.put("tLogRow_2", System.currentTimeMillis());




/**
 * [tLogRow_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHttpRequest_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tDBInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHttpRequest_1 finally ] start
	 */

	

	
	
	currentComponent="tHttpRequest_1";
	
	

 



/**
 * [tHttpRequest_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tLogRow_2 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHttpRequest_1_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String data_processamento;

				public String getData_processamento () {
					return this.data_processamento;
				}

				public Boolean data_processamentoIsNullable(){
				    return true;
				}
				public Boolean data_processamentoIsKey(){
				    return false;
				}
				public Integer data_processamentoLength(){
				    return 2;
				}
				public Integer data_processamentoPrecision(){
				    return null;
				}
				public String data_processamentoDefault(){
				
					return null;
				
				}
				public String data_processamentoComment(){
				
				    return "";
				
				}
				public String data_processamentoPattern(){
				
					return "";
				
				}
				public String data_processamentoOriginalDbColumnName(){
				
					return "data_processamento";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.data_processamento = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.data_processamento = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.data_processamento,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.data_processamento,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_processamento="+data_processamento);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String data_processamento;

				public String getData_processamento () {
					return this.data_processamento;
				}

				public Boolean data_processamentoIsNullable(){
				    return true;
				}
				public Boolean data_processamentoIsKey(){
				    return false;
				}
				public Integer data_processamentoLength(){
				    return 2;
				}
				public Integer data_processamentoPrecision(){
				    return null;
				}
				public String data_processamentoDefault(){
				
					return null;
				
				}
				public String data_processamentoComment(){
				
				    return "";
				
				}
				public String data_processamentoPattern(){
				
					return "";
				
				}
				public String data_processamentoOriginalDbColumnName(){
				
					return "data_processamento";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.data_processamento = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.data_processamento = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.data_processamento,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.data_processamento,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("data_processamento="+data_processamento);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();
row21Struct row21 = new row21Struct();





	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
	
         class Util_tLogRow_1 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[1];

        public void addRow(String[] row) {

            for (int i = 0; i < 1; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 0 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 0 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);	                

                  
                    //last column
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() - fillChars[1].length()+2; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();
        util_tLogRow_1.setTableName("tLogRow_1");
        util_tLogRow_1.addRow(new String[]{"data_processamento",});        
 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
    
	
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "select date(current_date - interval '2 day')"

;
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row19.data_processamento = null;
							} else {
	                         		
        	row19.data_processamento = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
					


 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

    //Code generated according to input schema and output schema
row21.data_processamento = row19.data_processamento;
context.data = row19.data_processamento;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_1 = new String[1];
   				
	    		if(row21.data_processamento != null) { //              
                 row_tLogRow_1[0]=    						    
				                String.valueOf(row21.data_processamento)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_1.addRow(row_tLogRow_1);	
				nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_1 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    
                    consoleOut_tLogRow_1.println(util_tLogRow_1.format().toString());
                    consoleOut_tLogRow_1.flush();
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String status_magento;

				public String getStatus_magento () {
					return this.status_magento;
				}

				public Boolean status_magentoIsNullable(){
				    return true;
				}
				public Boolean status_magentoIsKey(){
				    return false;
				}
				public Integer status_magentoLength(){
				    return null;
				}
				public Integer status_magentoPrecision(){
				    return null;
				}
				public String status_magentoDefault(){
				
					return null;
				
				}
				public String status_magentoComment(){
				
				    return "";
				
				}
				public String status_magentoPattern(){
				
					return "";
				
				}
				public String status_magentoOriginalDbColumnName(){
				
					return "status_magento";
				
				}

				
			    public String de_para;

				public String getDe_para () {
					return this.de_para;
				}

				public Boolean de_paraIsNullable(){
				    return true;
				}
				public Boolean de_paraIsKey(){
				    return false;
				}
				public Integer de_paraLength(){
				    return null;
				}
				public Integer de_paraPrecision(){
				    return null;
				}
				public String de_paraDefault(){
				
					return null;
				
				}
				public String de_paraComment(){
				
				    return "";
				
				}
				public String de_paraPattern(){
				
					return "";
				
				}
				public String de_paraOriginalDbColumnName(){
				
					return "de_para";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.status_magento = readString(dis);
					
					this.de_para = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.status_magento = readString(dis);
					
					this.de_para = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.status_magento,dos);
					
					// String
				
						writeString(this.de_para,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.status_magento,dos);
					
					// String
				
						writeString(this.de_para,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("status_magento="+status_magento);
		sb.append(",de_para="+de_para);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_orders_magento_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
    
	
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "select status_magento, de_para from dw_t_status_magento";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row16.status_magento = null;
							} else {
	                         		
        	row16.status_magento = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row16.de_para = null;
							} else {
	                         		
        	row16.de_para = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
					


 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					



    
		row16Struct oneRow_tHashOutput_4 = new row16Struct();
				
					oneRow_tHashOutput_4.status_magento = row16.status_magento;
					oneRow_tHashOutput_4.de_para = row16.de_para;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);
 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tDBInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.status = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.status = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.status,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.status,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",status="+status);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_orders_magento_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select order_number,\n       status\n       from orders_magento\nwhere orders_magento.order_date >= current_date- inter"
+"val '90 day'\n-- where order_number = '000599260'\n";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row11.order_number = null;
							} else {
	                         		
        	row11.order_number = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row11.status = null;
							} else {
	                         		
        	row11.status = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
					


 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					



    
		row11Struct oneRow_tHashOutput_1 = new row11Struct();
				
					oneRow_tHashOutput_1.order_number = row11.order_number;
					oneRow_tHashOutput_1.status = row11.status;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk10", 0, "ok");
								} 
							
							tDBInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public String created_at;

				public String getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readString(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readString(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// String
				
						writeString(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// String
				
						writeString(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+created_at);
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_orders_magento_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "select order_number,\n       item,\n       price,\n       qtde,\n       entity_id,\n       created_at,\n       created_"
+"by\n  from orders_items_magento\nwhere created_at >= current_date- interval '90 day'";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row23.order_number = null;
							} else {
	                         		
        	row23.order_number = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row23.item = null;
							} else {
	                         		
        	row23.item = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row23.price = null;
							} else {
	                         		
            row23.price = rs_tDBInput_4.getDouble(3);
            if(rs_tDBInput_4.wasNull()){
                    row23.price = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row23.qtde = null;
							} else {
		                          
            row23.qtde = rs_tDBInput_4.getInt(4);
            if(rs_tDBInput_4.wasNull()){
                    row23.qtde = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row23.entity_id = null;
							} else {
	                         		
        	row23.entity_id = routines.system.JDBCUtil.getString(rs_tDBInput_4, 5, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row23.created_at = null;
							} else {
	                         		
        	row23.created_at = routines.system.JDBCUtil.getString(rs_tDBInput_4, 6, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 7) {
								row23.created_by = null;
							} else {
	                         		
        	row23.created_by = routines.system.JDBCUtil.getString(rs_tDBInput_4, 7, false);
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					



    
		row23Struct oneRow_tHashOutput_5 = new row23Struct();
				
					oneRow_tHashOutput_5.order_number = row23.order_number;
					oneRow_tHashOutput_5.item = row23.item;
					oneRow_tHashOutput_5.price = row23.price;
					oneRow_tHashOutput_5.qtde = row23.qtde;
					oneRow_tHashOutput_5.entity_id = row23.entity_id;
					oneRow_tHashOutput_5.created_at = row23.created_at;
					oneRow_tHashOutput_5.created_by = row23.created_by;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tREST_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("increment_id="+increment_id);
		sb.append(",entity_id="+entity_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row43Struct implements routines.system.IPersistableRow<row43Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String items;

				public String getItems () {
					return this.items;
				}

				public Boolean itemsIsNullable(){
				    return true;
				}
				public Boolean itemsIsKey(){
				    return false;
				}
				public Integer itemsLength(){
				    return null;
				}
				public Integer itemsPrecision(){
				    return null;
				}
				public String itemsDefault(){
				
					return null;
				
				}
				public String itemsComment(){
				
				    return "";
				
				}
				public String itemsPattern(){
				
					return "";
				
				}
				public String itemsOriginalDbColumnName(){
				
					return "items";
				
				}

				
			    public String qty_ordered;

				public String getQty_ordered () {
					return this.qty_ordered;
				}

				public Boolean qty_orderedIsNullable(){
				    return true;
				}
				public Boolean qty_orderedIsKey(){
				    return false;
				}
				public Integer qty_orderedLength(){
				    return null;
				}
				public Integer qty_orderedPrecision(){
				    return null;
				}
				public String qty_orderedDefault(){
				
					return null;
				
				}
				public String qty_orderedComment(){
				
				    return "";
				
				}
				public String qty_orderedPattern(){
				
					return "";
				
				}
				public String qty_orderedOriginalDbColumnName(){
				
					return "qty_ordered";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String order_id;

				public String getOrder_id () {
					return this.order_id;
				}

				public Boolean order_idIsNullable(){
				    return true;
				}
				public Boolean order_idIsKey(){
				    return false;
				}
				public Integer order_idLength(){
				    return null;
				}
				public Integer order_idPrecision(){
				    return null;
				}
				public String order_idDefault(){
				
					return null;
				
				}
				public String order_idComment(){
				
				    return "";
				
				}
				public String order_idPattern(){
				
					return "";
				
				}
				public String order_idOriginalDbColumnName(){
				
					return "order_id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.items = readString(dis);
					
					this.qty_ordered = readString(dis);
					
					this.price = readString(dis);
					
					this.order_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.items = readString(dis);
					
					this.qty_ordered = readString(dis);
					
					this.price = readString(dis);
					
					this.order_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.items,dos);
					
					// String
				
						writeString(this.qty_ordered,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.order_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.items,dos);
					
					// String
				
						writeString(this.qty_ordered,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.order_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("items="+items);
		sb.append(",qty_ordered="+qty_ordered);
		sb.append(",price="+price);
		sb.append(",order_id="+order_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row43Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String items;

				public String getItems () {
					return this.items;
				}

				public Boolean itemsIsNullable(){
				    return true;
				}
				public Boolean itemsIsKey(){
				    return false;
				}
				public Integer itemsLength(){
				    return 0;
				}
				public Integer itemsPrecision(){
				    return 0;
				}
				public String itemsDefault(){
				
					return null;
				
				}
				public String itemsComment(){
				
				    return null;
				
				}
				public String itemsPattern(){
				
				    return null;
				
				}
				public String itemsOriginalDbColumnName(){
				
					return "items";
				
				}

				
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.items = readString(dis);
					
					this.increment_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.items = readString(dis);
					
					this.increment_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.items,dos);
					
					// String
				
						writeString(this.increment_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.items,dos);
					
					// String
				
						writeString(this.increment_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("items="+items);
		sb.append(",increment_id="+increment_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public java.util.Date order_date;

				public java.util.Date getOrder_date () {
					return this.order_date;
				}

				public Boolean order_dateIsNullable(){
				    return true;
				}
				public Boolean order_dateIsKey(){
				    return false;
				}
				public Integer order_dateLength(){
				    return null;
				}
				public Integer order_datePrecision(){
				    return null;
				}
				public String order_dateDefault(){
				
					return null;
				
				}
				public String order_dateComment(){
				
				    return "";
				
				}
				public String order_datePattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String order_dateOriginalDbColumnName(){
				
					return "order_date";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_items;

				public Integer getTotal_items () {
					return this.total_items;
				}

				public Boolean total_itemsIsNullable(){
				    return true;
				}
				public Boolean total_itemsIsKey(){
				    return false;
				}
				public Integer total_itemsLength(){
				    return null;
				}
				public Integer total_itemsPrecision(){
				    return null;
				}
				public String total_itemsDefault(){
				
					return null;
				
				}
				public String total_itemsComment(){
				
				    return "";
				
				}
				public String total_itemsPattern(){
				
					return "";
				
				}
				public String total_itemsOriginalDbColumnName(){
				
					return "total_items";
				
				}

				
			    public BigDecimal order_total;

				public BigDecimal getOrder_total () {
					return this.order_total;
				}

				public Boolean order_totalIsNullable(){
				    return true;
				}
				public Boolean order_totalIsKey(){
				    return false;
				}
				public Integer order_totalLength(){
				    return null;
				}
				public Integer order_totalPrecision(){
				    return null;
				}
				public String order_totalDefault(){
				
					return null;
				
				}
				public String order_totalComment(){
				
				    return "";
				
				}
				public String order_totalPattern(){
				
					return "";
				
				}
				public String order_totalOriginalDbColumnName(){
				
					return "order_total";
				
				}

				
			    public BigDecimal order_total_wo_discont;

				public BigDecimal getOrder_total_wo_discont () {
					return this.order_total_wo_discont;
				}

				public Boolean order_total_wo_discontIsNullable(){
				    return true;
				}
				public Boolean order_total_wo_discontIsKey(){
				    return false;
				}
				public Integer order_total_wo_discontLength(){
				    return null;
				}
				public Integer order_total_wo_discontPrecision(){
				    return null;
				}
				public String order_total_wo_discontDefault(){
				
					return null;
				
				}
				public String order_total_wo_discontComment(){
				
				    return "";
				
				}
				public String order_total_wo_discontPattern(){
				
					return "";
				
				}
				public String order_total_wo_discontOriginalDbColumnName(){
				
					return "order_total_wo_discont";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_price;

				public BigDecimal getShipping_price () {
					return this.shipping_price;
				}

				public Boolean shipping_priceIsNullable(){
				    return true;
				}
				public Boolean shipping_priceIsKey(){
				    return false;
				}
				public Integer shipping_priceLength(){
				    return null;
				}
				public Integer shipping_pricePrecision(){
				    return null;
				}
				public String shipping_priceDefault(){
				
					return null;
				
				}
				public String shipping_priceComment(){
				
				    return "";
				
				}
				public String shipping_pricePattern(){
				
					return "";
				
				}
				public String shipping_priceOriginalDbColumnName(){
				
					return "shipping_price";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_code;

				public String getCountry_code () {
					return this.country_code;
				}

				public Boolean country_codeIsNullable(){
				    return true;
				}
				public Boolean country_codeIsKey(){
				    return false;
				}
				public Integer country_codeLength(){
				    return null;
				}
				public Integer country_codePrecision(){
				    return null;
				}
				public String country_codeDefault(){
				
					return null;
				
				}
				public String country_codeComment(){
				
				    return "";
				
				}
				public String country_codePattern(){
				
					return "";
				
				}
				public String country_codeOriginalDbColumnName(){
				
					return "country_code";
				
				}

				
			    public String state_code;

				public String getState_code () {
					return this.state_code;
				}

				public Boolean state_codeIsNullable(){
				    return true;
				}
				public Boolean state_codeIsKey(){
				    return false;
				}
				public Integer state_codeLength(){
				    return null;
				}
				public Integer state_codePrecision(){
				    return null;
				}
				public String state_codeDefault(){
				
					return null;
				
				}
				public String state_codeComment(){
				
				    return "";
				
				}
				public String state_codePattern(){
				
					return "";
				
				}
				public String state_codeOriginalDbColumnName(){
				
					return "state_code";
				
				}

				
			    public String state;

				public String getState () {
					return this.state;
				}

				public Boolean stateIsNullable(){
				    return true;
				}
				public Boolean stateIsKey(){
				    return false;
				}
				public Integer stateLength(){
				    return null;
				}
				public Integer statePrecision(){
				    return null;
				}
				public String stateDefault(){
				
					return null;
				
				}
				public String stateComment(){
				
				    return "";
				
				}
				public String statePattern(){
				
					return "";
				
				}
				public String stateOriginalDbColumnName(){
				
					return "state";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",order_date="+String.valueOf(order_date));
		sb.append(",status="+status);
		sb.append(",total_items="+String.valueOf(total_items));
		sb.append(",order_total="+String.valueOf(order_total));
		sb.append(",order_total_wo_discont="+String.valueOf(order_total_wo_discont));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_price="+String.valueOf(shipping_price));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_code="+country_code);
		sb.append(",state_code="+state_code);
		sb.append(",state="+state);
		sb.append(",city="+city);
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Consulta_APIStruct implements routines.system.IPersistableRow<Consulta_APIStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public java.util.Date order_date;

				public java.util.Date getOrder_date () {
					return this.order_date;
				}

				public Boolean order_dateIsNullable(){
				    return true;
				}
				public Boolean order_dateIsKey(){
				    return false;
				}
				public Integer order_dateLength(){
				    return null;
				}
				public Integer order_datePrecision(){
				    return null;
				}
				public String order_dateDefault(){
				
					return null;
				
				}
				public String order_dateComment(){
				
				    return "";
				
				}
				public String order_datePattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String order_dateOriginalDbColumnName(){
				
					return "order_date";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_items;

				public Integer getTotal_items () {
					return this.total_items;
				}

				public Boolean total_itemsIsNullable(){
				    return true;
				}
				public Boolean total_itemsIsKey(){
				    return false;
				}
				public Integer total_itemsLength(){
				    return null;
				}
				public Integer total_itemsPrecision(){
				    return null;
				}
				public String total_itemsDefault(){
				
					return null;
				
				}
				public String total_itemsComment(){
				
				    return "";
				
				}
				public String total_itemsPattern(){
				
					return "";
				
				}
				public String total_itemsOriginalDbColumnName(){
				
					return "total_items";
				
				}

				
			    public BigDecimal order_total;

				public BigDecimal getOrder_total () {
					return this.order_total;
				}

				public Boolean order_totalIsNullable(){
				    return true;
				}
				public Boolean order_totalIsKey(){
				    return false;
				}
				public Integer order_totalLength(){
				    return null;
				}
				public Integer order_totalPrecision(){
				    return null;
				}
				public String order_totalDefault(){
				
					return null;
				
				}
				public String order_totalComment(){
				
				    return "";
				
				}
				public String order_totalPattern(){
				
					return "";
				
				}
				public String order_totalOriginalDbColumnName(){
				
					return "order_total";
				
				}

				
			    public BigDecimal order_total_wo_discont;

				public BigDecimal getOrder_total_wo_discont () {
					return this.order_total_wo_discont;
				}

				public Boolean order_total_wo_discontIsNullable(){
				    return true;
				}
				public Boolean order_total_wo_discontIsKey(){
				    return false;
				}
				public Integer order_total_wo_discontLength(){
				    return null;
				}
				public Integer order_total_wo_discontPrecision(){
				    return null;
				}
				public String order_total_wo_discontDefault(){
				
					return null;
				
				}
				public String order_total_wo_discontComment(){
				
				    return "";
				
				}
				public String order_total_wo_discontPattern(){
				
					return "";
				
				}
				public String order_total_wo_discontOriginalDbColumnName(){
				
					return "order_total_wo_discont";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_price;

				public BigDecimal getShipping_price () {
					return this.shipping_price;
				}

				public Boolean shipping_priceIsNullable(){
				    return true;
				}
				public Boolean shipping_priceIsKey(){
				    return false;
				}
				public Integer shipping_priceLength(){
				    return null;
				}
				public Integer shipping_pricePrecision(){
				    return null;
				}
				public String shipping_priceDefault(){
				
					return null;
				
				}
				public String shipping_priceComment(){
				
				    return "";
				
				}
				public String shipping_pricePattern(){
				
					return "";
				
				}
				public String shipping_priceOriginalDbColumnName(){
				
					return "shipping_price";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_code;

				public String getCountry_code () {
					return this.country_code;
				}

				public Boolean country_codeIsNullable(){
				    return true;
				}
				public Boolean country_codeIsKey(){
				    return false;
				}
				public Integer country_codeLength(){
				    return null;
				}
				public Integer country_codePrecision(){
				    return null;
				}
				public String country_codeDefault(){
				
					return null;
				
				}
				public String country_codeComment(){
				
				    return "";
				
				}
				public String country_codePattern(){
				
					return "";
				
				}
				public String country_codeOriginalDbColumnName(){
				
					return "country_code";
				
				}

				
			    public String state_code;

				public String getState_code () {
					return this.state_code;
				}

				public Boolean state_codeIsNullable(){
				    return true;
				}
				public Boolean state_codeIsKey(){
				    return false;
				}
				public Integer state_codeLength(){
				    return null;
				}
				public Integer state_codePrecision(){
				    return null;
				}
				public String state_codeDefault(){
				
					return null;
				
				}
				public String state_codeComment(){
				
				    return "";
				
				}
				public String state_codePattern(){
				
					return "";
				
				}
				public String state_codeOriginalDbColumnName(){
				
					return "state_code";
				
				}

				
			    public String state;

				public String getState () {
					return this.state;
				}

				public Boolean stateIsNullable(){
				    return true;
				}
				public Boolean stateIsKey(){
				    return false;
				}
				public Integer stateLength(){
				    return null;
				}
				public Integer statePrecision(){
				    return null;
				}
				public String stateDefault(){
				
					return null;
				
				}
				public String stateComment(){
				
				    return "";
				
				}
				public String statePattern(){
				
					return "";
				
				}
				public String stateOriginalDbColumnName(){
				
					return "state";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",order_date="+String.valueOf(order_date));
		sb.append(",status="+status);
		sb.append(",total_items="+String.valueOf(total_items));
		sb.append(",order_total="+String.valueOf(order_total));
		sb.append(",order_total_wo_discont="+String.valueOf(order_total_wo_discont));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_price="+String.valueOf(shipping_price));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_code="+country_code);
		sb.append(",state_code="+state_code);
		sb.append(",state="+state);
		sb.append(",city="+city);
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Consulta_APIStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_qty_ordered;

				public Integer getTotal_qty_ordered () {
					return this.total_qty_ordered;
				}

				public Boolean total_qty_orderedIsNullable(){
				    return true;
				}
				public Boolean total_qty_orderedIsKey(){
				    return false;
				}
				public Integer total_qty_orderedLength(){
				    return null;
				}
				public Integer total_qty_orderedPrecision(){
				    return null;
				}
				public String total_qty_orderedDefault(){
				
					return null;
				
				}
				public String total_qty_orderedComment(){
				
				    return "";
				
				}
				public String total_qty_orderedPattern(){
				
					return "";
				
				}
				public String total_qty_orderedOriginalDbColumnName(){
				
					return "total_qty_ordered";
				
				}

				
			    public BigDecimal grand_total;

				public BigDecimal getGrand_total () {
					return this.grand_total;
				}

				public Boolean grand_totalIsNullable(){
				    return true;
				}
				public Boolean grand_totalIsKey(){
				    return false;
				}
				public Integer grand_totalLength(){
				    return null;
				}
				public Integer grand_totalPrecision(){
				    return null;
				}
				public String grand_totalDefault(){
				
					return null;
				
				}
				public String grand_totalComment(){
				
				    return "";
				
				}
				public String grand_totalPattern(){
				
					return "";
				
				}
				public String grand_totalOriginalDbColumnName(){
				
					return "grand_total";
				
				}

				
			    public BigDecimal subtotal;

				public BigDecimal getSubtotal () {
					return this.subtotal;
				}

				public Boolean subtotalIsNullable(){
				    return true;
				}
				public Boolean subtotalIsKey(){
				    return false;
				}
				public Integer subtotalLength(){
				    return null;
				}
				public Integer subtotalPrecision(){
				    return null;
				}
				public String subtotalDefault(){
				
					return null;
				
				}
				public String subtotalComment(){
				
				    return "";
				
				}
				public String subtotalPattern(){
				
					return "";
				
				}
				public String subtotalOriginalDbColumnName(){
				
					return "subtotal";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_amount;

				public BigDecimal getShipping_amount () {
					return this.shipping_amount;
				}

				public Boolean shipping_amountIsNullable(){
				    return true;
				}
				public Boolean shipping_amountIsKey(){
				    return false;
				}
				public Integer shipping_amountLength(){
				    return null;
				}
				public Integer shipping_amountPrecision(){
				    return null;
				}
				public String shipping_amountDefault(){
				
					return null;
				
				}
				public String shipping_amountComment(){
				
				    return "";
				
				}
				public String shipping_amountPattern(){
				
					return "";
				
				}
				public String shipping_amountOriginalDbColumnName(){
				
					return "shipping_amount";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_id;

				public String getCountry_id () {
					return this.country_id;
				}

				public Boolean country_idIsNullable(){
				    return true;
				}
				public Boolean country_idIsKey(){
				    return false;
				}
				public Integer country_idLength(){
				    return null;
				}
				public Integer country_idPrecision(){
				    return null;
				}
				public String country_idDefault(){
				
					return null;
				
				}
				public String country_idComment(){
				
				    return "";
				
				}
				public String country_idPattern(){
				
					return "";
				
				}
				public String country_idOriginalDbColumnName(){
				
					return "country_id";
				
				}

				
			    public String region_code;

				public String getRegion_code () {
					return this.region_code;
				}

				public Boolean region_codeIsNullable(){
				    return true;
				}
				public Boolean region_codeIsKey(){
				    return false;
				}
				public Integer region_codeLength(){
				    return null;
				}
				public Integer region_codePrecision(){
				    return null;
				}
				public String region_codeDefault(){
				
					return null;
				
				}
				public String region_codeComment(){
				
				    return "";
				
				}
				public String region_codePattern(){
				
					return "";
				
				}
				public String region_codeOriginalDbColumnName(){
				
					return "region_code";
				
				}

				
			    public String region;

				public String getRegion () {
					return this.region;
				}

				public Boolean regionIsNullable(){
				    return true;
				}
				public Boolean regionIsKey(){
				    return false;
				}
				public Integer regionLength(){
				    return null;
				}
				public Integer regionPrecision(){
				    return null;
				}
				public String regionDefault(){
				
					return null;
				
				}
				public String regionComment(){
				
				    return "";
				
				}
				public String regionPattern(){
				
					return "";
				
				}
				public String regionOriginalDbColumnName(){
				
					return "region";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.grand_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.subtotal);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.grand_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.subtotal);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("increment_id="+increment_id);
		sb.append(",status="+status);
		sb.append(",total_qty_ordered="+String.valueOf(total_qty_ordered));
		sb.append(",grand_total="+String.valueOf(grand_total));
		sb.append(",subtotal="+String.valueOf(subtotal));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_amount="+String.valueOf(shipping_amount));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_id="+country_id);
		sb.append(",region_code="+region_code);
		sb.append(",region="+region);
		sb.append(",city="+city);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_qty_ordered;

				public Integer getTotal_qty_ordered () {
					return this.total_qty_ordered;
				}

				public Boolean total_qty_orderedIsNullable(){
				    return true;
				}
				public Boolean total_qty_orderedIsKey(){
				    return false;
				}
				public Integer total_qty_orderedLength(){
				    return null;
				}
				public Integer total_qty_orderedPrecision(){
				    return null;
				}
				public String total_qty_orderedDefault(){
				
					return null;
				
				}
				public String total_qty_orderedComment(){
				
				    return "";
				
				}
				public String total_qty_orderedPattern(){
				
					return "";
				
				}
				public String total_qty_orderedOriginalDbColumnName(){
				
					return "total_qty_ordered";
				
				}

				
			    public BigDecimal grand_total;

				public BigDecimal getGrand_total () {
					return this.grand_total;
				}

				public Boolean grand_totalIsNullable(){
				    return true;
				}
				public Boolean grand_totalIsKey(){
				    return false;
				}
				public Integer grand_totalLength(){
				    return null;
				}
				public Integer grand_totalPrecision(){
				    return null;
				}
				public String grand_totalDefault(){
				
					return null;
				
				}
				public String grand_totalComment(){
				
				    return "";
				
				}
				public String grand_totalPattern(){
				
					return "";
				
				}
				public String grand_totalOriginalDbColumnName(){
				
					return "grand_total";
				
				}

				
			    public BigDecimal subtotal;

				public BigDecimal getSubtotal () {
					return this.subtotal;
				}

				public Boolean subtotalIsNullable(){
				    return true;
				}
				public Boolean subtotalIsKey(){
				    return false;
				}
				public Integer subtotalLength(){
				    return null;
				}
				public Integer subtotalPrecision(){
				    return null;
				}
				public String subtotalDefault(){
				
					return null;
				
				}
				public String subtotalComment(){
				
				    return "";
				
				}
				public String subtotalPattern(){
				
					return "";
				
				}
				public String subtotalOriginalDbColumnName(){
				
					return "subtotal";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_amount;

				public BigDecimal getShipping_amount () {
					return this.shipping_amount;
				}

				public Boolean shipping_amountIsNullable(){
				    return true;
				}
				public Boolean shipping_amountIsKey(){
				    return false;
				}
				public Integer shipping_amountLength(){
				    return null;
				}
				public Integer shipping_amountPrecision(){
				    return null;
				}
				public String shipping_amountDefault(){
				
					return null;
				
				}
				public String shipping_amountComment(){
				
				    return "";
				
				}
				public String shipping_amountPattern(){
				
					return "";
				
				}
				public String shipping_amountOriginalDbColumnName(){
				
					return "shipping_amount";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_id;

				public String getCountry_id () {
					return this.country_id;
				}

				public Boolean country_idIsNullable(){
				    return true;
				}
				public Boolean country_idIsKey(){
				    return false;
				}
				public Integer country_idLength(){
				    return null;
				}
				public Integer country_idPrecision(){
				    return null;
				}
				public String country_idDefault(){
				
					return null;
				
				}
				public String country_idComment(){
				
				    return "";
				
				}
				public String country_idPattern(){
				
					return "";
				
				}
				public String country_idOriginalDbColumnName(){
				
					return "country_id";
				
				}

				
			    public String region_code;

				public String getRegion_code () {
					return this.region_code;
				}

				public Boolean region_codeIsNullable(){
				    return true;
				}
				public Boolean region_codeIsKey(){
				    return false;
				}
				public Integer region_codeLength(){
				    return null;
				}
				public Integer region_codePrecision(){
				    return null;
				}
				public String region_codeDefault(){
				
					return null;
				
				}
				public String region_codeComment(){
				
				    return "";
				
				}
				public String region_codePattern(){
				
					return "";
				
				}
				public String region_codeOriginalDbColumnName(){
				
					return "region_code";
				
				}

				
			    public String region;

				public String getRegion () {
					return this.region;
				}

				public Boolean regionIsNullable(){
				    return true;
				}
				public Boolean regionIsKey(){
				    return false;
				}
				public Integer regionLength(){
				    return null;
				}
				public Integer regionPrecision(){
				    return null;
				}
				public String regionDefault(){
				
					return null;
				
				}
				public String regionComment(){
				
				    return "";
				
				}
				public String regionPattern(){
				
					return "";
				
				}
				public String regionOriginalDbColumnName(){
				
					return "region";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.grand_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.subtotal);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.grand_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.subtotal);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("increment_id="+increment_id);
		sb.append(",status="+status);
		sb.append(",total_qty_ordered="+String.valueOf(total_qty_ordered));
		sb.append(",grand_total="+String.valueOf(grand_total));
		sb.append(",subtotal="+String.valueOf(subtotal));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_amount="+String.valueOf(shipping_amount));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_id="+country_id);
		sb.append(",region_code="+region_code);
		sb.append(",region="+region);
		sb.append(",city="+city);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_1> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_qty_ordered;

				public Integer getTotal_qty_ordered () {
					return this.total_qty_ordered;
				}

				public Boolean total_qty_orderedIsNullable(){
				    return true;
				}
				public Boolean total_qty_orderedIsKey(){
				    return false;
				}
				public Integer total_qty_orderedLength(){
				    return null;
				}
				public Integer total_qty_orderedPrecision(){
				    return null;
				}
				public String total_qty_orderedDefault(){
				
					return null;
				
				}
				public String total_qty_orderedComment(){
				
				    return "";
				
				}
				public String total_qty_orderedPattern(){
				
					return "";
				
				}
				public String total_qty_orderedOriginalDbColumnName(){
				
					return "total_qty_ordered";
				
				}

				
			    public BigDecimal grand_total;

				public BigDecimal getGrand_total () {
					return this.grand_total;
				}

				public Boolean grand_totalIsNullable(){
				    return true;
				}
				public Boolean grand_totalIsKey(){
				    return false;
				}
				public Integer grand_totalLength(){
				    return null;
				}
				public Integer grand_totalPrecision(){
				    return null;
				}
				public String grand_totalDefault(){
				
					return null;
				
				}
				public String grand_totalComment(){
				
				    return "";
				
				}
				public String grand_totalPattern(){
				
					return "";
				
				}
				public String grand_totalOriginalDbColumnName(){
				
					return "grand_total";
				
				}

				
			    public BigDecimal subtotal;

				public BigDecimal getSubtotal () {
					return this.subtotal;
				}

				public Boolean subtotalIsNullable(){
				    return true;
				}
				public Boolean subtotalIsKey(){
				    return false;
				}
				public Integer subtotalLength(){
				    return null;
				}
				public Integer subtotalPrecision(){
				    return null;
				}
				public String subtotalDefault(){
				
					return null;
				
				}
				public String subtotalComment(){
				
				    return "";
				
				}
				public String subtotalPattern(){
				
					return "";
				
				}
				public String subtotalOriginalDbColumnName(){
				
					return "subtotal";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_amount;

				public BigDecimal getShipping_amount () {
					return this.shipping_amount;
				}

				public Boolean shipping_amountIsNullable(){
				    return true;
				}
				public Boolean shipping_amountIsKey(){
				    return false;
				}
				public Integer shipping_amountLength(){
				    return null;
				}
				public Integer shipping_amountPrecision(){
				    return null;
				}
				public String shipping_amountDefault(){
				
					return null;
				
				}
				public String shipping_amountComment(){
				
				    return "";
				
				}
				public String shipping_amountPattern(){
				
					return "";
				
				}
				public String shipping_amountOriginalDbColumnName(){
				
					return "shipping_amount";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_id;

				public String getCountry_id () {
					return this.country_id;
				}

				public Boolean country_idIsNullable(){
				    return true;
				}
				public Boolean country_idIsKey(){
				    return false;
				}
				public Integer country_idLength(){
				    return null;
				}
				public Integer country_idPrecision(){
				    return null;
				}
				public String country_idDefault(){
				
					return null;
				
				}
				public String country_idComment(){
				
				    return "";
				
				}
				public String country_idPattern(){
				
					return "";
				
				}
				public String country_idOriginalDbColumnName(){
				
					return "country_id";
				
				}

				
			    public String region_code;

				public String getRegion_code () {
					return this.region_code;
				}

				public Boolean region_codeIsNullable(){
				    return true;
				}
				public Boolean region_codeIsKey(){
				    return false;
				}
				public Integer region_codeLength(){
				    return null;
				}
				public Integer region_codePrecision(){
				    return null;
				}
				public String region_codeDefault(){
				
					return null;
				
				}
				public String region_codeComment(){
				
				    return "";
				
				}
				public String region_codePattern(){
				
					return "";
				
				}
				public String region_codeOriginalDbColumnName(){
				
					return "region_code";
				
				}

				
			    public String region;

				public String getRegion () {
					return this.region;
				}

				public Boolean regionIsNullable(){
				    return true;
				}
				public Boolean regionIsKey(){
				    return false;
				}
				public Integer regionLength(){
				    return null;
				}
				public Integer regionPrecision(){
				    return null;
				}
				public String regionDefault(){
				
					return null;
				
				}
				public String regionComment(){
				
				    return "";
				
				}
				public String regionPattern(){
				
					return "";
				
				}
				public String regionOriginalDbColumnName(){
				
					return "region";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.grand_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.subtotal);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.grand_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.subtotal);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("increment_id="+increment_id);
		sb.append(",status="+status);
		sb.append(",total_qty_ordered="+String.valueOf(total_qty_ordered));
		sb.append(",grand_total="+String.valueOf(grand_total));
		sb.append(",subtotal="+String.valueOf(subtotal));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_amount="+String.valueOf(shipping_amount));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_id="+country_id);
		sb.append(",region_code="+region_code);
		sb.append(",region="+region);
		sb.append(",city="+city);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_qty_ordered;

				public Integer getTotal_qty_ordered () {
					return this.total_qty_ordered;
				}

				public Boolean total_qty_orderedIsNullable(){
				    return true;
				}
				public Boolean total_qty_orderedIsKey(){
				    return false;
				}
				public Integer total_qty_orderedLength(){
				    return null;
				}
				public Integer total_qty_orderedPrecision(){
				    return null;
				}
				public String total_qty_orderedDefault(){
				
					return null;
				
				}
				public String total_qty_orderedComment(){
				
				    return "";
				
				}
				public String total_qty_orderedPattern(){
				
					return "";
				
				}
				public String total_qty_orderedOriginalDbColumnName(){
				
					return "total_qty_ordered";
				
				}

				
			    public BigDecimal grand_total;

				public BigDecimal getGrand_total () {
					return this.grand_total;
				}

				public Boolean grand_totalIsNullable(){
				    return true;
				}
				public Boolean grand_totalIsKey(){
				    return false;
				}
				public Integer grand_totalLength(){
				    return null;
				}
				public Integer grand_totalPrecision(){
				    return null;
				}
				public String grand_totalDefault(){
				
					return null;
				
				}
				public String grand_totalComment(){
				
				    return "";
				
				}
				public String grand_totalPattern(){
				
					return "";
				
				}
				public String grand_totalOriginalDbColumnName(){
				
					return "grand_total";
				
				}

				
			    public BigDecimal subtotal;

				public BigDecimal getSubtotal () {
					return this.subtotal;
				}

				public Boolean subtotalIsNullable(){
				    return true;
				}
				public Boolean subtotalIsKey(){
				    return false;
				}
				public Integer subtotalLength(){
				    return null;
				}
				public Integer subtotalPrecision(){
				    return null;
				}
				public String subtotalDefault(){
				
					return null;
				
				}
				public String subtotalComment(){
				
				    return "";
				
				}
				public String subtotalPattern(){
				
					return "";
				
				}
				public String subtotalOriginalDbColumnName(){
				
					return "subtotal";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_amount;

				public BigDecimal getShipping_amount () {
					return this.shipping_amount;
				}

				public Boolean shipping_amountIsNullable(){
				    return true;
				}
				public Boolean shipping_amountIsKey(){
				    return false;
				}
				public Integer shipping_amountLength(){
				    return null;
				}
				public Integer shipping_amountPrecision(){
				    return null;
				}
				public String shipping_amountDefault(){
				
					return null;
				
				}
				public String shipping_amountComment(){
				
				    return "";
				
				}
				public String shipping_amountPattern(){
				
					return "";
				
				}
				public String shipping_amountOriginalDbColumnName(){
				
					return "shipping_amount";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_id;

				public String getCountry_id () {
					return this.country_id;
				}

				public Boolean country_idIsNullable(){
				    return true;
				}
				public Boolean country_idIsKey(){
				    return false;
				}
				public Integer country_idLength(){
				    return null;
				}
				public Integer country_idPrecision(){
				    return null;
				}
				public String country_idDefault(){
				
					return null;
				
				}
				public String country_idComment(){
				
				    return "";
				
				}
				public String country_idPattern(){
				
					return "";
				
				}
				public String country_idOriginalDbColumnName(){
				
					return "country_id";
				
				}

				
			    public String region_code;

				public String getRegion_code () {
					return this.region_code;
				}

				public Boolean region_codeIsNullable(){
				    return true;
				}
				public Boolean region_codeIsKey(){
				    return false;
				}
				public Integer region_codeLength(){
				    return null;
				}
				public Integer region_codePrecision(){
				    return null;
				}
				public String region_codeDefault(){
				
					return null;
				
				}
				public String region_codeComment(){
				
				    return "";
				
				}
				public String region_codePattern(){
				
					return "";
				
				}
				public String region_codeOriginalDbColumnName(){
				
					return "region_code";
				
				}

				
			    public String region;

				public String getRegion () {
					return this.region;
				}

				public Boolean regionIsNullable(){
				    return true;
				}
				public Boolean regionIsKey(){
				    return false;
				}
				public Integer regionLength(){
				    return null;
				}
				public Integer regionPrecision(){
				    return null;
				}
				public String regionDefault(){
				
					return null;
				
				}
				public String regionComment(){
				
				    return "";
				
				}
				public String regionPattern(){
				
					return "";
				
				}
				public String regionOriginalDbColumnName(){
				
					return "region";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.status = readString(dis);
					
						this.total_qty_ordered = readInteger(dis);
					
						this.grand_total = (BigDecimal) dis.readObject();
					
						this.subtotal = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_amount = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_id = readString(dis);
					
					this.region_code = readString(dis);
					
					this.region = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.grand_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.subtotal);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_qty_ordered,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.grand_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.subtotal);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_amount);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_id,dos);
					
					// String
				
						writeString(this.region_code,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("increment_id="+increment_id);
		sb.append(",status="+status);
		sb.append(",total_qty_ordered="+String.valueOf(total_qty_ordered));
		sb.append(",grand_total="+String.valueOf(grand_total));
		sb.append(",subtotal="+String.valueOf(subtotal));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_amount="+String.valueOf(shipping_amount));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_id="+country_id);
		sb.append(",region_code="+region_code);
		sb.append(",region="+region);
		sb.append(",city="+city);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tREST_2Struct implements routines.system.IPersistableRow<after_tREST_2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String Body;

				public String getBody () {
					return this.Body;
				}

				public Boolean BodyIsNullable(){
				    return true;
				}
				public Boolean BodyIsKey(){
				    return false;
				}
				public Integer BodyLength(){
				    return 0;
				}
				public Integer BodyPrecision(){
				    return 0;
				}
				public String BodyDefault(){
				
					return "";
				
				}
				public String BodyComment(){
				
				    return null;
				
				}
				public String BodyPattern(){
				
				    return null;
				
				}
				public String BodyOriginalDbColumnName(){
				
					return "Body";
				
				}

				
			    public Integer ERROR_CODE;

				public Integer getERROR_CODE () {
					return this.ERROR_CODE;
				}

				public Boolean ERROR_CODEIsNullable(){
				    return true;
				}
				public Boolean ERROR_CODEIsKey(){
				    return false;
				}
				public Integer ERROR_CODELength(){
				    return 0;
				}
				public Integer ERROR_CODEPrecision(){
				    return 0;
				}
				public String ERROR_CODEDefault(){
				
					return "";
				
				}
				public String ERROR_CODEComment(){
				
				    return null;
				
				}
				public String ERROR_CODEPattern(){
				
				    return null;
				
				}
				public String ERROR_CODEOriginalDbColumnName(){
				
					return "ERROR_CODE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.Body = readString(dis);
					
						this.ERROR_CODE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Body,dos);
					
					// Integer
				
						writeInteger(this.ERROR_CODE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Body="+Body);
		sb.append(",ERROR_CODE="+String.valueOf(ERROR_CODE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tREST_2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tREST_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tREST_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);

		row36Struct row36 = new row36Struct();
row6Struct row6 = new row6Struct();
row7Struct row7 = new row7Struct();
row8Struct row8 = new row8Struct();
row9Struct row9 = new row9Struct();
Consulta_APIStruct Consulta_API = new Consulta_APIStruct();
row22Struct row22 = new row22Struct();
row40Struct row40 = new row40Struct();
row42Struct row42 = new row42Struct();
row43Struct row43 = new row43Struct();
row39Struct row39 = new row39Struct();
row41Struct row41 = new row41Struct();






	
	/**
	 * [tSortRow_1_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortOut", false);
		start_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tSortRow_1_SortOut = 0;
		


class Comparablerow7Struct extends row7Struct implements Comparable<Comparablerow7Struct> {
	
	public int compareTo(Comparablerow7Struct other) {

		if(this.increment_id == null && other.increment_id != null){
			return -1;
						
		}else if(this.increment_id != null && other.increment_id == null){
			return 1;
						
		}else if(this.increment_id != null && other.increment_id != null){
			if(!this.increment_id.equals(other.increment_id)){
				return this.increment_id.compareTo(other.increment_id);
			}
		}
		if(this.updated_at == null && other.updated_at != null){
			return 1;
						
		}else if(this.updated_at != null && other.updated_at == null){
			return -1;
						
		}else if(this.updated_at != null && other.updated_at != null){
			if(!this.updated_at.equals(other.updated_at)){
				return other.updated_at.compareTo(this.updated_at);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow7Struct> list_tSortRow_1_SortOut = new java.util.ArrayList<Comparablerow7Struct>();


 



/**
 * [tSortRow_1_SortOut begin ] stop
 */



	
	/**
	 * [tExtractJSONFields_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_2", false);
		start_Hash.put("tExtractJSONFields_2", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tExtractJSONFields_2 = 0;
		

int nb_line_tExtractJSONFields_2 = 0;
String jsonStr_tExtractJSONFields_2 = "";

	

class JsonPathCache_tExtractJSONFields_2 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_2 jsonPathCache_tExtractJSONFields_2 = new JsonPathCache_tExtractJSONFields_2();

 



/**
 * [tExtractJSONFields_2 begin ] stop
 */






	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row43");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row43Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_orders_magento_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row43Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tExtractJSONFields_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_5", false);
		start_Hash.put("tExtractJSONFields_5", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tExtractJSONFields_5 = 0;
		

int nb_line_tExtractJSONFields_5 = 0;
String jsonStr_tExtractJSONFields_5 = "";

	

class JsonPathCache_tExtractJSONFields_5 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_5 jsonPathCache_tExtractJSONFields_5 = new JsonPathCache_tExtractJSONFields_5();

 



/**
 * [tExtractJSONFields_5 begin ] stop
 */



	
	/**
	 * [tExtractJSONFields_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_4", false);
		start_Hash.put("tExtractJSONFields_4", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tExtractJSONFields_4 = 0;
		

int nb_line_tExtractJSONFields_4 = 0;
String jsonStr_tExtractJSONFields_4 = "";

	

class JsonPathCache_tExtractJSONFields_4 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_4 jsonPathCache_tExtractJSONFields_4 = new JsonPathCache_tExtractJSONFields_4();

 



/**
 * [tExtractJSONFields_4 begin ] stop
 */





	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row41Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_orders_magento_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row41Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tExtractJSONFields_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tExtractJSONFields_3", false);
		start_Hash.put("tExtractJSONFields_3", System.currentTimeMillis());
		
	
	currentComponent="tExtractJSONFields_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tExtractJSONFields_3 = 0;
		

int nb_line_tExtractJSONFields_3 = 0;
String jsonStr_tExtractJSONFields_3 = "";

	

class JsonPathCache_tExtractJSONFields_3 {
	final java.util.Map<String,com.jayway.jsonpath.JsonPath> jsonPathString2compiledJsonPath = new java.util.HashMap<String,com.jayway.jsonpath.JsonPath>();
	
	public com.jayway.jsonpath.JsonPath getCompiledJsonPath(String jsonPath) {
		if(jsonPathString2compiledJsonPath.containsKey(jsonPath)) {
			return jsonPathString2compiledJsonPath.get(jsonPath);
		} else {
			com.jayway.jsonpath.JsonPath compiledLoopPath = com.jayway.jsonpath.JsonPath.compile(jsonPath);
			jsonPathString2compiledJsonPath.put(jsonPath,compiledLoopPath);
			return compiledLoopPath;
		}
	}
}

JsonPathCache_tExtractJSONFields_3 jsonPathCache_tExtractJSONFields_3 = new JsonPathCache_tExtractJSONFields_3();

 



/**
 * [tExtractJSONFields_3 begin ] stop
 */



	
	/**
	 * [tReplicate_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tReplicate_1", false);
		start_Hash.put("tReplicate_1", System.currentTimeMillis());
		
	
	currentComponent="tReplicate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tReplicate_1 = 0;
		

 



/**
 * [tReplicate_1 begin ] stop
 */



	
	/**
	 * [tREST_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tREST_2", false);
		start_Hash.put("tREST_2", System.currentTimeMillis());
		
	
	currentComponent="tREST_2";
	
	
		int tos_count_tREST_2 = 0;
		
	

	
	String endpoint_tREST_2 = "https://palaciodasferramentas.com.br/rest//V1/orders?searchCriteria[filter_groups][0][filters][0][field]=updated_at&searchCriteria[filter_groups][0][filters][0][value]="+context.data+"&searchCriteria[filter_groups][0][filters][0][condition_type]=gt";
	
	String trustStoreFile_tREST_2 = System.getProperty("javax.net.ssl.trustStore");
	String trustStoreType_tREST_2 = System.getProperty("javax.net.ssl.trustStoreType");
	String trustStorePWD_tREST_2 = System.getProperty("javax.net.ssl.trustStorePassword");
	
	String keyStoreFile_tREST_2 = System.getProperty("javax.net.ssl.keyStore");
	String keyStoreType_tREST_2 = System.getProperty("javax.net.ssl.keyStoreType");
	String keyStorePWD_tREST_2 = System.getProperty("javax.net.ssl.keyStorePassword");
	
	com.sun.jersey.api.client.config.ClientConfig config_tREST_2 = new com.sun.jersey.api.client.config.DefaultClientConfig();
	
	// APPINT-33909: add entitiy providers (for OSGi deployment)
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.StringProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.ByteArrayProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.FileProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.InputStreamProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.DataSourceProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.MimeMultipartProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.FormProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.ReaderProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.DocumentProvider.class);
	config_tREST_2.getClasses().add(com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.class);
	
	javax.net.ssl.SSLContext ctx_tREST_2 = javax.net.ssl.SSLContext.getInstance("SSL");
	
	javax.net.ssl.TrustManager[] tms_tREST_2 = null;
	if(trustStoreFile_tREST_2!=null && trustStoreType_tREST_2!=null){
		char[] password_tREST_2 = null;
		if(trustStorePWD_tREST_2!=null)
			password_tREST_2 = trustStorePWD_tREST_2.toCharArray();
		java.security.KeyStore trustStore_tREST_2 = java.security.KeyStore.getInstance(trustStoreType_tREST_2);
		trustStore_tREST_2.load(new java.io.FileInputStream(trustStoreFile_tREST_2), password_tREST_2);
		
		javax.net.ssl.TrustManagerFactory tmf_tREST_2 = javax.net.ssl.TrustManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        tmf_tREST_2.init(trustStore_tREST_2);
        tms_tREST_2 = tmf_tREST_2.getTrustManagers();
	}
	
	javax.net.ssl.KeyManager[] kms_tREST_2 = null;
	if(keyStoreFile_tREST_2!=null && keyStoreType_tREST_2!=null){
		char[] password_tREST_2 = null;
		if(keyStorePWD_tREST_2!=null)
			password_tREST_2 = keyStorePWD_tREST_2.toCharArray();
		java.security.KeyStore keyStore_tREST_2 = java.security.KeyStore.getInstance(keyStoreType_tREST_2);
		keyStore_tREST_2.load(new java.io.FileInputStream(keyStoreFile_tREST_2), password_tREST_2);
		
		javax.net.ssl.KeyManagerFactory kmf_tREST_2 = javax.net.ssl.KeyManagerFactory.getInstance(javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm());
        kmf_tREST_2.init(keyStore_tREST_2,password_tREST_2);
        kms_tREST_2 = kmf_tREST_2.getKeyManagers();
	}
	
    ctx_tREST_2.init(kms_tREST_2, tms_tREST_2 , null);
    config_tREST_2.getProperties().put(com.sun.jersey.client.urlconnection.HTTPSProperties.PROPERTY_HTTPS_PROPERTIES,
                new com.sun.jersey.client.urlconnection.HTTPSProperties(new javax.net.ssl.HostnameVerifier() {

                    public boolean verify(String hostName, javax.net.ssl.SSLSession session) {
                        return true;
                    }
                }, ctx_tREST_2));

	com.sun.jersey.api.client.Client restClient_tREST_2 = com.sun.jersey.api.client.Client.create(config_tREST_2);
	
	java.util.Map<String, Object> headers_tREST_2 = new java.util.HashMap<String, Object>();
	
    	headers_tREST_2.put("Authorization",""+context.concat+"");
	
	
	Object transfer_encoding_tREST_2 = headers_tREST_2.get("Transfer-Encoding");
	if(transfer_encoding_tREST_2!=null && "chunked".equals(transfer_encoding_tREST_2)) {
		restClient_tREST_2.setChunkedEncodingSize(4096);
	}
	
	com.sun.jersey.api.client.WebResource restResource_tREST_2;
	if(endpoint_tREST_2!=null && !("").equals(endpoint_tREST_2)){
		restResource_tREST_2 = restClient_tREST_2.resource(endpoint_tREST_2);
	}else{
		throw new IllegalArgumentException("url can't be empty!");
	}
	
	com.sun.jersey.api.client.ClientResponse errorResponse_tREST_2 = null;
	String restResponse_tREST_2 = "";
	try{
		
		com.sun.jersey.api.client.WebResource.Builder builder_tREST_2 = null;
		for(java.util.Map.Entry<String, Object> header_tREST_2 : headers_tREST_2.entrySet()) {
			if(builder_tREST_2 == null) {
				builder_tREST_2 = restResource_tREST_2.header(header_tREST_2.getKey(), header_tREST_2.getValue());
			} else {
				builder_tREST_2.header(header_tREST_2.getKey(), header_tREST_2.getValue());
			}
		}
		
		
			if(builder_tREST_2!=null) {
				restResponse_tREST_2 = builder_tREST_2.get(String.class);
			} else {
				restResponse_tREST_2 = restResource_tREST_2.get(String.class);
			} 
			
		
	}catch (com.sun.jersey.api.client.UniformInterfaceException ue) {
globalMap.put("tREST_2_ERROR_MESSAGE",ue.getMessage());
        errorResponse_tREST_2 = ue.getResponse();
    }
	
	// for output
			
				row36 = new row36Struct();
				if(errorResponse_tREST_2!=null){
					row36.ERROR_CODE = errorResponse_tREST_2.getStatus();
					if(row36.ERROR_CODE!=204){
					    row36.Body = errorResponse_tREST_2.getEntity(String.class);
					}
				}else{
					row36.Body = restResponse_tREST_2;
				}
			

 



/**
 * [tREST_2 begin ] stop
 */
	
	/**
	 * [tREST_2 main ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 


	tos_count_tREST_2++;

/**
 * [tREST_2 main ] stop
 */
	
	/**
	 * [tREST_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 



/**
 * [tREST_2 process_data_begin ] stop
 */

	
	/**
	 * [tReplicate_1 main ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					


	row6 = new row6Struct();
						
	row6.Body = row36.Body;								
	row6.ERROR_CODE = row36.ERROR_CODE;			
	row40 = new row40Struct();
						
	row40.Body = row36.Body;								
	row40.ERROR_CODE = row36.ERROR_CODE;			
	row39 = new row39Struct();
						
	row39.Body = row36.Body;								
	row39.ERROR_CODE = row36.ERROR_CODE;			


 


	tos_count_tReplicate_1++;

/**
 * [tReplicate_1 main ] stop
 */
	
	/**
	 * [tReplicate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 process_data_begin ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

            if(row6.Body!=null){// C_01
                jsonStr_tExtractJSONFields_2 = row6.Body.toString();
   
row7 = null;

	

String loopPath_tExtractJSONFields_2 = "$.items";
java.util.List<Object> resultset_tExtractJSONFields_2 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_2 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_2 = null;
try {
	document_tExtractJSONFields_2 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_2);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(loopPath_tExtractJSONFields_2);
	Object result_tExtractJSONFields_2 = document_tExtractJSONFields_2.read(compiledLoopPath_tExtractJSONFields_2,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_2 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_2 = (net.minidev.json.JSONArray) result_tExtractJSONFields_2;
	} else {
		resultset_tExtractJSONFields_2.add(result_tExtractJSONFields_2);
	}
	
	isStructError_tExtractJSONFields_2 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",ex_tExtractJSONFields_2.getMessage());
		System.err.println(ex_tExtractJSONFields_2.getMessage());
}

String jsonPath_tExtractJSONFields_2 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_2 = null;

Object value_tExtractJSONFields_2 = null;

Object root_tExtractJSONFields_2 = null;
for(int i_tExtractJSONFields_2=0; isStructError_tExtractJSONFields_2 || (i_tExtractJSONFields_2 < resultset_tExtractJSONFields_2.size());i_tExtractJSONFields_2++){
	if(!isStructError_tExtractJSONFields_2){
		Object row_tExtractJSONFields_2 = resultset_tExtractJSONFields_2.get(i_tExtractJSONFields_2);
            row7 = null;
	row7 = new row7Struct();
	nb_line_tExtractJSONFields_2++;
	try {
		jsonPath_tExtractJSONFields_2 = "increment_id";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.increment_id = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.increment_id = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "status";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.status = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.status = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "total_qty_ordered";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.total_qty_ordered = ParserUtils.parseTo_Integer(value_tExtractJSONFields_2.toString());
				} else {
					row7.total_qty_ordered = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.total_qty_ordered = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "grand_total";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.grand_total = ParserUtils.parseTo_BigDecimal(value_tExtractJSONFields_2.toString());
				} else {
					row7.grand_total = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.grand_total = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "subtotal";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.subtotal = ParserUtils.parseTo_BigDecimal(value_tExtractJSONFields_2.toString());
				} else {
					row7.subtotal = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.subtotal = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "discount_amount";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.discount_amount = ParserUtils.parseTo_BigDecimal(value_tExtractJSONFields_2.toString());
				} else {
					row7.discount_amount = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.discount_amount = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "shipping_amount";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.shipping_amount = ParserUtils.parseTo_BigDecimal(value_tExtractJSONFields_2.toString());
				} else {
					row7.shipping_amount = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.shipping_amount = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "customer_id";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.customer_id = ParserUtils.parseTo_Integer(value_tExtractJSONFields_2.toString());
				} else {
					row7.customer_id = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.customer_id = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "customer_firstname";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.customer_firstname = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.customer_firstname = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "customer_lastname";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.customer_lastname = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.customer_lastname = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "billing_address.country_id";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.country_id = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.country_id = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "billing_address.region_code";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.region_code = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.region_code = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "billing_address.region";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.region = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.region = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "billing_address.city";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				row7.city = value_tExtractJSONFields_2 == null ? 

		null

 : value_tExtractJSONFields_2.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.city = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "created_at";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.created_at = ParserUtils.parseTo_Date(value_tExtractJSONFields_2.toString(), "yyyy-MM-dd HH:mm:ss");
				} else {
					row7.created_at = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.created_at = 

		null

;
		}
		jsonPath_tExtractJSONFields_2 = "updated_at";
		compiledJsonPath_tExtractJSONFields_2 = jsonPathCache_tExtractJSONFields_2.getCompiledJsonPath(jsonPath_tExtractJSONFields_2);
		
		try {
		    
		        value_tExtractJSONFields_2 = compiledJsonPath_tExtractJSONFields_2.read(row_tExtractJSONFields_2);
		    
				if(value_tExtractJSONFields_2 != null && !value_tExtractJSONFields_2.toString().isEmpty()) {
					row7.updated_at = ParserUtils.parseTo_Date(value_tExtractJSONFields_2.toString(), "yyyy-MM-dd HH:mm:ss");
				} else {
					row7.updated_at = 

		null

;
				}
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",e_tExtractJSONFields_2.getMessage());
			row7.updated_at = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_2) {
globalMap.put("tExtractJSONFields_2_ERROR_MESSAGE",ex_tExtractJSONFields_2.getMessage());
		    System.err.println(ex_tExtractJSONFields_2.getMessage());
		    row7 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_2 = false;
	
//}


 


	tos_count_tExtractJSONFields_2++;

/**
 * [tExtractJSONFields_2 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	

 



/**
 * [tExtractJSONFields_2 process_data_begin ] stop
 */
// Start of branch "row7"
if(row7 != null) { 



	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					



	Comparablerow7Struct arrayRowtSortRow_1_SortOut = new Comparablerow7Struct();

	arrayRowtSortRow_1_SortOut.increment_id = row7.increment_id;
	arrayRowtSortRow_1_SortOut.status = row7.status;
	arrayRowtSortRow_1_SortOut.total_qty_ordered = row7.total_qty_ordered;
	arrayRowtSortRow_1_SortOut.grand_total = row7.grand_total;
	arrayRowtSortRow_1_SortOut.subtotal = row7.subtotal;
	arrayRowtSortRow_1_SortOut.discount_amount = row7.discount_amount;
	arrayRowtSortRow_1_SortOut.shipping_amount = row7.shipping_amount;
	arrayRowtSortRow_1_SortOut.customer_id = row7.customer_id;
	arrayRowtSortRow_1_SortOut.customer_firstname = row7.customer_firstname;
	arrayRowtSortRow_1_SortOut.customer_lastname = row7.customer_lastname;
	arrayRowtSortRow_1_SortOut.country_id = row7.country_id;
	arrayRowtSortRow_1_SortOut.region_code = row7.region_code;
	arrayRowtSortRow_1_SortOut.region = row7.region;
	arrayRowtSortRow_1_SortOut.city = row7.city;
	arrayRowtSortRow_1_SortOut.created_at = row7.created_at;
	arrayRowtSortRow_1_SortOut.updated_at = row7.updated_at;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */

} // End of branch "row7"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	

 



/**
 * [tExtractJSONFields_2 process_data_end ] stop
 */




	
	/**
	 * [tExtractJSONFields_4 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					

            if(row40.Body!=null){// C_01
                jsonStr_tExtractJSONFields_4 = row40.Body.toString();
   
row42 = null;

	

String loopPath_tExtractJSONFields_4 = "$.items";
java.util.List<Object> resultset_tExtractJSONFields_4 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_4 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_4 = null;
try {
	document_tExtractJSONFields_4 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_4);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_4 = jsonPathCache_tExtractJSONFields_4.getCompiledJsonPath(loopPath_tExtractJSONFields_4);
	Object result_tExtractJSONFields_4 = document_tExtractJSONFields_4.read(compiledLoopPath_tExtractJSONFields_4,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_4 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_4 = (net.minidev.json.JSONArray) result_tExtractJSONFields_4;
	} else {
		resultset_tExtractJSONFields_4.add(result_tExtractJSONFields_4);
	}
	
	isStructError_tExtractJSONFields_4 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_4) {
globalMap.put("tExtractJSONFields_4_ERROR_MESSAGE",ex_tExtractJSONFields_4.getMessage());
		System.err.println(ex_tExtractJSONFields_4.getMessage());
}

String jsonPath_tExtractJSONFields_4 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_4 = null;

Object value_tExtractJSONFields_4 = null;

Object root_tExtractJSONFields_4 = null;
for(int i_tExtractJSONFields_4=0; isStructError_tExtractJSONFields_4 || (i_tExtractJSONFields_4 < resultset_tExtractJSONFields_4.size());i_tExtractJSONFields_4++){
	if(!isStructError_tExtractJSONFields_4){
		Object row_tExtractJSONFields_4 = resultset_tExtractJSONFields_4.get(i_tExtractJSONFields_4);
            row42 = null;
	row42 = new row42Struct();
	nb_line_tExtractJSONFields_4++;
	try {
		jsonPath_tExtractJSONFields_4 = "items[*]";
		compiledJsonPath_tExtractJSONFields_4 = jsonPathCache_tExtractJSONFields_4.getCompiledJsonPath(jsonPath_tExtractJSONFields_4);
		
		try {
		    
		        value_tExtractJSONFields_4 = compiledJsonPath_tExtractJSONFields_4.read(row_tExtractJSONFields_4);
		    
				row42.items = value_tExtractJSONFields_4 == null ? 

		null

 : value_tExtractJSONFields_4.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_4) {
globalMap.put("tExtractJSONFields_4_ERROR_MESSAGE",e_tExtractJSONFields_4.getMessage());
			row42.items = 

		null

;
		}
		jsonPath_tExtractJSONFields_4 = "increment_id";
		compiledJsonPath_tExtractJSONFields_4 = jsonPathCache_tExtractJSONFields_4.getCompiledJsonPath(jsonPath_tExtractJSONFields_4);
		
		try {
		    
		        value_tExtractJSONFields_4 = compiledJsonPath_tExtractJSONFields_4.read(row_tExtractJSONFields_4);
		    
				row42.increment_id = value_tExtractJSONFields_4 == null ? 

		null

 : value_tExtractJSONFields_4.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_4) {
globalMap.put("tExtractJSONFields_4_ERROR_MESSAGE",e_tExtractJSONFields_4.getMessage());
			row42.increment_id = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_4) {
globalMap.put("tExtractJSONFields_4_ERROR_MESSAGE",ex_tExtractJSONFields_4.getMessage());
		    System.err.println(ex_tExtractJSONFields_4.getMessage());
		    row42 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_4 = false;
	
//}


 


	tos_count_tExtractJSONFields_4++;

/**
 * [tExtractJSONFields_4 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_4";
	
	

 



/**
 * [tExtractJSONFields_4 process_data_begin ] stop
 */
// Start of branch "row42"
if(row42 != null) { 



	
	/**
	 * [tExtractJSONFields_5 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					

            if(row42.items!=null){// C_01
                jsonStr_tExtractJSONFields_5 = row42.items.toString();
   
row43 = null;

	

String loopPath_tExtractJSONFields_5 = "$";
java.util.List<Object> resultset_tExtractJSONFields_5 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_5 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_5 = null;
try {
	document_tExtractJSONFields_5 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_5);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_5 = jsonPathCache_tExtractJSONFields_5.getCompiledJsonPath(loopPath_tExtractJSONFields_5);
	Object result_tExtractJSONFields_5 = document_tExtractJSONFields_5.read(compiledLoopPath_tExtractJSONFields_5,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_5 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_5 = (net.minidev.json.JSONArray) result_tExtractJSONFields_5;
	} else {
		resultset_tExtractJSONFields_5.add(result_tExtractJSONFields_5);
	}
	
	isStructError_tExtractJSONFields_5 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_5) {
globalMap.put("tExtractJSONFields_5_ERROR_MESSAGE",ex_tExtractJSONFields_5.getMessage());
		System.err.println(ex_tExtractJSONFields_5.getMessage());
}

String jsonPath_tExtractJSONFields_5 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_5 = null;

Object value_tExtractJSONFields_5 = null;

Object root_tExtractJSONFields_5 = null;
for(int i_tExtractJSONFields_5=0; isStructError_tExtractJSONFields_5 || (i_tExtractJSONFields_5 < resultset_tExtractJSONFields_5.size());i_tExtractJSONFields_5++){
	if(!isStructError_tExtractJSONFields_5){
		Object row_tExtractJSONFields_5 = resultset_tExtractJSONFields_5.get(i_tExtractJSONFields_5);
            row43 = null;
	row43 = new row43Struct();
	nb_line_tExtractJSONFields_5++;
	try {
		jsonPath_tExtractJSONFields_5 = "sku";
		compiledJsonPath_tExtractJSONFields_5 = jsonPathCache_tExtractJSONFields_5.getCompiledJsonPath(jsonPath_tExtractJSONFields_5);
		
		try {
		    
		        value_tExtractJSONFields_5 = compiledJsonPath_tExtractJSONFields_5.read(row_tExtractJSONFields_5);
		    
				row43.items = value_tExtractJSONFields_5 == null ? 

		null

 : value_tExtractJSONFields_5.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_5) {
globalMap.put("tExtractJSONFields_5_ERROR_MESSAGE",e_tExtractJSONFields_5.getMessage());
			row43.items = 

		null

;
		}
		jsonPath_tExtractJSONFields_5 = "qty_ordered";
		compiledJsonPath_tExtractJSONFields_5 = jsonPathCache_tExtractJSONFields_5.getCompiledJsonPath(jsonPath_tExtractJSONFields_5);
		
		try {
		    
		        value_tExtractJSONFields_5 = compiledJsonPath_tExtractJSONFields_5.read(row_tExtractJSONFields_5);
		    
				row43.qty_ordered = value_tExtractJSONFields_5 == null ? 

		null

 : value_tExtractJSONFields_5.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_5) {
globalMap.put("tExtractJSONFields_5_ERROR_MESSAGE",e_tExtractJSONFields_5.getMessage());
			row43.qty_ordered = 

		null

;
		}
		jsonPath_tExtractJSONFields_5 = "base_price";
		compiledJsonPath_tExtractJSONFields_5 = jsonPathCache_tExtractJSONFields_5.getCompiledJsonPath(jsonPath_tExtractJSONFields_5);
		
		try {
		    
		        value_tExtractJSONFields_5 = compiledJsonPath_tExtractJSONFields_5.read(row_tExtractJSONFields_5);
		    
				row43.price = value_tExtractJSONFields_5 == null ? 

		null

 : value_tExtractJSONFields_5.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_5) {
globalMap.put("tExtractJSONFields_5_ERROR_MESSAGE",e_tExtractJSONFields_5.getMessage());
			row43.price = 

		null

;
		}
		jsonPath_tExtractJSONFields_5 = "order_id";
		compiledJsonPath_tExtractJSONFields_5 = jsonPathCache_tExtractJSONFields_5.getCompiledJsonPath(jsonPath_tExtractJSONFields_5);
		
		try {
		    
		        value_tExtractJSONFields_5 = compiledJsonPath_tExtractJSONFields_5.read(row_tExtractJSONFields_5);
		    
				row43.order_id = value_tExtractJSONFields_5 == null ? 

		null

 : value_tExtractJSONFields_5.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_5) {
globalMap.put("tExtractJSONFields_5_ERROR_MESSAGE",e_tExtractJSONFields_5.getMessage());
			row43.order_id = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_5) {
globalMap.put("tExtractJSONFields_5_ERROR_MESSAGE",ex_tExtractJSONFields_5.getMessage());
		    System.err.println(ex_tExtractJSONFields_5.getMessage());
		    row43 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_5 = false;
	
//}


 


	tos_count_tExtractJSONFields_5++;

/**
 * [tExtractJSONFields_5 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_5";
	
	

 



/**
 * [tExtractJSONFields_5 process_data_begin ] stop
 */
// Start of branch "row43"
if(row43 != null) { 



	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row43"
						
						);
					}
					



    
		row43Struct oneRow_tHashOutput_7 = new row43Struct();
				
					oneRow_tHashOutput_7.items = row43.items;
					oneRow_tHashOutput_7.qty_ordered = row43.qty_ordered;
					oneRow_tHashOutput_7.price = row43.price;
					oneRow_tHashOutput_7.order_id = row43.order_id;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */

} // End of branch "row43"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_5";
	
	

 



/**
 * [tExtractJSONFields_5 process_data_end ] stop
 */

} // End of branch "row42"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_4";
	
	

 



/**
 * [tExtractJSONFields_4 process_data_end ] stop
 */




	
	/**
	 * [tExtractJSONFields_3 main ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					

            if(row39.Body!=null){// C_01
                jsonStr_tExtractJSONFields_3 = row39.Body.toString();
   
row41 = null;

	

String loopPath_tExtractJSONFields_3 = "$.items";
java.util.List<Object> resultset_tExtractJSONFields_3 = new java.util.ArrayList<Object>();

boolean isStructError_tExtractJSONFields_3 = true;
com.jayway.jsonpath.ReadContext document_tExtractJSONFields_3 = null;
try {
	document_tExtractJSONFields_3 = com.jayway.jsonpath.JsonPath.parse(jsonStr_tExtractJSONFields_3);
	com.jayway.jsonpath.JsonPath compiledLoopPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(loopPath_tExtractJSONFields_3);
	Object result_tExtractJSONFields_3 = document_tExtractJSONFields_3.read(compiledLoopPath_tExtractJSONFields_3,net.minidev.json.JSONObject.class);
	if (result_tExtractJSONFields_3 instanceof net.minidev.json.JSONArray) {
		resultset_tExtractJSONFields_3 = (net.minidev.json.JSONArray) result_tExtractJSONFields_3;
	} else {
		resultset_tExtractJSONFields_3.add(result_tExtractJSONFields_3);
	}
	
	isStructError_tExtractJSONFields_3 = false;
} catch (java.lang.Exception ex_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",ex_tExtractJSONFields_3.getMessage());
		System.err.println(ex_tExtractJSONFields_3.getMessage());
}

String jsonPath_tExtractJSONFields_3 = null;
com.jayway.jsonpath.JsonPath compiledJsonPath_tExtractJSONFields_3 = null;

Object value_tExtractJSONFields_3 = null;

Object root_tExtractJSONFields_3 = null;
for(int i_tExtractJSONFields_3=0; isStructError_tExtractJSONFields_3 || (i_tExtractJSONFields_3 < resultset_tExtractJSONFields_3.size());i_tExtractJSONFields_3++){
	if(!isStructError_tExtractJSONFields_3){
		Object row_tExtractJSONFields_3 = resultset_tExtractJSONFields_3.get(i_tExtractJSONFields_3);
            row41 = null;
	row41 = new row41Struct();
	nb_line_tExtractJSONFields_3++;
	try {
		jsonPath_tExtractJSONFields_3 = "increment_id";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        if(jsonPath_tExtractJSONFields_3.startsWith("$")){
		            if(root_tExtractJSONFields_3 == null){
		                root_tExtractJSONFields_3 = document_tExtractJSONFields_3.read(jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath("$"));
					   }
		            value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(root_tExtractJSONFields_3);
		        }else{
		            value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		        }
				row41.increment_id = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row41.increment_id = 

		null

;
		}
		jsonPath_tExtractJSONFields_3 = "entity_id";
		compiledJsonPath_tExtractJSONFields_3 = jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath(jsonPath_tExtractJSONFields_3);
		
		try {
		    
		        if(jsonPath_tExtractJSONFields_3.startsWith("$")){
		            if(root_tExtractJSONFields_3 == null){
		                root_tExtractJSONFields_3 = document_tExtractJSONFields_3.read(jsonPathCache_tExtractJSONFields_3.getCompiledJsonPath("$"));
					   }
		            value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(root_tExtractJSONFields_3);
		        }else{
		            value_tExtractJSONFields_3 = compiledJsonPath_tExtractJSONFields_3.read(row_tExtractJSONFields_3);
		        }
				row41.entity_id = value_tExtractJSONFields_3 == null ? 

		null

 : value_tExtractJSONFields_3.toString();
		} catch (com.jayway.jsonpath.PathNotFoundException e_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",e_tExtractJSONFields_3.getMessage());
			row41.entity_id = 

		null

;
		}	
	} catch (java.lang.Exception ex_tExtractJSONFields_3) {
globalMap.put("tExtractJSONFields_3_ERROR_MESSAGE",ex_tExtractJSONFields_3.getMessage());
		    System.err.println(ex_tExtractJSONFields_3.getMessage());
		    row41 = null;	
	}
	
	}
    
	isStructError_tExtractJSONFields_3 = false;
	
//}


 


	tos_count_tExtractJSONFields_3++;

/**
 * [tExtractJSONFields_3 main ] stop
 */
	
	/**
	 * [tExtractJSONFields_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	

 



/**
 * [tExtractJSONFields_3 process_data_begin ] stop
 */
// Start of branch "row41"
if(row41 != null) { 



	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					



    
		row41Struct oneRow_tHashOutput_6 = new row41Struct();
				
					oneRow_tHashOutput_6.increment_id = row41.increment_id;
					oneRow_tHashOutput_6.entity_id = row41.entity_id;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */

} // End of branch "row41"

		// end for
	}


	
		} // C_01
	
	
	/**
	 * [tExtractJSONFields_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	

 



/**
 * [tExtractJSONFields_3 process_data_end ] stop
 */



	
	/**
	 * [tReplicate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 process_data_end ] stop
 */



	
	/**
	 * [tREST_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 



/**
 * [tREST_2 process_data_end ] stop
 */
	
	/**
	 * [tREST_2 end ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 

ok_Hash.put("tREST_2", true);
end_Hash.put("tREST_2", System.currentTimeMillis());




/**
 * [tREST_2 end ] stop
 */

	
	/**
	 * [tReplicate_1 end ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tReplicate_1", true);
end_Hash.put("tReplicate_1", System.currentTimeMillis());




/**
 * [tReplicate_1 end ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	
   globalMap.put("tExtractJSONFields_2_NB_LINE", nb_line_tExtractJSONFields_2);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tExtractJSONFields_2", true);
end_Hash.put("tExtractJSONFields_2", System.currentTimeMillis());




/**
 * [tExtractJSONFields_2 end ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

row7Struct[] array_tSortRow_1_SortOut = list_tSortRow_1_SortOut.toArray(new Comparablerow7Struct[0]);

java.util.Arrays.sort(array_tSortRow_1_SortOut);

globalMap.put("tSortRow_1",array_tSortRow_1_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tSortRow_1_SortOut", true);
end_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_1_SortOut end ] stop
 */





	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_orders_magento_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tFilterRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFilterRow_1", false);
		start_Hash.put("tFilterRow_1", System.currentTimeMillis());
		
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Consulta_API");
					}
				
		int tos_count_tFilterRow_1 = 0;
		
    int nb_line_tFilterRow_1 = 0;
    int nb_line_ok_tFilterRow_1 = 0;
    int nb_line_reject_tFilterRow_1 = 0;

    class Operator_tFilterRow_1 {
      private String sErrorMsg = "";
      private boolean bMatchFlag = true;
      private String sUnionFlag = "&&";

      public Operator_tFilterRow_1(String unionFlag){
        sUnionFlag = unionFlag;
        bMatchFlag =  "||".equals(unionFlag) ? false : true;
      }

      public String getErrorMsg() {
        if (sErrorMsg != null && sErrorMsg.length() > 1)
          return sErrorMsg.substring(1);
        else 
          return null;
      }

      public boolean getMatchFlag() {
        return bMatchFlag;
      }

      public void matches(boolean partMatched, String reason) {
        // no need to care about the next judgement
        if ("||".equals(sUnionFlag) && bMatchFlag){
          return;
        }

        if (!partMatched) {
          sErrorMsg += "|" + reason;
        }

        if ("||".equals(sUnionFlag))
          bMatchFlag = bMatchFlag || partMatched;
        else
          bMatchFlag = bMatchFlag && partMatched;
      }
    }

 



/**
 * [tFilterRow_1 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct> tHash_Lookup_row17 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct>) 
					globalMap.get( "tHash_Lookup_row17" ))
					;					
					
	

row17Struct row17HashKey = new row17Struct();
row17Struct row17Default = new row17Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
Consulta_APIStruct Consulta_API_tmp = new Consulta_APIStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String increment_id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.increment_id == null) ? 0 : this.increment_id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.increment_id == null) {
										if (other.increment_id != null) 
											return false;
								
									} else if (!this.increment_id.equals(other.increment_id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortIn", false);
		start_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	
		int tos_count_tSortRow_1_SortIn = 0;
		


row7Struct[] array_tSortRow_1_SortIn = (row7Struct[]) globalMap.remove("tSortRow_1");

int nb_line_tSortRow_1_SortIn = 0;

row7Struct current_tSortRow_1_SortIn = null;

for(int i_tSortRow_1_SortIn = 0; i_tSortRow_1_SortIn < array_tSortRow_1_SortIn.length; i_tSortRow_1_SortIn++){
	current_tSortRow_1_SortIn = array_tSortRow_1_SortIn[i_tSortRow_1_SortIn];
	row8.increment_id = current_tSortRow_1_SortIn.increment_id;
	row8.status = current_tSortRow_1_SortIn.status;
	row8.total_qty_ordered = current_tSortRow_1_SortIn.total_qty_ordered;
	row8.grand_total = current_tSortRow_1_SortIn.grand_total;
	row8.subtotal = current_tSortRow_1_SortIn.subtotal;
	row8.discount_amount = current_tSortRow_1_SortIn.discount_amount;
	row8.shipping_amount = current_tSortRow_1_SortIn.shipping_amount;
	row8.customer_id = current_tSortRow_1_SortIn.customer_id;
	row8.customer_firstname = current_tSortRow_1_SortIn.customer_firstname;
	row8.customer_lastname = current_tSortRow_1_SortIn.customer_lastname;
	row8.country_id = current_tSortRow_1_SortIn.country_id;
	row8.region_code = current_tSortRow_1_SortIn.region_code;
	row8.region = current_tSortRow_1_SortIn.region;
	row8.city = current_tSortRow_1_SortIn.city;
	row8.created_at = current_tSortRow_1_SortIn.created_at;
	row8.updated_at = current_tSortRow_1_SortIn.updated_at;
	// increase number of line sorted
	nb_line_tSortRow_1_SortIn++;

 



/**
 * [tSortRow_1_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 


	tos_count_tSortRow_1_SortIn++;

/**
 * [tSortRow_1_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					
row9 = null;			
if(row8.increment_id == null){
	finder_tUniqRow_1.increment_id = null;
}else{
	finder_tUniqRow_1.increment_id = row8.increment_id.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
if(row8.increment_id == null){
	new_tUniqRow_1.increment_id = null;
}else{
	new_tUniqRow_1.increment_id = row8.increment_id.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row9 == null){ 
	
	row9 = new row9Struct();
}row9.increment_id = row8.increment_id;			row9.status = row8.status;			row9.total_qty_ordered = row8.total_qty_ordered;			row9.grand_total = row8.grand_total;			row9.subtotal = row8.subtotal;			row9.discount_amount = row8.discount_amount;			row9.shipping_amount = row8.shipping_amount;			row9.customer_id = row8.customer_id;			row9.customer_firstname = row8.customer_firstname;			row9.customer_lastname = row8.customer_lastname;			row9.country_id = row8.country_id;			row9.region_code = row8.region_code;			row9.region = row8.region;			row9.city = row8.city;			row9.created_at = row8.created_at;			row9.updated_at = row8.updated_at;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row9"
if(row9 != null) { 



	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row17Struct row17 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row17" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow17 = false;
       		  	    	
       		  	    	
 							row17Struct row17ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row17HashKey.status_magento = row9.status ;
                        		    		

								
		                        	row17HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row17.lookup( row17HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row17 != null && tHash_Lookup_row17.getCount(row17HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row17' and it contains more one result from keys :  row17.status_magento = '" + row17HashKey.status_magento + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row17Struct fromLookup_row17 = null;
							row17 = row17Default;
										 
							
								 
							
							
								if (tHash_Lookup_row17 !=null && tHash_Lookup_row17.hasNext()) { // G 099
								
							
								
								fromLookup_row17 = tHash_Lookup_row17.next();

							
							
								} // G 099
							
							

							if(fromLookup_row17 != null) {
								row17 = fromLookup_row17;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

Consulta_API = null;


// # Output table : 'Consulta_API'
Consulta_API_tmp.order_number = row9.increment_id;
Consulta_API_tmp.order_date = row9.created_at;
Consulta_API_tmp.status = row17.de_para ;
Consulta_API_tmp.total_items = row9.total_qty_ordered;
Consulta_API_tmp.order_total = row9.grand_total;
Consulta_API_tmp.order_total_wo_discont = row9.subtotal;
Consulta_API_tmp.discount_amount = row9.discount_amount;
Consulta_API_tmp.shipping_price = row9.shipping_amount;
Consulta_API_tmp.customer_id = row9.customer_id;
Consulta_API_tmp.customer_firstname = row9.customer_firstname;
Consulta_API_tmp.customer_lastname = row9.customer_lastname;
Consulta_API_tmp.country_code = row9.country_id;
Consulta_API_tmp.state_code = row9.region_code;
Consulta_API_tmp.state = row9.region;
Consulta_API_tmp.city = row9.city;
Consulta_API_tmp.updated_at = row9.updated_at;
Consulta_API = Consulta_API_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "Consulta_API"
if(Consulta_API != null) { 



	
	/**
	 * [tFilterRow_1 main ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Consulta_API"
						
						);
					}
					

          row22 = null;
    Operator_tFilterRow_1 ope_tFilterRow_1 = new Operator_tFilterRow_1("&&");
    
    if (ope_tFilterRow_1.getMatchFlag()) {
              if(row22 == null){ 
                row22 = new row22Struct();
              }
               row22.order_number = Consulta_API.order_number;
               row22.order_date = Consulta_API.order_date;
               row22.status = Consulta_API.status;
               row22.total_items = Consulta_API.total_items;
               row22.order_total = Consulta_API.order_total;
               row22.order_total_wo_discont = Consulta_API.order_total_wo_discont;
               row22.discount_amount = Consulta_API.discount_amount;
               row22.shipping_price = Consulta_API.shipping_price;
               row22.customer_id = Consulta_API.customer_id;
               row22.customer_firstname = Consulta_API.customer_firstname;
               row22.customer_lastname = Consulta_API.customer_lastname;
               row22.country_code = Consulta_API.country_code;
               row22.state_code = Consulta_API.state_code;
               row22.state = Consulta_API.state;
               row22.city = Consulta_API.city;
               row22.updated_at = Consulta_API.updated_at;    
      nb_line_ok_tFilterRow_1++;
    } else {
      nb_line_reject_tFilterRow_1++;
    }

nb_line_tFilterRow_1++;

 


	tos_count_tFilterRow_1++;

/**
 * [tFilterRow_1 main ] stop
 */
	
	/**
	 * [tFilterRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_begin ] stop
 */
// Start of branch "row22"
if(row22 != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					



    
		row22Struct oneRow_tHashOutput_3 = new row22Struct();
				
					oneRow_tHashOutput_3.order_number = row22.order_number;
					oneRow_tHashOutput_3.order_date = row22.order_date;
					oneRow_tHashOutput_3.status = row22.status;
					oneRow_tHashOutput_3.total_items = row22.total_items;
					oneRow_tHashOutput_3.order_total = row22.order_total;
					oneRow_tHashOutput_3.order_total_wo_discont = row22.order_total_wo_discont;
					oneRow_tHashOutput_3.discount_amount = row22.discount_amount;
					oneRow_tHashOutput_3.shipping_price = row22.shipping_price;
					oneRow_tHashOutput_3.customer_id = row22.customer_id;
					oneRow_tHashOutput_3.customer_firstname = row22.customer_firstname;
					oneRow_tHashOutput_3.customer_lastname = row22.customer_lastname;
					oneRow_tHashOutput_3.country_code = row22.country_code;
					oneRow_tHashOutput_3.state_code = row22.state_code;
					oneRow_tHashOutput_3.state = row22.state;
					oneRow_tHashOutput_3.city = row22.city;
					oneRow_tHashOutput_3.updated_at = row22.updated_at;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "row22"




	
	/**
	 * [tFilterRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 process_data_end ] stop
 */

} // End of branch "Consulta_API"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */

} // End of branch "row9"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	


}

globalMap.put("tSortRow_1_SortIn_NB_LINE",nb_line_tSortRow_1_SortIn);

 

ok_Hash.put("tSortRow_1_SortIn", true);
end_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_1_SortIn end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row17 != null) {
						tHash_Lookup_row17.endGet();
					}
					globalMap.remove( "tHash_Lookup_row17" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tFilterRow_1 end ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	
    globalMap.put("tFilterRow_1_NB_LINE", nb_line_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_OK", nb_line_ok_tFilterRow_1);
    globalMap.put("tFilterRow_1_NB_LINE_REJECT", nb_line_reject_tFilterRow_1);
    

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Consulta_API");
			  	}
			  	
 

ok_Hash.put("tFilterRow_1", true);
end_Hash.put("tFilterRow_1", System.currentTimeMillis());




/**
 * [tFilterRow_1 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */






















	
	/**
	 * [tExtractJSONFields_4 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_4";
	
	
   globalMap.put("tExtractJSONFields_4_NB_LINE", nb_line_tExtractJSONFields_4);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tExtractJSONFields_4", true);
end_Hash.put("tExtractJSONFields_4", System.currentTimeMillis());




/**
 * [tExtractJSONFields_4 end ] stop
 */

	
	/**
	 * [tExtractJSONFields_5 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_5";
	
	
   globalMap.put("tExtractJSONFields_5_NB_LINE", nb_line_tExtractJSONFields_5);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tExtractJSONFields_5", true);
end_Hash.put("tExtractJSONFields_5", System.currentTimeMillis());




/**
 * [tExtractJSONFields_5 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row43");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */










	
	/**
	 * [tExtractJSONFields_3 end ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	
   globalMap.put("tExtractJSONFields_3_NB_LINE", nb_line_tExtractJSONFields_3);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tExtractJSONFields_3", true);
end_Hash.put("tExtractJSONFields_3", System.currentTimeMillis());




/**
 * [tExtractJSONFields_3 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row17"); 
				     			
							//free memory for "tSortRow_1_SortIn"
							globalMap.remove("tSortRow_1");
						
				try{
					
	
	/**
	 * [tREST_2 finally ] start
	 */

	

	
	
	currentComponent="tREST_2";
	
	

 



/**
 * [tREST_2 finally ] stop
 */

	
	/**
	 * [tReplicate_1 finally ] start
	 */

	

	
	
	currentComponent="tReplicate_1";
	
	

 



/**
 * [tReplicate_1 finally ] stop
 */

	
	/**
	 * [tExtractJSONFields_2 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_2";
	
	

 



/**
 * [tExtractJSONFields_2 finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tFilterRow_1 finally ] start
	 */

	

	
	
	currentComponent="tFilterRow_1";
	
	

 



/**
 * [tFilterRow_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */






















	
	/**
	 * [tExtractJSONFields_4 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_4";
	
	

 



/**
 * [tExtractJSONFields_4 finally ] stop
 */

	
	/**
	 * [tExtractJSONFields_5 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_5";
	
	

 



/**
 * [tExtractJSONFields_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */










	
	/**
	 * [tExtractJSONFields_3 finally ] start
	 */

	

	
	
	currentComponent="tExtractJSONFields_3";
	
	

 



/**
 * [tExtractJSONFields_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tREST_2_SUBPROCESS_STATE", 1);
	}
	


public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_1 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.POSTGRES_PASSWORD); 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row53Struct implements routines.system.IPersistableRow<row53Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row53Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row52Struct implements routines.system.IPersistableRow<row52Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row52Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row52Struct row52 = new row52Struct();
insert_logStruct insert_log = new insert_logStruct();
row53Struct row53 = new row53Struct();






	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row53");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row53Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_orders_magento_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row53Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_3=0;
        java.lang.StringBuilder sb_tDBOutput_3 = new java.lang.StringBuilder();
        sb_tDBOutput_3.append("INSERT INTO \"").append(tableName_tDBOutput_3).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_3 = sb_tDBOutput_3.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(insert_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row52");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row52.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row52"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row52.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row53 = null;
        whetherReject_tDBOutput_3 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_3.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_3.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_3++;
				
                int processedCount_tDBOutput_3 = pstmt_tDBOutput_3.executeUpdate();
                insertedCount_tDBOutput_3 += processedCount_tDBOutput_3;
                rowsToCommitCount_tDBOutput_3 += processedCount_tDBOutput_3;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_3 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_3) {
                            row53 = new row53Struct();
                                row53.nm_programa = insert_log.nm_programa;
                                row53.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row53.data_termino_execucao = insert_log.data_termino_execucao;
                                row53.mensagem = insert_log.mensagem;
                                row53.uuid = insert_log.uuid;
                                row53.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
// Start of branch "row53"
if(row53 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row53"
						
						);
					}
					



    
		row53Struct oneRow_tHashOutput_2 = new row53Struct();
				
					oneRow_tHashOutput_2.nm_programa = row53.nm_programa;
					oneRow_tHashOutput_2.data_inicio_execucao = row53.data_inicio_execucao;
					oneRow_tHashOutput_2.data_termino_execucao = row53.data_termino_execucao;
					oneRow_tHashOutput_2.mensagem = row53.mensagem;
					oneRow_tHashOutput_2.uuid = row53.uuid;
					oneRow_tHashOutput_2.versao = row53.versao;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "row53"




	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row52");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row53");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tHttpRequest_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tHashInput_9Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row54Struct implements routines.system.IPersistableRow<row54Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row54Struct row54 = new row54Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_4", false);
		start_Hash.put("tDBOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_4 = 0;
		





String dbschema_tDBOutput_4 = null;
	dbschema_tDBOutput_4 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_4 = null;
if(dbschema_tDBOutput_4 == null || dbschema_tDBOutput_4.trim().length() == 0) {
	tableName_tDBOutput_4 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_4 = dbschema_tDBOutput_4 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_4 = 1;
        if(updateKeyCount_tDBOutput_4 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_4 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_4 = 0;
int nb_line_update_tDBOutput_4 = 0;
int nb_line_inserted_tDBOutput_4 = 0;
int nb_line_deleted_tDBOutput_4 = 0;
int nb_line_rejected_tDBOutput_4 = 0;

int deletedCount_tDBOutput_4=0;
int updatedCount_tDBOutput_4=0;
int insertedCount_tDBOutput_4=0;
int rowsToCommitCount_tDBOutput_4=0;
int rejectedCount_tDBOutput_4=0;

boolean whetherReject_tDBOutput_4 = false;

java.sql.Connection conn_tDBOutput_4 = null;
String dbUser_tDBOutput_4 = null;

	conn_tDBOutput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_4=0;
	    String update_tDBOutput_4 = "UPDATE \"" + tableName_tDBOutput_4 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(update_tDBOutput_4);
	    resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);
	    

 



/**
 * [tDBOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row53Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row53Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row53Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row54.nm_programa = next_tHashInput_9.nm_programa;
	row54.data_inicio_execucao = next_tHashInput_9.data_inicio_execucao;
	row54.data_termino_execucao = next_tHashInput_9.data_termino_execucao;
	row54.mensagem = next_tHashInput_9.mensagem;
	row54.uuid = next_tHashInput_9.uuid;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row54.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row54.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_4 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_4 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_4.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_4.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_4.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_4.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_4.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_4.setNull(5 + count_tDBOutput_4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(5 + count_tDBOutput_4, update_log.uuid);
}


            try {
                nb_line_tDBOutput_4++;
				
                int processedCount_tDBOutput_4 = pstmt_tDBOutput_4.executeUpdate();
                updatedCount_tDBOutput_4 += processedCount_tDBOutput_4;
                rowsToCommitCount_tDBOutput_4 += processedCount_tDBOutput_4;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_4 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_4++;

/**
 * [tDBOutput_4 main ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tDBOutput_4 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



        if(pstmt_tDBOutput_4 != null) {
        		
            pstmt_tDBOutput_4.close();
            resourceMap.remove("pstmt_tDBOutput_4");
        }
    resourceMap.put("statementClosed_tDBOutput_4", true);

	nb_line_deleted_tDBOutput_4=nb_line_deleted_tDBOutput_4+ deletedCount_tDBOutput_4;
	nb_line_update_tDBOutput_4=nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
	nb_line_inserted_tDBOutput_4=nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
	nb_line_rejected_tDBOutput_4=nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;
	
        globalMap.put("tDBOutput_4_NB_LINE",nb_line_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_UPDATED",nb_line_update_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_DELETED",nb_line_deleted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_4", true);
end_Hash.put("tDBOutput_4", System.currentTimeMillis());




/**
 * [tDBOutput_4 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tDBClose_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tDBOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
                if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_4")) != null) {
                    pstmtToClose_tDBOutput_4.close();
                }
    }
 



/**
 * [tDBOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	



	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
        conn_tDBClose_1.close();
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public static class Update_StatusStruct implements routines.system.IPersistableRow<Update_StatusStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return true;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public java.util.Date order_date;

				public java.util.Date getOrder_date () {
					return this.order_date;
				}

				public Boolean order_dateIsNullable(){
				    return true;
				}
				public Boolean order_dateIsKey(){
				    return false;
				}
				public Integer order_dateLength(){
				    return null;
				}
				public Integer order_datePrecision(){
				    return null;
				}
				public String order_dateDefault(){
				
					return null;
				
				}
				public String order_dateComment(){
				
				    return "";
				
				}
				public String order_datePattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String order_dateOriginalDbColumnName(){
				
					return "order_date";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_items;

				public Integer getTotal_items () {
					return this.total_items;
				}

				public Boolean total_itemsIsNullable(){
				    return true;
				}
				public Boolean total_itemsIsKey(){
				    return false;
				}
				public Integer total_itemsLength(){
				    return null;
				}
				public Integer total_itemsPrecision(){
				    return null;
				}
				public String total_itemsDefault(){
				
					return null;
				
				}
				public String total_itemsComment(){
				
				    return "";
				
				}
				public String total_itemsPattern(){
				
					return "";
				
				}
				public String total_itemsOriginalDbColumnName(){
				
					return "total_items";
				
				}

				
			    public BigDecimal order_total;

				public BigDecimal getOrder_total () {
					return this.order_total;
				}

				public Boolean order_totalIsNullable(){
				    return true;
				}
				public Boolean order_totalIsKey(){
				    return false;
				}
				public Integer order_totalLength(){
				    return null;
				}
				public Integer order_totalPrecision(){
				    return null;
				}
				public String order_totalDefault(){
				
					return null;
				
				}
				public String order_totalComment(){
				
				    return "";
				
				}
				public String order_totalPattern(){
				
					return "";
				
				}
				public String order_totalOriginalDbColumnName(){
				
					return "order_total";
				
				}

				
			    public BigDecimal order_total_wo_discont;

				public BigDecimal getOrder_total_wo_discont () {
					return this.order_total_wo_discont;
				}

				public Boolean order_total_wo_discontIsNullable(){
				    return true;
				}
				public Boolean order_total_wo_discontIsKey(){
				    return false;
				}
				public Integer order_total_wo_discontLength(){
				    return null;
				}
				public Integer order_total_wo_discontPrecision(){
				    return null;
				}
				public String order_total_wo_discontDefault(){
				
					return null;
				
				}
				public String order_total_wo_discontComment(){
				
				    return "";
				
				}
				public String order_total_wo_discontPattern(){
				
					return "";
				
				}
				public String order_total_wo_discontOriginalDbColumnName(){
				
					return "order_total_wo_discont";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_price;

				public BigDecimal getShipping_price () {
					return this.shipping_price;
				}

				public Boolean shipping_priceIsNullable(){
				    return true;
				}
				public Boolean shipping_priceIsKey(){
				    return false;
				}
				public Integer shipping_priceLength(){
				    return null;
				}
				public Integer shipping_pricePrecision(){
				    return null;
				}
				public String shipping_priceDefault(){
				
					return null;
				
				}
				public String shipping_priceComment(){
				
				    return "";
				
				}
				public String shipping_pricePattern(){
				
					return "";
				
				}
				public String shipping_priceOriginalDbColumnName(){
				
					return "shipping_price";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_code;

				public String getCountry_code () {
					return this.country_code;
				}

				public Boolean country_codeIsNullable(){
				    return true;
				}
				public Boolean country_codeIsKey(){
				    return false;
				}
				public Integer country_codeLength(){
				    return null;
				}
				public Integer country_codePrecision(){
				    return null;
				}
				public String country_codeDefault(){
				
					return null;
				
				}
				public String country_codeComment(){
				
				    return "";
				
				}
				public String country_codePattern(){
				
					return "";
				
				}
				public String country_codeOriginalDbColumnName(){
				
					return "country_code";
				
				}

				
			    public String state_code;

				public String getState_code () {
					return this.state_code;
				}

				public Boolean state_codeIsNullable(){
				    return true;
				}
				public Boolean state_codeIsKey(){
				    return false;
				}
				public Integer state_codeLength(){
				    return null;
				}
				public Integer state_codePrecision(){
				    return null;
				}
				public String state_codeDefault(){
				
					return null;
				
				}
				public String state_codeComment(){
				
				    return "";
				
				}
				public String state_codePattern(){
				
					return "";
				
				}
				public String state_codeOriginalDbColumnName(){
				
					return "state_code";
				
				}

				
			    public String state;

				public String getState () {
					return this.state;
				}

				public Boolean stateIsNullable(){
				    return true;
				}
				public Boolean stateIsKey(){
				    return false;
				}
				public Integer stateLength(){
				    return null;
				}
				public Integer statePrecision(){
				    return null;
				}
				public String stateDefault(){
				
					return null;
				
				}
				public String stateComment(){
				
				    return "";
				
				}
				public String statePattern(){
				
					return "";
				
				}
				public String stateOriginalDbColumnName(){
				
					return "state";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				
			    public String updated_by;

				public String getUpdated_by () {
					return this.updated_by;
				}

				public Boolean updated_byIsNullable(){
				    return true;
				}
				public Boolean updated_byIsKey(){
				    return false;
				}
				public Integer updated_byLength(){
				    return null;
				}
				public Integer updated_byPrecision(){
				    return null;
				}
				public String updated_byDefault(){
				
					return null;
				
				}
				public String updated_byComment(){
				
				    return "";
				
				}
				public String updated_byPattern(){
				
					return "";
				
				}
				public String updated_byOriginalDbColumnName(){
				
					return "updated_by";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.order_number == null) ? 0 : this.order_number.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Update_StatusStruct other = (Update_StatusStruct) obj;
		
						if (this.order_number == null) {
							if (other.order_number != null)
								return false;
						
						} else if (!this.order_number.equals(other.order_number))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Update_StatusStruct other) {

		other.order_number = this.order_number;
	            other.order_date = this.order_date;
	            other.status = this.status;
	            other.total_items = this.total_items;
	            other.order_total = this.order_total;
	            other.order_total_wo_discont = this.order_total_wo_discont;
	            other.discount_amount = this.discount_amount;
	            other.shipping_price = this.shipping_price;
	            other.customer_id = this.customer_id;
	            other.customer_firstname = this.customer_firstname;
	            other.customer_lastname = this.customer_lastname;
	            other.country_code = this.country_code;
	            other.state_code = this.state_code;
	            other.state = this.state;
	            other.city = this.city;
	            other.created_at = this.created_at;
	            other.created_by = this.created_by;
	            other.updated_at = this.updated_at;
	            other.updated_by = this.updated_by;
	            
	}

	public void copyKeysDataTo(Update_StatusStruct other) {

		other.order_number = this.order_number;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
					this.updated_at = readDate(dis);
					
					this.updated_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
					this.updated_at = readDate(dis);
					
					this.updated_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
					// String
				
						writeString(this.updated_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
					// String
				
						writeString(this.updated_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",order_date="+String.valueOf(order_date));
		sb.append(",status="+status);
		sb.append(",total_items="+String.valueOf(total_items));
		sb.append(",order_total="+String.valueOf(order_total));
		sb.append(",order_total_wo_discont="+String.valueOf(order_total_wo_discont));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_price="+String.valueOf(shipping_price));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_code="+country_code);
		sb.append(",state_code="+state_code);
		sb.append(",state="+state);
		sb.append(",city="+city);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
		sb.append(",updated_at="+String.valueOf(updated_at));
		sb.append(",updated_by="+updated_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Update_StatusStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.order_number, other.order_number);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class UpdateStruct implements routines.system.IPersistableRow<UpdateStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return true;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public java.util.Date order_date;

				public java.util.Date getOrder_date () {
					return this.order_date;
				}

				public Boolean order_dateIsNullable(){
				    return true;
				}
				public Boolean order_dateIsKey(){
				    return false;
				}
				public Integer order_dateLength(){
				    return null;
				}
				public Integer order_datePrecision(){
				    return null;
				}
				public String order_dateDefault(){
				
					return null;
				
				}
				public String order_dateComment(){
				
				    return "";
				
				}
				public String order_datePattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String order_dateOriginalDbColumnName(){
				
					return "order_date";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_items;

				public Integer getTotal_items () {
					return this.total_items;
				}

				public Boolean total_itemsIsNullable(){
				    return true;
				}
				public Boolean total_itemsIsKey(){
				    return false;
				}
				public Integer total_itemsLength(){
				    return null;
				}
				public Integer total_itemsPrecision(){
				    return null;
				}
				public String total_itemsDefault(){
				
					return null;
				
				}
				public String total_itemsComment(){
				
				    return "";
				
				}
				public String total_itemsPattern(){
				
					return "";
				
				}
				public String total_itemsOriginalDbColumnName(){
				
					return "total_items";
				
				}

				
			    public BigDecimal order_total;

				public BigDecimal getOrder_total () {
					return this.order_total;
				}

				public Boolean order_totalIsNullable(){
				    return true;
				}
				public Boolean order_totalIsKey(){
				    return false;
				}
				public Integer order_totalLength(){
				    return null;
				}
				public Integer order_totalPrecision(){
				    return null;
				}
				public String order_totalDefault(){
				
					return null;
				
				}
				public String order_totalComment(){
				
				    return "";
				
				}
				public String order_totalPattern(){
				
					return "";
				
				}
				public String order_totalOriginalDbColumnName(){
				
					return "order_total";
				
				}

				
			    public BigDecimal order_total_wo_discont;

				public BigDecimal getOrder_total_wo_discont () {
					return this.order_total_wo_discont;
				}

				public Boolean order_total_wo_discontIsNullable(){
				    return true;
				}
				public Boolean order_total_wo_discontIsKey(){
				    return false;
				}
				public Integer order_total_wo_discontLength(){
				    return null;
				}
				public Integer order_total_wo_discontPrecision(){
				    return null;
				}
				public String order_total_wo_discontDefault(){
				
					return null;
				
				}
				public String order_total_wo_discontComment(){
				
				    return "";
				
				}
				public String order_total_wo_discontPattern(){
				
					return "";
				
				}
				public String order_total_wo_discontOriginalDbColumnName(){
				
					return "order_total_wo_discont";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_price;

				public BigDecimal getShipping_price () {
					return this.shipping_price;
				}

				public Boolean shipping_priceIsNullable(){
				    return true;
				}
				public Boolean shipping_priceIsKey(){
				    return false;
				}
				public Integer shipping_priceLength(){
				    return null;
				}
				public Integer shipping_pricePrecision(){
				    return null;
				}
				public String shipping_priceDefault(){
				
					return null;
				
				}
				public String shipping_priceComment(){
				
				    return "";
				
				}
				public String shipping_pricePattern(){
				
					return "";
				
				}
				public String shipping_priceOriginalDbColumnName(){
				
					return "shipping_price";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_code;

				public String getCountry_code () {
					return this.country_code;
				}

				public Boolean country_codeIsNullable(){
				    return true;
				}
				public Boolean country_codeIsKey(){
				    return false;
				}
				public Integer country_codeLength(){
				    return null;
				}
				public Integer country_codePrecision(){
				    return null;
				}
				public String country_codeDefault(){
				
					return null;
				
				}
				public String country_codeComment(){
				
				    return "";
				
				}
				public String country_codePattern(){
				
					return "";
				
				}
				public String country_codeOriginalDbColumnName(){
				
					return "country_code";
				
				}

				
			    public String state_code;

				public String getState_code () {
					return this.state_code;
				}

				public Boolean state_codeIsNullable(){
				    return true;
				}
				public Boolean state_codeIsKey(){
				    return false;
				}
				public Integer state_codeLength(){
				    return null;
				}
				public Integer state_codePrecision(){
				    return null;
				}
				public String state_codeDefault(){
				
					return null;
				
				}
				public String state_codeComment(){
				
				    return "";
				
				}
				public String state_codePattern(){
				
					return "";
				
				}
				public String state_codeOriginalDbColumnName(){
				
					return "state_code";
				
				}

				
			    public String state;

				public String getState () {
					return this.state;
				}

				public Boolean stateIsNullable(){
				    return true;
				}
				public Boolean stateIsKey(){
				    return false;
				}
				public Integer stateLength(){
				    return null;
				}
				public Integer statePrecision(){
				    return null;
				}
				public String stateDefault(){
				
					return null;
				
				}
				public String stateComment(){
				
				    return "";
				
				}
				public String statePattern(){
				
					return "";
				
				}
				public String stateOriginalDbColumnName(){
				
					return "state";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				
			    public String updated_by;

				public String getUpdated_by () {
					return this.updated_by;
				}

				public Boolean updated_byIsNullable(){
				    return true;
				}
				public Boolean updated_byIsKey(){
				    return false;
				}
				public Integer updated_byLength(){
				    return null;
				}
				public Integer updated_byPrecision(){
				    return null;
				}
				public String updated_byDefault(){
				
					return null;
				
				}
				public String updated_byComment(){
				
				    return "";
				
				}
				public String updated_byPattern(){
				
					return "";
				
				}
				public String updated_byOriginalDbColumnName(){
				
					return "updated_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
					this.updated_at = readDate(dis);
					
					this.updated_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
					this.updated_at = readDate(dis);
					
					this.updated_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
					// String
				
						writeString(this.updated_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
					// String
				
						writeString(this.updated_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",order_date="+String.valueOf(order_date));
		sb.append(",status="+status);
		sb.append(",total_items="+String.valueOf(total_items));
		sb.append(",order_total="+String.valueOf(order_total));
		sb.append(",order_total_wo_discont="+String.valueOf(order_total_wo_discont));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_price="+String.valueOf(shipping_price));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_code="+country_code);
		sb.append(",state_code="+state_code);
		sb.append(",state="+state);
		sb.append(",city="+city);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
		sb.append(",updated_at="+String.valueOf(updated_at));
		sb.append(",updated_by="+updated_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(UpdateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class InsertStruct implements routines.system.IPersistableRow<InsertStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return true;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public java.util.Date order_date;

				public java.util.Date getOrder_date () {
					return this.order_date;
				}

				public Boolean order_dateIsNullable(){
				    return true;
				}
				public Boolean order_dateIsKey(){
				    return false;
				}
				public Integer order_dateLength(){
				    return null;
				}
				public Integer order_datePrecision(){
				    return null;
				}
				public String order_dateDefault(){
				
					return null;
				
				}
				public String order_dateComment(){
				
				    return "";
				
				}
				public String order_datePattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String order_dateOriginalDbColumnName(){
				
					return "order_date";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_items;

				public Integer getTotal_items () {
					return this.total_items;
				}

				public Boolean total_itemsIsNullable(){
				    return true;
				}
				public Boolean total_itemsIsKey(){
				    return false;
				}
				public Integer total_itemsLength(){
				    return null;
				}
				public Integer total_itemsPrecision(){
				    return null;
				}
				public String total_itemsDefault(){
				
					return null;
				
				}
				public String total_itemsComment(){
				
				    return "";
				
				}
				public String total_itemsPattern(){
				
					return "";
				
				}
				public String total_itemsOriginalDbColumnName(){
				
					return "total_items";
				
				}

				
			    public BigDecimal order_total;

				public BigDecimal getOrder_total () {
					return this.order_total;
				}

				public Boolean order_totalIsNullable(){
				    return true;
				}
				public Boolean order_totalIsKey(){
				    return false;
				}
				public Integer order_totalLength(){
				    return null;
				}
				public Integer order_totalPrecision(){
				    return null;
				}
				public String order_totalDefault(){
				
					return null;
				
				}
				public String order_totalComment(){
				
				    return "";
				
				}
				public String order_totalPattern(){
				
					return "";
				
				}
				public String order_totalOriginalDbColumnName(){
				
					return "order_total";
				
				}

				
			    public BigDecimal order_total_wo_discont;

				public BigDecimal getOrder_total_wo_discont () {
					return this.order_total_wo_discont;
				}

				public Boolean order_total_wo_discontIsNullable(){
				    return true;
				}
				public Boolean order_total_wo_discontIsKey(){
				    return false;
				}
				public Integer order_total_wo_discontLength(){
				    return null;
				}
				public Integer order_total_wo_discontPrecision(){
				    return null;
				}
				public String order_total_wo_discontDefault(){
				
					return null;
				
				}
				public String order_total_wo_discontComment(){
				
				    return "";
				
				}
				public String order_total_wo_discontPattern(){
				
					return "";
				
				}
				public String order_total_wo_discontOriginalDbColumnName(){
				
					return "order_total_wo_discont";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_price;

				public BigDecimal getShipping_price () {
					return this.shipping_price;
				}

				public Boolean shipping_priceIsNullable(){
				    return true;
				}
				public Boolean shipping_priceIsKey(){
				    return false;
				}
				public Integer shipping_priceLength(){
				    return null;
				}
				public Integer shipping_pricePrecision(){
				    return null;
				}
				public String shipping_priceDefault(){
				
					return null;
				
				}
				public String shipping_priceComment(){
				
				    return "";
				
				}
				public String shipping_pricePattern(){
				
					return "";
				
				}
				public String shipping_priceOriginalDbColumnName(){
				
					return "shipping_price";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_code;

				public String getCountry_code () {
					return this.country_code;
				}

				public Boolean country_codeIsNullable(){
				    return true;
				}
				public Boolean country_codeIsKey(){
				    return false;
				}
				public Integer country_codeLength(){
				    return null;
				}
				public Integer country_codePrecision(){
				    return null;
				}
				public String country_codeDefault(){
				
					return null;
				
				}
				public String country_codeComment(){
				
				    return "";
				
				}
				public String country_codePattern(){
				
					return "";
				
				}
				public String country_codeOriginalDbColumnName(){
				
					return "country_code";
				
				}

				
			    public String state_code;

				public String getState_code () {
					return this.state_code;
				}

				public Boolean state_codeIsNullable(){
				    return true;
				}
				public Boolean state_codeIsKey(){
				    return false;
				}
				public Integer state_codeLength(){
				    return null;
				}
				public Integer state_codePrecision(){
				    return null;
				}
				public String state_codeDefault(){
				
					return null;
				
				}
				public String state_codeComment(){
				
				    return "";
				
				}
				public String state_codePattern(){
				
					return "";
				
				}
				public String state_codeOriginalDbColumnName(){
				
					return "state_code";
				
				}

				
			    public String state;

				public String getState () {
					return this.state;
				}

				public Boolean stateIsNullable(){
				    return true;
				}
				public Boolean stateIsKey(){
				    return false;
				}
				public Integer stateLength(){
				    return null;
				}
				public Integer statePrecision(){
				    return null;
				}
				public String stateDefault(){
				
					return null;
				
				}
				public String stateComment(){
				
				    return "";
				
				}
				public String statePattern(){
				
					return "";
				
				}
				public String stateOriginalDbColumnName(){
				
					return "state";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				
			    public String updated_by;

				public String getUpdated_by () {
					return this.updated_by;
				}

				public Boolean updated_byIsNullable(){
				    return true;
				}
				public Boolean updated_byIsKey(){
				    return false;
				}
				public Integer updated_byLength(){
				    return null;
				}
				public Integer updated_byPrecision(){
				    return null;
				}
				public String updated_byDefault(){
				
					return null;
				
				}
				public String updated_byComment(){
				
				    return "";
				
				}
				public String updated_byPattern(){
				
					return "";
				
				}
				public String updated_byOriginalDbColumnName(){
				
					return "updated_by";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.order_number == null) ? 0 : this.order_number.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final InsertStruct other = (InsertStruct) obj;
		
						if (this.order_number == null) {
							if (other.order_number != null)
								return false;
						
						} else if (!this.order_number.equals(other.order_number))
						
							return false;
					

		return true;
    }

	public void copyDataTo(InsertStruct other) {

		other.order_number = this.order_number;
	            other.order_date = this.order_date;
	            other.status = this.status;
	            other.total_items = this.total_items;
	            other.order_total = this.order_total;
	            other.order_total_wo_discont = this.order_total_wo_discont;
	            other.discount_amount = this.discount_amount;
	            other.shipping_price = this.shipping_price;
	            other.customer_id = this.customer_id;
	            other.customer_firstname = this.customer_firstname;
	            other.customer_lastname = this.customer_lastname;
	            other.country_code = this.country_code;
	            other.state_code = this.state_code;
	            other.state = this.state;
	            other.city = this.city;
	            other.created_at = this.created_at;
	            other.created_by = this.created_by;
	            other.updated_at = this.updated_at;
	            other.updated_by = this.updated_by;
	            
	}

	public void copyKeysDataTo(InsertStruct other) {

		other.order_number = this.order_number;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
					this.updated_at = readDate(dis);
					
					this.updated_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
					this.updated_at = readDate(dis);
					
					this.updated_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
					// String
				
						writeString(this.updated_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
					// String
				
						writeString(this.updated_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",order_date="+String.valueOf(order_date));
		sb.append(",status="+status);
		sb.append(",total_items="+String.valueOf(total_items));
		sb.append(",order_total="+String.valueOf(order_total));
		sb.append(",order_total_wo_discont="+String.valueOf(order_total_wo_discont));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_price="+String.valueOf(shipping_price));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_code="+country_code);
		sb.append(",state_code="+state_code);
		sb.append(",state="+state);
		sb.append(",city="+city);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
		sb.append(",updated_at="+String.valueOf(updated_at));
		sb.append(",updated_by="+updated_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(InsertStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.order_number, other.order_number);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public java.util.Date order_date;

				public java.util.Date getOrder_date () {
					return this.order_date;
				}

				public Boolean order_dateIsNullable(){
				    return true;
				}
				public Boolean order_dateIsKey(){
				    return false;
				}
				public Integer order_dateLength(){
				    return null;
				}
				public Integer order_datePrecision(){
				    return null;
				}
				public String order_dateDefault(){
				
					return null;
				
				}
				public String order_dateComment(){
				
				    return "";
				
				}
				public String order_datePattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String order_dateOriginalDbColumnName(){
				
					return "order_date";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_items;

				public Integer getTotal_items () {
					return this.total_items;
				}

				public Boolean total_itemsIsNullable(){
				    return true;
				}
				public Boolean total_itemsIsKey(){
				    return false;
				}
				public Integer total_itemsLength(){
				    return null;
				}
				public Integer total_itemsPrecision(){
				    return null;
				}
				public String total_itemsDefault(){
				
					return null;
				
				}
				public String total_itemsComment(){
				
				    return "";
				
				}
				public String total_itemsPattern(){
				
					return "";
				
				}
				public String total_itemsOriginalDbColumnName(){
				
					return "total_items";
				
				}

				
			    public BigDecimal order_total;

				public BigDecimal getOrder_total () {
					return this.order_total;
				}

				public Boolean order_totalIsNullable(){
				    return true;
				}
				public Boolean order_totalIsKey(){
				    return false;
				}
				public Integer order_totalLength(){
				    return null;
				}
				public Integer order_totalPrecision(){
				    return null;
				}
				public String order_totalDefault(){
				
					return null;
				
				}
				public String order_totalComment(){
				
				    return "";
				
				}
				public String order_totalPattern(){
				
					return "";
				
				}
				public String order_totalOriginalDbColumnName(){
				
					return "order_total";
				
				}

				
			    public BigDecimal order_total_wo_discont;

				public BigDecimal getOrder_total_wo_discont () {
					return this.order_total_wo_discont;
				}

				public Boolean order_total_wo_discontIsNullable(){
				    return true;
				}
				public Boolean order_total_wo_discontIsKey(){
				    return false;
				}
				public Integer order_total_wo_discontLength(){
				    return null;
				}
				public Integer order_total_wo_discontPrecision(){
				    return null;
				}
				public String order_total_wo_discontDefault(){
				
					return null;
				
				}
				public String order_total_wo_discontComment(){
				
				    return "";
				
				}
				public String order_total_wo_discontPattern(){
				
					return "";
				
				}
				public String order_total_wo_discontOriginalDbColumnName(){
				
					return "order_total_wo_discont";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_price;

				public BigDecimal getShipping_price () {
					return this.shipping_price;
				}

				public Boolean shipping_priceIsNullable(){
				    return true;
				}
				public Boolean shipping_priceIsKey(){
				    return false;
				}
				public Integer shipping_priceLength(){
				    return null;
				}
				public Integer shipping_pricePrecision(){
				    return null;
				}
				public String shipping_priceDefault(){
				
					return null;
				
				}
				public String shipping_priceComment(){
				
				    return "";
				
				}
				public String shipping_pricePattern(){
				
					return "";
				
				}
				public String shipping_priceOriginalDbColumnName(){
				
					return "shipping_price";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_code;

				public String getCountry_code () {
					return this.country_code;
				}

				public Boolean country_codeIsNullable(){
				    return true;
				}
				public Boolean country_codeIsKey(){
				    return false;
				}
				public Integer country_codeLength(){
				    return null;
				}
				public Integer country_codePrecision(){
				    return null;
				}
				public String country_codeDefault(){
				
					return null;
				
				}
				public String country_codeComment(){
				
				    return "";
				
				}
				public String country_codePattern(){
				
					return "";
				
				}
				public String country_codeOriginalDbColumnName(){
				
					return "country_code";
				
				}

				
			    public String state_code;

				public String getState_code () {
					return this.state_code;
				}

				public Boolean state_codeIsNullable(){
				    return true;
				}
				public Boolean state_codeIsKey(){
				    return false;
				}
				public Integer state_codeLength(){
				    return null;
				}
				public Integer state_codePrecision(){
				    return null;
				}
				public String state_codeDefault(){
				
					return null;
				
				}
				public String state_codeComment(){
				
				    return "";
				
				}
				public String state_codePattern(){
				
					return "";
				
				}
				public String state_codeOriginalDbColumnName(){
				
					return "state_code";
				
				}

				
			    public String state;

				public String getState () {
					return this.state;
				}

				public Boolean stateIsNullable(){
				    return true;
				}
				public Boolean stateIsKey(){
				    return false;
				}
				public Integer stateLength(){
				    return null;
				}
				public Integer statePrecision(){
				    return null;
				}
				public String stateDefault(){
				
					return null;
				
				}
				public String stateComment(){
				
				    return "";
				
				}
				public String statePattern(){
				
					return "";
				
				}
				public String stateOriginalDbColumnName(){
				
					return "state";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",order_date="+String.valueOf(order_date));
		sb.append(",status="+status);
		sb.append(",total_items="+String.valueOf(total_items));
		sb.append(",order_total="+String.valueOf(order_total));
		sb.append(",order_total_wo_discont="+String.valueOf(order_total_wo_discont));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_price="+String.valueOf(shipping_price));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_code="+country_code);
		sb.append(",state_code="+state_code);
		sb.append(",state="+state);
		sb.append(",city="+city);
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_4Struct implements routines.system.IPersistableRow<after_tHashInput_4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public java.util.Date order_date;

				public java.util.Date getOrder_date () {
					return this.order_date;
				}

				public Boolean order_dateIsNullable(){
				    return true;
				}
				public Boolean order_dateIsKey(){
				    return false;
				}
				public Integer order_dateLength(){
				    return null;
				}
				public Integer order_datePrecision(){
				    return null;
				}
				public String order_dateDefault(){
				
					return null;
				
				}
				public String order_dateComment(){
				
				    return "";
				
				}
				public String order_datePattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String order_dateOriginalDbColumnName(){
				
					return "order_date";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				
			    public Integer total_items;

				public Integer getTotal_items () {
					return this.total_items;
				}

				public Boolean total_itemsIsNullable(){
				    return true;
				}
				public Boolean total_itemsIsKey(){
				    return false;
				}
				public Integer total_itemsLength(){
				    return null;
				}
				public Integer total_itemsPrecision(){
				    return null;
				}
				public String total_itemsDefault(){
				
					return null;
				
				}
				public String total_itemsComment(){
				
				    return "";
				
				}
				public String total_itemsPattern(){
				
					return "";
				
				}
				public String total_itemsOriginalDbColumnName(){
				
					return "total_items";
				
				}

				
			    public BigDecimal order_total;

				public BigDecimal getOrder_total () {
					return this.order_total;
				}

				public Boolean order_totalIsNullable(){
				    return true;
				}
				public Boolean order_totalIsKey(){
				    return false;
				}
				public Integer order_totalLength(){
				    return null;
				}
				public Integer order_totalPrecision(){
				    return null;
				}
				public String order_totalDefault(){
				
					return null;
				
				}
				public String order_totalComment(){
				
				    return "";
				
				}
				public String order_totalPattern(){
				
					return "";
				
				}
				public String order_totalOriginalDbColumnName(){
				
					return "order_total";
				
				}

				
			    public BigDecimal order_total_wo_discont;

				public BigDecimal getOrder_total_wo_discont () {
					return this.order_total_wo_discont;
				}

				public Boolean order_total_wo_discontIsNullable(){
				    return true;
				}
				public Boolean order_total_wo_discontIsKey(){
				    return false;
				}
				public Integer order_total_wo_discontLength(){
				    return null;
				}
				public Integer order_total_wo_discontPrecision(){
				    return null;
				}
				public String order_total_wo_discontDefault(){
				
					return null;
				
				}
				public String order_total_wo_discontComment(){
				
				    return "";
				
				}
				public String order_total_wo_discontPattern(){
				
					return "";
				
				}
				public String order_total_wo_discontOriginalDbColumnName(){
				
					return "order_total_wo_discont";
				
				}

				
			    public BigDecimal discount_amount;

				public BigDecimal getDiscount_amount () {
					return this.discount_amount;
				}

				public Boolean discount_amountIsNullable(){
				    return true;
				}
				public Boolean discount_amountIsKey(){
				    return false;
				}
				public Integer discount_amountLength(){
				    return null;
				}
				public Integer discount_amountPrecision(){
				    return null;
				}
				public String discount_amountDefault(){
				
					return null;
				
				}
				public String discount_amountComment(){
				
				    return "";
				
				}
				public String discount_amountPattern(){
				
					return "";
				
				}
				public String discount_amountOriginalDbColumnName(){
				
					return "discount_amount";
				
				}

				
			    public BigDecimal shipping_price;

				public BigDecimal getShipping_price () {
					return this.shipping_price;
				}

				public Boolean shipping_priceIsNullable(){
				    return true;
				}
				public Boolean shipping_priceIsKey(){
				    return false;
				}
				public Integer shipping_priceLength(){
				    return null;
				}
				public Integer shipping_pricePrecision(){
				    return null;
				}
				public String shipping_priceDefault(){
				
					return null;
				
				}
				public String shipping_priceComment(){
				
				    return "";
				
				}
				public String shipping_pricePattern(){
				
					return "";
				
				}
				public String shipping_priceOriginalDbColumnName(){
				
					return "shipping_price";
				
				}

				
			    public Integer customer_id;

				public Integer getCustomer_id () {
					return this.customer_id;
				}

				public Boolean customer_idIsNullable(){
				    return true;
				}
				public Boolean customer_idIsKey(){
				    return false;
				}
				public Integer customer_idLength(){
				    return null;
				}
				public Integer customer_idPrecision(){
				    return null;
				}
				public String customer_idDefault(){
				
					return null;
				
				}
				public String customer_idComment(){
				
				    return "";
				
				}
				public String customer_idPattern(){
				
					return "";
				
				}
				public String customer_idOriginalDbColumnName(){
				
					return "customer_id";
				
				}

				
			    public String customer_firstname;

				public String getCustomer_firstname () {
					return this.customer_firstname;
				}

				public Boolean customer_firstnameIsNullable(){
				    return true;
				}
				public Boolean customer_firstnameIsKey(){
				    return false;
				}
				public Integer customer_firstnameLength(){
				    return null;
				}
				public Integer customer_firstnamePrecision(){
				    return null;
				}
				public String customer_firstnameDefault(){
				
					return null;
				
				}
				public String customer_firstnameComment(){
				
				    return "";
				
				}
				public String customer_firstnamePattern(){
				
					return "";
				
				}
				public String customer_firstnameOriginalDbColumnName(){
				
					return "customer_firstname";
				
				}

				
			    public String customer_lastname;

				public String getCustomer_lastname () {
					return this.customer_lastname;
				}

				public Boolean customer_lastnameIsNullable(){
				    return true;
				}
				public Boolean customer_lastnameIsKey(){
				    return false;
				}
				public Integer customer_lastnameLength(){
				    return null;
				}
				public Integer customer_lastnamePrecision(){
				    return null;
				}
				public String customer_lastnameDefault(){
				
					return null;
				
				}
				public String customer_lastnameComment(){
				
				    return "";
				
				}
				public String customer_lastnamePattern(){
				
					return "";
				
				}
				public String customer_lastnameOriginalDbColumnName(){
				
					return "customer_lastname";
				
				}

				
			    public String country_code;

				public String getCountry_code () {
					return this.country_code;
				}

				public Boolean country_codeIsNullable(){
				    return true;
				}
				public Boolean country_codeIsKey(){
				    return false;
				}
				public Integer country_codeLength(){
				    return null;
				}
				public Integer country_codePrecision(){
				    return null;
				}
				public String country_codeDefault(){
				
					return null;
				
				}
				public String country_codeComment(){
				
				    return "";
				
				}
				public String country_codePattern(){
				
					return "";
				
				}
				public String country_codeOriginalDbColumnName(){
				
					return "country_code";
				
				}

				
			    public String state_code;

				public String getState_code () {
					return this.state_code;
				}

				public Boolean state_codeIsNullable(){
				    return true;
				}
				public Boolean state_codeIsKey(){
				    return false;
				}
				public Integer state_codeLength(){
				    return null;
				}
				public Integer state_codePrecision(){
				    return null;
				}
				public String state_codeDefault(){
				
					return null;
				
				}
				public String state_codeComment(){
				
				    return "";
				
				}
				public String state_codePattern(){
				
					return "";
				
				}
				public String state_codeOriginalDbColumnName(){
				
					return "state_code";
				
				}

				
			    public String state;

				public String getState () {
					return this.state;
				}

				public Boolean stateIsNullable(){
				    return true;
				}
				public Boolean stateIsKey(){
				    return false;
				}
				public Integer stateLength(){
				    return null;
				}
				public Integer statePrecision(){
				    return null;
				}
				public String stateDefault(){
				
					return null;
				
				}
				public String stateComment(){
				
				    return "";
				
				}
				public String statePattern(){
				
					return "";
				
				}
				public String stateOriginalDbColumnName(){
				
					return "state";
				
				}

				
			    public String city;

				public String getCity () {
					return this.city;
				}

				public Boolean cityIsNullable(){
				    return true;
				}
				public Boolean cityIsKey(){
				    return false;
				}
				public Integer cityLength(){
				    return null;
				}
				public Integer cityPrecision(){
				    return null;
				}
				public String cityDefault(){
				
					return null;
				
				}
				public String cityComment(){
				
				    return "";
				
				}
				public String cityPattern(){
				
					return "";
				
				}
				public String cityOriginalDbColumnName(){
				
					return "city";
				
				}

				
			    public java.util.Date updated_at;

				public java.util.Date getUpdated_at () {
					return this.updated_at;
				}

				public Boolean updated_atIsNullable(){
				    return true;
				}
				public Boolean updated_atIsKey(){
				    return false;
				}
				public Integer updated_atLength(){
				    return null;
				}
				public Integer updated_atPrecision(){
				    return null;
				}
				public String updated_atDefault(){
				
					return null;
				
				}
				public String updated_atComment(){
				
				    return "";
				
				}
				public String updated_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String updated_atOriginalDbColumnName(){
				
					return "updated_at";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.order_date = readDate(dis);
					
					this.status = readString(dis);
					
						this.total_items = readInteger(dis);
					
						this.order_total = (BigDecimal) dis.readObject();
					
						this.order_total_wo_discont = (BigDecimal) dis.readObject();
					
						this.discount_amount = (BigDecimal) dis.readObject();
					
						this.shipping_price = (BigDecimal) dis.readObject();
					
						this.customer_id = readInteger(dis);
					
					this.customer_firstname = readString(dis);
					
					this.customer_lastname = readString(dis);
					
					this.country_code = readString(dis);
					
					this.state_code = readString(dis);
					
					this.state = readString(dis);
					
					this.city = readString(dis);
					
					this.updated_at = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total);
					
					// BigDecimal
				
       			    	dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
       			    	dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
       			    	dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// java.util.Date
				
						writeDate(this.order_date,dos);
					
					// String
				
						writeString(this.status,dos);
					
					// Integer
				
						writeInteger(this.total_items,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.order_total_wo_discont);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.discount_amount);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.shipping_price);
					
					// Integer
				
						writeInteger(this.customer_id,dos);
					
					// String
				
						writeString(this.customer_firstname,dos);
					
					// String
				
						writeString(this.customer_lastname,dos);
					
					// String
				
						writeString(this.country_code,dos);
					
					// String
				
						writeString(this.state_code,dos);
					
					// String
				
						writeString(this.state,dos);
					
					// String
				
						writeString(this.city,dos);
					
					// java.util.Date
				
						writeDate(this.updated_at,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",order_date="+String.valueOf(order_date));
		sb.append(",status="+status);
		sb.append(",total_items="+String.valueOf(total_items));
		sb.append(",order_total="+String.valueOf(order_total));
		sb.append(",order_total_wo_discont="+String.valueOf(order_total_wo_discont));
		sb.append(",discount_amount="+String.valueOf(discount_amount));
		sb.append(",shipping_price="+String.valueOf(shipping_price));
		sb.append(",customer_id="+String.valueOf(customer_id));
		sb.append(",customer_firstname="+customer_firstname);
		sb.append(",customer_lastname="+customer_lastname);
		sb.append(",country_code="+country_code);
		sb.append(",state_code="+state_code);
		sb.append(",state="+state);
		sb.append(",city="+city);
		sb.append(",updated_at="+String.valueOf(updated_at));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_5Process(globalMap);
		tHashInput_7Process(globalMap);

		row5Struct row5 = new row5Struct();
UpdateStruct Update = new UpdateStruct();
Update_StatusStruct Update_Status = new Update_StatusStruct();
InsertStruct Insert = new InsertStruct();






	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Update_Status");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("orders_magento").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("orders_magento").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 19 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	


   int batchSize_tDBOutput_2 = 1000;
   int batchSizeCounter_tDBOutput_2=0;

int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"order_date\" = ?,\"status\" = ?,\"total_items\" = ?,\"order_total\" = ?,\"order_total_wo_discont\" = ?,\"discount_amount\" = ?,\"shipping_price\" = ?,\"customer_id\" = ?,\"customer_firstname\" = ?,\"customer_lastname\" = ?,\"country_code\" = ?,\"state_code\" = ?,\"state\" = ?,\"city\" = ?,\"created_at\" = ?,\"created_by\" = ?,\"updated_at\" = ?,\"updated_by\" = ? WHERE \"order_number\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Update");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct>) 
					globalMap.get( "tHash_Lookup_row20" ))
					;					
					
	

row20Struct row20HashKey = new row20Struct();
row20Struct row20Default = new row20Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
Update_StatusStruct Update_Status_tmp = new Update_StatusStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */




	
	/**
	 * [tDBOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_6", false);
		start_Hash.put("tDBOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Insert");
					}
				
		int tos_count_tDBOutput_6 = 0;
		





String dbschema_tDBOutput_6 = null;
	dbschema_tDBOutput_6 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_6 = null;
if(dbschema_tDBOutput_6 == null || dbschema_tDBOutput_6.trim().length() == 0) {
	tableName_tDBOutput_6 = ("orders_magento").toLowerCase();
} else {
	tableName_tDBOutput_6 = dbschema_tDBOutput_6 + "\".\"" + ("orders_magento").toLowerCase();
}

        int updateKeyCount_tDBOutput_6 = 1;
        if(updateKeyCount_tDBOutput_6 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_6 == 19 && true) {
                    System.err.println("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_6 = 0;
int nb_line_update_tDBOutput_6 = 0;
int nb_line_inserted_tDBOutput_6 = 0;
int nb_line_deleted_tDBOutput_6 = 0;
int nb_line_rejected_tDBOutput_6 = 0;

int deletedCount_tDBOutput_6=0;
int updatedCount_tDBOutput_6=0;
int insertedCount_tDBOutput_6=0;
int rowsToCommitCount_tDBOutput_6=0;
int rejectedCount_tDBOutput_6=0;

boolean whetherReject_tDBOutput_6 = false;

java.sql.Connection conn_tDBOutput_6 = null;
String dbUser_tDBOutput_6 = null;

	conn_tDBOutput_6 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_6=0;
	    java.sql.PreparedStatement pstmt_tDBOutput_6 = conn_tDBOutput_6.prepareStatement("SELECT COUNT(1) FROM \"" + tableName_tDBOutput_6 + "\" WHERE \"order_number\" = ?");
	    resourceMap.put("pstmt_tDBOutput_6", pstmt_tDBOutput_6);
	    String insert_tDBOutput_6 = "INSERT INTO \"" + tableName_tDBOutput_6 + "\" (\"order_number\",\"order_date\",\"status\",\"total_items\",\"order_total\",\"order_total_wo_discont\",\"discount_amount\",\"shipping_price\",\"customer_id\",\"customer_firstname\",\"customer_lastname\",\"country_code\",\"state_code\",\"state\",\"city\",\"created_at\",\"created_by\",\"updated_at\",\"updated_by\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_6 = conn_tDBOutput_6.prepareStatement(insert_tDBOutput_6);
	    resourceMap.put("pstmtInsert_tDBOutput_6", pstmtInsert_tDBOutput_6);
	    String update_tDBOutput_6 = "UPDATE \"" + tableName_tDBOutput_6 + "\" SET \"order_date\" = ?,\"status\" = ?,\"total_items\" = ?,\"order_total\" = ?,\"order_total_wo_discont\" = ?,\"discount_amount\" = ?,\"shipping_price\" = ?,\"customer_id\" = ?,\"customer_firstname\" = ?,\"customer_lastname\" = ?,\"country_code\" = ?,\"state_code\" = ?,\"state\" = ?,\"city\" = ?,\"created_at\" = ?,\"created_by\" = ?,\"updated_at\" = ?,\"updated_by\" = ? WHERE \"order_number\" = ?";
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_6 = conn_tDBOutput_6.prepareStatement(update_tDBOutput_6);
	    resourceMap.put("pstmtUpdate_tDBOutput_6", pstmtUpdate_tDBOutput_6);
	    

 



/**
 * [tDBOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct>) 
					globalMap.get( "tHash_Lookup_row18" ))
					;					
					
	

row18Struct row18HashKey = new row18Struct();
row18Struct row18Default = new row18Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
UpdateStruct Update_tmp = new UpdateStruct();
InsertStruct Insert_tmp = new InsertStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row22Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row22Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row22Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row5.order_number = next_tHashInput_4.order_number;
	row5.order_date = next_tHashInput_4.order_date;
	row5.status = next_tHashInput_4.status;
	row5.total_items = next_tHashInput_4.total_items;
	row5.order_total = next_tHashInput_4.order_total;
	row5.order_total_wo_discont = next_tHashInput_4.order_total_wo_discont;
	row5.discount_amount = next_tHashInput_4.discount_amount;
	row5.shipping_price = next_tHashInput_4.shipping_price;
	row5.customer_id = next_tHashInput_4.customer_id;
	row5.customer_firstname = next_tHashInput_4.customer_firstname;
	row5.customer_lastname = next_tHashInput_4.customer_lastname;
	row5.country_code = next_tHashInput_4.country_code;
	row5.state_code = next_tHashInput_4.state_code;
	row5.state = next_tHashInput_4.state;
	row5.city = next_tHashInput_4.city;
	row5.updated_at = next_tHashInput_4.updated_at;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
						row18Struct row18 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row18" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow18 = false;
       		  	    	
       		  	    	
 							row18Struct row18ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row18HashKey.order_number = row5.order_number ;
                        		    		

								
		                        	row18HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row18.lookup( row18HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row18.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_6 = true;
	  								
						
									
	
		  								forceLooprow18 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow18 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row18 != null && tHash_Lookup_row18.hasNext()) || forceLooprow18) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row18'
									
                    		  	 
							   
                    		  	 
	       		  	    	row18Struct fromLookup_row18 = null;
							row18 = row18Default;
										 
							
								
								if(!forceLooprow18) { // G 46
								
							
								 
							
								
								fromLookup_row18 = tHash_Lookup_row18.next();

							

							if(fromLookup_row18 != null) {
								row18 = fromLookup_row18;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow18 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

Update = null;
Insert = null;

if(!rejectedInnerJoin_tMap_6 ) {

// # Output table : 'Update'
Update_tmp.order_number = row5.order_number ;
Update_tmp.order_date = row5.order_date ;
Update_tmp.status = row5.status ;
Update_tmp.total_items = row5.total_items ;
Update_tmp.order_total = row5.order_total ;
Update_tmp.order_total_wo_discont = row5.order_total_wo_discont ;
Update_tmp.discount_amount = row5.discount_amount ;
Update_tmp.shipping_price = row5.shipping_price ;
Update_tmp.customer_id = row5.customer_id ;
Update_tmp.customer_firstname = row5.customer_firstname ;
Update_tmp.customer_lastname = row5.customer_lastname ;
Update_tmp.country_code = row5.country_code ;
Update_tmp.state_code = row5.state_code ;
Update_tmp.state = row5.state ;
Update_tmp.city = row5.city ;
Update_tmp.created_at = TalendDate.getCurrentDate();
Update_tmp.created_by = "talend";
Update_tmp.updated_at = row5.updated_at ;
Update_tmp.updated_by = "magento";
Update = Update_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Insert'
// # Filter conditions 
if( rejectedInnerJoin_tMap_6 ) {
Insert_tmp.order_number = row5.order_number ;
Insert_tmp.order_date = row5.order_date ;
Insert_tmp.status = row5.status ;
Insert_tmp.total_items = row5.total_items ;
Insert_tmp.order_total = row5.order_total ;
Insert_tmp.order_total_wo_discont = row5.order_total_wo_discont ;
Insert_tmp.discount_amount = row5.discount_amount ;
Insert_tmp.shipping_price = row5.shipping_price ;
Insert_tmp.customer_id = row5.customer_id ;
Insert_tmp.customer_firstname = row5.customer_firstname ;
Insert_tmp.customer_lastname = row5.customer_lastname ;
Insert_tmp.country_code = row5.country_code ;
Insert_tmp.state_code = row5.state_code ;
Insert_tmp.state = row5.state ;
Insert_tmp.city = row5.city ;
Insert_tmp.created_at = TalendDate.getCurrentDate();
Insert_tmp.created_by = "talend";
Insert_tmp.updated_at = row5.updated_at ;
Insert_tmp.updated_by = "magento";
Insert = Insert_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "Update"
if(Update != null) { 



	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Update"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
						row20Struct row20 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row20" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow20 = false;
       		  	    	
       		  	    	
 							row20Struct row20ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_8) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_8 = false;
								
                        		    		    row20HashKey.order_number = Update.order_number ;
                        		    		
                        		    		    row20HashKey.status = Update.status ;
                        		    		

								
		                        	row20HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row20.lookup( row20HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row20.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_8 = true;
	  								
						
									
	
		  								forceLooprow20 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow20 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row20 != null && tHash_Lookup_row20.hasNext()) || forceLooprow20) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row20'
									
                    		  	 
							   
                    		  	 
	       		  	    	row20Struct fromLookup_row20 = null;
							row20 = row20Default;
										 
							
								
								if(!forceLooprow20) { // G 46
								
							
								 
							
								
								fromLookup_row20 = tHash_Lookup_row20.next();

							

							if(fromLookup_row20 != null) {
								row20 = fromLookup_row20;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow20 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

Update_Status = null;

if(!rejectedInnerJoin_tMap_8 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Update_Status'
// # Filter conditions 
if( rejectedInnerJoin_tMap_8 ) {
Update_Status_tmp.order_number = Update.order_number ;
Update_Status_tmp.order_date = Update.order_date ;
Update_Status_tmp.status = Update.status;
Update_Status_tmp.total_items = Update.total_items ;
Update_Status_tmp.order_total = Update.order_total ;
Update_Status_tmp.order_total_wo_discont = Update.order_total_wo_discont ;
Update_Status_tmp.discount_amount = Update.discount_amount ;
Update_Status_tmp.shipping_price = Update.shipping_price ;
Update_Status_tmp.customer_id = Update.customer_id ;
Update_Status_tmp.customer_firstname = Update.customer_firstname ;
Update_Status_tmp.customer_lastname = Update.customer_lastname ;
Update_Status_tmp.country_code = Update.country_code ;
Update_Status_tmp.state_code = Update.state_code ;
Update_Status_tmp.state = Update.state ;
Update_Status_tmp.city = Update.city ;
Update_Status_tmp.created_at = Update.created_at ;
Update_Status_tmp.created_by = Update.created_by ;
Update_Status_tmp.updated_at = Update.updated_at ;
Update_Status_tmp.updated_by = Update.updated_by ;
Update_Status = Update_Status_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "Update_Status"
if(Update_Status != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Update_Status"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(Update_Status.order_date != null) {
pstmt_tDBOutput_2.setTimestamp(1, new java.sql.Timestamp(Update_Status.order_date.getTime()));
} else {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.TIMESTAMP);
}

                    if(Update_Status.status == null) {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(2, Update_Status.status);
}

                    if(Update_Status.total_items == null) {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_2.setInt(3, Update_Status.total_items);
}

                    pstmt_tDBOutput_2.setBigDecimal(4, Update_Status.order_total);

                    pstmt_tDBOutput_2.setBigDecimal(5, Update_Status.order_total_wo_discont);

                    pstmt_tDBOutput_2.setBigDecimal(6, Update_Status.discount_amount);

                    pstmt_tDBOutput_2.setBigDecimal(7, Update_Status.shipping_price);

                    if(Update_Status.customer_id == null) {
pstmt_tDBOutput_2.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_2.setInt(8, Update_Status.customer_id);
}

                    if(Update_Status.customer_firstname == null) {
pstmt_tDBOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(9, Update_Status.customer_firstname);
}

                    if(Update_Status.customer_lastname == null) {
pstmt_tDBOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(10, Update_Status.customer_lastname);
}

                    if(Update_Status.country_code == null) {
pstmt_tDBOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(11, Update_Status.country_code);
}

                    if(Update_Status.state_code == null) {
pstmt_tDBOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(12, Update_Status.state_code);
}

                    if(Update_Status.state == null) {
pstmt_tDBOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(13, Update_Status.state);
}

                    if(Update_Status.city == null) {
pstmt_tDBOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(14, Update_Status.city);
}

                    if(Update_Status.created_at != null) {
pstmt_tDBOutput_2.setTimestamp(15, new java.sql.Timestamp(Update_Status.created_at.getTime()));
} else {
pstmt_tDBOutput_2.setNull(15, java.sql.Types.TIMESTAMP);
}

                    if(Update_Status.created_by == null) {
pstmt_tDBOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(16, Update_Status.created_by);
}

                    if(Update_Status.updated_at != null) {
pstmt_tDBOutput_2.setTimestamp(17, new java.sql.Timestamp(Update_Status.updated_at.getTime()));
} else {
pstmt_tDBOutput_2.setNull(17, java.sql.Types.TIMESTAMP);
}

                    if(Update_Status.updated_by == null) {
pstmt_tDBOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(18, Update_Status.updated_by);
}

                    if(Update_Status.order_number == null) {
pstmt_tDBOutput_2.setNull(19 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(19 + count_tDBOutput_2, Update_Status.order_number);
}


    		pstmt_tDBOutput_2.addBatch();
    		nb_line_tDBOutput_2++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_2++;
    		  
    			if ((batchSize_tDBOutput_2 > 0) && (batchSize_tDBOutput_2 <= batchSizeCounter_tDBOutput_2)) {
                try {
						int countSum_tDBOutput_2 = 0;
						    
						for(int countEach_tDBOutput_2: pstmt_tDBOutput_2.executeBatch()) {
							countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
						}
				    	rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
				    	
				    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
				    	
            	    	batchSizeCounter_tDBOutput_2 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_2){
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e_tDBOutput_2.getMessage());
				    	java.sql.SQLException ne_tDBOutput_2 = e_tDBOutput_2.getNextException(),sqle_tDBOutput_2=null;
				    	String errormessage_tDBOutput_2;
						if (ne_tDBOutput_2 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_2 = new java.sql.SQLException(e_tDBOutput_2.getMessage() + "\ncaused by: " + ne_tDBOutput_2.getMessage(), ne_tDBOutput_2.getSQLState(), ne_tDBOutput_2.getErrorCode(), ne_tDBOutput_2);
							errormessage_tDBOutput_2 = sqle_tDBOutput_2.getMessage();
						}else{
							errormessage_tDBOutput_2 = e_tDBOutput_2.getMessage();
						}
				    	
				    	int countSum_tDBOutput_2 = 0;
						for(int countEach_tDBOutput_2: e_tDBOutput_2.getUpdateCounts()) {
							countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
						}
						rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
						
				    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
				    	
				    	System.err.println(errormessage_tDBOutput_2);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "Update_Status"



	
		} // close loop of lookup 'row20' // G_TM_M_043
	
	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */

} // End of branch "Update"




// Start of branch "Insert"
if(Insert != null) { 



	
	/**
	 * [tDBOutput_6 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Insert"
						
						);
					}
					



        whetherReject_tDBOutput_6 = false;
                    if(Insert.order_number == null) {
pstmt_tDBOutput_6.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_6.setString(1, Insert.order_number);
}

            int checkCount_tDBOutput_6 = -1;
            try (java.sql.ResultSet rs_tDBOutput_6 = pstmt_tDBOutput_6.executeQuery()) {
                while(rs_tDBOutput_6.next()) {
                    checkCount_tDBOutput_6 = rs_tDBOutput_6.getInt(1);
                }
            }
            if(checkCount_tDBOutput_6 > 0) {
                        if(Insert.order_date != null) {
pstmtUpdate_tDBOutput_6.setTimestamp(1, new java.sql.Timestamp(Insert.order_date.getTime()));
} else {
pstmtUpdate_tDBOutput_6.setNull(1, java.sql.Types.TIMESTAMP);
}

                        if(Insert.status == null) {
pstmtUpdate_tDBOutput_6.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(2, Insert.status);
}

                        if(Insert.total_items == null) {
pstmtUpdate_tDBOutput_6.setNull(3, java.sql.Types.INTEGER);
} else {pstmtUpdate_tDBOutput_6.setInt(3, Insert.total_items);
}

                        pstmtUpdate_tDBOutput_6.setBigDecimal(4, Insert.order_total);

                        pstmtUpdate_tDBOutput_6.setBigDecimal(5, Insert.order_total_wo_discont);

                        pstmtUpdate_tDBOutput_6.setBigDecimal(6, Insert.discount_amount);

                        pstmtUpdate_tDBOutput_6.setBigDecimal(7, Insert.shipping_price);

                        if(Insert.customer_id == null) {
pstmtUpdate_tDBOutput_6.setNull(8, java.sql.Types.INTEGER);
} else {pstmtUpdate_tDBOutput_6.setInt(8, Insert.customer_id);
}

                        if(Insert.customer_firstname == null) {
pstmtUpdate_tDBOutput_6.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(9, Insert.customer_firstname);
}

                        if(Insert.customer_lastname == null) {
pstmtUpdate_tDBOutput_6.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(10, Insert.customer_lastname);
}

                        if(Insert.country_code == null) {
pstmtUpdate_tDBOutput_6.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(11, Insert.country_code);
}

                        if(Insert.state_code == null) {
pstmtUpdate_tDBOutput_6.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(12, Insert.state_code);
}

                        if(Insert.state == null) {
pstmtUpdate_tDBOutput_6.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(13, Insert.state);
}

                        if(Insert.city == null) {
pstmtUpdate_tDBOutput_6.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(14, Insert.city);
}

                        if(Insert.created_at != null) {
pstmtUpdate_tDBOutput_6.setTimestamp(15, new java.sql.Timestamp(Insert.created_at.getTime()));
} else {
pstmtUpdate_tDBOutput_6.setNull(15, java.sql.Types.TIMESTAMP);
}

                        if(Insert.created_by == null) {
pstmtUpdate_tDBOutput_6.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(16, Insert.created_by);
}

                        if(Insert.updated_at != null) {
pstmtUpdate_tDBOutput_6.setTimestamp(17, new java.sql.Timestamp(Insert.updated_at.getTime()));
} else {
pstmtUpdate_tDBOutput_6.setNull(17, java.sql.Types.TIMESTAMP);
}

                        if(Insert.updated_by == null) {
pstmtUpdate_tDBOutput_6.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(18, Insert.updated_by);
}

                        if(Insert.order_number == null) {
pstmtUpdate_tDBOutput_6.setNull(19 + count_tDBOutput_6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(19 + count_tDBOutput_6, Insert.order_number);
}

                try {
					
                    int processedCount_tDBOutput_6 = pstmtUpdate_tDBOutput_6.executeUpdate();
                    updatedCount_tDBOutput_6 += processedCount_tDBOutput_6;
                    rowsToCommitCount_tDBOutput_6 += processedCount_tDBOutput_6;
                    nb_line_tDBOutput_6++;
					
                } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_6_ERROR_MESSAGE",e.getMessage());
					
                    whetherReject_tDBOutput_6 = true;
                        nb_line_tDBOutput_6++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(Insert.order_number == null) {
pstmtInsert_tDBOutput_6.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(1, Insert.order_number);
}

                        if(Insert.order_date != null) {
pstmtInsert_tDBOutput_6.setTimestamp(2, new java.sql.Timestamp(Insert.order_date.getTime()));
} else {
pstmtInsert_tDBOutput_6.setNull(2, java.sql.Types.TIMESTAMP);
}

                        if(Insert.status == null) {
pstmtInsert_tDBOutput_6.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(3, Insert.status);
}

                        if(Insert.total_items == null) {
pstmtInsert_tDBOutput_6.setNull(4, java.sql.Types.INTEGER);
} else {pstmtInsert_tDBOutput_6.setInt(4, Insert.total_items);
}

                        pstmtInsert_tDBOutput_6.setBigDecimal(5, Insert.order_total);

                        pstmtInsert_tDBOutput_6.setBigDecimal(6, Insert.order_total_wo_discont);

                        pstmtInsert_tDBOutput_6.setBigDecimal(7, Insert.discount_amount);

                        pstmtInsert_tDBOutput_6.setBigDecimal(8, Insert.shipping_price);

                        if(Insert.customer_id == null) {
pstmtInsert_tDBOutput_6.setNull(9, java.sql.Types.INTEGER);
} else {pstmtInsert_tDBOutput_6.setInt(9, Insert.customer_id);
}

                        if(Insert.customer_firstname == null) {
pstmtInsert_tDBOutput_6.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(10, Insert.customer_firstname);
}

                        if(Insert.customer_lastname == null) {
pstmtInsert_tDBOutput_6.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(11, Insert.customer_lastname);
}

                        if(Insert.country_code == null) {
pstmtInsert_tDBOutput_6.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(12, Insert.country_code);
}

                        if(Insert.state_code == null) {
pstmtInsert_tDBOutput_6.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(13, Insert.state_code);
}

                        if(Insert.state == null) {
pstmtInsert_tDBOutput_6.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(14, Insert.state);
}

                        if(Insert.city == null) {
pstmtInsert_tDBOutput_6.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(15, Insert.city);
}

                        if(Insert.created_at != null) {
pstmtInsert_tDBOutput_6.setTimestamp(16, new java.sql.Timestamp(Insert.created_at.getTime()));
} else {
pstmtInsert_tDBOutput_6.setNull(16, java.sql.Types.TIMESTAMP);
}

                        if(Insert.created_by == null) {
pstmtInsert_tDBOutput_6.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(17, Insert.created_by);
}

                        if(Insert.updated_at != null) {
pstmtInsert_tDBOutput_6.setTimestamp(18, new java.sql.Timestamp(Insert.updated_at.getTime()));
} else {
pstmtInsert_tDBOutput_6.setNull(18, java.sql.Types.TIMESTAMP);
}

                        if(Insert.updated_by == null) {
pstmtInsert_tDBOutput_6.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(19, Insert.updated_by);
}

                try {
					
                    int processedCount_tDBOutput_6 = pstmtInsert_tDBOutput_6.executeUpdate();
                    insertedCount_tDBOutput_6 += processedCount_tDBOutput_6;
                    rowsToCommitCount_tDBOutput_6 += processedCount_tDBOutput_6;
                    nb_line_tDBOutput_6++;
					
                } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_6_ERROR_MESSAGE",e.getMessage());
					
                    whetherReject_tDBOutput_6 = true;
                        nb_line_tDBOutput_6++;
                            System.err.print(e.getMessage());
                }
            }

 


	tos_count_tDBOutput_6++;

/**
 * [tDBOutput_6 main ] stop
 */
	
	/**
	 * [tDBOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	

 



/**
 * [tDBOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	

 



/**
 * [tDBOutput_6 process_data_end ] stop
 */

} // End of branch "Insert"



	
		} // close loop of lookup 'row18' // G_TM_M_043
	
	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row18 != null) {
						tHash_Lookup_row18.endGet();
					}
					globalMap.remove( "tHash_Lookup_row18" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row20 != null) {
						tHash_Lookup_row20.endGet();
					}
					globalMap.remove( "tHash_Lookup_row20" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Update");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



	    try {
				int countSum_tDBOutput_2 = 0;
				if (pstmt_tDBOutput_2 != null && batchSizeCounter_tDBOutput_2 > 0) {
						
					for(int countEach_tDBOutput_2: pstmt_tDBOutput_2.executeBatch()) {
						countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
					}
					rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
						
				}
		    	
		    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_2){
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e_tDBOutput_2.getMessage());
	    	java.sql.SQLException ne_tDBOutput_2 = e_tDBOutput_2.getNextException(),sqle_tDBOutput_2=null;
	    	String errormessage_tDBOutput_2;
			if (ne_tDBOutput_2 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_2 = new java.sql.SQLException(e_tDBOutput_2.getMessage() + "\ncaused by: " + ne_tDBOutput_2.getMessage(), ne_tDBOutput_2.getSQLState(), ne_tDBOutput_2.getErrorCode(), ne_tDBOutput_2);
				errormessage_tDBOutput_2 = sqle_tDBOutput_2.getMessage();
			}else{
				errormessage_tDBOutput_2 = e_tDBOutput_2.getMessage();
			}
	    	
	    	int countSum_tDBOutput_2 = 0;
			for(int countEach_tDBOutput_2: e_tDBOutput_2.getUpdateCounts()) {
				countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
			}
			rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;
			
	    		updatedCount_tDBOutput_2 += countSum_tDBOutput_2;
	    	
	    	System.err.println(errormessage_tDBOutput_2);
	    	
		}
	    
        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Update_Status");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */







	
	/**
	 * [tDBOutput_6 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	



        if(pstmtUpdate_tDBOutput_6 != null){
            pstmtUpdate_tDBOutput_6.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_6");
        }
        if(pstmtInsert_tDBOutput_6 != null){
            pstmtInsert_tDBOutput_6.close();
            resourceMap.remove("pstmtInsert_tDBOutput_6");
        }
        if(pstmt_tDBOutput_6 != null) {
            pstmt_tDBOutput_6.close();
            resourceMap.remove("pstmt_tDBOutput_6");
        }
    resourceMap.put("statementClosed_tDBOutput_6", true);

	nb_line_deleted_tDBOutput_6=nb_line_deleted_tDBOutput_6+ deletedCount_tDBOutput_6;
	nb_line_update_tDBOutput_6=nb_line_update_tDBOutput_6 + updatedCount_tDBOutput_6;
	nb_line_inserted_tDBOutput_6=nb_line_inserted_tDBOutput_6 + insertedCount_tDBOutput_6;
	nb_line_rejected_tDBOutput_6=nb_line_rejected_tDBOutput_6 + rejectedCount_tDBOutput_6;
	
        globalMap.put("tDBOutput_6_NB_LINE",nb_line_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_UPDATED",nb_line_update_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_DELETED",nb_line_deleted_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_6);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Insert");
			  	}
			  	
 

ok_Hash.put("tDBOutput_6", true);
end_Hash.put("tDBOutput_6", System.currentTimeMillis());




/**
 * [tDBOutput_6 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_8"
					     			globalMap.remove("tHash_Lookup_row20"); 
				     			
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row18"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */







	
	/**
	 * [tDBOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_6") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_6 = null;
                if ((pstmtUpdateToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_6")) != null) {
                    pstmtUpdateToClose_tDBOutput_6.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_6 = null;
                if ((pstmtInsertToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_6")) != null) {
                    pstmtInsertToClose_tDBOutput_6.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_6 = null;
                if ((pstmtToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_6")) != null) {
                    pstmtToClose_tDBOutput_6.close();
                }
    }
 



/**
 * [tDBOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row18Struct implements routines.system.IPersistableComparableLookupRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.order_number == null) ? 0 : this.order_number.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row18Struct other = (row18Struct) obj;
		
						if (this.order_number == null) {
							if (other.order_number != null)
								return false;
						
						} else if (!this.order_number.equals(other.order_number))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row18Struct other) {

		other.order_number = this.order_number;
	            other.status = this.status;
	            
	}

	public void copyKeysDataTo(row18Struct other) {

		other.order_number = this.order_number;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.status = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.status = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.status, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.status, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",status="+status);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.order_number, other.order_number);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();




	
	/**
	 * [tAdvancedHash_row18 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row18", false);
		start_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tAdvancedHash_row18 = 0;
		

			   		// connection name:row18
			   		// source node:tHashInput_5 - inputs:(after_tHashInput_4) outputs:(row18,row18) | target node:tAdvancedHash_row18 - inputs:(row18) outputs:()
			   		// linked node: tMap_6 - inputs:(row5,row18) outputs:(Update,Insert)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row18 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row18Struct> tHash_Lookup_row18 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row18Struct>getLookup(matchingModeEnum_row18);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row18", tHash_Lookup_row18);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row18 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row11Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row11Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row18.order_number = next_tHashInput_5.order_number;
	row18.status = next_tHashInput_5.status;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					


			   
			   

					row18Struct row18_HashRow = new row18Struct();
		   	   	   
				
				row18_HashRow.order_number = row18.order_number;
				
				row18_HashRow.status = row18.status;
				
			tHash_Lookup_row18.put(row18_HashRow);
			
            




 


	tos_count_tAdvancedHash_row18++;

/**
 * [tAdvancedHash_row18 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row18 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

tHash_Lookup_row18.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row18", true);
end_Hash.put("tAdvancedHash_row18", System.currentTimeMillis());




/**
 * [tAdvancedHash_row18 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row18 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row18";
	
	

 



/**
 * [tAdvancedHash_row18 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableComparableLookupRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String status;

				public String getStatus () {
					return this.status;
				}

				public Boolean statusIsNullable(){
				    return true;
				}
				public Boolean statusIsKey(){
				    return false;
				}
				public Integer statusLength(){
				    return null;
				}
				public Integer statusPrecision(){
				    return null;
				}
				public String statusDefault(){
				
					return null;
				
				}
				public String statusComment(){
				
				    return "";
				
				}
				public String statusPattern(){
				
					return "";
				
				}
				public String statusOriginalDbColumnName(){
				
					return "status";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.order_number == null) ? 0 : this.order_number.hashCode());
					
						result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row20Struct other = (row20Struct) obj;
		
						if (this.order_number == null) {
							if (other.order_number != null)
								return false;
						
						} else if (!this.order_number.equals(other.order_number))
						
							return false;
					
						if (this.status == null) {
							if (other.status != null)
								return false;
						
						} else if (!this.status.equals(other.status))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row20Struct other) {

		other.order_number = this.order_number;
	            other.status = this.status;
	            
	}

	public void copyKeysDataTo(row20Struct other) {

		other.order_number = this.order_number;
	            	other.status = this.status;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.status = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.status = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.status,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.status,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		

		

        }

		
        	finally {}

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		

		

        }

		
        	finally {}

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
        	}
        	finally {}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
        	}
        	finally {}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",status="+status);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.order_number, other.order_number);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.status, other.status);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();




	
	/**
	 * [tAdvancedHash_row20 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row20", false);
		start_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tAdvancedHash_row20 = 0;
		

			   		// connection name:row20
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_4) outputs:(row20,row20) | target node:tAdvancedHash_row20 - inputs:(row20) outputs:()
			   		// linked node: tMap_8 - inputs:(Update,row20) outputs:(Update_Status)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row20 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row20Struct> tHash_Lookup_row20 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row20Struct>getLookup(matchingModeEnum_row20);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row20", tHash_Lookup_row20);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row20 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row11Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row11Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row20.order_number = next_tHashInput_7.order_number;
	row20.status = next_tHashInput_7.status;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					


			   
			   

					row20Struct row20_HashRow = new row20Struct();
		   	   	   
				
				row20_HashRow.order_number = row20.order_number;
				
				row20_HashRow.status = row20.status;
				
			tHash_Lookup_row20.put(row20_HashRow);
			
            




 


	tos_count_tAdvancedHash_row20++;

/**
 * [tAdvancedHash_row20 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row20 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

tHash_Lookup_row20.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row20", true);
end_Hash.put("tAdvancedHash_row20", System.currentTimeMillis());




/**
 * [tAdvancedHash_row20 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row20 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row20";
	
	

 



/**
 * [tAdvancedHash_row20 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableComparableLookupRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String status_magento;

				public String getStatus_magento () {
					return this.status_magento;
				}

				public Boolean status_magentoIsNullable(){
				    return true;
				}
				public Boolean status_magentoIsKey(){
				    return false;
				}
				public Integer status_magentoLength(){
				    return null;
				}
				public Integer status_magentoPrecision(){
				    return null;
				}
				public String status_magentoDefault(){
				
					return null;
				
				}
				public String status_magentoComment(){
				
				    return "";
				
				}
				public String status_magentoPattern(){
				
					return "";
				
				}
				public String status_magentoOriginalDbColumnName(){
				
					return "status_magento";
				
				}

				
			    public String de_para;

				public String getDe_para () {
					return this.de_para;
				}

				public Boolean de_paraIsNullable(){
				    return true;
				}
				public Boolean de_paraIsKey(){
				    return false;
				}
				public Integer de_paraLength(){
				    return null;
				}
				public Integer de_paraPrecision(){
				    return null;
				}
				public String de_paraDefault(){
				
					return null;
				
				}
				public String de_paraComment(){
				
				    return "";
				
				}
				public String de_paraPattern(){
				
					return "";
				
				}
				public String de_paraOriginalDbColumnName(){
				
					return "de_para";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.status_magento == null) ? 0 : this.status_magento.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row17Struct other = (row17Struct) obj;
		
						if (this.status_magento == null) {
							if (other.status_magento != null)
								return false;
						
						} else if (!this.status_magento.equals(other.status_magento))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row17Struct other) {

		other.status_magento = this.status_magento;
	            other.de_para = this.de_para;
	            
	}

	public void copyKeysDataTo(row17Struct other) {

		other.status_magento = this.status_magento;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.status_magento = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.status_magento = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.status_magento,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.status_magento,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.de_para = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.de_para = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.de_para, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.de_para, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("status_magento="+status_magento);
		sb.append(",de_para="+de_para);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.status_magento, other.status_magento);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tAdvancedHash_row17 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row17", false);
		start_Hash.put("tAdvancedHash_row17", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tAdvancedHash_row17 = 0;
		

			   		// connection name:row17
			   		// source node:tHashInput_3 - inputs:(after_tREST_2) outputs:(row17,row17) | target node:tAdvancedHash_row17 - inputs:(row17) outputs:()
			   		// linked node: tMap_2 - inputs:(row9,row17) outputs:(Consulta_API)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row17 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row17Struct> tHash_Lookup_row17 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row17Struct>getLookup(matchingModeEnum_row17);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row17", tHash_Lookup_row17);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row17 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row16Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row16Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row17.status_magento = next_tHashInput_3.status_magento;
	row17.de_para = next_tHashInput_3.de_para;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					


			   
			   

					row17Struct row17_HashRow = new row17Struct();
		   	   	   
				
				row17_HashRow.status_magento = row17.status_magento;
				
				row17_HashRow.de_para = row17.de_para;
				
			tHash_Lookup_row17.put(row17_HashRow);
			
            




 


	tos_count_tAdvancedHash_row17++;

/**
 * [tAdvancedHash_row17 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row17 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

tHash_Lookup_row17.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row17", true);
end_Hash.put("tAdvancedHash_row17", System.currentTimeMillis());




/**
 * [tAdvancedHash_row17 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row17 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row17";
	
	

 



/**
 * [tAdvancedHash_row17 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_2 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_2> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_2 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Double
				
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					// Integer
				
						writeInteger(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida1Struct implements routines.system.IPersistableRow<Saida1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qtde;

				public String getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
					this.price = readString(dis);
					
					this.qtde = readString(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
					this.price = readString(dis);
					
					this.qtde = readString(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+price);
		sb.append(",qtde="+qtde);
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saidaStruct implements routines.system.IPersistableRow<saidaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String qtde;

				public String getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public java.util.Date created_at;

				public java.util.Date getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
					this.price = readString(dis);
					
					this.qtde = readString(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
					this.price = readString(dis);
					
					this.qtde = readString(dis);
					
					this.entity_id = readString(dis);
					
					this.created_at = readDate(dis);
					
					this.created_by = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// String
				
						writeString(this.price,dos);
					
					// String
				
						writeString(this.qtde,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
					// java.util.Date
				
						writeDate(this.created_at,dos);
					
					// String
				
						writeString(this.created_by,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+price);
		sb.append(",qtde="+qtde);
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+String.valueOf(created_at));
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("increment_id="+increment_id);
		sb.append(",entity_id="+entity_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row46Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_6Struct implements routines.system.IPersistableRow<after_tHashInput_6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];

	
			    public String increment_id;

				public String getIncrement_id () {
					return this.increment_id;
				}

				public Boolean increment_idIsNullable(){
				    return true;
				}
				public Boolean increment_idIsKey(){
				    return false;
				}
				public Integer increment_idLength(){
				    return null;
				}
				public Integer increment_idPrecision(){
				    return null;
				}
				public String increment_idDefault(){
				
					return null;
				
				}
				public String increment_idComment(){
				
				    return "";
				
				}
				public String increment_idPattern(){
				
					return "";
				
				}
				public String increment_idOriginalDbColumnName(){
				
					return "increment_id";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.increment_id = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.increment_id,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("increment_id="+increment_id);
		sb.append(",entity_id="+entity_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_8Process(globalMap);
		tHashInput_10Process(globalMap);

		row46Struct row46 = new row46Struct();
saidaStruct saida = new saidaStruct();
Saida1Struct Saida1 = new Saida1Struct();
row24Struct row24 = new row24Struct();
row25Struct row25 = new row25Struct();
row26Struct row26 = new row26Struct();







	
	/**
	 * [tSortRow_2_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_2_SortOut", false);
		start_Hash.put("tSortRow_2_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tSortRow_2_SortOut = 0;
		


class Comparablerow24Struct extends row24Struct implements Comparable<Comparablerow24Struct> {
	
	public int compareTo(Comparablerow24Struct other) {

		if(this.order_number == null && other.order_number != null){
			return -1;
						
		}else if(this.order_number != null && other.order_number == null){
			return 1;
						
		}else if(this.order_number != null && other.order_number != null){
			if(!this.order_number.equals(other.order_number)){
				return this.order_number.compareTo(other.order_number);
			}
		}
		if(this.item == null && other.item != null){
			return -1;
						
		}else if(this.item != null && other.item == null){
			return 1;
						
		}else if(this.item != null && other.item != null){
			if(!this.item.equals(other.item)){
				return this.item.compareTo(other.item);
			}
		}
		if(this.entity_id == null && other.entity_id != null){
			return -1;
						
		}else if(this.entity_id != null && other.entity_id == null){
			return 1;
						
		}else if(this.entity_id != null && other.entity_id != null){
			if(!this.entity_id.equals(other.entity_id)){
				return this.entity_id.compareTo(other.entity_id);
			}
		}
		if(this.price == null && other.price != null){
			return 1;
						
		}else if(this.price != null && other.price == null){
			return -1;
						
		}else if(this.price != null && other.price != null){
			if(!this.price.equals(other.price)){
				return other.price.compareTo(this.price);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow24Struct> list_tSortRow_2_SortOut = new java.util.ArrayList<Comparablerow24Struct>();


 



/**
 * [tSortRow_2_SortOut begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida1");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
					globalMap.get( "tHash_Lookup_row27" ))
					;					
					
	

row27Struct row27HashKey = new row27Struct();
row27Struct row27Default = new row27Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida1Struct Saida1_tmp = new Saida1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row46");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
					globalMap.get( "tHash_Lookup_row47" ))
					;					
					
	

row47Struct row47HashKey = new row47Struct();
row47Struct row47Default = new row47Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
saidaStruct saida_tmp = new saidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row41Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row41Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row41Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row46.increment_id = next_tHashInput_6.increment_id;
	row46.entity_id = next_tHashInput_6.entity_id;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row46"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row47Struct row47 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row47" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow47 = false;
       		  	    	
       		  	    	
 							row47Struct row47ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row47HashKey.order_id = row46.entity_id ;
                        		    		

								
		                        	row47HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row47.lookup( row47HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row47.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_7 = true;
	  								
						
									
	
		  								forceLooprow47 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow47 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row47 != null && tHash_Lookup_row47.hasNext()) || forceLooprow47) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row47'
									
                    		  	 
							   
                    		  	 
	       		  	    	row47Struct fromLookup_row47 = null;
							row47 = row47Default;
										 
							
								
								if(!forceLooprow47) { // G 46
								
							
								 
							
								
								fromLookup_row47 = tHash_Lookup_row47.next();

							

							if(fromLookup_row47 != null) {
								row47 = fromLookup_row47;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow47 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

saida = null;

if(!rejectedInnerJoin_tMap_7 ) {

// # Output table : 'saida'
saida_tmp.order_number = row46.increment_id ;
saida_tmp.item = row47.items ;
saida_tmp.price = row47.price ;
saida_tmp.qtde = row47.qty_ordered ;
saida_tmp.entity_id = row46.entity_id ;
saida_tmp.created_at = TalendDate.getCurrentDate();
saida_tmp.created_by = "talend";
saida = saida_tmp;
}  // closing inner join bracket (2)
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "saida"
if(saida != null) { 



	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row27Struct row27 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row27" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow27 = false;
       		  	    	
       		  	    	
 							row27Struct row27ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row27HashKey.order_number = saida.order_number ;
                        		    		
                        		    		    row27HashKey.item = saida.item ;
                        		    		
                        		    		    row27HashKey.entity_id = saida.entity_id ;
                        		    		

								
		                        	row27HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row27.lookup( row27HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row27.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_9 = true;
	  								
						
									
	
		  								forceLooprow27 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow27 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row27 != null && tHash_Lookup_row27.hasNext()) || forceLooprow27) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row27'
									
                    		  	 
							   
                    		  	 
	       		  	    	row27Struct fromLookup_row27 = null;
							row27 = row27Default;
										 
							
								
								if(!forceLooprow27) { // G 46
								
							
								 
							
								
								fromLookup_row27 = tHash_Lookup_row27.next();

							

							if(fromLookup_row27 != null) {
								row27 = fromLookup_row27;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow27 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

Saida1 = null;

if(!rejectedInnerJoin_tMap_9 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Saida1'
// # Filter conditions 
if( rejectedInnerJoin_tMap_9 ) {
Saida1_tmp.order_number = saida.order_number;
Saida1_tmp.item = saida.item;
Saida1_tmp.price = saida.price;
Saida1_tmp.qtde = saida.qtde;
Saida1_tmp.entity_id = saida.entity_id;
Saida1_tmp.created_at = saida.created_at;
Saida1_tmp.created_by = saida.created_by;
Saida1 = Saida1_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "Saida1"
if(Saida1 != null) { 



	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida1"
						
						);
					}
					


  row24 = new row24Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row24.order_number=TypeConvert.String2String(Saida1.order_number);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.item=TypeConvert.String2String(Saida1.item);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.price=TypeConvert.String2Double(Saida1.price);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.qtde=TypeConvert.String2Integer(Saida1.qtde);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.entity_id=TypeConvert.String2String(Saida1.entity_id);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.created_at=TypeConvert.Date2Date(Saida1.created_at);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row24.created_by=TypeConvert.String2String(Saida1.created_by);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row24 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tSortRow_2_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					



	Comparablerow24Struct arrayRowtSortRow_2_SortOut = new Comparablerow24Struct();

	arrayRowtSortRow_2_SortOut.order_number = row24.order_number;
	arrayRowtSortRow_2_SortOut.item = row24.item;
	arrayRowtSortRow_2_SortOut.price = row24.price;
	arrayRowtSortRow_2_SortOut.qtde = row24.qtde;
	arrayRowtSortRow_2_SortOut.entity_id = row24.entity_id;
	arrayRowtSortRow_2_SortOut.created_at = row24.created_at;
	arrayRowtSortRow_2_SortOut.created_by = row24.created_by;	
	list_tSortRow_2_SortOut.add(arrayRowtSortRow_2_SortOut);

 


	tos_count_tSortRow_2_SortOut++;

/**
 * [tSortRow_2_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_2_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

 



/**
 * [tSortRow_2_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_2_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

 



/**
 * [tSortRow_2_SortOut process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */

} // End of branch "Saida1"



	
		} // close loop of lookup 'row27' // G_TM_M_043
	
	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */

} // End of branch "saida"



	
		} // close loop of lookup 'row47' // G_TM_M_043
	
	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row47 != null) {
						tHash_Lookup_row47.endGet();
					}
					globalMap.remove( "tHash_Lookup_row47" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row46");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row27 != null) {
						tHash_Lookup_row27.endGet();
					}
					globalMap.remove( "tHash_Lookup_row27" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida1");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tSortRow_2_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

row24Struct[] array_tSortRow_2_SortOut = list_tSortRow_2_SortOut.toArray(new Comparablerow24Struct[0]);

java.util.Arrays.sort(array_tSortRow_2_SortOut);

globalMap.put("tSortRow_2",array_tSortRow_2_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tSortRow_2_SortOut", true);
end_Hash.put("tSortRow_2_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_2_SortOut end ] stop
 */



	
	/**
	 * [tDBOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_7", false);
		start_Hash.put("tDBOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tDBOutput_7 = 0;
		





String dbschema_tDBOutput_7 = null;
	dbschema_tDBOutput_7 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_7 = null;
if(dbschema_tDBOutput_7 == null || dbschema_tDBOutput_7.trim().length() == 0) {
	tableName_tDBOutput_7 = ("orders_items_magento").toLowerCase();
} else {
	tableName_tDBOutput_7 = dbschema_tDBOutput_7 + "\".\"" + ("orders_items_magento").toLowerCase();
}


int nb_line_tDBOutput_7 = 0;
int nb_line_update_tDBOutput_7 = 0;
int nb_line_inserted_tDBOutput_7 = 0;
int nb_line_deleted_tDBOutput_7 = 0;
int nb_line_rejected_tDBOutput_7 = 0;

int deletedCount_tDBOutput_7=0;
int updatedCount_tDBOutput_7=0;
int insertedCount_tDBOutput_7=0;
int rowsToCommitCount_tDBOutput_7=0;
int rejectedCount_tDBOutput_7=0;

boolean whetherReject_tDBOutput_7 = false;

java.sql.Connection conn_tDBOutput_7 = null;
String dbUser_tDBOutput_7 = null;

	conn_tDBOutput_7 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	


   int batchSize_tDBOutput_7 = 1000;
   int batchSizeCounter_tDBOutput_7=0;

int count_tDBOutput_7=0;
        java.lang.StringBuilder sb_tDBOutput_7 = new java.lang.StringBuilder();
        sb_tDBOutput_7.append("INSERT INTO \"").append(tableName_tDBOutput_7).append("\" (\"order_number\",\"item\",\"price\",\"qtde\",\"entity_id\",\"created_at\",\"created_by\") VALUES (?,?,?,?,?,?,?)");

        String insert_tDBOutput_7 = sb_tDBOutput_7.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_7 = conn_tDBOutput_7.prepareStatement(insert_tDBOutput_7);
	    resourceMap.put("pstmt_tDBOutput_7", pstmt_tDBOutput_7);
	    

 



/**
 * [tDBOutput_7 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tUniqRow_2 = 0;
		

	
		class KeyStruct_tUniqRow_2 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String order_number;
					String item;
					Integer qtde;
					String entity_id;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.order_number == null) ? 0 : this.order_number.hashCode());
								
								result = prime * result + ((this.item == null) ? 0 : this.item.hashCode());
								
								result = prime * result + ((this.qtde == null) ? 0 : this.qtde.hashCode());
								
								result = prime * result + ((this.entity_id == null) ? 0 : this.entity_id.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;
				
									if (this.order_number == null) {
										if (other.order_number != null) 
											return false;
								
									} else if (!this.order_number.equals(other.order_number))
								 
										return false;
								
									if (this.item == null) {
										if (other.item != null) 
											return false;
								
									} else if (!this.item.equals(other.item))
								 
										return false;
								
									if (this.qtde == null) {
										if (other.qtde != null) 
											return false;
								
									} else if (!this.qtde.equals(other.qtde))
								 
										return false;
								
									if (this.entity_id == null) {
										if (other.entity_id != null) 
											return false;
								
									} else if (!this.entity_id.equals(other.entity_id))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0;
KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>(); 

 



/**
 * [tUniqRow_2 begin ] stop
 */



	
	/**
	 * [tSortRow_2_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_2_SortIn", false);
		start_Hash.put("tSortRow_2_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	
		int tos_count_tSortRow_2_SortIn = 0;
		


row24Struct[] array_tSortRow_2_SortIn = (row24Struct[]) globalMap.remove("tSortRow_2");

int nb_line_tSortRow_2_SortIn = 0;

row24Struct current_tSortRow_2_SortIn = null;

for(int i_tSortRow_2_SortIn = 0; i_tSortRow_2_SortIn < array_tSortRow_2_SortIn.length; i_tSortRow_2_SortIn++){
	current_tSortRow_2_SortIn = array_tSortRow_2_SortIn[i_tSortRow_2_SortIn];
	row25.order_number = current_tSortRow_2_SortIn.order_number;
	row25.item = current_tSortRow_2_SortIn.item;
	row25.price = current_tSortRow_2_SortIn.price;
	row25.qtde = current_tSortRow_2_SortIn.qtde;
	row25.entity_id = current_tSortRow_2_SortIn.entity_id;
	row25.created_at = current_tSortRow_2_SortIn.created_at;
	row25.created_by = current_tSortRow_2_SortIn.created_by;
	// increase number of line sorted
	nb_line_tSortRow_2_SortIn++;

 



/**
 * [tSortRow_2_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_2_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 


	tos_count_tSortRow_2_SortIn++;

/**
 * [tSortRow_2_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_2_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 



/**
 * [tSortRow_2_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					
row26 = null;			
if(row25.order_number == null){
	finder_tUniqRow_2.order_number = null;
}else{
	finder_tUniqRow_2.order_number = row25.order_number.toLowerCase();
}
if(row25.item == null){
	finder_tUniqRow_2.item = null;
}else{
	finder_tUniqRow_2.item = row25.item.toLowerCase();
}
finder_tUniqRow_2.qtde = row25.qtde;
if(row25.entity_id == null){
	finder_tUniqRow_2.entity_id = null;
}else{
	finder_tUniqRow_2.entity_id = row25.entity_id.toLowerCase();
}	
finder_tUniqRow_2.hashCodeDirty = true;
if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
		KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

		
if(row25.order_number == null){
	new_tUniqRow_2.order_number = null;
}else{
	new_tUniqRow_2.order_number = row25.order_number.toLowerCase();
}
if(row25.item == null){
	new_tUniqRow_2.item = null;
}else{
	new_tUniqRow_2.item = row25.item.toLowerCase();
}
new_tUniqRow_2.qtde = row25.qtde;
if(row25.entity_id == null){
	new_tUniqRow_2.entity_id = null;
}else{
	new_tUniqRow_2.entity_id = row25.entity_id.toLowerCase();
}
		
		keystUniqRow_2.add(new_tUniqRow_2);if(row26 == null){ 
	
	row26 = new row26Struct();
}row26.order_number = row25.order_number;			row26.item = row25.item;			row26.price = row25.price;			row26.qtde = row25.qtde;			row26.entity_id = row25.entity_id;			row26.created_at = row25.created_at;			row26.created_by = row25.created_by;					
		nb_uniques_tUniqRow_2++;
	} else {
	  nb_duplicates_tUniqRow_2++;
	}

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row26"
if(row26 != null) { 



	
	/**
	 * [tDBOutput_7 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					



        whetherReject_tDBOutput_7 = false;
                    if(row26.order_number == null) {
pstmt_tDBOutput_7.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(1, row26.order_number);
}

                    if(row26.item == null) {
pstmt_tDBOutput_7.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(2, row26.item);
}

                    if(row26.price == null) {
pstmt_tDBOutput_7.setNull(3, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_7.setDouble(3, row26.price);
}

                    if(row26.qtde == null) {
pstmt_tDBOutput_7.setNull(4, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_7.setInt(4, row26.qtde);
}

                    if(row26.entity_id == null) {
pstmt_tDBOutput_7.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(5, row26.entity_id);
}

                    if(row26.created_at != null) {
pstmt_tDBOutput_7.setTimestamp(6, new java.sql.Timestamp(row26.created_at.getTime()));
} else {
pstmt_tDBOutput_7.setNull(6, java.sql.Types.TIMESTAMP);
}

                    if(row26.created_by == null) {
pstmt_tDBOutput_7.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(7, row26.created_by);
}

			
    		pstmt_tDBOutput_7.addBatch();
    		nb_line_tDBOutput_7++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_7++;
    		  
    			if ((batchSize_tDBOutput_7 > 0) && (batchSize_tDBOutput_7 <= batchSizeCounter_tDBOutput_7)) {
                try {
						int countSum_tDBOutput_7 = 0;
						    
						for(int countEach_tDBOutput_7: pstmt_tDBOutput_7.executeBatch()) {
							countSum_tDBOutput_7 += (countEach_tDBOutput_7 < 0 ? 0 : countEach_tDBOutput_7);
						}
				    	rowsToCommitCount_tDBOutput_7 += countSum_tDBOutput_7;
				    	
				    		insertedCount_tDBOutput_7 += countSum_tDBOutput_7;
				    	
            	    	batchSizeCounter_tDBOutput_7 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_7){
globalMap.put("tDBOutput_7_ERROR_MESSAGE",e_tDBOutput_7.getMessage());
				    	java.sql.SQLException ne_tDBOutput_7 = e_tDBOutput_7.getNextException(),sqle_tDBOutput_7=null;
				    	String errormessage_tDBOutput_7;
						if (ne_tDBOutput_7 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_7 = new java.sql.SQLException(e_tDBOutput_7.getMessage() + "\ncaused by: " + ne_tDBOutput_7.getMessage(), ne_tDBOutput_7.getSQLState(), ne_tDBOutput_7.getErrorCode(), ne_tDBOutput_7);
							errormessage_tDBOutput_7 = sqle_tDBOutput_7.getMessage();
						}else{
							errormessage_tDBOutput_7 = e_tDBOutput_7.getMessage();
						}
				    	
				    	int countSum_tDBOutput_7 = 0;
						for(int countEach_tDBOutput_7: e_tDBOutput_7.getUpdateCounts()) {
							countSum_tDBOutput_7 += (countEach_tDBOutput_7 < 0 ? 0 : countEach_tDBOutput_7);
						}
						rowsToCommitCount_tDBOutput_7 += countSum_tDBOutput_7;
						
				    		insertedCount_tDBOutput_7 += countSum_tDBOutput_7;
				    	
				    	System.err.println(errormessage_tDBOutput_7);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_7++;

/**
 * [tDBOutput_7 main ] stop
 */
	
	/**
	 * [tDBOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	

 



/**
 * [tDBOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	

 



/**
 * [tDBOutput_7 process_data_end ] stop
 */

} // End of branch "row26"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_2_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 



/**
 * [tSortRow_2_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_2_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	


}

globalMap.put("tSortRow_2_SortIn_NB_LINE",nb_line_tSortRow_2_SortIn);

 

ok_Hash.put("tSortRow_2_SortIn", true);
end_Hash.put("tSortRow_2_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_2_SortIn end ] stop
 */

	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());




/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tDBOutput_7 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	



	    try {
				int countSum_tDBOutput_7 = 0;
				if (pstmt_tDBOutput_7 != null && batchSizeCounter_tDBOutput_7 > 0) {
						
					for(int countEach_tDBOutput_7: pstmt_tDBOutput_7.executeBatch()) {
						countSum_tDBOutput_7 += (countEach_tDBOutput_7 < 0 ? 0 : countEach_tDBOutput_7);
					}
					rowsToCommitCount_tDBOutput_7 += countSum_tDBOutput_7;
						
				}
		    	
		    		insertedCount_tDBOutput_7 += countSum_tDBOutput_7;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_7){
globalMap.put("tDBOutput_7_ERROR_MESSAGE",e_tDBOutput_7.getMessage());
	    	java.sql.SQLException ne_tDBOutput_7 = e_tDBOutput_7.getNextException(),sqle_tDBOutput_7=null;
	    	String errormessage_tDBOutput_7;
			if (ne_tDBOutput_7 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_7 = new java.sql.SQLException(e_tDBOutput_7.getMessage() + "\ncaused by: " + ne_tDBOutput_7.getMessage(), ne_tDBOutput_7.getSQLState(), ne_tDBOutput_7.getErrorCode(), ne_tDBOutput_7);
				errormessage_tDBOutput_7 = sqle_tDBOutput_7.getMessage();
			}else{
				errormessage_tDBOutput_7 = e_tDBOutput_7.getMessage();
			}
	    	
	    	int countSum_tDBOutput_7 = 0;
			for(int countEach_tDBOutput_7: e_tDBOutput_7.getUpdateCounts()) {
				countSum_tDBOutput_7 += (countEach_tDBOutput_7 < 0 ? 0 : countEach_tDBOutput_7);
			}
			rowsToCommitCount_tDBOutput_7 += countSum_tDBOutput_7;
			
	    		insertedCount_tDBOutput_7 += countSum_tDBOutput_7;
	    	
	    	System.err.println(errormessage_tDBOutput_7);
	    	
		}
	    
        if(pstmt_tDBOutput_7 != null) {
        		
            pstmt_tDBOutput_7.close();
            resourceMap.remove("pstmt_tDBOutput_7");
        }
    resourceMap.put("statementClosed_tDBOutput_7", true);

	nb_line_deleted_tDBOutput_7=nb_line_deleted_tDBOutput_7+ deletedCount_tDBOutput_7;
	nb_line_update_tDBOutput_7=nb_line_update_tDBOutput_7 + updatedCount_tDBOutput_7;
	nb_line_inserted_tDBOutput_7=nb_line_inserted_tDBOutput_7 + insertedCount_tDBOutput_7;
	nb_line_rejected_tDBOutput_7=nb_line_rejected_tDBOutput_7 + rejectedCount_tDBOutput_7;
	
        globalMap.put("tDBOutput_7_NB_LINE",nb_line_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_UPDATED",nb_line_update_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_DELETED",nb_line_deleted_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_7);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tDBOutput_7", true);
end_Hash.put("tDBOutput_7", System.currentTimeMillis());




/**
 * [tDBOutput_7 end ] stop
 */





















				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_2_SortIn"
							globalMap.remove("tSortRow_2");
						
					     			//free memory for "tMap_9"
					     			globalMap.remove("tHash_Lookup_row27"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row47"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tSortRow_2_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortOut";
	
	

 



/**
 * [tSortRow_2_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_2_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_2";
	
	currentComponent="tSortRow_2_SortIn";
	
	

 



/**
 * [tSortRow_2_SortIn finally ] stop
 */

	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_7") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_7 = null;
                if ((pstmtToClose_tDBOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_7")) != null) {
                    pstmtToClose_tDBOutput_7.close();
                }
    }
 



/**
 * [tDBOutput_7 finally ] stop
 */





















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row47Struct implements routines.system.IPersistableComparableLookupRow<row47Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String items;

				public String getItems () {
					return this.items;
				}

				public Boolean itemsIsNullable(){
				    return true;
				}
				public Boolean itemsIsKey(){
				    return false;
				}
				public Integer itemsLength(){
				    return null;
				}
				public Integer itemsPrecision(){
				    return null;
				}
				public String itemsDefault(){
				
					return null;
				
				}
				public String itemsComment(){
				
				    return "";
				
				}
				public String itemsPattern(){
				
					return "";
				
				}
				public String itemsOriginalDbColumnName(){
				
					return "items";
				
				}

				
			    public String qty_ordered;

				public String getQty_ordered () {
					return this.qty_ordered;
				}

				public Boolean qty_orderedIsNullable(){
				    return true;
				}
				public Boolean qty_orderedIsKey(){
				    return false;
				}
				public Integer qty_orderedLength(){
				    return null;
				}
				public Integer qty_orderedPrecision(){
				    return null;
				}
				public String qty_orderedDefault(){
				
					return null;
				
				}
				public String qty_orderedComment(){
				
				    return "";
				
				}
				public String qty_orderedPattern(){
				
					return "";
				
				}
				public String qty_orderedOriginalDbColumnName(){
				
					return "qty_ordered";
				
				}

				
			    public String price;

				public String getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public String order_id;

				public String getOrder_id () {
					return this.order_id;
				}

				public Boolean order_idIsNullable(){
				    return true;
				}
				public Boolean order_idIsKey(){
				    return false;
				}
				public Integer order_idLength(){
				    return null;
				}
				public Integer order_idPrecision(){
				    return null;
				}
				public String order_idDefault(){
				
					return null;
				
				}
				public String order_idComment(){
				
				    return "";
				
				}
				public String order_idPattern(){
				
					return "";
				
				}
				public String order_idOriginalDbColumnName(){
				
					return "order_id";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.order_id == null) ? 0 : this.order_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row47Struct other = (row47Struct) obj;
		
						if (this.order_id == null) {
							if (other.order_id != null)
								return false;
						
						} else if (!this.order_id.equals(other.order_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row47Struct other) {

		other.items = this.items;
	            other.qty_ordered = this.qty_ordered;
	            other.price = this.price;
	            other.order_id = this.order_id;
	            
	}

	public void copyKeysDataTo(row47Struct other) {

		other.order_id = this.order_id;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.items = readString(dis,ois);
					
						this.qty_ordered = readString(dis,ois);
					
						this.price = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.items = readString(dis,objectIn);
					
						this.qty_ordered = readString(dis,objectIn);
					
						this.price = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.items, dos, oos);
					
						writeString(this.qty_ordered, dos, oos);
					
						writeString(this.price, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.items, dos, objectOut);
					
						writeString(this.qty_ordered, dos, objectOut);
					
						writeString(this.price, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("items="+items);
		sb.append(",qty_ordered="+qty_ordered);
		sb.append(",price="+price);
		sb.append(",order_id="+order_id);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.order_id, other.order_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row47Struct row47 = new row47Struct();




	
	/**
	 * [tAdvancedHash_row47 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row47", false);
		start_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row47";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tAdvancedHash_row47 = 0;
		

			   		// connection name:row47
			   		// source node:tHashInput_8 - inputs:(after_tHashInput_6) outputs:(row47,row47) | target node:tAdvancedHash_row47 - inputs:(row47) outputs:()
			   		// linked node: tMap_7 - inputs:(row46,row47) outputs:(saida)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row47 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row47Struct>getLookup(matchingModeEnum_row47);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row47", tHash_Lookup_row47);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row47 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row43Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row43Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    row43Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row47.items = next_tHashInput_8.items;
	row47.qty_ordered = next_tHashInput_8.qty_ordered;
	row47.price = next_tHashInput_8.price;
	row47.order_id = next_tHashInput_8.order_id;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					


			   
			   

					row47Struct row47_HashRow = new row47Struct();
		   	   	   
				
				row47_HashRow.items = row47.items;
				
				row47_HashRow.qty_ordered = row47.qty_ordered;
				
				row47_HashRow.price = row47.price;
				
				row47_HashRow.order_id = row47.order_id;
				
			tHash_Lookup_row47.put(row47_HashRow);
			
            




 


	tos_count_tAdvancedHash_row47++;

/**
 * [tAdvancedHash_row47 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

tHash_Lookup_row47.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row47", true);
end_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());




/**
 * [tAdvancedHash_row47 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableComparableLookupRow<row27Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String order_number;

				public String getOrder_number () {
					return this.order_number;
				}

				public Boolean order_numberIsNullable(){
				    return true;
				}
				public Boolean order_numberIsKey(){
				    return false;
				}
				public Integer order_numberLength(){
				    return null;
				}
				public Integer order_numberPrecision(){
				    return null;
				}
				public String order_numberDefault(){
				
					return null;
				
				}
				public String order_numberComment(){
				
				    return "";
				
				}
				public String order_numberPattern(){
				
					return "";
				
				}
				public String order_numberOriginalDbColumnName(){
				
					return "order_number";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Double price;

				public Double getPrice () {
					return this.price;
				}

				public Boolean priceIsNullable(){
				    return true;
				}
				public Boolean priceIsKey(){
				    return false;
				}
				public Integer priceLength(){
				    return null;
				}
				public Integer pricePrecision(){
				    return null;
				}
				public String priceDefault(){
				
					return null;
				
				}
				public String priceComment(){
				
				    return "";
				
				}
				public String pricePattern(){
				
					return "";
				
				}
				public String priceOriginalDbColumnName(){
				
					return "price";
				
				}

				
			    public Integer qtde;

				public Integer getQtde () {
					return this.qtde;
				}

				public Boolean qtdeIsNullable(){
				    return true;
				}
				public Boolean qtdeIsKey(){
				    return false;
				}
				public Integer qtdeLength(){
				    return null;
				}
				public Integer qtdePrecision(){
				    return null;
				}
				public String qtdeDefault(){
				
					return null;
				
				}
				public String qtdeComment(){
				
				    return "";
				
				}
				public String qtdePattern(){
				
					return "";
				
				}
				public String qtdeOriginalDbColumnName(){
				
					return "qtde";
				
				}

				
			    public String entity_id;

				public String getEntity_id () {
					return this.entity_id;
				}

				public Boolean entity_idIsNullable(){
				    return true;
				}
				public Boolean entity_idIsKey(){
				    return false;
				}
				public Integer entity_idLength(){
				    return null;
				}
				public Integer entity_idPrecision(){
				    return null;
				}
				public String entity_idDefault(){
				
					return null;
				
				}
				public String entity_idComment(){
				
				    return "";
				
				}
				public String entity_idPattern(){
				
					return "";
				
				}
				public String entity_idOriginalDbColumnName(){
				
					return "entity_id";
				
				}

				
			    public String created_at;

				public String getCreated_at () {
					return this.created_at;
				}

				public Boolean created_atIsNullable(){
				    return true;
				}
				public Boolean created_atIsKey(){
				    return false;
				}
				public Integer created_atLength(){
				    return null;
				}
				public Integer created_atPrecision(){
				    return null;
				}
				public String created_atDefault(){
				
					return null;
				
				}
				public String created_atComment(){
				
				    return "";
				
				}
				public String created_atPattern(){
				
					return "";
				
				}
				public String created_atOriginalDbColumnName(){
				
					return "created_at";
				
				}

				
			    public String created_by;

				public String getCreated_by () {
					return this.created_by;
				}

				public Boolean created_byIsNullable(){
				    return true;
				}
				public Boolean created_byIsKey(){
				    return false;
				}
				public Integer created_byLength(){
				    return null;
				}
				public Integer created_byPrecision(){
				    return null;
				}
				public String created_byDefault(){
				
					return null;
				
				}
				public String created_byComment(){
				
				    return "";
				
				}
				public String created_byPattern(){
				
					return "";
				
				}
				public String created_byOriginalDbColumnName(){
				
					return "created_by";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.order_number == null) ? 0 : this.order_number.hashCode());
					
						result = prime * result + ((this.item == null) ? 0 : this.item.hashCode());
					
						result = prime * result + ((this.entity_id == null) ? 0 : this.entity_id.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row27Struct other = (row27Struct) obj;
		
						if (this.order_number == null) {
							if (other.order_number != null)
								return false;
						
						} else if (!this.order_number.equals(other.order_number))
						
							return false;
					
						if (this.item == null) {
							if (other.item != null)
								return false;
						
						} else if (!this.item.equals(other.item))
						
							return false;
					
						if (this.entity_id == null) {
							if (other.entity_id != null)
								return false;
						
						} else if (!this.entity_id.equals(other.entity_id))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row27Struct other) {

		other.order_number = this.order_number;
	            other.item = this.item;
	            other.price = this.price;
	            other.qtde = this.qtde;
	            other.entity_id = this.entity_id;
	            other.created_at = this.created_at;
	            other.created_by = this.created_by;
	            
	}

	public void copyKeysDataTo(row27Struct other) {

		other.order_number = this.order_number;
	            	other.item = this.item;
	            	other.entity_id = this.entity_id;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_orders_magento.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_orders_magento = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_orders_magento, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_orders_magento) {

        	try {

        		int length = 0;
		
					this.order_number = readString(dis);
					
					this.item = readString(dis);
					
					this.entity_id = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.order_number,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// String
				
						writeString(this.entity_id,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = dis.readDouble();
           				}
					
						this.qtde = readInteger(dis,ois);
					
						this.created_at = readString(dis,ois);
					
						this.created_by = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.price = null;
           				} else {
           			    	this.price = objectIn.readDouble();
           				}
					
						this.qtde = readInteger(dis,objectIn);
					
						this.created_at = readString(dis,objectIn);
					
						this.created_by = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						if(this.price == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.price);
		            	}
					
					writeInteger(this.qtde, dos, oos);
					
						writeString(this.created_at, dos, oos);
					
						writeString(this.created_by, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						if(this.price == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.price);
		            	}
					
					writeInteger(this.qtde, dos, objectOut);
					
						writeString(this.created_at, dos, objectOut);
					
						writeString(this.created_by, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("order_number="+order_number);
		sb.append(",item="+item);
		sb.append(",price="+String.valueOf(price));
		sb.append(",qtde="+String.valueOf(qtde));
		sb.append(",entity_id="+entity_id);
		sb.append(",created_at="+created_at);
		sb.append(",created_by="+created_by);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.order_number, other.order_number);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.item, other.item);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.entity_id, other.entity_id);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();




	
	/**
	 * [tAdvancedHash_row27 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row27", false);
		start_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tAdvancedHash_row27 = 0;
		

			   		// connection name:row27
			   		// source node:tHashInput_10 - inputs:(after_tHashInput_6) outputs:(row27,row27) | target node:tAdvancedHash_row27 - inputs:(row27) outputs:()
			   		// linked node: tMap_9 - inputs:(saida,row27) outputs:(Saida1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row27 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row27Struct>getLookup(matchingModeEnum_row27);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row27", tHash_Lookup_row27);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row27 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row23Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_orders_magento_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row23Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    row23Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row27.order_number = next_tHashInput_10.order_number;
	row27.item = next_tHashInput_10.item;
	row27.price = next_tHashInput_10.price;
	row27.qtde = next_tHashInput_10.qtde;
	row27.entity_id = next_tHashInput_10.entity_id;
	row27.created_at = next_tHashInput_10.created_at;
	row27.created_by = next_tHashInput_10.created_by;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					


			   
			   

					row27Struct row27_HashRow = new row27Struct();
		   	   	   
				
				row27_HashRow.order_number = row27.order_number;
				
				row27_HashRow.item = row27.item;
				
				row27_HashRow.price = row27.price;
				
				row27_HashRow.qtde = row27.qtde;
				
				row27_HashRow.entity_id = row27.entity_id;
				
				row27_HashRow.created_at = row27.created_at;
				
				row27_HashRow.created_by = row27.created_by;
				
			tHash_Lookup_row27.put(row27_HashRow);
			
            




 


	tos_count_tAdvancedHash_row27++;

/**
 * [tAdvancedHash_row27 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_orders_magento_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

tHash_Lookup_row27.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row27", true);
end_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());




/**
 * [tAdvancedHash_row27 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final orders_magento orders_magentoClass = new orders_magento();

        int exitCode = orders_magentoClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = orders_magento.class.getClassLoader().getResourceAsStream("palacio_ferramentas/orders_magento_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = orders_magento.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("concat", "id_String");
                        if(context.getStringValue("concat") == null) {
                            context.concat = null;
                        } else {
                            context.concat=(String) context.getProperty("concat");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("data", "id_String");
                        if(context.getStringValue("data") == null) {
                            context.data = null;
                        } else {
                            context.data=(String) context.getProperty("data");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("concat")) {
                context.concat = (String) parentContextMap.get("concat");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("data")) {
                context.data = (String) parentContextMap.get("data");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tHashInput_4Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tHashInput_4) {
globalMap.put("tHashInput_4_SUBPROCESS_STATE", -1);

e_tHashInput_4.printStackTrace();

}catch (java.lang.Error e_tHashInput_4) {
globalMap.put("tHashInput_4_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tHashInput_4;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tHashInput_6Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tHashInput_6) {
globalMap.put("tHashInput_6_SUBPROCESS_STATE", -1);

e_tHashInput_6.printStackTrace();

}catch (java.lang.Error e_tHashInput_6) {
globalMap.put("tHashInput_6_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tHashInput_6;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : orders_magento");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     977534 characters generated by Talend Open Studio for Big Data 
 *     on the 24 de fevereiro de 2025 14:12:38 BRT
 ************************************************************************************************/