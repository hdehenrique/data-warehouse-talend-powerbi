// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_conferencia_fretes_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;
import java.math.BigDecimal;
import java.math.RoundingMode;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_conferencia_fretes Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_conferencia_fretes implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(WINSPARE_DB != null){
				
					this.setProperty("WINSPARE_DB", WINSPARE_DB.toString());
				
			}
			
			if(WINSPARE_HOST != null){
				
					this.setProperty("WINSPARE_HOST", WINSPARE_HOST.toString());
				
			}
			
			if(WINSPARE_PORT != null){
				
					this.setProperty("WINSPARE_PORT", WINSPARE_PORT.toString());
				
			}
			
			if(WINSPARE_PWD != null){
				
					this.setProperty("WINSPARE_PWD", WINSPARE_PWD.toString());
				
			}
			
			if(WINSPARE_USER != null){
				
					this.setProperty("WINSPARE_USER", WINSPARE_USER.toString());
				
			}
			
			if(data_atual != null){
				
					this.setProperty("data_atual", data_atual.toString());
				
			}
			
			if(data_atual1 != null){
				
					this.setProperty("data_atual1", data_atual1.toString());
				
			}
			
			if(Pasta_Rede != null){
				
					this.setProperty("Pasta_Rede", Pasta_Rede.toString());
				
			}
			
			if(Arquivo != null){
				
					this.setProperty("Arquivo", Arquivo.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String WINSPARE_DB;
public String getWINSPARE_DB(){
	return this.WINSPARE_DB;
}
public String WINSPARE_HOST;
public String getWINSPARE_HOST(){
	return this.WINSPARE_HOST;
}
public String WINSPARE_PORT;
public String getWINSPARE_PORT(){
	return this.WINSPARE_PORT;
}
public String WINSPARE_PWD;
public String getWINSPARE_PWD(){
	return this.WINSPARE_PWD;
}
public String WINSPARE_USER;
public String getWINSPARE_USER(){
	return this.WINSPARE_USER;
}
public String data_atual;
public String getData_atual(){
	return this.data_atual;
}
public String data_atual1;
public String getData_atual1(){
	return this.data_atual1;
}
public String Pasta_Rede;
public String getPasta_Rede(){
	return this.Pasta_Rede;
}
public Integer Arquivo;
public Integer getArquivo(){
	return this.Arquivo;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_conferencia_fretes";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_conferencia_fretes.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_conferencia_fretes.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputDelimited_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputDelimited_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_5_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_5_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_5_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_6_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_6_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_6_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_1_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_1_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_1_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_2_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_2_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_2_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_3_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_3_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_3_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_4_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_4_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_4_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSortRow_1_SortOut_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tSortRow_1_SortIn_error(exception, errorComponent, globalMap);
						
						}
					
			public void tSortRow_1_SortIn_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputDelimited_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = "noDatetimeStringSync=true&useSSL=false&requireSSL=false";
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + "192.168.0.2" + ":" + "3007" + "/" + "AUTCOM" + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = "powerbi";
	
	
		 
	final String decryptedPassword_tDBConnection_2 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:r67ZuoVXnWyFDPy+2M/iLFTilGW2W9NEOyVNDlnmkB7NMMC0lUWi");
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_2","AUTCOM");
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = "ApplicationName=integracao_preco_winsp";
            String url_tDBConnection_1 = "jdbc:postgresql://"+"192.168.0.195"+":"+"5432"+"/"+"db_palacio";
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = "talend";
	
	
		 
	final String decryptedPassword_tDBConnection_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:M87wxEO0A1HRx+ueDh3pWjfcJ5hmMPbPfMriVCBi7A5nYIS4");
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


String foo = "bar";

//context.data_atual = TalendDate.getCurrentDate();

Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


Date dataNova1 = new Date();
DateFormat formato1 = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato1.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data1 = formato1.format(dataNova1.getTime());


System.out.println(data);
context.data_atual = data;
context.data_atual1 = data1;
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tFileInputDelimited_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row75Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputDelimited_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row75Struct row75 = new row75Struct();




	
	/**
	 * [tHashOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_12", false);
		start_Hash.put("tHashOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row75");
					}
				
		int tos_count_tHashOutput_12 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashOutput_12 = null;
		String hashKey_tHashOutput_12 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_12";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_12)){
			    if(mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12) == null){
	      		    mf_tHashOutput_12.getResourceMap().put(hashKey_tHashOutput_12, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }else{
			    	tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }
			}
        int nb_line_tHashOutput_12 = 0;

 



/**
 * [tHashOutput_12 begin ] stop
 */



	
	/**
	 * [tFileInputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputDelimited_1", false);
		start_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputDelimited_1";
	
	
		int tos_count_tFileInputDelimited_1 = 0;
		
	
	
	
 
	
	
	final routines.system.RowState rowstate_tFileInputDelimited_1 = new routines.system.RowState();
	
	
				int nb_line_tFileInputDelimited_1 = 0;
				org.talend.fileprocess.FileInputDelimited fid_tFileInputDelimited_1 = null;
				int limit_tFileInputDelimited_1 = -1;
				try{
					
						Object filename_tFileInputDelimited_1 = ""+context.Pasta_Rede+"/Parametros/Parametro.csv";
						if(filename_tFileInputDelimited_1 instanceof java.io.InputStream){
							
			int footer_value_tFileInputDelimited_1 = 0, random_value_tFileInputDelimited_1 = -1;
			if(footer_value_tFileInputDelimited_1 >0 || random_value_tFileInputDelimited_1 > 0){
				throw new java.lang.Exception("When the input source is a stream,footer and random shouldn't be bigger than 0.");				
			}
		
						}
						try {
							fid_tFileInputDelimited_1 = new org.talend.fileprocess.FileInputDelimited(""+context.Pasta_Rede+"/Parametros/Parametro.csv", "ISO-8859-15",";","\n",true,0,0,
									limit_tFileInputDelimited_1
								,-1, false);
						} catch(java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
							
								
								System.err.println(e.getMessage());
							
						}
					
				    
					while (fid_tFileInputDelimited_1!=null && fid_tFileInputDelimited_1.nextRecord()) {
						rowstate_tFileInputDelimited_1.reset();
						
			    						row75 = null;			
												
									boolean whetherReject_tFileInputDelimited_1 = false;
									row75 = new row75Struct();
									try {
										
				int columnIndexWithD_tFileInputDelimited_1 = 0;
				
					String temp = ""; 
				
					columnIndexWithD_tFileInputDelimited_1 = 0;
					
						temp = fid_tFileInputDelimited_1.get(columnIndexWithD_tFileInputDelimited_1);
						if(temp.length() > 0) {
							
								try {
								
    								row75.Quantidade = ParserUtils.parseTo_Integer(temp);
    							
    							} catch(java.lang.Exception ex_tFileInputDelimited_1) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",ex_tFileInputDelimited_1.getMessage());
									rowstate_tFileInputDelimited_1.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
										"Quantidade", "row75", temp, ex_tFileInputDelimited_1), ex_tFileInputDelimited_1));
								}
    							
						} else {						
							
								
									row75.Quantidade = null;
								
							
						}
					
				
				
										
										if(rowstate_tFileInputDelimited_1.getException()!=null) {
											throw rowstate_tFileInputDelimited_1.getException();
										}
										
										
							
			    					} catch (java.lang.Exception e) {
globalMap.put("tFileInputDelimited_1_ERROR_MESSAGE",e.getMessage());
			        					whetherReject_tFileInputDelimited_1 = true;
			        					
			                					System.err.println(e.getMessage());
			                					row75 = null;
			                				
										
			    					}
								

 



/**
 * [tFileInputDelimited_1 begin ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 


	tos_count_tFileInputDelimited_1++;

/**
 * [tFileInputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_begin ] stop
 */
// Start of branch "row75"
if(row75 != null) { 



	
	/**
	 * [tHashOutput_12 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row75"
						
						);
					}
					



    
		row75Struct oneRow_tHashOutput_12 = new row75Struct();
				
					oneRow_tHashOutput_12.Quantidade = row75.Quantidade;
		
        tHashFile_tHashOutput_12.put(oneRow_tHashOutput_12);
        nb_line_tHashOutput_12 ++;

 


	tos_count_tHashOutput_12++;

/**
 * [tHashOutput_12 main ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_end ] stop
 */

} // End of branch "row75"




	
	/**
	 * [tFileInputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	



            }
            }finally{
                if(!((Object)(""+context.Pasta_Rede+"/Parametros/Parametro.csv") instanceof java.io.InputStream)){
                	if(fid_tFileInputDelimited_1!=null){
                		fid_tFileInputDelimited_1.close();
                	}
                }
                if(fid_tFileInputDelimited_1!=null){
                	globalMap.put("tFileInputDelimited_1_NB_LINE", fid_tFileInputDelimited_1.getRowNumber());
					
                }
			}
			  

 

ok_Hash.put("tFileInputDelimited_1", true);
end_Hash.put("tFileInputDelimited_1", System.currentTimeMillis());




/**
 * [tFileInputDelimited_1 end ] stop
 */

	
	/**
	 * [tHashOutput_12 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
globalMap.put("tHashOutput_12_NB_LINE", nb_line_tHashOutput_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row75");
			  	}
			  	
 

ok_Hash.put("tHashOutput_12", true);
end_Hash.put("tHashOutput_12", System.currentTimeMillis());




/**
 * [tHashOutput_12 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputDelimited_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk23", 0, "ok");
								} 
							
							tFileDelete_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputDelimited_1";
	
	

 



/**
 * [tFileInputDelimited_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputDelimited_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_1", false);
		start_Hash.put("tFileDelete_1", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_1";
	
	
		int tos_count_tFileDelete_1 = 0;
		

 



/**
 * [tFileDelete_1 begin ] stop
 */
	
	/**
	 * [tFileDelete_1 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

class DeleteFoldertFileDelete_1{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
	java.io.File path_tFileDelete_1=new java.io.File(""+context.Pasta_Rede+"/Parametros/Parametro.csv");
	if(path_tFileDelete_1.exists()){
		if(path_tFileDelete_1.isFile()){
	    	if(path_tFileDelete_1.delete()){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No file deleted.");
	    	}
		}else if(path_tFileDelete_1.isDirectory()){ 
	    	DeleteFoldertFileDelete_1 dftFileDelete_1 = new DeleteFoldertFileDelete_1();
	    	if(dftFileDelete_1.delete(path_tFileDelete_1)){
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "Path deleted.");
	    	}else{
	    		globalMap.put("tFileDelete_1_CURRENT_STATUS", "No path deleted.");
	    	}
		}
	}else{
		globalMap.put("tFileDelete_1_CURRENT_STATUS", "File or path does not exist or is invalid.");
    }
    globalMap.put("tFileDelete_1_DELETE_PATH",""+context.Pasta_Rede+"/Parametros/Parametro.csv");
 


	tos_count_tFileDelete_1++;

/**
 * [tFileDelete_1 main ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_1 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 

ok_Hash.put("tFileDelete_1", true);
end_Hash.put("tFileDelete_1", System.currentTimeMillis());




/**
 * [tFileDelete_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk24", 0, "ok");
								} 
							
							tHashInput_12Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_1 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_1";
	
	

 



/**
 * [tFileDelete_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_1_SUBPROCESS_STATE", 1);
	}
	


public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row78Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row76Struct implements routines.system.IPersistableRow<row76Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public Integer Quantidade;

				public Integer getQuantidade () {
					return this.Quantidade;
				}

				public Boolean QuantidadeIsNullable(){
				    return true;
				}
				public Boolean QuantidadeIsKey(){
				    return false;
				}
				public Integer QuantidadeLength(){
				    return null;
				}
				public Integer QuantidadePrecision(){
				    return null;
				}
				public String QuantidadeDefault(){
				
					return null;
				
				}
				public String QuantidadeComment(){
				
				    return "";
				
				}
				public String QuantidadePattern(){
				
					return "";
				
				}
				public String QuantidadeOriginalDbColumnName(){
				
					return "Quantidade";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Quantidade = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.Quantidade,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Quantidade="+String.valueOf(Quantidade));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row76Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row76Struct row76 = new row76Struct();
row78Struct row78 = new row78Struct();





	
	/**
	 * [tFileOutputDelimited_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputDelimited_1", false);
		start_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row78");
					}
				
		int tos_count_tFileOutputDelimited_1 = 0;
		

String fileName_tFileOutputDelimited_1 = "";
    fileName_tFileOutputDelimited_1 = (new java.io.File(""+context.Pasta_Rede+"/Parametros/Parametro.csv")).getAbsolutePath().replace("\\","/");
    String fullName_tFileOutputDelimited_1 = null;
    String extension_tFileOutputDelimited_1 = null;
    String directory_tFileOutputDelimited_1 = null;
    if((fileName_tFileOutputDelimited_1.indexOf("/") != -1)) {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") < fileName_tFileOutputDelimited_1.lastIndexOf("/")) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        }
        directory_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("/"));
    } else {
        if(fileName_tFileOutputDelimited_1.lastIndexOf(".") != -1) {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(0, fileName_tFileOutputDelimited_1.lastIndexOf("."));
            extension_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1.substring(fileName_tFileOutputDelimited_1.lastIndexOf("."));
        } else {
            fullName_tFileOutputDelimited_1 = fileName_tFileOutputDelimited_1;
            extension_tFileOutputDelimited_1 = "";
        }
        directory_tFileOutputDelimited_1 = "";
    }
    boolean isFileGenerated_tFileOutputDelimited_1 = true;
    java.io.File filetFileOutputDelimited_1 = new java.io.File(fileName_tFileOutputDelimited_1);
    globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
        if(filetFileOutputDelimited_1.exists()){
            isFileGenerated_tFileOutputDelimited_1 = false;
        }
            int nb_line_tFileOutputDelimited_1 = 0;
            int splitedFileNo_tFileOutputDelimited_1 = 0;
            int currentRow_tFileOutputDelimited_1 = 0;

            final String OUT_DELIM_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:FIELDSEPARATOR */";"/** End field tFileOutputDelimited_1:FIELDSEPARATOR */;

            final String OUT_DELIM_ROWSEP_tFileOutputDelimited_1 = /** Start field tFileOutputDelimited_1:ROWSEPARATOR */"\n"/** End field tFileOutputDelimited_1:ROWSEPARATOR */;

                    //create directory only if not exists
                    if(directory_tFileOutputDelimited_1 != null && directory_tFileOutputDelimited_1.trim().length() != 0) {
                        java.io.File dir_tFileOutputDelimited_1 = new java.io.File(directory_tFileOutputDelimited_1);
                        if(!dir_tFileOutputDelimited_1.exists()) {
                            dir_tFileOutputDelimited_1.mkdirs();
                        }
                    }

                        //routines.system.Row
                        java.io.Writer outtFileOutputDelimited_1 = null;

                        outtFileOutputDelimited_1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(
                        new java.io.FileOutputStream(fileName_tFileOutputDelimited_1, true),"ISO-8859-15"));
                resourceMap.put("out_tFileOutputDelimited_1", outtFileOutputDelimited_1);
                        synchronized (multiThreadLockWrite) {
                                    if(filetFileOutputDelimited_1.length()==0){
                                        outtFileOutputDelimited_1.write("Quantidade");
                                        outtFileOutputDelimited_1.write(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);
                                        outtFileOutputDelimited_1.flush();
                                    }
                        }


resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

 



/**
 * [tFileOutputDelimited_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row76");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tHashInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_12", false);
		start_Hash.put("tHashInput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_12";
	
	
		int tos_count_tHashInput_12 = 0;
		


int nb_line_tHashInput_12 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row75Struct> tHashFile_tHashInput_12 = mf_tHashInput_12.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_12==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row75Struct> iterator_tHashInput_12 = tHashFile_tHashInput_12.iterator();
while (iterator_tHashInput_12.hasNext()) {
    row75Struct next_tHashInput_12 = iterator_tHashInput_12.next();

	row76.Quantidade = next_tHashInput_12.Quantidade;

 



/**
 * [tHashInput_12 begin ] stop
 */
	
	/**
	 * [tHashInput_12 main ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 


	tos_count_tHashInput_12++;

/**
 * [tHashInput_12 main ] stop
 */
	
	/**
	 * [tHashInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row76"
						
						);
					}
					

    //Code generate according to input schema and output schema
row78.Quantidade = row76.Quantidade+1;
context.Arquivo = row78.Quantidade;
    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row78"
						
						);
					}
					


                    StringBuilder sb_tFileOutputDelimited_1 = new StringBuilder();
                            if(row78.Quantidade != null) {
                        sb_tFileOutputDelimited_1.append(
                            row78.Quantidade
                        );
                            }
                    sb_tFileOutputDelimited_1.append(OUT_DELIM_ROWSEP_tFileOutputDelimited_1);


                    synchronized (multiThreadLockWrite) {
                    nb_line_tFileOutputDelimited_1++;
                    resourceMap.put("nb_line_tFileOutputDelimited_1", nb_line_tFileOutputDelimited_1);

                        outtFileOutputDelimited_1.write(sb_tFileOutputDelimited_1.toString());

                    }



 


	tos_count_tFileOutputDelimited_1++;

/**
 * [tFileOutputDelimited_1 main ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputDelimited_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	

 



/**
 * [tFileOutputDelimited_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_12 end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	
    

		
			nb_line_tHashInput_12++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_12_NB_LINE", nb_line_tHashInput_12);       

 

ok_Hash.put("tHashInput_12", true);
end_Hash.put("tHashInput_12", System.currentTimeMillis());




/**
 * [tHashInput_12 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row76");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	



		
	   		synchronized (multiThreadLockWrite) {
		
			
					if(outtFileOutputDelimited_1!=null) {
						outtFileOutputDelimited_1.flush();
						outtFileOutputDelimited_1.close();
					}
				
				globalMap.put("tFileOutputDelimited_1_NB_LINE",nb_line_tFileOutputDelimited_1);
				globalMap.put("tFileOutputDelimited_1_FILE_NAME",fileName_tFileOutputDelimited_1);
			
		
			}
		
		
		resourceMap.put("finish_tFileOutputDelimited_1", true);
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row78");
			  	}
			  	
 

ok_Hash.put("tFileOutputDelimited_1", true);
end_Hash.put("tFileOutputDelimited_1", System.currentTimeMillis());




/**
 * [tFileOutputDelimited_1 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_12:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk25", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tFileOutputDelimited_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputDelimited_1";
	
	


		if(resourceMap.get("finish_tFileOutputDelimited_1") == null){ 
			
		   		synchronized (multiThreadLockWrite) {
			
				
						java.io.Writer outtFileOutputDelimited_1 = (java.io.Writer)resourceMap.get("out_tFileOutputDelimited_1");
						if(outtFileOutputDelimited_1!=null) {
							outtFileOutputDelimited_1.flush();
							outtFileOutputDelimited_1.close();
						}
					
				
				}
			
			
		}
	

 



/**
 * [tFileOutputDelimited_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();
insert_logStruct insert_log = new insert_logStruct();
row16Struct row16 = new row16Struct();






	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_2=0;
        java.lang.StringBuilder sb_tDBOutput_2 = new java.lang.StringBuilder();
        sb_tDBOutput_2.append("INSERT INTO \"").append(tableName_tDBOutput_2).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_2 = sb_tDBOutput_2.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(insert_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row15.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row15.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row16 = null;
        whetherReject_tDBOutput_2 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_2.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_2.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                insertedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_2) {
                            row16 = new row16Struct();
                                row16.nm_programa = insert_log.nm_programa;
                                row16.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row16.data_termino_execucao = insert_log.data_termino_execucao;
                                row16.mensagem = insert_log.mensagem;
                                row16.uuid = insert_log.uuid;
                                row16.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
// Start of branch "row16"
if(row16 != null) { 



	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					



    
		row16Struct oneRow_tHashOutput_5 = new row16Struct();
				
					oneRow_tHashOutput_5.nm_programa = row16.nm_programa;
					oneRow_tHashOutput_5.data_inicio_execucao = row16.data_inicio_execucao;
					oneRow_tHashOutput_5.data_termino_execucao = row16.data_termino_execucao;
					oneRow_tHashOutput_5.mensagem = row16.mensagem;
					oneRow_tHashOutput_5.uuid = row16.uuid;
					oneRow_tHashOutput_5.versao = row16.versao;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */

} // End of branch "row16"




	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
		
			conn_tDBClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tDBClose_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	



	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
        conn_tDBClose_2.close();
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_3 = 1;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_3 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_3=0;
	    String update_tDBOutput_3 = "UPDATE \"" + tableName_tDBOutput_3 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row16Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row16Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row16Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row17.nm_programa = next_tHashInput_4.nm_programa;
	row17.data_inicio_execucao = next_tHashInput_4.data_inicio_execucao;
	row17.data_termino_execucao = next_tHashInput_4.data_termino_execucao;
	row17.mensagem = next_tHashInput_4.mensagem;
	row17.uuid = next_tHashInput_4.uuid;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row17.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row17.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_3.setNull(5 + count_tDBOutput_3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(5 + count_tDBOutput_3, update_log.uuid);
}


            try {
                nb_line_tDBOutput_3++;
				
                int processedCount_tDBOutput_3 = pstmt_tDBOutput_3.executeUpdate();
                updatedCount_tDBOutput_3 += processedCount_tDBOutput_3;
                rowsToCommitCount_tDBOutput_3 += processedCount_tDBOutput_3;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_3 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tDBClose_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String OBJ;

				public String getOBJ () {
					return this.OBJ;
				}

				public Boolean OBJIsNullable(){
				    return true;
				}
				public Boolean OBJIsKey(){
				    return false;
				}
				public Integer OBJLength(){
				    return null;
				}
				public Integer OBJPrecision(){
				    return null;
				}
				public String OBJDefault(){
				
					return null;
				
				}
				public String OBJComment(){
				
				    return "";
				
				}
				public String OBJPattern(){
				
					return "";
				
				}
				public String OBJOriginalDbColumnName(){
				
					return "OBJ";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				
			    public BigDecimal GER_TOTFRE;

				public BigDecimal getGER_TOTFRE () {
					return this.GER_TOTFRE;
				}

				public Boolean GER_TOTFREIsNullable(){
				    return true;
				}
				public Boolean GER_TOTFREIsKey(){
				    return false;
				}
				public Integer GER_TOTFRELength(){
				    return 12;
				}
				public Integer GER_TOTFREPrecision(){
				    return 2;
				}
				public String GER_TOTFREDefault(){
				
					return null;
				
				}
				public String GER_TOTFREComment(){
				
				    return "";
				
				}
				public String GER_TOTFREPattern(){
				
					return "";
				
				}
				public String GER_TOTFREOriginalDbColumnName(){
				
					return "GER_TOTFRE";
				
				}

				
			    public BigDecimal GER_PESBRU;

				public BigDecimal getGER_PESBRU () {
					return this.GER_PESBRU;
				}

				public Boolean GER_PESBRUIsNullable(){
				    return true;
				}
				public Boolean GER_PESBRUIsKey(){
				    return false;
				}
				public Integer GER_PESBRULength(){
				    return 12;
				}
				public Integer GER_PESBRUPrecision(){
				    return 2;
				}
				public String GER_PESBRUDefault(){
				
					return null;
				
				}
				public String GER_PESBRUComment(){
				
				    return "";
				
				}
				public String GER_PESBRUPattern(){
				
					return "";
				
				}
				public String GER_PESBRUOriginalDbColumnName(){
				
					return "GER_PESBRU";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal DET_QTDITE;

				public BigDecimal getDET_QTDITE () {
					return this.DET_QTDITE;
				}

				public Boolean DET_QTDITEIsNullable(){
				    return true;
				}
				public Boolean DET_QTDITEIsKey(){
				    return false;
				}
				public Integer DET_QTDITELength(){
				    return 12;
				}
				public Integer DET_QTDITEPrecision(){
				    return 2;
				}
				public String DET_QTDITEDefault(){
				
					return null;
				
				}
				public String DET_QTDITEComment(){
				
				    return "";
				
				}
				public String DET_QTDITEPattern(){
				
					return "";
				
				}
				public String DET_QTDITEOriginalDbColumnName(){
				
					return "DET_QTDITE";
				
				}

				
			    public BigDecimal DET_TOTPES;

				public BigDecimal getDET_TOTPES () {
					return this.DET_TOTPES;
				}

				public Boolean DET_TOTPESIsNullable(){
				    return true;
				}
				public Boolean DET_TOTPESIsKey(){
				    return false;
				}
				public Integer DET_TOTPESLength(){
				    return 12;
				}
				public Integer DET_TOTPESPrecision(){
				    return 2;
				}
				public String DET_TOTPESDefault(){
				
					return null;
				
				}
				public String DET_TOTPESComment(){
				
				    return "";
				
				}
				public String DET_TOTPESPattern(){
				
					return "";
				
				}
				public String DET_TOTPESOriginalDbColumnName(){
				
					return "DET_TOTPES";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.PLP_DTAENV = readDate(dis);
					
					this.OBJ = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.DOC = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
						this.GER_TOTFRE = (BigDecimal) dis.readObject();
					
						this.GER_PESBRU = (BigDecimal) dis.readObject();
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.DET_QTDITE = (BigDecimal) dis.readObject();
					
						this.DET_TOTPES = (BigDecimal) dis.readObject();
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.PLP_DTAENV = readDate(dis);
					
					this.OBJ = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.DOC = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
						this.GER_TOTFRE = (BigDecimal) dis.readObject();
					
						this.GER_PESBRU = (BigDecimal) dis.readObject();
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.DET_QTDITE = (BigDecimal) dis.readObject();
					
						this.DET_TOTPES = (BigDecimal) dis.readObject();
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.OBJ,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GER_TOTFRE);
					
					// BigDecimal
				
       			    	dos.writeObject(this.GER_PESBRU);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DET_QTDITE);
					
					// BigDecimal
				
       			    	dos.writeObject(this.DET_TOTPES);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.OBJ,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GER_TOTFRE);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.GER_PESBRU);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DET_QTDITE);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DET_TOTPES);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",OBJ="+OBJ);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",DOC="+DOC);
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
		sb.append(",GER_TOTFRE="+String.valueOf(GER_TOTFRE));
		sb.append(",GER_PESBRU="+String.valueOf(GER_PESBRU));
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",DET_QTDITE="+String.valueOf(DET_QTDITE));
		sb.append(",DET_TOTPES="+String.valueOf(DET_TOTPES));
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();




	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row1Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row1Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_6", false);
		start_Hash.put("tDBInput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_6";
	
	
		int tos_count_tDBInput_6 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_6 = java.util.Calendar.getInstance();
		    calendar_tDBInput_6.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_6 = calendar_tDBInput_6.getTime();
		    int nb_line_tDBInput_6 = 0;
		    java.sql.Connection conn_tDBInput_6 = null;
				conn_tDBInput_6 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_6 = conn_tDBInput_6.createStatement();

		    String dbquery_tDBInput_6 = "SELECT E.PLP_DTAENV,\n       SUBSTRING(B.PLD_DATA2D, 30, 13) AS OBJ,\n       A.GER_DTAENT,\n       CONCAT(A.GER_NUMDOC,"
+" '-', A.GER_ESPDOC, '-', A.GER_CODEMP) AS DOC,\n       A.GER_CODVEN,\n       (SELECT OPE_NOMOPE FROM CADOPE CP WHERE CP."
+"OPE_CODOPE = A.GER_CODVEN) NOM_VEN,\n       A.GER_TOTFRE,\n       A.GER_PESBRU,\n       C.DET_CODITE,\n       C.DET_DESC"
+"RI,\n       C.DET_QTDITE,\n       C.DET_TOTPES,\n       D.ITE_EXPALT,\n       D.ITE_EXPLAR,\n       D.ITE_EXPPRO\n  FROM"
+" MOVGER A\n INNER JOIN PLPDOC B ON B.PLD_NUMDOC = A.GER_NUMDOC AND A.GER_ESPDOC = B.PLD_ESPDOC AND A.GER_CODEMP = B.PLD_"
+"CODEMP AND B.PLD_SERIE_ = A.GER_SERIE_\n INNER JOIN MOVDET C ON A.AUTOINCREM = C.DET_SEQGER\n INNER JOIN DESSIT D ON C.D"
+"ET_CODITE = D.ITE_CODITE\n INNER JOIN CORPLP E ON E.AUTOINCREM = B.PLD_SEQPLP\n WHERE TRUE\n   AND E.PLP_DTAENV >= '2024"
+"-08-26'\n ORDER BY A.GER_NUMDOC ASC";
		    

		    globalMap.put("tDBInput_6_QUERY",dbquery_tDBInput_6);

		    java.sql.ResultSet rs_tDBInput_6 = null;

		    try {
		    	rs_tDBInput_6 = stmt_tDBInput_6.executeQuery(dbquery_tDBInput_6);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_6 = rs_tDBInput_6.getMetaData();
		    	int colQtyInRs_tDBInput_6 = rsmd_tDBInput_6.getColumnCount();

		    String tmpContent_tDBInput_6 = null;
		    
		    
		    while (rs_tDBInput_6.next()) {
		        nb_line_tDBInput_6++;
		        
							if(colQtyInRs_tDBInput_6 < 1) {
								row1.PLP_DTAENV = null;
							} else {
										
				if(rs_tDBInput_6.getString(1) != null) {
					String dateString_tDBInput_6 = rs_tDBInput_6.getString(1);
					if (!("0000-00-00").equals(dateString_tDBInput_6) && !("0000-00-00 00:00:00").equals(dateString_tDBInput_6)) {
						row1.PLP_DTAENV = rs_tDBInput_6.getTimestamp(1);
					} else {
						row1.PLP_DTAENV = (java.util.Date) year0_tDBInput_6.clone();
					}
				} else {
					row1.PLP_DTAENV =  null;
				}
		                    }
							if(colQtyInRs_tDBInput_6 < 2) {
								row1.OBJ = null;
							} else {
	                         		
        	row1.OBJ = routines.system.JDBCUtil.getString(rs_tDBInput_6, 2, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 3) {
								row1.GER_DTAENT = null;
							} else {
										
				if(rs_tDBInput_6.getString(3) != null) {
					String dateString_tDBInput_6 = rs_tDBInput_6.getString(3);
					if (!("0000-00-00").equals(dateString_tDBInput_6) && !("0000-00-00 00:00:00").equals(dateString_tDBInput_6)) {
						row1.GER_DTAENT = rs_tDBInput_6.getTimestamp(3);
					} else {
						row1.GER_DTAENT = (java.util.Date) year0_tDBInput_6.clone();
					}
				} else {
					row1.GER_DTAENT =  null;
				}
		                    }
							if(colQtyInRs_tDBInput_6 < 4) {
								row1.DOC = null;
							} else {
	                         		
        	row1.DOC = routines.system.JDBCUtil.getString(rs_tDBInput_6, 4, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 5) {
								row1.GER_CODVEN = null;
							} else {
	                         		
        	row1.GER_CODVEN = routines.system.JDBCUtil.getString(rs_tDBInput_6, 5, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 6) {
								row1.NOM_VEN = null;
							} else {
	                         		
        	row1.NOM_VEN = routines.system.JDBCUtil.getString(rs_tDBInput_6, 6, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 7) {
								row1.GER_TOTFRE = null;
							} else {
		                          
            row1.GER_TOTFRE = rs_tDBInput_6.getBigDecimal(7);
            if(rs_tDBInput_6.wasNull()){
                    row1.GER_TOTFRE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 8) {
								row1.GER_PESBRU = null;
							} else {
		                          
            row1.GER_PESBRU = rs_tDBInput_6.getBigDecimal(8);
            if(rs_tDBInput_6.wasNull()){
                    row1.GER_PESBRU = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 9) {
								row1.DET_CODITE = null;
							} else {
	                         		
        	row1.DET_CODITE = routines.system.JDBCUtil.getString(rs_tDBInput_6, 9, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 10) {
								row1.DET_DESCRI = null;
							} else {
	                         		
        	row1.DET_DESCRI = routines.system.JDBCUtil.getString(rs_tDBInput_6, 10, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 11) {
								row1.DET_QTDITE = null;
							} else {
		                          
            row1.DET_QTDITE = rs_tDBInput_6.getBigDecimal(11);
            if(rs_tDBInput_6.wasNull()){
                    row1.DET_QTDITE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 12) {
								row1.DET_TOTPES = null;
							} else {
		                          
            row1.DET_TOTPES = rs_tDBInput_6.getBigDecimal(12);
            if(rs_tDBInput_6.wasNull()){
                    row1.DET_TOTPES = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 13) {
								row1.ITE_EXPALT = null;
							} else {
		                          
            row1.ITE_EXPALT = rs_tDBInput_6.getBigDecimal(13);
            if(rs_tDBInput_6.wasNull()){
                    row1.ITE_EXPALT = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 14) {
								row1.ITE_EXPLAR = null;
							} else {
		                          
            row1.ITE_EXPLAR = rs_tDBInput_6.getBigDecimal(14);
            if(rs_tDBInput_6.wasNull()){
                    row1.ITE_EXPLAR = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 15) {
								row1.ITE_EXPPRO = null;
							} else {
		                          
            row1.ITE_EXPPRO = rs_tDBInput_6.getBigDecimal(15);
            if(rs_tDBInput_6.wasNull()){
                    row1.ITE_EXPPRO = null;
            }
		                    }
					

 



/**
 * [tDBInput_6 begin ] stop
 */
	
	/**
	 * [tDBInput_6 main ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 


	tos_count_tDBInput_6++;

/**
 * [tDBInput_6 main ] stop
 */
	
	/**
	 * [tDBInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					



    
		row1Struct oneRow_tHashOutput_1 = new row1Struct();
				
					oneRow_tHashOutput_1.PLP_DTAENV = row1.PLP_DTAENV;
					oneRow_tHashOutput_1.OBJ = row1.OBJ;
					oneRow_tHashOutput_1.GER_DTAENT = row1.GER_DTAENT;
					oneRow_tHashOutput_1.DOC = row1.DOC;
					oneRow_tHashOutput_1.GER_CODVEN = row1.GER_CODVEN;
					oneRow_tHashOutput_1.NOM_VEN = row1.NOM_VEN;
					oneRow_tHashOutput_1.GER_TOTFRE = row1.GER_TOTFRE;
					oneRow_tHashOutput_1.GER_PESBRU = row1.GER_PESBRU;
					oneRow_tHashOutput_1.DET_CODITE = row1.DET_CODITE;
					oneRow_tHashOutput_1.DET_DESCRI = row1.DET_DESCRI;
					oneRow_tHashOutput_1.DET_QTDITE = row1.DET_QTDITE;
					oneRow_tHashOutput_1.DET_TOTPES = row1.DET_TOTPES;
					oneRow_tHashOutput_1.ITE_EXPALT = row1.ITE_EXPALT;
					oneRow_tHashOutput_1.ITE_EXPLAR = row1.ITE_EXPLAR;
					oneRow_tHashOutput_1.ITE_EXPPRO = row1.ITE_EXPPRO;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_6 end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

	}
}finally{
	if (rs_tDBInput_6 != null) {
		rs_tDBInput_6.close();
	}
	if (stmt_tDBInput_6 != null) {
		stmt_tDBInput_6.close();
	}
}
globalMap.put("tDBInput_6_NB_LINE",nb_line_tDBInput_6);

 

ok_Hash.put("tDBInput_6", true);
end_Hash.put("tDBInput_6", System.currentTimeMillis());




/**
 * [tDBInput_6 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 12;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal Valor_Total;

				public BigDecimal getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return 12;
				}
				public Integer Valor_TotalPrecision(){
				    return 2;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+String.valueOf(Qtd));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valor_Total="+String.valueOf(Valor_Total));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 12;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal Valor_Total;

				public BigDecimal getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return 12;
				}
				public Integer Valor_TotalPrecision(){
				    return 2;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+String.valueOf(Qtd));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valor_Total="+String.valueOf(Valor_Total));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public String Qtd;

				public String getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return null;
				}
				public Integer QtdPrecision(){
				    return null;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public String Peso;

				public String getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return null;
				}
				public Integer PesoPrecision(){
				    return null;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return null;
				}
				public Integer Valor_TotalPrecision(){
				    return null;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
					this.Qtd = readString(dis);
					
					this.Peso = readString(dis);
					
					this.Valor_Total = readString(dis);
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
					this.Qtd = readString(dis);
					
					this.Peso = readString(dis);
					
					this.Valor_Total = readString(dis);
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// String
				
						writeString(this.Qtd,dos);
					
					// String
				
						writeString(this.Peso,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// String
				
						writeString(this.Qtd,dos);
					
					// String
				
						writeString(this.Peso,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+Qtd);
		sb.append(",Peso="+Peso);
		sb.append(",Valor_Total="+Valor_Total);
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "dd/MM/yyyy";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public String Qtd;

				public String getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return null;
				}
				public Integer QtdPrecision(){
				    return null;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public String Peso;

				public String getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return null;
				}
				public Integer PesoPrecision(){
				    return null;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return null;
				}
				public Integer Valor_TotalPrecision(){
				    return null;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
					this.Qtd = readString(dis);
					
					this.Peso = readString(dis);
					
					this.Valor_Total = readString(dis);
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
					this.Qtd = readString(dis);
					
					this.Peso = readString(dis);
					
					this.Valor_Total = readString(dis);
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// String
				
						writeString(this.Qtd,dos);
					
					// String
				
						writeString(this.Peso,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// String
				
						writeString(this.Qtd,dos);
					
					// String
				
						writeString(this.Peso,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+Qtd);
		sb.append(",Peso="+Peso);
		sb.append(",Valor_Total="+Valor_Total);
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
row5Struct row5 = new row5Struct();
row3Struct row3 = new row3Struct();
row9Struct row9 = new row9Struct();







	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tConvertType_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_1", false);
		start_Hash.put("tConvertType_1", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tConvertType_1 = 0;
		
	int nb_line_tConvertType_1 = 0;  
 



/**
 * [tConvertType_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_1", false);
		start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_1";
	
	
		int tos_count_tFileInputExcel_1 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:wHiMH8ChkTTCzgq5K0gbvwPRDisvM5VJEqhgpw==");
        String password_tFileInputExcel_1 = decryptedPassword_tFileInputExcel_1;
        if (password_tFileInputExcel_1.isEmpty()){
            password_tFileInputExcel_1 = null;
        }
			class RegexUtil_tFileInputExcel_1 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_1 regexUtil_tFileInputExcel_1 = new RegexUtil_tFileInputExcel_1();

		Object source_tFileInputExcel_1 = ""+context.Pasta_Rede+"/Relatório Correios.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_1 = null;
		
		if(source_tFileInputExcel_1 instanceof String){
			workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_1), password_tFileInputExcel_1, true);
		} else if(source_tFileInputExcel_1 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_1, password_tFileInputExcel_1);
		} else{
			workbook_tFileInputExcel_1 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
    	for(org.apache.poi.ss.usermodel.Sheet sheet_tFileInputExcel_1 : workbook_tFileInputExcel_1){
   			sheetList_tFileInputExcel_1.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet_tFileInputExcel_1);
    	}
    	if(sheetList_tFileInputExcel_1.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
			if(sheet_FilterNull_tFileInputExcel_1!=null && sheetList_FilterNull_tFileInputExcel_1.iterator()!=null && sheet_FilterNull_tFileInputExcel_1.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_1.add(sheet_FilterNull_tFileInputExcel_1);
			}
		}
		sheetList_tFileInputExcel_1 = sheetList_FilterNull_tFileInputExcel_1;
	if(sheetList_tFileInputExcel_1.size()>0){
		int nb_line_tFileInputExcel_1 = 0;

        int begin_line_tFileInputExcel_1 = 4;

        int footer_input_tFileInputExcel_1 = 0;

        int end_line_tFileInputExcel_1=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1:sheetList_tFileInputExcel_1){
			end_line_tFileInputExcel_1+=(sheet_tFileInputExcel_1.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_1 -= footer_input_tFileInputExcel_1;
        int limit_tFileInputExcel_1 = -1;
        int start_column_tFileInputExcel_1 = 1-1;
        int end_column_tFileInputExcel_1 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_1 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(0);
        int rowCount_tFileInputExcel_1 = 0;
        int sheetIndex_tFileInputExcel_1 = 0;
        int currentRows_tFileInputExcel_1 = (sheetList_tFileInputExcel_1.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_1 = begin_line_tFileInputExcel_1; i_tFileInputExcel_1 < end_line_tFileInputExcel_1; i_tFileInputExcel_1++){

        	int emptyColumnCount_tFileInputExcel_1 = 0;

        	if (limit_tFileInputExcel_1 != -1 && nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
        		break;
        	}

            while (i_tFileInputExcel_1 >= rowCount_tFileInputExcel_1 + currentRows_tFileInputExcel_1) {
                rowCount_tFileInputExcel_1 += currentRows_tFileInputExcel_1;
                sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(++sheetIndex_tFileInputExcel_1);
                currentRows_tFileInputExcel_1 = (sheet_tFileInputExcel_1.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_1_CURRENT_SHEET",sheet_tFileInputExcel_1.getSheetName());
            if (rowCount_tFileInputExcel_1 <= i_tFileInputExcel_1) {
                row_tFileInputExcel_1 = sheet_tFileInputExcel_1.getRow(i_tFileInputExcel_1 - rowCount_tFileInputExcel_1);
            }
		    row2 = null;
					int tempRowLength_tFileInputExcel_1 = 13;
				
				int columnIndex_tFileInputExcel_1 = 0;
			
			String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
			int excel_end_column_tFileInputExcel_1;
			if(row_tFileInputExcel_1==null){
				excel_end_column_tFileInputExcel_1=0;
			}else{
				excel_end_column_tFileInputExcel_1=row_tFileInputExcel_1.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_1;
			if(end_column_tFileInputExcel_1 == -1){
				actual_end_column_tFileInputExcel_1 = excel_end_column_tFileInputExcel_1;
			}
			else{
				actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 >	excel_end_column_tFileInputExcel_1 ? excel_end_column_tFileInputExcel_1 : end_column_tFileInputExcel_1;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_1 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_1;i++){
				if(i + start_column_tFileInputExcel_1 < actual_end_column_tFileInputExcel_1){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_1 = row_tFileInputExcel_1.getCell(i + start_column_tFileInputExcel_1);
					if(cell_tFileInputExcel_1!=null){
					switch (cell_tFileInputExcel_1.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
									temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_1[i] = df_tFileInputExcel_1.format(cell_tFileInputExcel_1.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_1.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
											temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_1 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_1.getNumericCellValue());
										temp_row_tFileInputExcel_1[i] = ne_tFileInputExcel_1.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_1[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_1[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_1[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_1[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_1 = false;
			row2 = new row2Struct();
			int curColNum_tFileInputExcel_1 = -1;
			String curColName_tFileInputExcel_1 = "";
			try{
							columnIndex_tFileInputExcel_1 = 0;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Destinatario";

				row2.Destinatario = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Destinatario = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 1;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "C_Custos";

				row2.C_Custos = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.C_Custos = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 2;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Postagem";

				if(2<actual_end_column_tFileInputExcel_1){
					try{
						if(row_tFileInputExcel_1.getCell(columnIndex_tFileInputExcel_1+ start_column_tFileInputExcel_1).getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC && org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(row_tFileInputExcel_1.getCell(columnIndex_tFileInputExcel_1+ start_column_tFileInputExcel_1))){
							row2.Postagem = row_tFileInputExcel_1.getCell(columnIndex_tFileInputExcel_1+ start_column_tFileInputExcel_1).getDateCellValue();
						}
						else{
                            java.util.Date tempDate_tFileInputExcel_1 = ParserUtils.parseTo_Date(temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], "dd/MM/yyyy");
                            if(tempDate_tFileInputExcel_1.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS")).parse("9999/12/31 23:59:59.999"))||tempDate_tFileInputExcel_1.before((new SimpleDateFormat("yyyy/MM/dd")).parse("1900/01/01"))){
                                throw new RuntimeException("The cell format is not Date in ( Row. "+(nb_line_tFileInputExcel_1+1)+ " and ColumnNum. " + curColNum_tFileInputExcel_1 + " )");
                            }else{
                                row2.Postagem = tempDate_tFileInputExcel_1;
                            }
						}
					}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e.getMessage());
						
						throw new RuntimeException("The cell format is not Date in ( Row. "+(nb_line_tFileInputExcel_1+1)+ " and ColumnNum. " + curColNum_tFileInputExcel_1 + " )");
					}
				}

			}else{
				row2.Postagem = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 3;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Registro";

				row2.Registro = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Registro = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 4;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "CEP";

				row2.CEP = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.CEP = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 5;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Nota_Fiscal";

				row2.Nota_Fiscal = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Nota_Fiscal = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 6;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Cartao";

				row2.Cartao = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Cartao = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 7;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Servico";

				row2.Servico = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Servico = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 8;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Qtd";

				row2.Qtd = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Qtd = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 9;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Peso";

				row2.Peso = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Peso = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 10;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Valor_Total";

				row2.Valor_Total = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Valor_Total = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 11;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Situacao_Atual";

				row2.Situacao_Atual = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Situacao_Atual = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 12;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "Serv_Adicionais";

				row2.Serv_Adicionais = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row2.Serv_Adicionais = null;
				emptyColumnCount_tFileInputExcel_1++;
			}

				nb_line_tFileInputExcel_1++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_1 = true;
					 System.err.println(e.getMessage());
					 row2 = null;
			}


		



 



/**
 * [tFileInputExcel_1 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 


	tos_count_tFileInputExcel_1++;

/**
 * [tFileInputExcel_1 main ] stop
 */
	
	/**
	 * [tFileInputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_begin ] stop
 */
// Start of branch "row2"
if(row2 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

    //Code generated according to input schema and output schema
row5.Destinatario = row2.Destinatario;
row5.C_Custos = row2.C_Custos;
row5.Postagem = row2.Postagem;
row5.Registro = row2.Registro;
row5.CEP = row2.CEP;
row5.Nota_Fiscal = row2.Nota_Fiscal;
row5.Cartao = row2.Cartao;
row5.Servico = row2.Servico;
row5.Qtd = row2.Qtd.replaceAll(",", ".");
row5.Peso = row2.Peso.replaceAll(",", ".");
row5.Valor_Total = row2.Valor_Total.replaceAll(",", ".");
row5.Situacao_Atual = row2.Situacao_Atual;
row5.Serv_Adicionais = row2.Serv_Adicionais;

    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_1 main ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					


  row3 = new row3Struct();
  boolean bHasError_tConvertType_1 = false;             
          try {
              row3.Destinatario=TypeConvert.String2String(row5.Destinatario);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.C_Custos=TypeConvert.String2String(row5.C_Custos);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Postagem=TypeConvert.Date2Date(row5.Postagem);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Registro=TypeConvert.String2String(row5.Registro);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.CEP=TypeConvert.String2String(row5.CEP);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Nota_Fiscal=TypeConvert.String2String(row5.Nota_Fiscal);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Cartao=TypeConvert.String2String(row5.Cartao);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Servico=TypeConvert.String2String(row5.Servico);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Qtd=TypeConvert.String2BigDecimal(row5.Qtd);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Peso=TypeConvert.String2BigDecimal(row5.Peso);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Valor_Total=TypeConvert.String2BigDecimal(row5.Valor_Total);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Situacao_Atual=TypeConvert.String2String(row5.Situacao_Atual);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }           
          try {
              row3.Serv_Adicionais=TypeConvert.String2String(row5.Serv_Adicionais);            
          } catch(java.lang.Exception e){
globalMap.put("tConvertType_1_ERROR_MESSAGE",e.getMessage());
            bHasError_tConvertType_1 = true;            
              System.err.println(e.getMessage());          
          }
      if (bHasError_tConvertType_1) {row3 = null;}

  nb_line_tConvertType_1 ++ ;

 


	tos_count_tConvertType_1++;

/**
 * [tConvertType_1 main ] stop
 */
	
	/**
	 * [tConvertType_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

    //Code generated according to input schema and output schema
row9.Destinatario = row3.Destinatario;
row9.C_Custos = row3.C_Custos;
row9.Postagem = row3.Postagem;
row9.Registro = row3.Registro;
row9.CEP = row3.CEP;
row9.Nota_Fiscal = row3.Nota_Fiscal;
row9.Cartao = row3.Cartao;
row9.Servico = row3.Servico;
row9.Qtd = row3.Qtd;
//row9.Peso = row3.Peso;
row9.Peso = row3.Peso.divide(new BigDecimal(1000)); //, RoundingMode.HALF_UP);
row9.Valor_Total = row3.Valor_Total;
row9.Situacao_Atual = row3.Situacao_Atual;
row9.Serv_Adicionais = row3.Serv_Adicionais;

    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					



    
		row9Struct oneRow_tHashOutput_2 = new row9Struct();
				
					oneRow_tHashOutput_2.Destinatario = row9.Destinatario;
					oneRow_tHashOutput_2.C_Custos = row9.C_Custos;
					oneRow_tHashOutput_2.Postagem = row9.Postagem;
					oneRow_tHashOutput_2.Registro = row9.Registro;
					oneRow_tHashOutput_2.CEP = row9.CEP;
					oneRow_tHashOutput_2.Nota_Fiscal = row9.Nota_Fiscal;
					oneRow_tHashOutput_2.Cartao = row9.Cartao;
					oneRow_tHashOutput_2.Servico = row9.Servico;
					oneRow_tHashOutput_2.Qtd = row9.Qtd;
					oneRow_tHashOutput_2.Peso = row9.Peso;
					oneRow_tHashOutput_2.Valor_Total = row9.Valor_Total;
					oneRow_tHashOutput_2.Situacao_Atual = row9.Situacao_Atual;
					oneRow_tHashOutput_2.Serv_Adicionais = row9.Serv_Adicionais;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */

} // End of branch "row3"




	
	/**
	 * [tConvertType_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "row2"




	
	/**
	 * [tFileInputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_1_NB_LINE",nb_line_tFileInputExcel_1);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_1 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_1.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_1", true);
end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());




/**
 * [tFileInputExcel_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tConvertType_1 end ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	
      globalMap.put("tConvertType_1_NB_LINE", nb_line_tConvertType_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tConvertType_1", true);
end_Hash.put("tConvertType_1", System.currentTimeMillis());




/**
 * [tConvertType_1 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tConvertType_1 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_1";
	
	

 



/**
 * [tConvertType_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}
	


public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Qtd="+String.valueOf(Qtd));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_4 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_4> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Qtd="+String.valueOf(Qtd));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_4 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 12;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal Valor_Total;

				public BigDecimal getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return 12;
				}
				public Integer Valor_TotalPrecision(){
				    return 2;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+String.valueOf(Qtd));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valor_Total="+String.valueOf(Valor_Total));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_3 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_3> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_3 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida1Struct implements routines.system.IPersistableRow<saida1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public Integer POSITIVO;

				public Integer getPOSITIVO () {
					return this.POSITIVO;
				}

				public Boolean POSITIVOIsNullable(){
				    return true;
				}
				public Boolean POSITIVOIsKey(){
				    return false;
				}
				public Integer POSITIVOLength(){
				    return null;
				}
				public Integer POSITIVOPrecision(){
				    return null;
				}
				public String POSITIVODefault(){
				
					return null;
				
				}
				public String POSITIVOComment(){
				
				    return "";
				
				}
				public String POSITIVOPattern(){
				
					return "";
				
				}
				public String POSITIVOOriginalDbColumnName(){
				
					return "POSITIVO";
				
				}

				
			    public Integer EQUILIBRADO;

				public Integer getEQUILIBRADO () {
					return this.EQUILIBRADO;
				}

				public Boolean EQUILIBRADOIsNullable(){
				    return true;
				}
				public Boolean EQUILIBRADOIsKey(){
				    return false;
				}
				public Integer EQUILIBRADOLength(){
				    return null;
				}
				public Integer EQUILIBRADOPrecision(){
				    return null;
				}
				public String EQUILIBRADODefault(){
				
					return null;
				
				}
				public String EQUILIBRADOComment(){
				
				    return "";
				
				}
				public String EQUILIBRADOPattern(){
				
					return "";
				
				}
				public String EQUILIBRADOOriginalDbColumnName(){
				
					return "EQUILIBRADO";
				
				}

				
			    public Integer NEGATIVO;

				public Integer getNEGATIVO () {
					return this.NEGATIVO;
				}

				public Boolean NEGATIVOIsNullable(){
				    return true;
				}
				public Boolean NEGATIVOIsKey(){
				    return false;
				}
				public Integer NEGATIVOLength(){
				    return null;
				}
				public Integer NEGATIVOPrecision(){
				    return null;
				}
				public String NEGATIVODefault(){
				
					return null;
				
				}
				public String NEGATIVOComment(){
				
				    return "";
				
				}
				public String NEGATIVOPattern(){
				
					return "";
				
				}
				public String NEGATIVOOriginalDbColumnName(){
				
					return "NEGATIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("POSITIVO="+String.valueOf(POSITIVO));
		sb.append(",EQUILIBRADO="+String.valueOf(EQUILIBRADO));
		sb.append(",NEGATIVO="+String.valueOf(NEGATIVO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public Integer POSITIVO;

				public Integer getPOSITIVO () {
					return this.POSITIVO;
				}

				public Boolean POSITIVOIsNullable(){
				    return true;
				}
				public Boolean POSITIVOIsKey(){
				    return false;
				}
				public Integer POSITIVOLength(){
				    return null;
				}
				public Integer POSITIVOPrecision(){
				    return null;
				}
				public String POSITIVODefault(){
				
					return null;
				
				}
				public String POSITIVOComment(){
				
				    return "";
				
				}
				public String POSITIVOPattern(){
				
					return "";
				
				}
				public String POSITIVOOriginalDbColumnName(){
				
					return "POSITIVO";
				
				}

				
			    public Integer EQUILIBRADO;

				public Integer getEQUILIBRADO () {
					return this.EQUILIBRADO;
				}

				public Boolean EQUILIBRADOIsNullable(){
				    return true;
				}
				public Boolean EQUILIBRADOIsKey(){
				    return false;
				}
				public Integer EQUILIBRADOLength(){
				    return null;
				}
				public Integer EQUILIBRADOPrecision(){
				    return null;
				}
				public String EQUILIBRADODefault(){
				
					return null;
				
				}
				public String EQUILIBRADOComment(){
				
				    return "";
				
				}
				public String EQUILIBRADOPattern(){
				
					return "";
				
				}
				public String EQUILIBRADOOriginalDbColumnName(){
				
					return "EQUILIBRADO";
				
				}

				
			    public Integer NEGATIVO;

				public Integer getNEGATIVO () {
					return this.NEGATIVO;
				}

				public Boolean NEGATIVOIsNullable(){
				    return true;
				}
				public Boolean NEGATIVOIsKey(){
				    return false;
				}
				public Integer NEGATIVOLength(){
				    return null;
				}
				public Integer NEGATIVOPrecision(){
				    return null;
				}
				public String NEGATIVODefault(){
				
					return null;
				
				}
				public String NEGATIVOComment(){
				
				    return "";
				
				}
				public String NEGATIVOPattern(){
				
					return "";
				
				}
				public String NEGATIVOOriginalDbColumnName(){
				
					return "NEGATIVO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",POSITIVO="+String.valueOf(POSITIVO));
		sb.append(",EQUILIBRADO="+String.valueOf(EQUILIBRADO));
		sb.append(",NEGATIVO="+String.valueOf(NEGATIVO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_2 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_2> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public Integer POSITIVO;

				public Integer getPOSITIVO () {
					return this.POSITIVO;
				}

				public Boolean POSITIVOIsNullable(){
				    return true;
				}
				public Boolean POSITIVOIsKey(){
				    return false;
				}
				public Integer POSITIVOLength(){
				    return null;
				}
				public Integer POSITIVOPrecision(){
				    return null;
				}
				public String POSITIVODefault(){
				
					return null;
				
				}
				public String POSITIVOComment(){
				
				    return "";
				
				}
				public String POSITIVOPattern(){
				
					return "";
				
				}
				public String POSITIVOOriginalDbColumnName(){
				
					return "POSITIVO";
				
				}

				
			    public Integer EQUILIBRADO;

				public Integer getEQUILIBRADO () {
					return this.EQUILIBRADO;
				}

				public Boolean EQUILIBRADOIsNullable(){
				    return true;
				}
				public Boolean EQUILIBRADOIsKey(){
				    return false;
				}
				public Integer EQUILIBRADOLength(){
				    return null;
				}
				public Integer EQUILIBRADOPrecision(){
				    return null;
				}
				public String EQUILIBRADODefault(){
				
					return null;
				
				}
				public String EQUILIBRADOComment(){
				
				    return "";
				
				}
				public String EQUILIBRADOPattern(){
				
					return "";
				
				}
				public String EQUILIBRADOOriginalDbColumnName(){
				
					return "EQUILIBRADO";
				
				}

				
			    public Integer NEGATIVO;

				public Integer getNEGATIVO () {
					return this.NEGATIVO;
				}

				public Boolean NEGATIVOIsNullable(){
				    return true;
				}
				public Boolean NEGATIVOIsKey(){
				    return false;
				}
				public Integer NEGATIVOLength(){
				    return null;
				}
				public Integer NEGATIVOPrecision(){
				    return null;
				}
				public String NEGATIVODefault(){
				
					return null;
				
				}
				public String NEGATIVOComment(){
				
				    return "";
				
				}
				public String NEGATIVOPattern(){
				
					return "";
				
				}
				public String NEGATIVOOriginalDbColumnName(){
				
					return "NEGATIVO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",POSITIVO="+String.valueOf(POSITIVO));
		sb.append(",EQUILIBRADO="+String.valueOf(EQUILIBRADO));
		sb.append(",NEGATIVO="+String.valueOf(NEGATIVO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_2 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public Integer POSITIVO;

				public Integer getPOSITIVO () {
					return this.POSITIVO;
				}

				public Boolean POSITIVOIsNullable(){
				    return true;
				}
				public Boolean POSITIVOIsKey(){
				    return false;
				}
				public Integer POSITIVOLength(){
				    return null;
				}
				public Integer POSITIVOPrecision(){
				    return null;
				}
				public String POSITIVODefault(){
				
					return null;
				
				}
				public String POSITIVOComment(){
				
				    return "";
				
				}
				public String POSITIVOPattern(){
				
					return "";
				
				}
				public String POSITIVOOriginalDbColumnName(){
				
					return "POSITIVO";
				
				}

				
			    public Integer EQUILIBRADO;

				public Integer getEQUILIBRADO () {
					return this.EQUILIBRADO;
				}

				public Boolean EQUILIBRADOIsNullable(){
				    return true;
				}
				public Boolean EQUILIBRADOIsKey(){
				    return false;
				}
				public Integer EQUILIBRADOLength(){
				    return null;
				}
				public Integer EQUILIBRADOPrecision(){
				    return null;
				}
				public String EQUILIBRADODefault(){
				
					return null;
				
				}
				public String EQUILIBRADOComment(){
				
				    return "";
				
				}
				public String EQUILIBRADOPattern(){
				
					return "";
				
				}
				public String EQUILIBRADOOriginalDbColumnName(){
				
					return "EQUILIBRADO";
				
				}

				
			    public Integer NEGATIVO;

				public Integer getNEGATIVO () {
					return this.NEGATIVO;
				}

				public Boolean NEGATIVOIsNullable(){
				    return true;
				}
				public Boolean NEGATIVOIsKey(){
				    return false;
				}
				public Integer NEGATIVOLength(){
				    return null;
				}
				public Integer NEGATIVOPrecision(){
				    return null;
				}
				public String NEGATIVODefault(){
				
					return null;
				
				}
				public String NEGATIVOComment(){
				
				    return "";
				
				}
				public String NEGATIVOPattern(){
				
					return "";
				
				}
				public String NEGATIVOOriginalDbColumnName(){
				
					return "NEGATIVO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",POSITIVO="+String.valueOf(POSITIVO));
		sb.append(",EQUILIBRADO="+String.valueOf(EQUILIBRADO));
		sb.append(",NEGATIVO="+String.valueOf(NEGATIVO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_1> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CALC="+String.valueOf(PESO_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_6 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_6> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CALC="+String.valueOf(PESO_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_6 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CALC="+String.valueOf(VALOR_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_5 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_5> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CALC="+String.valueOf(VALOR_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_5 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class diff_valorStruct implements routines.system.IPersistableRow<diff_valorStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CALC="+String.valueOf(VALOR_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(diff_valorStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class diff_pessoStruct implements routines.system.IPersistableRow<diff_pessoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CALC="+String.valueOf(PESO_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(diff_pessoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal QTDE_CORREIOS;

				public BigDecimal getQTDE_CORREIOS () {
					return this.QTDE_CORREIOS;
				}

				public Boolean QTDE_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean QTDE_CORREIOSIsKey(){
				    return false;
				}
				public Integer QTDE_CORREIOSLength(){
				    return 12;
				}
				public Integer QTDE_CORREIOSPrecision(){
				    return 2;
				}
				public String QTDE_CORREIOSDefault(){
				
					return null;
				
				}
				public String QTDE_CORREIOSComment(){
				
				    return "";
				
				}
				public String QTDE_CORREIOSPattern(){
				
					return "";
				
				}
				public String QTDE_CORREIOSOriginalDbColumnName(){
				
					return "QTDE_CORREIOS";
				
				}

				
			    public BigDecimal QTDE_AUTCOM;

				public BigDecimal getQTDE_AUTCOM () {
					return this.QTDE_AUTCOM;
				}

				public Boolean QTDE_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean QTDE_AUTCOMIsKey(){
				    return false;
				}
				public Integer QTDE_AUTCOMLength(){
				    return 12;
				}
				public Integer QTDE_AUTCOMPrecision(){
				    return 2;
				}
				public String QTDE_AUTCOMDefault(){
				
					return null;
				
				}
				public String QTDE_AUTCOMComment(){
				
				    return "";
				
				}
				public String QTDE_AUTCOMPattern(){
				
					return "";
				
				}
				public String QTDE_AUTCOMOriginalDbColumnName(){
				
					return "QTDE_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",DOC="+DOC);
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",QTDE_CORREIOS="+String.valueOf(QTDE_CORREIOS));
		sb.append(",QTDE_AUTCOM="+String.valueOf(QTDE_AUTCOM));
		sb.append(",PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ReportStruct implements routines.system.IPersistableRow<ReportStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal QTDE_CORREIOS;

				public BigDecimal getQTDE_CORREIOS () {
					return this.QTDE_CORREIOS;
				}

				public Boolean QTDE_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean QTDE_CORREIOSIsKey(){
				    return false;
				}
				public Integer QTDE_CORREIOSLength(){
				    return 12;
				}
				public Integer QTDE_CORREIOSPrecision(){
				    return 2;
				}
				public String QTDE_CORREIOSDefault(){
				
					return null;
				
				}
				public String QTDE_CORREIOSComment(){
				
				    return "";
				
				}
				public String QTDE_CORREIOSPattern(){
				
					return "";
				
				}
				public String QTDE_CORREIOSOriginalDbColumnName(){
				
					return "QTDE_CORREIOS";
				
				}

				
			    public BigDecimal QTDE_AUTCOM;

				public BigDecimal getQTDE_AUTCOM () {
					return this.QTDE_AUTCOM;
				}

				public Boolean QTDE_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean QTDE_AUTCOMIsKey(){
				    return false;
				}
				public Integer QTDE_AUTCOMLength(){
				    return 12;
				}
				public Integer QTDE_AUTCOMPrecision(){
				    return 2;
				}
				public String QTDE_AUTCOMDefault(){
				
					return null;
				
				}
				public String QTDE_AUTCOMComment(){
				
				    return "";
				
				}
				public String QTDE_AUTCOMPattern(){
				
					return "";
				
				}
				public String QTDE_AUTCOMOriginalDbColumnName(){
				
					return "QTDE_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",DOC="+DOC);
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",QTDE_CORREIOS="+String.valueOf(QTDE_CORREIOS));
		sb.append(",QTDE_AUTCOM="+String.valueOf(QTDE_AUTCOM));
		sb.append(",PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ReportStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class ContadorStruct implements routines.system.IPersistableRow<ContadorStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(ContadorStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Batimento2Struct implements routines.system.IPersistableRow<Batimento2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Batimento2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Contador2Struct implements routines.system.IPersistableRow<Contador2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Contador2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal QTDE_CORREIOS;

				public BigDecimal getQTDE_CORREIOS () {
					return this.QTDE_CORREIOS;
				}

				public Boolean QTDE_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean QTDE_CORREIOSIsKey(){
				    return false;
				}
				public Integer QTDE_CORREIOSLength(){
				    return 12;
				}
				public Integer QTDE_CORREIOSPrecision(){
				    return 2;
				}
				public String QTDE_CORREIOSDefault(){
				
					return null;
				
				}
				public String QTDE_CORREIOSComment(){
				
				    return "";
				
				}
				public String QTDE_CORREIOSPattern(){
				
					return "";
				
				}
				public String QTDE_CORREIOSOriginalDbColumnName(){
				
					return "QTDE_CORREIOS";
				
				}

				
			    public BigDecimal QTDE_AUTCOM;

				public BigDecimal getQTDE_AUTCOM () {
					return this.QTDE_AUTCOM;
				}

				public Boolean QTDE_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean QTDE_AUTCOMIsKey(){
				    return false;
				}
				public Integer QTDE_AUTCOMLength(){
				    return 12;
				}
				public Integer QTDE_AUTCOMPrecision(){
				    return 2;
				}
				public String QTDE_AUTCOMDefault(){
				
					return null;
				
				}
				public String QTDE_AUTCOMComment(){
				
				    return "";
				
				}
				public String QTDE_AUTCOMPattern(){
				
					return "";
				
				}
				public String QTDE_AUTCOMOriginalDbColumnName(){
				
					return "QTDE_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",DOC="+DOC);
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",QTDE_CORREIOS="+String.valueOf(QTDE_CORREIOS));
		sb.append(",QTDE_AUTCOM="+String.valueOf(QTDE_AUTCOM));
		sb.append(",PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
		sb.append(",NOM_VEN="+NOM_VEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Batimento1Struct implements routines.system.IPersistableRow<Batimento1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal QTDE_CORREIOS;

				public BigDecimal getQTDE_CORREIOS () {
					return this.QTDE_CORREIOS;
				}

				public Boolean QTDE_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean QTDE_CORREIOSIsKey(){
				    return false;
				}
				public Integer QTDE_CORREIOSLength(){
				    return 12;
				}
				public Integer QTDE_CORREIOSPrecision(){
				    return 2;
				}
				public String QTDE_CORREIOSDefault(){
				
					return null;
				
				}
				public String QTDE_CORREIOSComment(){
				
				    return "";
				
				}
				public String QTDE_CORREIOSPattern(){
				
					return "";
				
				}
				public String QTDE_CORREIOSOriginalDbColumnName(){
				
					return "QTDE_CORREIOS";
				
				}

				
			    public BigDecimal QTDE_AUTCOM;

				public BigDecimal getQTDE_AUTCOM () {
					return this.QTDE_AUTCOM;
				}

				public Boolean QTDE_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean QTDE_AUTCOMIsKey(){
				    return false;
				}
				public Integer QTDE_AUTCOMLength(){
				    return 12;
				}
				public Integer QTDE_AUTCOMPrecision(){
				    return 2;
				}
				public String QTDE_AUTCOMDefault(){
				
					return null;
				
				}
				public String QTDE_AUTCOMComment(){
				
				    return "";
				
				}
				public String QTDE_AUTCOMPattern(){
				
					return "";
				
				}
				public String QTDE_AUTCOMOriginalDbColumnName(){
				
					return "QTDE_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",DOC="+DOC);
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",QTDE_CORREIOS="+String.valueOf(QTDE_CORREIOS));
		sb.append(",QTDE_AUTCOM="+String.valueOf(QTDE_AUTCOM));
		sb.append(",PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
		sb.append(",VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
		sb.append(",NOM_VEN="+NOM_VEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Batimento1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class RejectStruct implements routines.system.IPersistableRow<RejectStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 12;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal Valor_Total;

				public BigDecimal getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return 12;
				}
				public Integer Valor_TotalPrecision(){
				    return 2;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+String.valueOf(Qtd));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valor_Total="+String.valueOf(Valor_Total));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(RejectStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 12;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal Valor_Total;

				public BigDecimal getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return 12;
				}
				public Integer Valor_TotalPrecision(){
				    return 2;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+String.valueOf(Qtd));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valor_Total="+String.valueOf(Valor_Total));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 12;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal Valor_Total;

				public BigDecimal getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return 12;
				}
				public Integer Valor_TotalPrecision(){
				    return 2;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+String.valueOf(Qtd));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valor_Total="+String.valueOf(Valor_Total));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_2Process(globalMap);

		row7Struct row7 = new row7Struct();
Batimento1Struct Batimento1 = new Batimento1Struct();
row6Struct row6 = new row6Struct();
ReportStruct Report = new ReportStruct();
ReportStruct row19 = Report;
diff_valorStruct diff_valor = new diff_valorStruct();
row32Struct row32 = new row32Struct();
diff_pessoStruct diff_pesso = new diff_pessoStruct();
row33Struct row33 = new row33Struct();
ContadorStruct Contador = new ContadorStruct();
row11Struct row11 = new row11Struct();
Batimento2Struct Batimento2 = new Batimento2Struct();
row12Struct row12 = new row12Struct();
row13Struct row13 = new row13Struct();
saida1Struct saida1 = new saida1Struct();
Contador2Struct Contador2 = new Contador2Struct();
row14Struct row14 = new row14Struct();
RejectStruct Reject = new RejectStruct();
RejectStruct row18 = Reject;
row29Struct row29 = new row29Struct();









	
	/**
	 * [tAggregateRow_5_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_5_AGGOUT", false);
		start_Hash.put("tAggregateRow_5_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"diff_valor");
					}
				
		int tos_count_tAggregateRow_5_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_5 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_5 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_5 utilClass_tAggregateRow_5 = new UtilClass_tAggregateRow_5();

	

	class AggOperationStruct_tAggregateRow_5 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;
BigDecimal VALOR_CALC_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_5 other = (AggOperationStruct_tAggregateRow_5) obj;
			
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_5 operation_result_tAggregateRow_5 = null;
	AggOperationStruct_tAggregateRow_5 operation_finder_tAggregateRow_5 = new AggOperationStruct_tAggregateRow_5();
	java.util.Map<AggOperationStruct_tAggregateRow_5,AggOperationStruct_tAggregateRow_5> hash_tAggregateRow_5 = new java.util.HashMap<AggOperationStruct_tAggregateRow_5,AggOperationStruct_tAggregateRow_5>();
	

 



/**
 * [tAggregateRow_5_AGGOUT begin ] stop
 */




	
	/**
	 * [tAggregateRow_6_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_6_AGGOUT", false);
		start_Hash.put("tAggregateRow_6_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"diff_pesso");
					}
				
		int tos_count_tAggregateRow_6_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_6 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_6 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_6 utilClass_tAggregateRow_6 = new UtilClass_tAggregateRow_6();

	

	class AggOperationStruct_tAggregateRow_6 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;
BigDecimal PESO_CALC_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_6 other = (AggOperationStruct_tAggregateRow_6) obj;
			
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_6 operation_result_tAggregateRow_6 = null;
	AggOperationStruct_tAggregateRow_6 operation_finder_tAggregateRow_6 = new AggOperationStruct_tAggregateRow_6();
	java.util.Map<AggOperationStruct_tAggregateRow_6,AggOperationStruct_tAggregateRow_6> hash_tAggregateRow_6 = new java.util.HashMap<AggOperationStruct_tAggregateRow_6,AggOperationStruct_tAggregateRow_6>();
	

 



/**
 * [tAggregateRow_6_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
diff_valorStruct diff_valor_tmp = new diff_valorStruct();
diff_pessoStruct diff_pesso_tmp = new diff_pessoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Report");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<ReportStruct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<ReportStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */




	
	/**
	 * [tAggregateRow_1_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGOUT", false);
		start_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Contador");
					}
				
		int tos_count_tAggregateRow_1_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_1 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_1 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_1 utilClass_tAggregateRow_1 = new UtilClass_tAggregateRow_1();

	

	class AggOperationStruct_tAggregateRow_1 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;
BigDecimal PESO_CORREIOS_sum;
           			BigDecimal PESO_AUTCOM_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_1 other = (AggOperationStruct_tAggregateRow_1) obj;
			
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_1 operation_result_tAggregateRow_1 = null;
	AggOperationStruct_tAggregateRow_1 operation_finder_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();
	java.util.Map<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1> hash_tAggregateRow_1 = new java.util.HashMap<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1>();
	

 



/**
 * [tAggregateRow_1_AGGOUT begin ] stop
 */





	
	/**
	 * [tAggregateRow_2_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGOUT", false);
		start_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tAggregateRow_2_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_2 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_2 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_2 utilClass_tAggregateRow_2 = new UtilClass_tAggregateRow_2();

	

	class AggOperationStruct_tAggregateRow_2 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

         			Integer POSITIVO_sum;
         			Integer EQUILIBRADO_sum;
         			Integer NEGATIVO_sum;
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_2 other = (AggOperationStruct_tAggregateRow_2) obj;
			
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_2 operation_result_tAggregateRow_2 = null;
	AggOperationStruct_tAggregateRow_2 operation_finder_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();
	java.util.Map<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2> hash_tAggregateRow_2 = new java.util.HashMap<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2>();
	

 



/**
 * [tAggregateRow_2_AGGOUT begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Batimento2");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */




	
	/**
	 * [tAggregateRow_3_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGOUT", false);
		start_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Contador2");
					}
				
		int tos_count_tAggregateRow_3_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_3 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_3 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_3 utilClass_tAggregateRow_3 = new UtilClass_tAggregateRow_3();

	

	class AggOperationStruct_tAggregateRow_3 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;
BigDecimal VALOR_CORREIO_sum;
           			BigDecimal VALOR_AUTCOM_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_3 other = (AggOperationStruct_tAggregateRow_3) obj;
			
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_3 operation_result_tAggregateRow_3 = null;
	AggOperationStruct_tAggregateRow_3 operation_finder_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();
	java.util.Map<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3> hash_tAggregateRow_3 = new java.util.HashMap<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3>();
	

 



/**
 * [tAggregateRow_3_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
ReportStruct Report_tmp = new ReportStruct();
ContadorStruct Contador_tmp = new ContadorStruct();
Batimento2Struct Batimento2_tmp = new Batimento2Struct();
Contador2Struct Contador2_tmp = new Contador2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Batimento1");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */





	
	/**
	 * [tAggregateRow_4_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGOUT", false);
		start_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tAggregateRow_4_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_4 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_4 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_4 utilClass_tAggregateRow_4 = new UtilClass_tAggregateRow_4();

	

	class AggOperationStruct_tAggregateRow_4 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;
int count = 0;
       			int Qtd_clmCount = 0;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_4 other = (AggOperationStruct_tAggregateRow_4) obj;
			
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_4 operation_result_tAggregateRow_4 = null;
	AggOperationStruct_tAggregateRow_4 operation_finder_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();
	java.util.Map<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4> hash_tAggregateRow_4 = new java.util.HashMap<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4>();
	

 



/**
 * [tAggregateRow_4_AGGOUT begin ] stop
 */



	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Reject");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<RejectStruct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<RejectStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
					globalMap.get( "tHash_Lookup_row8" ))
					;					
					
	

row8Struct row8HashKey = new row8Struct();
row8Struct row8Default = new row8Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
Batimento1Struct Batimento1_tmp = new Batimento1Struct();
RejectStruct Reject_tmp = new RejectStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row9Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row9Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row7.Destinatario = next_tHashInput_1.Destinatario;
	row7.C_Custos = next_tHashInput_1.C_Custos;
	row7.Postagem = next_tHashInput_1.Postagem;
	row7.Registro = next_tHashInput_1.Registro;
	row7.CEP = next_tHashInput_1.CEP;
	row7.Nota_Fiscal = next_tHashInput_1.Nota_Fiscal;
	row7.Cartao = next_tHashInput_1.Cartao;
	row7.Servico = next_tHashInput_1.Servico;
	row7.Qtd = next_tHashInput_1.Qtd;
	row7.Peso = next_tHashInput_1.Peso;
	row7.Valor_Total = next_tHashInput_1.Valor_Total;
	row7.Situacao_Atual = next_tHashInput_1.Situacao_Atual;
	row7.Serv_Adicionais = next_tHashInput_1.Serv_Adicionais;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row8Struct row8 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row8" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow8 = false;
       		  	    	
       		  	    	
 							row8Struct row8ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row8HashKey.OBJ = row7.Registro ;
                        		    		

								
		                        	row8HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row8.lookup( row8HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_1 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8' and it contains more one result from keys :  row8.OBJ = '" + row8HashKey.OBJ + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row8Struct fromLookup_row8 = null;
							row8 = row8Default;
										 
							
								 
							
							
								if (tHash_Lookup_row8 !=null && tHash_Lookup_row8.hasNext()) { // G 099
								
							
								
								fromLookup_row8 = tHash_Lookup_row8.next();

							
							
								} // G 099
							
							

							if(fromLookup_row8 != null) {
								row8 = fromLookup_row8;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

Batimento1 = null;
Reject = null;

if(!rejectedInnerJoin_tMap_1 ) {

// # Output table : 'Batimento1'
Batimento1_tmp.Destinatario = row7.Destinatario ;
Batimento1_tmp.C_Custos = row7.C_Custos ;
Batimento1_tmp.Postagem = row7.Postagem ;
Batimento1_tmp.DOC = row8.DOC ;
Batimento1_tmp.Registro = row7.Registro ;
Batimento1_tmp.CEP = row7.CEP ;
Batimento1_tmp.Cartao = row7.Cartao ;
Batimento1_tmp.Servico = row7.Servico ;
Batimento1_tmp.QTDE_CORREIOS = row7.Qtd ;
Batimento1_tmp.QTDE_AUTCOM = row8.DET_QTDITE ;
Batimento1_tmp.PESO_CORREIOS = row7.Peso ;
Batimento1_tmp.PESO_AUTCOM = row8.GER_PESBRU ;
Batimento1_tmp.VALOR_CORREIO = row7.Valor_Total ;
Batimento1_tmp.VALOR_AUTCOM = row8.GER_TOTFRE ;
Batimento1_tmp.Situacao_Atual = row7.Situacao_Atual ;
Batimento1_tmp.Serv_Adicionais = row7.Serv_Adicionais ;
Batimento1_tmp.GER_DTAENT = row8.GER_DTAENT ;
Batimento1_tmp.PLP_DTAENV = row8.PLP_DTAENV ;
Batimento1_tmp.GER_CODVEN = row8.GER_CODVEN ;
Batimento1_tmp.DET_CODITE = row8.DET_CODITE ;
Batimento1_tmp.DET_DESCRI = row8.DET_DESCRI ;
Batimento1_tmp.ITE_EXPALT = row8.ITE_EXPALT ;
Batimento1_tmp.ITE_EXPLAR = row8.ITE_EXPLAR ;
Batimento1_tmp.ITE_EXPPRO = row8.ITE_EXPPRO ;
Batimento1_tmp.NOM_VEN = row8.NOM_VEN ;
Batimento1 = Batimento1_tmp;
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'Reject'
// # Filter conditions 
if( rejectedInnerJoin_tMap_1 ) {
Reject_tmp.Destinatario = row7.Destinatario ;
Reject_tmp.C_Custos = row7.C_Custos ;
Reject_tmp.Postagem = row7.Postagem ;
Reject_tmp.Registro = row7.Registro ;
Reject_tmp.CEP = row7.CEP ;
Reject_tmp.Nota_Fiscal = row7.Nota_Fiscal ;
Reject_tmp.Cartao = row7.Cartao ;
Reject_tmp.Servico = row7.Servico ;
Reject_tmp.Qtd = row7.Qtd ;
Reject_tmp.Peso = row7.Peso ;
Reject_tmp.Valor_Total = row7.Valor_Total ;
Reject_tmp.Situacao_Atual = row7.Situacao_Atual ;
Reject_tmp.Serv_Adicionais = row7.Serv_Adicionais ;
Reject_tmp.GER_CODVEN = row8.GER_CODVEN ;
Reject_tmp.NOM_VEN = row8.NOM_VEN ;
Reject = Reject_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "Batimento1"
if(Batimento1 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Batimento1"
						
						);
					}
					

    //Code generated according to input schema and output schema
row6.Destinatario = Batimento1.Destinatario;
row6.C_Custos = Batimento1.C_Custos;
row6.Postagem = Batimento1.Postagem;
row6.DOC = Batimento1.DOC;
row6.Registro = Batimento1.Registro;
row6.CEP = Batimento1.CEP;
row6.Cartao = Batimento1.Cartao;
row6.Servico = Batimento1.Servico;
row6.QTDE_CORREIOS = Batimento1.QTDE_CORREIOS;
row6.QTDE_AUTCOM = Batimento1.QTDE_AUTCOM;
row6.PESO_CORREIOS = Batimento1.PESO_CORREIOS;
row6.PESO_AUTCOM = Batimento1.PESO_AUTCOM;
row6.PESO_CALC = Batimento1.PESO_CORREIOS.subtract(Batimento1.PESO_AUTCOM);
row6.VALOR_CORREIO = Batimento1.VALOR_CORREIO;
row6.VALOR_AUTCOM = Batimento1.VALOR_AUTCOM;
row6.VALOR_CALC = Batimento1.VALOR_CORREIO.subtract(Batimento1.VALOR_AUTCOM);
row6.Situacao_Atual = Batimento1.Situacao_Atual;
row6.Serv_Adicionais = Batimento1.Serv_Adicionais;
row6.GER_DTAENT = Batimento1.GER_DTAENT;
row6.PLP_DTAENV = Batimento1.PLP_DTAENV;
row6.GER_CODVEN = Batimento1.GER_CODVEN;
row6.DET_CODITE = Batimento1.DET_CODITE;
row6.DET_DESCRI = Batimento1.DET_DESCRI;
row6.ITE_EXPALT = Batimento1.ITE_EXPALT;
row6.ITE_EXPLAR = Batimento1.ITE_EXPLAR;
row6.ITE_EXPPRO = Batimento1.ITE_EXPPRO;
row6.NOM_VEN = Batimento1.NOM_VEN;

    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

Report = null;
Contador = null;
Batimento2 = null;
Contador2 = null;


// # Output table : 'Report'
Report_tmp.Destinatario = row6.Destinatario;
Report_tmp.C_Custos = row6.C_Custos;
Report_tmp.DOC = row6.DOC;
Report_tmp.Registro = row6.Registro;
Report_tmp.CEP = row6.CEP;
Report_tmp.Cartao = row6.Cartao;
Report_tmp.Servico = row6.Servico;
Report_tmp.QTDE_CORREIOS = row6.QTDE_CORREIOS;
Report_tmp.QTDE_AUTCOM = row6.QTDE_AUTCOM;
Report_tmp.PESO_CORREIOS = row6.PESO_CORREIOS;
Report_tmp.PESO_AUTCOM = row6.PESO_AUTCOM;
Report_tmp.PESO_CALC = row6.PESO_CALC;
Report_tmp.VALOR_CORREIO = row6.VALOR_CORREIO;
Report_tmp.VALOR_AUTCOM = row6.VALOR_AUTCOM;
Report_tmp.VALOR_CALC = row6.VALOR_CALC;
Report_tmp.Situacao_Atual = row6.Situacao_Atual;
Report_tmp.Serv_Adicionais = row6.Serv_Adicionais;
Report_tmp.GER_DTAENT = row6.GER_DTAENT;
Report_tmp.PLP_DTAENV = row6.PLP_DTAENV;
Report_tmp.GER_CODVEN = row6.GER_CODVEN;
Report_tmp.NOM_VEN = row6.NOM_VEN ;
Report_tmp.DET_CODITE = row6.DET_CODITE;
Report_tmp.DET_DESCRI = row6.DET_DESCRI;
Report_tmp.ITE_EXPALT = row6.ITE_EXPALT;
Report_tmp.ITE_EXPLAR = row6.ITE_EXPLAR;
Report_tmp.ITE_EXPPRO = row6.ITE_EXPPRO;
Report = Report_tmp;

// # Output table : 'Contador'
Contador_tmp.PESO_CORREIOS = row6.PESO_CORREIOS ;
Contador_tmp.PESO_AUTCOM = row6.PESO_AUTCOM ;
Contador = Contador_tmp;

// # Output table : 'Batimento2'
Batimento2_tmp.Destinatario = row6.Destinatario ;
Batimento2_tmp.PESO_CALC = row6.PESO_CALC  ;
Batimento2_tmp.VALOR_CALC = row6.VALOR_CALC  ;
Batimento2 = Batimento2_tmp;

// # Output table : 'Contador2'
Contador2_tmp.VALOR_CORREIO = row6.VALOR_CORREIO ;
Contador2_tmp.VALOR_AUTCOM = row6.VALOR_AUTCOM ;
Contador2 = Contador2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "Report"
if(Report != null) { 



	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Report"
						
						);
					}
					



    
		ReportStruct oneRow_tHashOutput_4 = new ReportStruct();
				
					oneRow_tHashOutput_4.Destinatario = Report.Destinatario;
					oneRow_tHashOutput_4.C_Custos = Report.C_Custos;
					oneRow_tHashOutput_4.DOC = Report.DOC;
					oneRow_tHashOutput_4.Registro = Report.Registro;
					oneRow_tHashOutput_4.CEP = Report.CEP;
					oneRow_tHashOutput_4.Cartao = Report.Cartao;
					oneRow_tHashOutput_4.Servico = Report.Servico;
					oneRow_tHashOutput_4.QTDE_CORREIOS = Report.QTDE_CORREIOS;
					oneRow_tHashOutput_4.QTDE_AUTCOM = Report.QTDE_AUTCOM;
					oneRow_tHashOutput_4.PESO_CORREIOS = Report.PESO_CORREIOS;
					oneRow_tHashOutput_4.PESO_AUTCOM = Report.PESO_AUTCOM;
					oneRow_tHashOutput_4.PESO_CALC = Report.PESO_CALC;
					oneRow_tHashOutput_4.VALOR_CORREIO = Report.VALOR_CORREIO;
					oneRow_tHashOutput_4.VALOR_AUTCOM = Report.VALOR_AUTCOM;
					oneRow_tHashOutput_4.VALOR_CALC = Report.VALOR_CALC;
					oneRow_tHashOutput_4.Situacao_Atual = Report.Situacao_Atual;
					oneRow_tHashOutput_4.Serv_Adicionais = Report.Serv_Adicionais;
					oneRow_tHashOutput_4.GER_DTAENT = Report.GER_DTAENT;
					oneRow_tHashOutput_4.PLP_DTAENV = Report.PLP_DTAENV;
					oneRow_tHashOutput_4.GER_CODVEN = Report.GER_CODVEN;
					oneRow_tHashOutput_4.NOM_VEN = Report.NOM_VEN;
					oneRow_tHashOutput_4.DET_CODITE = Report.DET_CODITE;
					oneRow_tHashOutput_4.DET_DESCRI = Report.DET_DESCRI;
					oneRow_tHashOutput_4.ITE_EXPALT = Report.ITE_EXPALT;
					oneRow_tHashOutput_4.ITE_EXPLAR = Report.ITE_EXPLAR;
					oneRow_tHashOutput_4.ITE_EXPPRO = Report.ITE_EXPPRO;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 
     row19 = Report;


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

diff_valor = null;
diff_pesso = null;


// # Output table : 'diff_valor'
diff_valor_tmp.VALOR_CALC = row19.VALOR_CALC;
diff_valor = diff_valor_tmp;

// # Output table : 'diff_pesso'
diff_pesso_tmp.PESO_CALC = row19.PESO_CALC;
diff_pesso = diff_pesso_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "diff_valor"
if(diff_valor != null) { 



	
	/**
	 * [tAggregateRow_5_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"diff_valor"
						
						);
					}
					
	


	operation_finder_tAggregateRow_5.hashCodeDirty = true;
	
	operation_result_tAggregateRow_5 = hash_tAggregateRow_5.get(operation_finder_tAggregateRow_5);

	

	if(operation_result_tAggregateRow_5 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_5 = new AggOperationStruct_tAggregateRow_5();

		
		
		

		hash_tAggregateRow_5.put(operation_result_tAggregateRow_5, operation_result_tAggregateRow_5);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_5.VALOR_CALC_sum == null) {
						operation_result_tAggregateRow_5.VALOR_CALC_sum = new BigDecimal(0).setScale(2);
					}
					operation_result_tAggregateRow_5.VALOR_CALC_sum = operation_result_tAggregateRow_5.VALOR_CALC_sum.add(
						new BigDecimal(
							String.valueOf(
								diff_valor.VALOR_CALC
							)
						)
					);
					


 


	tos_count_tAggregateRow_5_AGGOUT++;

/**
 * [tAggregateRow_5_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

 



/**
 * [tAggregateRow_5_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

 



/**
 * [tAggregateRow_5_AGGOUT process_data_end ] stop
 */

} // End of branch "diff_valor"




// Start of branch "diff_pesso"
if(diff_pesso != null) { 



	
	/**
	 * [tAggregateRow_6_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"diff_pesso"
						
						);
					}
					
	


	operation_finder_tAggregateRow_6.hashCodeDirty = true;
	
	operation_result_tAggregateRow_6 = hash_tAggregateRow_6.get(operation_finder_tAggregateRow_6);

	

	if(operation_result_tAggregateRow_6 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_6 = new AggOperationStruct_tAggregateRow_6();

		
		
		

		hash_tAggregateRow_6.put(operation_result_tAggregateRow_6, operation_result_tAggregateRow_6);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_6.PESO_CALC_sum == null) {
						operation_result_tAggregateRow_6.PESO_CALC_sum = new BigDecimal(0).setScale(2);
					}
					operation_result_tAggregateRow_6.PESO_CALC_sum = operation_result_tAggregateRow_6.PESO_CALC_sum.add(
						new BigDecimal(
							String.valueOf(
								diff_pesso.PESO_CALC
							)
						)
					);
					


 


	tos_count_tAggregateRow_6_AGGOUT++;

/**
 * [tAggregateRow_6_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

 



/**
 * [tAggregateRow_6_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

 



/**
 * [tAggregateRow_6_AGGOUT process_data_end ] stop
 */

} // End of branch "diff_pesso"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */

} // End of branch "Report"




// Start of branch "Contador"
if(Contador != null) { 



	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Contador"
						
						);
					}
					
	


	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_1.PESO_CORREIOS_sum == null) {
						operation_result_tAggregateRow_1.PESO_CORREIOS_sum = new BigDecimal(0).setScale(2);
					}
					operation_result_tAggregateRow_1.PESO_CORREIOS_sum = operation_result_tAggregateRow_1.PESO_CORREIOS_sum.add(
						new BigDecimal(
							String.valueOf(
								Contador.PESO_CORREIOS
							)
						)
					);
					
					if(operation_result_tAggregateRow_1.PESO_AUTCOM_sum == null) {
						operation_result_tAggregateRow_1.PESO_AUTCOM_sum = new BigDecimal(0).setScale(2);
					}
					operation_result_tAggregateRow_1.PESO_AUTCOM_sum = operation_result_tAggregateRow_1.PESO_AUTCOM_sum.add(
						new BigDecimal(
							String.valueOf(
								Contador.PESO_AUTCOM
							)
						)
					);
					


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */

} // End of branch "Contador"




// Start of branch "Batimento2"
if(Batimento2 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Batimento2"
						
						);
					}
					

    //Code generated according to input schema and output schema
row12.Destinatario = Batimento2.Destinatario;
row12.PESO_CALC = Batimento2.PESO_CALC;
row12.VALOR_CALC = Batimento2.VALOR_CALC;

if (Batimento2.VALOR_CALC.compareTo(new BigDecimal(0)) == -1) {
row12.POSITIVO = 0;
row12.EQUILIBRADO = 0;
row12.NEGATIVO = 1;
}
if (Batimento2.VALOR_CALC.compareTo(new BigDecimal(0)) == 0) {
row12.POSITIVO = 0;
row12.EQUILIBRADO = 1;
row12.NEGATIVO = 0;
}
if (Batimento2.VALOR_CALC.compareTo(new BigDecimal(0))== 1) {
row12.POSITIVO = 1;
row12.EQUILIBRADO = 0;
row12.NEGATIVO = 0;
}
    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					
	


	operation_finder_tAggregateRow_2.hashCodeDirty = true;
	
	operation_result_tAggregateRow_2 = hash_tAggregateRow_2.get(operation_finder_tAggregateRow_2);

	

	if(operation_result_tAggregateRow_2 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();

		
		
		

		hash_tAggregateRow_2.put(operation_result_tAggregateRow_2, operation_result_tAggregateRow_2);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_2.POSITIVO_sum == null) {
						operation_result_tAggregateRow_2.POSITIVO_sum = (int) 0;
					}
					
					if( row12.POSITIVO != null)
						operation_result_tAggregateRow_2.POSITIVO_sum += row12.POSITIVO;
					if(operation_result_tAggregateRow_2.EQUILIBRADO_sum == null) {
						operation_result_tAggregateRow_2.EQUILIBRADO_sum = (int) 0;
					}
					
					if( row12.EQUILIBRADO != null)
						operation_result_tAggregateRow_2.EQUILIBRADO_sum += row12.EQUILIBRADO;
					if(operation_result_tAggregateRow_2.NEGATIVO_sum == null) {
						operation_result_tAggregateRow_2.NEGATIVO_sum = (int) 0;
					}
					
					if( row12.NEGATIVO != null)
						operation_result_tAggregateRow_2.NEGATIVO_sum += row12.NEGATIVO;


 


	tos_count_tAggregateRow_2_AGGOUT++;

/**
 * [tAggregateRow_2_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "Batimento2"




// Start of branch "Contador2"
if(Contador2 != null) { 



	
	/**
	 * [tAggregateRow_3_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Contador2"
						
						);
					}
					
	


	operation_finder_tAggregateRow_3.hashCodeDirty = true;
	
	operation_result_tAggregateRow_3 = hash_tAggregateRow_3.get(operation_finder_tAggregateRow_3);

	

	if(operation_result_tAggregateRow_3 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();

		
		
		

		hash_tAggregateRow_3.put(operation_result_tAggregateRow_3, operation_result_tAggregateRow_3);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_3.VALOR_CORREIO_sum == null) {
						operation_result_tAggregateRow_3.VALOR_CORREIO_sum = new BigDecimal(0).setScale(2);
					}
					operation_result_tAggregateRow_3.VALOR_CORREIO_sum = operation_result_tAggregateRow_3.VALOR_CORREIO_sum.add(
						new BigDecimal(
							String.valueOf(
								Contador2.VALOR_CORREIO
							)
						)
					);
					
					if(operation_result_tAggregateRow_3.VALOR_AUTCOM_sum == null) {
						operation_result_tAggregateRow_3.VALOR_AUTCOM_sum = new BigDecimal(0).setScale(2);
					}
					operation_result_tAggregateRow_3.VALOR_AUTCOM_sum = operation_result_tAggregateRow_3.VALOR_AUTCOM_sum.add(
						new BigDecimal(
							String.valueOf(
								Contador2.VALOR_AUTCOM
							)
						)
					);
					


 


	tos_count_tAggregateRow_3_AGGOUT++;

/**
 * [tAggregateRow_3_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_end ] stop
 */

} // End of branch "Contador2"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "Batimento1"




// Start of branch "Reject"
if(Reject != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Reject"
						
						);
					}
					



    
		RejectStruct oneRow_tHashOutput_3 = new RejectStruct();
				
					oneRow_tHashOutput_3.Destinatario = Reject.Destinatario;
					oneRow_tHashOutput_3.C_Custos = Reject.C_Custos;
					oneRow_tHashOutput_3.Postagem = Reject.Postagem;
					oneRow_tHashOutput_3.Registro = Reject.Registro;
					oneRow_tHashOutput_3.CEP = Reject.CEP;
					oneRow_tHashOutput_3.Nota_Fiscal = Reject.Nota_Fiscal;
					oneRow_tHashOutput_3.Cartao = Reject.Cartao;
					oneRow_tHashOutput_3.Servico = Reject.Servico;
					oneRow_tHashOutput_3.Qtd = Reject.Qtd;
					oneRow_tHashOutput_3.Peso = Reject.Peso;
					oneRow_tHashOutput_3.Valor_Total = Reject.Valor_Total;
					oneRow_tHashOutput_3.Situacao_Atual = Reject.Situacao_Atual;
					oneRow_tHashOutput_3.Serv_Adicionais = Reject.Serv_Adicionais;
					oneRow_tHashOutput_3.GER_CODVEN = Reject.GER_CODVEN;
					oneRow_tHashOutput_3.NOM_VEN = Reject.NOM_VEN;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 
     row18 = Reject;


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					
	


	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
				operation_result_tAggregateRow_4.Qtd_clmCount++;
				operation_result_tAggregateRow_4.count++;
				


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "Reject"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row8 != null) {
						tHash_Lookup_row8.endGet();
					}
					globalMap.remove( "tHash_Lookup_row8" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Batimento1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Report");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"diff_valor");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_5_AGGOUT", true);
end_Hash.put("tAggregateRow_5_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_5_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tAggregateRow_5_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_5_AGGIN", false);
		start_Hash.put("tAggregateRow_5_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	
		int tos_count_tAggregateRow_5_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_5> values_tAggregateRow_5 = hash_tAggregateRow_5.values();

globalMap.put("tAggregateRow_5_NB_LINE", values_tAggregateRow_5.size());

for(AggOperationStruct_tAggregateRow_5 aggregated_row_tAggregateRow_5 : values_tAggregateRow_5) { // G_AggR_600



 



/**
 * [tAggregateRow_5_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	
row32.VALOR_CALC = aggregated_row_tAggregateRow_5.VALOR_CALC_sum;
                                	

 


	tos_count_tAggregateRow_5_AGGIN++;

/**
 * [tAggregateRow_5_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

 



/**
 * [tAggregateRow_5_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					



    
		row32Struct oneRow_tHashOutput_10 = new row32Struct();
				
					oneRow_tHashOutput_10.VALOR_CALC = row32.VALOR_CALC;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_5_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

 



/**
 * [tAggregateRow_5_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_5_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_5_AGGIN", true);
end_Hash.put("tAggregateRow_5_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_5_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */










	
	/**
	 * [tAggregateRow_6_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"diff_pesso");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_6_AGGOUT", true);
end_Hash.put("tAggregateRow_6_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_6_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_11", false);
		start_Hash.put("tHashOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tHashOutput_11 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row33Struct> tHashFile_tHashOutput_11 = null;
		String hashKey_tHashOutput_11 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_11";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_11)){
			    if(mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11) == null){
	      		    mf_tHashOutput_11.getResourceMap().put(hashKey_tHashOutput_11, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row33Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }else{
			    	tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }
			}
        int nb_line_tHashOutput_11 = 0;

 



/**
 * [tHashOutput_11 begin ] stop
 */



	
	/**
	 * [tAggregateRow_6_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_6_AGGIN", false);
		start_Hash.put("tAggregateRow_6_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	
		int tos_count_tAggregateRow_6_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_6> values_tAggregateRow_6 = hash_tAggregateRow_6.values();

globalMap.put("tAggregateRow_6_NB_LINE", values_tAggregateRow_6.size());

for(AggOperationStruct_tAggregateRow_6 aggregated_row_tAggregateRow_6 : values_tAggregateRow_6) { // G_AggR_600



 



/**
 * [tAggregateRow_6_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	
row33.PESO_CALC = aggregated_row_tAggregateRow_6.PESO_CALC_sum;
                                	

 


	tos_count_tAggregateRow_6_AGGIN++;

/**
 * [tAggregateRow_6_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

 



/**
 * [tAggregateRow_6_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_11 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					



    
		row33Struct oneRow_tHashOutput_11 = new row33Struct();
				
					oneRow_tHashOutput_11.PESO_CALC = row33.PESO_CALC;
		
        tHashFile_tHashOutput_11.put(oneRow_tHashOutput_11);
        nb_line_tHashOutput_11 ++;

 


	tos_count_tHashOutput_11++;

/**
 * [tHashOutput_11 main ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_6_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

 



/**
 * [tAggregateRow_6_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_6_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_6_AGGIN", true);
end_Hash.put("tAggregateRow_6_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_6_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_11 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
globalMap.put("tHashOutput_11_NB_LINE", nb_line_tHashOutput_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tHashOutput_11", true);
end_Hash.put("tHashOutput_11", System.currentTimeMillis());




/**
 * [tHashOutput_11 end ] stop
 */
















	
	/**
	 * [tAggregateRow_1_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Contador");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_1_AGGOUT", true);
end_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGIN", false);
		start_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	
		int tos_count_tAggregateRow_1_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_1> values_tAggregateRow_1 = hash_tAggregateRow_1.values();

globalMap.put("tAggregateRow_1_NB_LINE", values_tAggregateRow_1.size());

for(AggOperationStruct_tAggregateRow_1 aggregated_row_tAggregateRow_1 : values_tAggregateRow_1) { // G_AggR_600



 



/**
 * [tAggregateRow_1_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	
row11.PESO_CORREIOS = aggregated_row_tAggregateRow_1.PESO_CORREIOS_sum;
                                	row11.PESO_AUTCOM = aggregated_row_tAggregateRow_1.PESO_AUTCOM_sum;
                                	

 


	tos_count_tAggregateRow_1_AGGIN++;

/**
 * [tAggregateRow_1_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					



    
		row11Struct oneRow_tHashOutput_6 = new row11Struct();
				
					oneRow_tHashOutput_6.PESO_CORREIOS = row11.PESO_CORREIOS;
					oneRow_tHashOutput_6.PESO_AUTCOM = row11.PESO_AUTCOM;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_1_AGGIN", true);
end_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */










	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Batimento2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_2_AGGOUT", true);
end_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGOUT end ] stop
 */



	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida1");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida1Struct> tHashFile_tHashOutput_8 = null;
		String hashKey_tHashOutput_8 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_8";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_8)){
			    if(mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8) == null){
	      		    mf_tHashOutput_8.getResourceMap().put(hashKey_tHashOutput_8, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida1Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }else{
			    	tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }
			}
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida1Struct saida1_tmp = new saida1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGIN", false);
		start_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	
		int tos_count_tAggregateRow_2_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_2> values_tAggregateRow_2 = hash_tAggregateRow_2.values();

globalMap.put("tAggregateRow_2_NB_LINE", values_tAggregateRow_2.size());

for(AggOperationStruct_tAggregateRow_2 aggregated_row_tAggregateRow_2 : values_tAggregateRow_2) { // G_AggR_600



 



/**
 * [tAggregateRow_2_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	
row13.POSITIVO = aggregated_row_tAggregateRow_2.POSITIVO_sum;
                                	row13.EQUILIBRADO = aggregated_row_tAggregateRow_2.EQUILIBRADO_sum;
                                	row13.NEGATIVO = aggregated_row_tAggregateRow_2.NEGATIVO_sum;
                                	

 


	tos_count_tAggregateRow_2_AGGIN++;

/**
 * [tAggregateRow_2_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

saida1 = null;


// # Output table : 'saida1'
saida1_tmp.POSITIVO = row13.POSITIVO;
saida1_tmp.EQUILIBRADO = row13.EQUILIBRADO;
saida1_tmp.NEGATIVO = row13.NEGATIVO;
saida1 = saida1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "saida1"
if(saida1 != null) { 



	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida1"
						
						);
					}
					



    
		saida1Struct oneRow_tHashOutput_8 = new saida1Struct();
				
					oneRow_tHashOutput_8.POSITIVO = saida1.POSITIVO;
					oneRow_tHashOutput_8.EQUILIBRADO = saida1.EQUILIBRADO;
					oneRow_tHashOutput_8.NEGATIVO = saida1.NEGATIVO;
		
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */

} // End of branch "saida1"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_2_AGGIN", true);
end_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGIN end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida1");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */
















	
	/**
	 * [tAggregateRow_3_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Contador2");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_3_AGGOUT", true);
end_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGIN", false);
		start_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	
		int tos_count_tAggregateRow_3_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_3> values_tAggregateRow_3 = hash_tAggregateRow_3.values();

globalMap.put("tAggregateRow_3_NB_LINE", values_tAggregateRow_3.size());

for(AggOperationStruct_tAggregateRow_3 aggregated_row_tAggregateRow_3 : values_tAggregateRow_3) { // G_AggR_600



 



/**
 * [tAggregateRow_3_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	
row14.VALOR_CORREIO = aggregated_row_tAggregateRow_3.VALOR_CORREIO_sum;
                                	row14.VALOR_AUTCOM = aggregated_row_tAggregateRow_3.VALOR_AUTCOM_sum;
                                	

 


	tos_count_tAggregateRow_3_AGGIN++;

/**
 * [tAggregateRow_3_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					



    
		row14Struct oneRow_tHashOutput_7 = new row14Struct();
				
					oneRow_tHashOutput_7.VALOR_CORREIO = row14.VALOR_CORREIO;
					oneRow_tHashOutput_7.VALOR_AUTCOM = row14.VALOR_AUTCOM;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_3_AGGIN", true);
end_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */
















	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Reject");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_4_AGGOUT", true);
end_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_relatorio_conferencia_fretes_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGIN", false);
		start_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	
		int tos_count_tAggregateRow_4_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_4> values_tAggregateRow_4 = hash_tAggregateRow_4.values();

globalMap.put("tAggregateRow_4_NB_LINE", values_tAggregateRow_4.size());

for(AggOperationStruct_tAggregateRow_4 aggregated_row_tAggregateRow_4 : values_tAggregateRow_4) { // G_AggR_600



 



/**
 * [tAggregateRow_4_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

									row29.Qtd = new BigDecimal(aggregated_row_tAggregateRow_4.count);
    								row29.Qtd = new BigDecimal(aggregated_row_tAggregateRow_4.Qtd_clmCount);
								

 


	tos_count_tAggregateRow_4_AGGIN++;

/**
 * [tAggregateRow_4_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					



    
		row29Struct oneRow_tHashOutput_9 = new row29Struct();
				
					oneRow_tHashOutput_9.Qtd = row29.Qtd;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_4_AGGIN", true);
end_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tHashInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_4_AGGIN"
							globalMap.remove("tAggregateRow_4");
						
							//free memory for "tAggregateRow_3_AGGIN"
							globalMap.remove("tAggregateRow_3");
						
							//free memory for "tAggregateRow_2_AGGIN"
							globalMap.remove("tAggregateRow_2");
						
							//free memory for "tAggregateRow_1_AGGIN"
							globalMap.remove("tAggregateRow_1");
						
							//free memory for "tAggregateRow_6_AGGIN"
							globalMap.remove("tAggregateRow_6");
						
							//free memory for "tAggregateRow_5_AGGIN"
							globalMap.remove("tAggregateRow_5");
						
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row8"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGOUT";
	
	

 



/**
 * [tAggregateRow_5_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_5_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_5";
	
	currentComponent="tAggregateRow_5_AGGIN";
	
	

 



/**
 * [tAggregateRow_5_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */










	
	/**
	 * [tAggregateRow_6_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGOUT";
	
	

 



/**
 * [tAggregateRow_6_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_6_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_6";
	
	currentComponent="tAggregateRow_6_AGGIN";
	
	

 



/**
 * [tAggregateRow_6_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 finally ] stop
 */
















	
	/**
	 * [tAggregateRow_1_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */










	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */
















	
	/**
	 * [tAggregateRow_3_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */
















	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal QTDE_CORREIOS;

				public BigDecimal getQTDE_CORREIOS () {
					return this.QTDE_CORREIOS;
				}

				public Boolean QTDE_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean QTDE_CORREIOSIsKey(){
				    return false;
				}
				public Integer QTDE_CORREIOSLength(){
				    return 12;
				}
				public Integer QTDE_CORREIOSPrecision(){
				    return 2;
				}
				public String QTDE_CORREIOSDefault(){
				
					return null;
				
				}
				public String QTDE_CORREIOSComment(){
				
				    return "";
				
				}
				public String QTDE_CORREIOSPattern(){
				
					return "";
				
				}
				public String QTDE_CORREIOSOriginalDbColumnName(){
				
					return "QTDE_CORREIOS";
				
				}

				
			    public BigDecimal QTDE_AUTCOM;

				public BigDecimal getQTDE_AUTCOM () {
					return this.QTDE_AUTCOM;
				}

				public Boolean QTDE_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean QTDE_AUTCOMIsKey(){
				    return false;
				}
				public Integer QTDE_AUTCOMLength(){
				    return 12;
				}
				public Integer QTDE_AUTCOMPrecision(){
				    return 2;
				}
				public String QTDE_AUTCOMDefault(){
				
					return null;
				
				}
				public String QTDE_AUTCOMComment(){
				
				    return "";
				
				}
				public String QTDE_AUTCOMPattern(){
				
					return "";
				
				}
				public String QTDE_AUTCOMOriginalDbColumnName(){
				
					return "QTDE_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",DOC="+DOC);
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",QTDE_CORREIOS="+String.valueOf(QTDE_CORREIOS));
		sb.append(",QTDE_AUTCOM="+String.valueOf(QTDE_AUTCOM));
		sb.append(",PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtSortRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtSortRow_1> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal QTDE_CORREIOS;

				public BigDecimal getQTDE_CORREIOS () {
					return this.QTDE_CORREIOS;
				}

				public Boolean QTDE_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean QTDE_CORREIOSIsKey(){
				    return false;
				}
				public Integer QTDE_CORREIOSLength(){
				    return 12;
				}
				public Integer QTDE_CORREIOSPrecision(){
				    return 2;
				}
				public String QTDE_CORREIOSDefault(){
				
					return null;
				
				}
				public String QTDE_CORREIOSComment(){
				
				    return "";
				
				}
				public String QTDE_CORREIOSPattern(){
				
					return "";
				
				}
				public String QTDE_CORREIOSOriginalDbColumnName(){
				
					return "QTDE_CORREIOS";
				
				}

				
			    public BigDecimal QTDE_AUTCOM;

				public BigDecimal getQTDE_AUTCOM () {
					return this.QTDE_AUTCOM;
				}

				public Boolean QTDE_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean QTDE_AUTCOMIsKey(){
				    return false;
				}
				public Integer QTDE_AUTCOMLength(){
				    return 12;
				}
				public Integer QTDE_AUTCOMPrecision(){
				    return 2;
				}
				public String QTDE_AUTCOMDefault(){
				
					return null;
				
				}
				public String QTDE_AUTCOMComment(){
				
				    return "";
				
				}
				public String QTDE_AUTCOMPattern(){
				
					return "";
				
				}
				public String QTDE_AUTCOMOriginalDbColumnName(){
				
					return "QTDE_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",DOC="+DOC);
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",QTDE_CORREIOS="+String.valueOf(QTDE_CORREIOS));
		sb.append(",QTDE_AUTCOM="+String.valueOf(QTDE_AUTCOM));
		sb.append(",PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtSortRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal QTDE_CORREIOS;

				public BigDecimal getQTDE_CORREIOS () {
					return this.QTDE_CORREIOS;
				}

				public Boolean QTDE_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean QTDE_CORREIOSIsKey(){
				    return false;
				}
				public Integer QTDE_CORREIOSLength(){
				    return 12;
				}
				public Integer QTDE_CORREIOSPrecision(){
				    return 2;
				}
				public String QTDE_CORREIOSDefault(){
				
					return null;
				
				}
				public String QTDE_CORREIOSComment(){
				
				    return "";
				
				}
				public String QTDE_CORREIOSPattern(){
				
					return "";
				
				}
				public String QTDE_CORREIOSOriginalDbColumnName(){
				
					return "QTDE_CORREIOS";
				
				}

				
			    public BigDecimal QTDE_AUTCOM;

				public BigDecimal getQTDE_AUTCOM () {
					return this.QTDE_AUTCOM;
				}

				public Boolean QTDE_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean QTDE_AUTCOMIsKey(){
				    return false;
				}
				public Integer QTDE_AUTCOMLength(){
				    return 12;
				}
				public Integer QTDE_AUTCOMPrecision(){
				    return 2;
				}
				public String QTDE_AUTCOMDefault(){
				
					return null;
				
				}
				public String QTDE_AUTCOMComment(){
				
				    return "";
				
				}
				public String QTDE_AUTCOMPattern(){
				
					return "";
				
				}
				public String QTDE_AUTCOMOriginalDbColumnName(){
				
					return "QTDE_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.DOC = readString(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.QTDE_CORREIOS = (BigDecimal) dis.readObject();
					
						this.QTDE_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_DTAENT = readDate(dis);
					
					this.PLP_DTAENV = readDate(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
					this.DET_CODITE = readString(dis);
					
					this.DET_DESCRI = readString(dis);
					
						this.ITE_EXPALT = (BigDecimal) dis.readObject();
					
						this.ITE_EXPLAR = (BigDecimal) dis.readObject();
					
						this.ITE_EXPPRO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// String
				
						writeString(this.DOC,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.QTDE_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// java.util.Date
				
						writeDate(this.GER_DTAENT,dos);
					
					// java.util.Date
				
						writeDate(this.PLP_DTAENV,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
					// String
				
						writeString(this.DET_CODITE,dos);
					
					// String
				
						writeString(this.DET_DESCRI,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPALT);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPLAR);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",DOC="+DOC);
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",QTDE_CORREIOS="+String.valueOf(QTDE_CORREIOS));
		sb.append(",QTDE_AUTCOM="+String.valueOf(QTDE_AUTCOM));
		sb.append(",PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
		sb.append(",PESO_CALC="+String.valueOf(PESO_CALC));
		sb.append(",VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
		sb.append(",VALOR_CALC="+String.valueOf(VALOR_CALC));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();
row28Struct row28 = new row28Struct();




	
	/**
	 * [tSortRow_1_SortOut begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortOut", false);
		start_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tSortRow_1_SortOut = 0;
		


class Comparablerow23Struct extends row23Struct implements Comparable<Comparablerow23Struct> {
	
	public int compareTo(Comparablerow23Struct other) {

		if(this.VALOR_CALC == null && other.VALOR_CALC != null){
			return -1;
						
		}else if(this.VALOR_CALC != null && other.VALOR_CALC == null){
			return 1;
						
		}else if(this.VALOR_CALC != null && other.VALOR_CALC != null){
			if(!this.VALOR_CALC.equals(other.VALOR_CALC)){
				return this.VALOR_CALC.compareTo(other.VALOR_CALC);
			}
		}
		return 0;
	}
}

java.util.List<Comparablerow23Struct> list_tSortRow_1_SortOut = new java.util.ArrayList<Comparablerow23Struct>();


 



/**
 * [tSortRow_1_SortOut begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<ReportStruct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<ReportStruct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    ReportStruct next_tHashInput_3 = iterator_tHashInput_3.next();

	row23.Destinatario = next_tHashInput_3.Destinatario;
	row23.C_Custos = next_tHashInput_3.C_Custos;
	row23.DOC = next_tHashInput_3.DOC;
	row23.Registro = next_tHashInput_3.Registro;
	row23.CEP = next_tHashInput_3.CEP;
	row23.Cartao = next_tHashInput_3.Cartao;
	row23.Servico = next_tHashInput_3.Servico;
	row23.QTDE_CORREIOS = next_tHashInput_3.QTDE_CORREIOS;
	row23.QTDE_AUTCOM = next_tHashInput_3.QTDE_AUTCOM;
	row23.PESO_CORREIOS = next_tHashInput_3.PESO_CORREIOS;
	row23.PESO_AUTCOM = next_tHashInput_3.PESO_AUTCOM;
	row23.PESO_CALC = next_tHashInput_3.PESO_CALC;
	row23.VALOR_CORREIO = next_tHashInput_3.VALOR_CORREIO;
	row23.VALOR_AUTCOM = next_tHashInput_3.VALOR_AUTCOM;
	row23.VALOR_CALC = next_tHashInput_3.VALOR_CALC;
	row23.Situacao_Atual = next_tHashInput_3.Situacao_Atual;
	row23.Serv_Adicionais = next_tHashInput_3.Serv_Adicionais;
	row23.GER_DTAENT = next_tHashInput_3.GER_DTAENT;
	row23.PLP_DTAENV = next_tHashInput_3.PLP_DTAENV;
	row23.GER_CODVEN = next_tHashInput_3.GER_CODVEN;
	row23.NOM_VEN = next_tHashInput_3.NOM_VEN;
	row23.DET_CODITE = next_tHashInput_3.DET_CODITE;
	row23.DET_DESCRI = next_tHashInput_3.DET_DESCRI;
	row23.ITE_EXPALT = next_tHashInput_3.ITE_EXPALT;
	row23.ITE_EXPLAR = next_tHashInput_3.ITE_EXPLAR;
	row23.ITE_EXPPRO = next_tHashInput_3.ITE_EXPPRO;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					



	Comparablerow23Struct arrayRowtSortRow_1_SortOut = new Comparablerow23Struct();

	arrayRowtSortRow_1_SortOut.Destinatario = row23.Destinatario;
	arrayRowtSortRow_1_SortOut.C_Custos = row23.C_Custos;
	arrayRowtSortRow_1_SortOut.DOC = row23.DOC;
	arrayRowtSortRow_1_SortOut.Registro = row23.Registro;
	arrayRowtSortRow_1_SortOut.CEP = row23.CEP;
	arrayRowtSortRow_1_SortOut.Cartao = row23.Cartao;
	arrayRowtSortRow_1_SortOut.Servico = row23.Servico;
	arrayRowtSortRow_1_SortOut.QTDE_CORREIOS = row23.QTDE_CORREIOS;
	arrayRowtSortRow_1_SortOut.QTDE_AUTCOM = row23.QTDE_AUTCOM;
	arrayRowtSortRow_1_SortOut.PESO_CORREIOS = row23.PESO_CORREIOS;
	arrayRowtSortRow_1_SortOut.PESO_AUTCOM = row23.PESO_AUTCOM;
	arrayRowtSortRow_1_SortOut.PESO_CALC = row23.PESO_CALC;
	arrayRowtSortRow_1_SortOut.VALOR_CORREIO = row23.VALOR_CORREIO;
	arrayRowtSortRow_1_SortOut.VALOR_AUTCOM = row23.VALOR_AUTCOM;
	arrayRowtSortRow_1_SortOut.VALOR_CALC = row23.VALOR_CALC;
	arrayRowtSortRow_1_SortOut.Situacao_Atual = row23.Situacao_Atual;
	arrayRowtSortRow_1_SortOut.Serv_Adicionais = row23.Serv_Adicionais;
	arrayRowtSortRow_1_SortOut.GER_DTAENT = row23.GER_DTAENT;
	arrayRowtSortRow_1_SortOut.PLP_DTAENV = row23.PLP_DTAENV;
	arrayRowtSortRow_1_SortOut.GER_CODVEN = row23.GER_CODVEN;
	arrayRowtSortRow_1_SortOut.NOM_VEN = row23.NOM_VEN;
	arrayRowtSortRow_1_SortOut.DET_CODITE = row23.DET_CODITE;
	arrayRowtSortRow_1_SortOut.DET_DESCRI = row23.DET_DESCRI;
	arrayRowtSortRow_1_SortOut.ITE_EXPALT = row23.ITE_EXPALT;
	arrayRowtSortRow_1_SortOut.ITE_EXPLAR = row23.ITE_EXPLAR;
	arrayRowtSortRow_1_SortOut.ITE_EXPPRO = row23.ITE_EXPPRO;	
	list_tSortRow_1_SortOut.add(arrayRowtSortRow_1_SortOut);

 


	tos_count_tSortRow_1_SortOut++;

/**
 * [tSortRow_1_SortOut main ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortOut process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

row23Struct[] array_tSortRow_1_SortOut = list_tSortRow_1_SortOut.toArray(new Comparablerow23Struct[0]);

java.util.Arrays.sort(array_tSortRow_1_SortOut);

globalMap.put("tSortRow_1",array_tSortRow_1_SortOut);


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tSortRow_1_SortOut", true);
end_Hash.put("tSortRow_1_SortOut", System.currentTimeMillis());




/**
 * [tSortRow_1_SortOut end ] stop
 */


	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		String fileName_tFileOutputExcel_1=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_1.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_1.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_1.setSheet("Report");
		xlsxTool_tFileOutputExcel_1.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Destinatario");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("C_Custos");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DOC");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Registro");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CEP");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Cartao");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Servico");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("QTDE_CORREIOS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("QTDE_AUTCOM");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("PESO_CORREIOS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("PESO_AUTCOM");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("PESO_CALC");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_CORREIO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_AUTCOM");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_CALC");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Situacao_Atual");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Serv_Adicionais");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("GER_DTAENT");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("PLP_DTAENV");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("GER_CODVEN");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NOM_VEN");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DET_CODITE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DET_DESCRI");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ITE_EXPALT");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ITE_EXPLAR");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ITE_EXPPRO");
		
		nb_line_tFileOutputExcel_1++;
		headerIsInserted_tFileOutputExcel_1 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn begin ] start
	 */

	

	
		
		ok_Hash.put("tSortRow_1_SortIn", false);
		start_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	
		int tos_count_tSortRow_1_SortIn = 0;
		


row23Struct[] array_tSortRow_1_SortIn = (row23Struct[]) globalMap.remove("tSortRow_1");

int nb_line_tSortRow_1_SortIn = 0;

row23Struct current_tSortRow_1_SortIn = null;

for(int i_tSortRow_1_SortIn = 0; i_tSortRow_1_SortIn < array_tSortRow_1_SortIn.length; i_tSortRow_1_SortIn++){
	current_tSortRow_1_SortIn = array_tSortRow_1_SortIn[i_tSortRow_1_SortIn];
	row28.Destinatario = current_tSortRow_1_SortIn.Destinatario;
	row28.C_Custos = current_tSortRow_1_SortIn.C_Custos;
	row28.DOC = current_tSortRow_1_SortIn.DOC;
	row28.Registro = current_tSortRow_1_SortIn.Registro;
	row28.CEP = current_tSortRow_1_SortIn.CEP;
	row28.Cartao = current_tSortRow_1_SortIn.Cartao;
	row28.Servico = current_tSortRow_1_SortIn.Servico;
	row28.QTDE_CORREIOS = current_tSortRow_1_SortIn.QTDE_CORREIOS;
	row28.QTDE_AUTCOM = current_tSortRow_1_SortIn.QTDE_AUTCOM;
	row28.PESO_CORREIOS = current_tSortRow_1_SortIn.PESO_CORREIOS;
	row28.PESO_AUTCOM = current_tSortRow_1_SortIn.PESO_AUTCOM;
	row28.PESO_CALC = current_tSortRow_1_SortIn.PESO_CALC;
	row28.VALOR_CORREIO = current_tSortRow_1_SortIn.VALOR_CORREIO;
	row28.VALOR_AUTCOM = current_tSortRow_1_SortIn.VALOR_AUTCOM;
	row28.VALOR_CALC = current_tSortRow_1_SortIn.VALOR_CALC;
	row28.Situacao_Atual = current_tSortRow_1_SortIn.Situacao_Atual;
	row28.Serv_Adicionais = current_tSortRow_1_SortIn.Serv_Adicionais;
	row28.GER_DTAENT = current_tSortRow_1_SortIn.GER_DTAENT;
	row28.PLP_DTAENV = current_tSortRow_1_SortIn.PLP_DTAENV;
	row28.GER_CODVEN = current_tSortRow_1_SortIn.GER_CODVEN;
	row28.NOM_VEN = current_tSortRow_1_SortIn.NOM_VEN;
	row28.DET_CODITE = current_tSortRow_1_SortIn.DET_CODITE;
	row28.DET_DESCRI = current_tSortRow_1_SortIn.DET_DESCRI;
	row28.ITE_EXPALT = current_tSortRow_1_SortIn.ITE_EXPALT;
	row28.ITE_EXPLAR = current_tSortRow_1_SortIn.ITE_EXPLAR;
	row28.ITE_EXPPRO = current_tSortRow_1_SortIn.ITE_EXPPRO;
	// increase number of line sorted
	nb_line_tSortRow_1_SortIn++;

 



/**
 * [tSortRow_1_SortIn begin ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn main ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 


	tos_count_tSortRow_1_SortIn++;

/**
 * [tSortRow_1_SortIn main ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(row28.Destinatario != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.Destinatario));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.C_Custos != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.C_Custos));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.DOC != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.DOC));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.Registro != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.Registro));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.CEP != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.CEP));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.Cartao != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.Cartao));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.Servico != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.Servico));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.QTDE_CORREIOS != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.QTDE_CORREIOS.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.QTDE_AUTCOM != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.QTDE_AUTCOM.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.PESO_CORREIOS != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.PESO_CORREIOS.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.PESO_AUTCOM != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.PESO_AUTCOM.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.PESO_CALC != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.PESO_CALC.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.VALOR_CORREIO != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.VALOR_CORREIO.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.VALOR_AUTCOM != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.VALOR_AUTCOM.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.VALOR_CALC != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.VALOR_CALC.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.Situacao_Atual != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.Situacao_Atual));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.Serv_Adicionais != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.Serv_Adicionais));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.GER_DTAENT != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row28.GER_DTAENT, "yyyy-MM-dd");
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.PLP_DTAENV != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row28.PLP_DTAENV, "yyyy-MM-dd");
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.GER_CODVEN != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.GER_CODVEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.NOM_VEN != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.NOM_VEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.DET_CODITE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.DET_CODITE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.DET_DESCRI != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row28.DET_DESCRI));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.ITE_EXPALT != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.ITE_EXPALT.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.ITE_EXPLAR != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.ITE_EXPLAR.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row28.ITE_EXPPRO != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row28.ITE_EXPPRO.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */



	
	/**
	 * [tSortRow_1_SortIn process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn process_data_end ] stop
 */
	
	/**
	 * [tSortRow_1_SortIn end ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	


}

globalMap.put("tSortRow_1_SortIn_NB_LINE",nb_line_tSortRow_1_SortIn);

 

ok_Hash.put("tSortRow_1_SortIn", true);
end_Hash.put("tSortRow_1_SortIn", System.currentTimeMillis());




/**
 * [tSortRow_1_SortIn end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

							columnIndex_tFileOutputExcel_1 = 0;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 1;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 2;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 3;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 4;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 5;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 6;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 7;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 8;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 9;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 10;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 11;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 12;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 13;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 14;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 15;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 16;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 17;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 18;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 19;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 20;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 21;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 22;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 23;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 24;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
							columnIndex_tFileOutputExcel_1 = 25;
						
					xlsxTool_tFileOutputExcel_1.setColAutoSize(columnIndex_tFileOutputExcel_1);
	
	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tSortRow_1_SortIn"
							globalMap.remove("tSortRow_1");
						
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortOut finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortOut";
	
	

 



/**
 * [tSortRow_1_SortOut finally ] stop
 */

	
	/**
	 * [tSortRow_1_SortIn finally ] start
	 */

	

	
	
		currentVirtualComponent = "tSortRow_1";
	
	currentComponent="tSortRow_1_SortIn";
	
	

 



/**
 * [tSortRow_1_SortIn finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public String Destinatario;

				public String getDestinatario () {
					return this.Destinatario;
				}

				public Boolean DestinatarioIsNullable(){
				    return true;
				}
				public Boolean DestinatarioIsKey(){
				    return false;
				}
				public Integer DestinatarioLength(){
				    return null;
				}
				public Integer DestinatarioPrecision(){
				    return null;
				}
				public String DestinatarioDefault(){
				
					return null;
				
				}
				public String DestinatarioComment(){
				
				    return "";
				
				}
				public String DestinatarioPattern(){
				
					return "";
				
				}
				public String DestinatarioOriginalDbColumnName(){
				
					return "Destinatario";
				
				}

				
			    public String C_Custos;

				public String getC_Custos () {
					return this.C_Custos;
				}

				public Boolean C_CustosIsNullable(){
				    return true;
				}
				public Boolean C_CustosIsKey(){
				    return false;
				}
				public Integer C_CustosLength(){
				    return null;
				}
				public Integer C_CustosPrecision(){
				    return null;
				}
				public String C_CustosDefault(){
				
					return null;
				
				}
				public String C_CustosComment(){
				
				    return "";
				
				}
				public String C_CustosPattern(){
				
					return "";
				
				}
				public String C_CustosOriginalDbColumnName(){
				
					return "C_Custos";
				
				}

				
			    public java.util.Date Postagem;

				public java.util.Date getPostagem () {
					return this.Postagem;
				}

				public Boolean PostagemIsNullable(){
				    return true;
				}
				public Boolean PostagemIsKey(){
				    return false;
				}
				public Integer PostagemLength(){
				    return null;
				}
				public Integer PostagemPrecision(){
				    return null;
				}
				public String PostagemDefault(){
				
					return null;
				
				}
				public String PostagemComment(){
				
				    return "";
				
				}
				public String PostagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PostagemOriginalDbColumnName(){
				
					return "Postagem";
				
				}

				
			    public String Registro;

				public String getRegistro () {
					return this.Registro;
				}

				public Boolean RegistroIsNullable(){
				    return true;
				}
				public Boolean RegistroIsKey(){
				    return false;
				}
				public Integer RegistroLength(){
				    return null;
				}
				public Integer RegistroPrecision(){
				    return null;
				}
				public String RegistroDefault(){
				
					return null;
				
				}
				public String RegistroComment(){
				
				    return "";
				
				}
				public String RegistroPattern(){
				
					return "";
				
				}
				public String RegistroOriginalDbColumnName(){
				
					return "Registro";
				
				}

				
			    public String CEP;

				public String getCEP () {
					return this.CEP;
				}

				public Boolean CEPIsNullable(){
				    return true;
				}
				public Boolean CEPIsKey(){
				    return false;
				}
				public Integer CEPLength(){
				    return null;
				}
				public Integer CEPPrecision(){
				    return null;
				}
				public String CEPDefault(){
				
					return null;
				
				}
				public String CEPComment(){
				
				    return "";
				
				}
				public String CEPPattern(){
				
					return "";
				
				}
				public String CEPOriginalDbColumnName(){
				
					return "CEP";
				
				}

				
			    public String Nota_Fiscal;

				public String getNota_Fiscal () {
					return this.Nota_Fiscal;
				}

				public Boolean Nota_FiscalIsNullable(){
				    return true;
				}
				public Boolean Nota_FiscalIsKey(){
				    return false;
				}
				public Integer Nota_FiscalLength(){
				    return null;
				}
				public Integer Nota_FiscalPrecision(){
				    return null;
				}
				public String Nota_FiscalDefault(){
				
					return null;
				
				}
				public String Nota_FiscalComment(){
				
				    return "";
				
				}
				public String Nota_FiscalPattern(){
				
					return "";
				
				}
				public String Nota_FiscalOriginalDbColumnName(){
				
					return "Nota_Fiscal";
				
				}

				
			    public String Cartao;

				public String getCartao () {
					return this.Cartao;
				}

				public Boolean CartaoIsNullable(){
				    return true;
				}
				public Boolean CartaoIsKey(){
				    return false;
				}
				public Integer CartaoLength(){
				    return null;
				}
				public Integer CartaoPrecision(){
				    return null;
				}
				public String CartaoDefault(){
				
					return null;
				
				}
				public String CartaoComment(){
				
				    return "";
				
				}
				public String CartaoPattern(){
				
					return "";
				
				}
				public String CartaoOriginalDbColumnName(){
				
					return "Cartao";
				
				}

				
			    public String Servico;

				public String getServico () {
					return this.Servico;
				}

				public Boolean ServicoIsNullable(){
				    return true;
				}
				public Boolean ServicoIsKey(){
				    return false;
				}
				public Integer ServicoLength(){
				    return null;
				}
				public Integer ServicoPrecision(){
				    return null;
				}
				public String ServicoDefault(){
				
					return null;
				
				}
				public String ServicoComment(){
				
				    return "";
				
				}
				public String ServicoPattern(){
				
					return "";
				
				}
				public String ServicoOriginalDbColumnName(){
				
					return "Servico";
				
				}

				
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				
			    public BigDecimal Peso;

				public BigDecimal getPeso () {
					return this.Peso;
				}

				public Boolean PesoIsNullable(){
				    return true;
				}
				public Boolean PesoIsKey(){
				    return false;
				}
				public Integer PesoLength(){
				    return 12;
				}
				public Integer PesoPrecision(){
				    return 2;
				}
				public String PesoDefault(){
				
					return null;
				
				}
				public String PesoComment(){
				
				    return "";
				
				}
				public String PesoPattern(){
				
					return "";
				
				}
				public String PesoOriginalDbColumnName(){
				
					return "Peso";
				
				}

				
			    public BigDecimal Valor_Total;

				public BigDecimal getValor_Total () {
					return this.Valor_Total;
				}

				public Boolean Valor_TotalIsNullable(){
				    return true;
				}
				public Boolean Valor_TotalIsKey(){
				    return false;
				}
				public Integer Valor_TotalLength(){
				    return 12;
				}
				public Integer Valor_TotalPrecision(){
				    return 2;
				}
				public String Valor_TotalDefault(){
				
					return null;
				
				}
				public String Valor_TotalComment(){
				
				    return "";
				
				}
				public String Valor_TotalPattern(){
				
					return "";
				
				}
				public String Valor_TotalOriginalDbColumnName(){
				
					return "Valor_Total";
				
				}

				
			    public String Situacao_Atual;

				public String getSituacao_Atual () {
					return this.Situacao_Atual;
				}

				public Boolean Situacao_AtualIsNullable(){
				    return true;
				}
				public Boolean Situacao_AtualIsKey(){
				    return false;
				}
				public Integer Situacao_AtualLength(){
				    return null;
				}
				public Integer Situacao_AtualPrecision(){
				    return null;
				}
				public String Situacao_AtualDefault(){
				
					return null;
				
				}
				public String Situacao_AtualComment(){
				
				    return "";
				
				}
				public String Situacao_AtualPattern(){
				
					return "";
				
				}
				public String Situacao_AtualOriginalDbColumnName(){
				
					return "Situacao_Atual";
				
				}

				
			    public String Serv_Adicionais;

				public String getServ_Adicionais () {
					return this.Serv_Adicionais;
				}

				public Boolean Serv_AdicionaisIsNullable(){
				    return true;
				}
				public Boolean Serv_AdicionaisIsKey(){
				    return false;
				}
				public Integer Serv_AdicionaisLength(){
				    return null;
				}
				public Integer Serv_AdicionaisPrecision(){
				    return null;
				}
				public String Serv_AdicionaisDefault(){
				
					return null;
				
				}
				public String Serv_AdicionaisComment(){
				
				    return "";
				
				}
				public String Serv_AdicionaisPattern(){
				
					return "";
				
				}
				public String Serv_AdicionaisOriginalDbColumnName(){
				
					return "Serv_Adicionais";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.Destinatario = readString(dis);
					
					this.C_Custos = readString(dis);
					
					this.Postagem = readDate(dis);
					
					this.Registro = readString(dis);
					
					this.CEP = readString(dis);
					
					this.Nota_Fiscal = readString(dis);
					
					this.Cartao = readString(dis);
					
					this.Servico = readString(dis);
					
						this.Qtd = (BigDecimal) dis.readObject();
					
						this.Peso = (BigDecimal) dis.readObject();
					
						this.Valor_Total = (BigDecimal) dis.readObject();
					
					this.Situacao_Atual = readString(dis);
					
					this.Serv_Adicionais = readString(dis);
					
					this.GER_CODVEN = readString(dis);
					
					this.NOM_VEN = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Peso);
					
					// BigDecimal
				
       			    	dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.Destinatario,dos);
					
					// String
				
						writeString(this.C_Custos,dos);
					
					// java.util.Date
				
						writeDate(this.Postagem,dos);
					
					// String
				
						writeString(this.Registro,dos);
					
					// String
				
						writeString(this.CEP,dos);
					
					// String
				
						writeString(this.Nota_Fiscal,dos);
					
					// String
				
						writeString(this.Cartao,dos);
					
					// String
				
						writeString(this.Servico,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Peso);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Valor_Total);
					
					// String
				
						writeString(this.Situacao_Atual,dos);
					
					// String
				
						writeString(this.Serv_Adicionais,dos);
					
					// String
				
						writeString(this.GER_CODVEN,dos);
					
					// String
				
						writeString(this.NOM_VEN,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Destinatario="+Destinatario);
		sb.append(",C_Custos="+C_Custos);
		sb.append(",Postagem="+String.valueOf(Postagem));
		sb.append(",Registro="+Registro);
		sb.append(",CEP="+CEP);
		sb.append(",Nota_Fiscal="+Nota_Fiscal);
		sb.append(",Cartao="+Cartao);
		sb.append(",Servico="+Servico);
		sb.append(",Qtd="+String.valueOf(Qtd));
		sb.append(",Peso="+String.valueOf(Peso));
		sb.append(",Valor_Total="+String.valueOf(Valor_Total));
		sb.append(",Situacao_Atual="+Situacao_Atual);
		sb.append(",Serv_Adicionais="+Serv_Adicionais);
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();




	
	/**
	 * [tFileOutputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_2", false);
		start_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tFileOutputExcel_2 = 0;
		


		
		int columnIndex_tFileOutputExcel_2 = 0;
		boolean headerIsInserted_tFileOutputExcel_2 = false;
		
		
		String fileName_tFileOutputExcel_2=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_2 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_2 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_2.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_2.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_2.setSheet("Rejeitado");
		xlsxTool_tFileOutputExcel_2.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_2.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_2.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_2 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_2 = chm_tFileOutputExcel_2.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_2", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_2) {
			
				xlsxTool_tFileOutputExcel_2.prepareXlsxFile(fileName_tFileOutputExcel_2);
			
		}
		
		xlsxTool_tFileOutputExcel_2.setFont("");
		
		if (xlsxTool_tFileOutputExcel_2.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_2.addRow();
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Destinatario");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("C_Custos");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Postagem");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Registro");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CEP");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Nota_Fiscal");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Cartao");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Servico");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Qtd");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Peso");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Valor_Total");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Situacao_Atual");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Serv_Adicionais");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("GER_CODVEN");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NOM_VEN");
		
		nb_line_tFileOutputExcel_2++;
		headerIsInserted_tFileOutputExcel_2 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_2 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<RejectStruct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<RejectStruct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    RejectStruct next_tHashInput_5 = iterator_tHashInput_5.next();

	row24.Destinatario = next_tHashInput_5.Destinatario;
	row24.C_Custos = next_tHashInput_5.C_Custos;
	row24.Postagem = next_tHashInput_5.Postagem;
	row24.Registro = next_tHashInput_5.Registro;
	row24.CEP = next_tHashInput_5.CEP;
	row24.Nota_Fiscal = next_tHashInput_5.Nota_Fiscal;
	row24.Cartao = next_tHashInput_5.Cartao;
	row24.Servico = next_tHashInput_5.Servico;
	row24.Qtd = next_tHashInput_5.Qtd;
	row24.Peso = next_tHashInput_5.Peso;
	row24.Valor_Total = next_tHashInput_5.Valor_Total;
	row24.Situacao_Atual = next_tHashInput_5.Situacao_Atual;
	row24.Serv_Adicionais = next_tHashInput_5.Serv_Adicionais;
	row24.GER_CODVEN = next_tHashInput_5.GER_CODVEN;
	row24.NOM_VEN = next_tHashInput_5.NOM_VEN;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_2.addRow();
									   				
	    				if(row24.Destinatario != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.Destinatario));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.C_Custos != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.C_Custos));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Postagem != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(row24.Postagem, "yyyy-MM-dd");
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Registro != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.Registro));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.CEP != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.CEP));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Nota_Fiscal != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.Nota_Fiscal));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Cartao != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.Cartao));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Servico != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.Servico));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Qtd != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row24.Qtd.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Peso != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row24.Peso.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Valor_Total != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((row24.Valor_Total.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Situacao_Atual != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.Situacao_Atual));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.Serv_Adicionais != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.Serv_Adicionais));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.GER_CODVEN != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.GER_CODVEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(row24.NOM_VEN != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(row24.NOM_VEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_2++;
				
 


	tos_count_tFileOutputExcel_2++;

/**
 * [tFileOutputExcel_2 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

							columnIndex_tFileOutputExcel_2 = 0;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 1;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 2;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 3;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 4;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 5;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 6;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 7;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 8;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 9;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 10;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 11;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 12;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 13;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 14;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
	
	
	
			xlsxTool_tFileOutputExcel_2.writeExcel(fileName_tFileOutputExcel_2,true);
	
		if(headerIsInserted_tFileOutputExcel_2 && nb_line_tFileOutputExcel_2 > 0){
			nb_line_tFileOutputExcel_2 = nb_line_tFileOutputExcel_2 -1;
		}
		globalMap.put("tFileOutputExcel_2_NB_LINE",nb_line_tFileOutputExcel_2);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_2", true);
end_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());




/**
 * [tFileOutputExcel_2 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk12", 0, "ok");
								} 
							
							tHashInput_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class qtde_rejeitadosStruct implements routines.system.IPersistableRow<qtde_rejeitadosStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal Qtd_rejeitados;

				public BigDecimal getQtd_rejeitados () {
					return this.Qtd_rejeitados;
				}

				public Boolean Qtd_rejeitadosIsNullable(){
				    return true;
				}
				public Boolean Qtd_rejeitadosIsKey(){
				    return false;
				}
				public Integer Qtd_rejeitadosLength(){
				    return 12;
				}
				public Integer Qtd_rejeitadosPrecision(){
				    return 2;
				}
				public String Qtd_rejeitadosDefault(){
				
					return null;
				
				}
				public String Qtd_rejeitadosComment(){
				
				    return "";
				
				}
				public String Qtd_rejeitadosPattern(){
				
					return "";
				
				}
				public String Qtd_rejeitadosOriginalDbColumnName(){
				
					return "Qtd_rejeitados";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd_rejeitados = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd_rejeitados = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd_rejeitados);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd_rejeitados);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Qtd_rejeitados="+String.valueOf(Qtd_rejeitados));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(qtde_rejeitadosStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal Qtd;

				public BigDecimal getQtd () {
					return this.Qtd;
				}

				public Boolean QtdIsNullable(){
				    return true;
				}
				public Boolean QtdIsKey(){
				    return false;
				}
				public Integer QtdLength(){
				    return 12;
				}
				public Integer QtdPrecision(){
				    return 2;
				}
				public String QtdDefault(){
				
					return null;
				
				}
				public String QtdComment(){
				
				    return "";
				
				}
				public String QtdPattern(){
				
					return "";
				
				}
				public String QtdOriginalDbColumnName(){
				
					return "Qtd";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.Qtd = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.Qtd);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.Qtd);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("Qtd="+String.valueOf(Qtd));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row31Struct row31 = new row31Struct();
qtde_rejeitadosStruct qtde_rejeitados = new qtde_rejeitadosStruct();





	
	/**
	 * [tFileOutputExcel_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_6", false);
		start_Hash.put("tFileOutputExcel_6", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"qtde_rejeitados");
					}
				
		int tos_count_tFileOutputExcel_6 = 0;
		


		
		int columnIndex_tFileOutputExcel_6 = 0;
		boolean headerIsInserted_tFileOutputExcel_6 = false;
		
		
		String fileName_tFileOutputExcel_6=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_6 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_6 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_6.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_6.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_6.setSheet("Batimento");
		xlsxTool_tFileOutputExcel_6.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_6.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_6.setXY(true,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_6 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_6 = chm_tFileOutputExcel_6.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_6", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_6) {
			
				xlsxTool_tFileOutputExcel_6.prepareXlsxFile(fileName_tFileOutputExcel_6);
			
		}
		
		xlsxTool_tFileOutputExcel_6.setFont("");
		
		xlsxTool_tFileOutputExcel_6.addRow();
		
		xlsxTool_tFileOutputExcel_6.addCellValue("Qtd_rejeitados");
		
		nb_line_tFileOutputExcel_6++;
		headerIsInserted_tFileOutputExcel_6 = true;
		

 



/**
 * [tFileOutputExcel_6 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
qtde_rejeitadosStruct qtde_rejeitados_tmp = new qtde_rejeitadosStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row29Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row29Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row31.Qtd = next_tHashInput_9.Qtd;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

qtde_rejeitados = null;


// # Output table : 'qtde_rejeitados'
qtde_rejeitados_tmp.Qtd_rejeitados = row31.Qtd;
qtde_rejeitados = qtde_rejeitados_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "qtde_rejeitados"
if(qtde_rejeitados != null) { 



	
	/**
	 * [tFileOutputExcel_6 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"qtde_rejeitados"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_6.addRow();
									   				
	    				if(qtde_rejeitados.Qtd_rejeitados != null) {
    						
							xlsxTool_tFileOutputExcel_6.addCellValue((qtde_rejeitados.Qtd_rejeitados.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_6.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_6++;
				
 


	tos_count_tFileOutputExcel_6++;

/**
 * [tFileOutputExcel_6 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_6";
	
	

 



/**
 * [tFileOutputExcel_6 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_6";
	
	

 



/**
 * [tFileOutputExcel_6 process_data_end ] stop
 */

} // End of branch "qtde_rejeitados"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_6 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_6";
	
	

							columnIndex_tFileOutputExcel_6 = 0;
						
					xlsxTool_tFileOutputExcel_6.setColAutoSize(columnIndex_tFileOutputExcel_6);
	
	
	
	
			xlsxTool_tFileOutputExcel_6.writeExcel(fileName_tFileOutputExcel_6,true);
	
		if(headerIsInserted_tFileOutputExcel_6 && nb_line_tFileOutputExcel_6 > 0){
			nb_line_tFileOutputExcel_6 = nb_line_tFileOutputExcel_6 -1;
		}
		globalMap.put("tFileOutputExcel_6_NB_LINE",nb_line_tFileOutputExcel_6);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"qtde_rejeitados");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_6", true);
end_Hash.put("tFileOutputExcel_6", System.currentTimeMillis());




/**
 * [tFileOutputExcel_6 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tHashInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_6 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_6";
	
	

 



/**
 * [tFileOutputExcel_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CORREIOS;

				public BigDecimal getPESO_CORREIOS () {
					return this.PESO_CORREIOS;
				}

				public Boolean PESO_CORREIOSIsNullable(){
				    return true;
				}
				public Boolean PESO_CORREIOSIsKey(){
				    return false;
				}
				public Integer PESO_CORREIOSLength(){
				    return 12;
				}
				public Integer PESO_CORREIOSPrecision(){
				    return 2;
				}
				public String PESO_CORREIOSDefault(){
				
					return null;
				
				}
				public String PESO_CORREIOSComment(){
				
				    return "";
				
				}
				public String PESO_CORREIOSPattern(){
				
					return "";
				
				}
				public String PESO_CORREIOSOriginalDbColumnName(){
				
					return "PESO_CORREIOS";
				
				}

				
			    public BigDecimal PESO_AUTCOM;

				public BigDecimal getPESO_AUTCOM () {
					return this.PESO_AUTCOM;
				}

				public Boolean PESO_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean PESO_AUTCOMIsKey(){
				    return false;
				}
				public Integer PESO_AUTCOMLength(){
				    return 12;
				}
				public Integer PESO_AUTCOMPrecision(){
				    return 2;
				}
				public String PESO_AUTCOMDefault(){
				
					return null;
				
				}
				public String PESO_AUTCOMComment(){
				
				    return "";
				
				}
				public String PESO_AUTCOMPattern(){
				
					return "";
				
				}
				public String PESO_AUTCOMOriginalDbColumnName(){
				
					return "PESO_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CORREIOS = (BigDecimal) dis.readObject();
					
						this.PESO_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CORREIOS);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CORREIOS="+String.valueOf(PESO_CORREIOS));
		sb.append(",PESO_AUTCOM="+String.valueOf(PESO_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();




	
	/**
	 * [tFileOutputExcel_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_3", false);
		start_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tFileOutputExcel_3 = 0;
		


		
		int columnIndex_tFileOutputExcel_3 = 0;
		boolean headerIsInserted_tFileOutputExcel_3 = false;
		
		
		String fileName_tFileOutputExcel_3=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_3 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_3 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_3.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_3.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_3.setSheet("Batimento");
		xlsxTool_tFileOutputExcel_3.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_3.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_3.setXY(true,1,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_3 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_3 = chm_tFileOutputExcel_3.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_3", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_3) {
			
				xlsxTool_tFileOutputExcel_3.prepareXlsxFile(fileName_tFileOutputExcel_3);
			
		}
		
		xlsxTool_tFileOutputExcel_3.setFont("");
		
		xlsxTool_tFileOutputExcel_3.addRow();
		
		xlsxTool_tFileOutputExcel_3.addCellValue("PESO_CORREIOS");
		
		xlsxTool_tFileOutputExcel_3.addCellValue("PESO_AUTCOM");
		
		nb_line_tFileOutputExcel_3++;
		headerIsInserted_tFileOutputExcel_3 = true;
		

 



/**
 * [tFileOutputExcel_3 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row11Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row11Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row11Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row25.PESO_CORREIOS = next_tHashInput_6.PESO_CORREIOS;
	row25.PESO_AUTCOM = next_tHashInput_6.PESO_AUTCOM;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_3.addRow();
									   				
	    				if(row25.PESO_CORREIOS != null) {
    						
							xlsxTool_tFileOutputExcel_3.addCellValue((row25.PESO_CORREIOS.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
									   				
	    				if(row25.PESO_AUTCOM != null) {
    						
							xlsxTool_tFileOutputExcel_3.addCellValue((row25.PESO_AUTCOM.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_3.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_3++;
				
 


	tos_count_tFileOutputExcel_3++;

/**
 * [tFileOutputExcel_3 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

							columnIndex_tFileOutputExcel_3 = 0;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
							columnIndex_tFileOutputExcel_3 = 1;
						
					xlsxTool_tFileOutputExcel_3.setColAutoSize(columnIndex_tFileOutputExcel_3);
	
	
	
	
			xlsxTool_tFileOutputExcel_3.writeExcel(fileName_tFileOutputExcel_3,true);
	
		if(headerIsInserted_tFileOutputExcel_3 && nb_line_tFileOutputExcel_3 > 0){
			nb_line_tFileOutputExcel_3 = nb_line_tFileOutputExcel_3 -1;
		}
		globalMap.put("tFileOutputExcel_3_NB_LINE",nb_line_tFileOutputExcel_3);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_3", true);
end_Hash.put("tFileOutputExcel_3", System.currentTimeMillis());




/**
 * [tFileOutputExcel_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tHashInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_3 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_3";
	
	

 



/**
 * [tFileOutputExcel_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class agr_pesoStruct implements routines.system.IPersistableRow<agr_pesoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal DIFERENCA_PESO;

				public BigDecimal getDIFERENCA_PESO () {
					return this.DIFERENCA_PESO;
				}

				public Boolean DIFERENCA_PESOIsNullable(){
				    return true;
				}
				public Boolean DIFERENCA_PESOIsKey(){
				    return false;
				}
				public Integer DIFERENCA_PESOLength(){
				    return 12;
				}
				public Integer DIFERENCA_PESOPrecision(){
				    return 2;
				}
				public String DIFERENCA_PESODefault(){
				
					return null;
				
				}
				public String DIFERENCA_PESOComment(){
				
				    return "";
				
				}
				public String DIFERENCA_PESOPattern(){
				
					return "";
				
				}
				public String DIFERENCA_PESOOriginalDbColumnName(){
				
					return "DIFERENCA_PESO";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.DIFERENCA_PESO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.DIFERENCA_PESO = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DIFERENCA_PESO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIFERENCA_PESO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DIFERENCA_PESO="+String.valueOf(DIFERENCA_PESO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(agr_pesoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal PESO_CALC;

				public BigDecimal getPESO_CALC () {
					return this.PESO_CALC;
				}

				public Boolean PESO_CALCIsNullable(){
				    return true;
				}
				public Boolean PESO_CALCIsKey(){
				    return false;
				}
				public Integer PESO_CALCLength(){
				    return 12;
				}
				public Integer PESO_CALCPrecision(){
				    return 2;
				}
				public String PESO_CALCDefault(){
				
					return null;
				
				}
				public String PESO_CALCComment(){
				
				    return "";
				
				}
				public String PESO_CALCPattern(){
				
					return "";
				
				}
				public String PESO_CALCOriginalDbColumnName(){
				
					return "PESO_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.PESO_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PESO_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PESO_CALC="+String.valueOf(PESO_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();
agr_pesoStruct agr_peso = new agr_pesoStruct();





	
	/**
	 * [tFileOutputExcel_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_7", false);
		start_Hash.put("tFileOutputExcel_7", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"agr_peso");
					}
				
		int tos_count_tFileOutputExcel_7 = 0;
		


		
		int columnIndex_tFileOutputExcel_7 = 0;
		boolean headerIsInserted_tFileOutputExcel_7 = false;
		
		
		String fileName_tFileOutputExcel_7=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_7 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_7 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_7.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_7.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_7.setSheet("Batimento");
		xlsxTool_tFileOutputExcel_7.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_7.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_7.setXY(true,3,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_7 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_7 = chm_tFileOutputExcel_7.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_7", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_7) {
			
				xlsxTool_tFileOutputExcel_7.prepareXlsxFile(fileName_tFileOutputExcel_7);
			
		}
		
		xlsxTool_tFileOutputExcel_7.setFont("");
		
		xlsxTool_tFileOutputExcel_7.addRow();
		
		xlsxTool_tFileOutputExcel_7.addCellValue("DIFERENCA_PESO");
		
		nb_line_tFileOutputExcel_7++;
		headerIsInserted_tFileOutputExcel_7 = true;
		

 



/**
 * [tFileOutputExcel_7 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
agr_pesoStruct agr_peso_tmp = new agr_pesoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row33Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_11");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row33Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    row33Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row36.PESO_CALC = next_tHashInput_10.PESO_CALC;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

agr_peso = null;


// # Output table : 'agr_peso'
agr_peso_tmp.DIFERENCA_PESO = row36.PESO_CALC;
agr_peso = agr_peso_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "agr_peso"
if(agr_peso != null) { 



	
	/**
	 * [tFileOutputExcel_7 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"agr_peso"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_7.addRow();
									   				
	    				if(agr_peso.DIFERENCA_PESO != null) {
    						
							xlsxTool_tFileOutputExcel_7.addCellValue((agr_peso.DIFERENCA_PESO.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_7.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_7++;
				
 


	tos_count_tFileOutputExcel_7++;

/**
 * [tFileOutputExcel_7 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

 



/**
 * [tFileOutputExcel_7 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

 



/**
 * [tFileOutputExcel_7 process_data_end ] stop
 */

} // End of branch "agr_peso"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_11");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_7 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

							columnIndex_tFileOutputExcel_7 = 0;
						
					xlsxTool_tFileOutputExcel_7.setColAutoSize(columnIndex_tFileOutputExcel_7);
	
	
	
	
			xlsxTool_tFileOutputExcel_7.writeExcel(fileName_tFileOutputExcel_7,true);
	
		if(headerIsInserted_tFileOutputExcel_7 && nb_line_tFileOutputExcel_7 > 0){
			nb_line_tFileOutputExcel_7 = nb_line_tFileOutputExcel_7 -1;
		}
		globalMap.put("tFileOutputExcel_7_NB_LINE",nb_line_tFileOutputExcel_7);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"agr_peso");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_7", true);
end_Hash.put("tFileOutputExcel_7", System.currentTimeMillis());




/**
 * [tFileOutputExcel_7 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tHashInput_7Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_7 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_7";
	
	

 



/**
 * [tFileOutputExcel_7 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CORREIO;

				public BigDecimal getVALOR_CORREIO () {
					return this.VALOR_CORREIO;
				}

				public Boolean VALOR_CORREIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_CORREIOIsKey(){
				    return false;
				}
				public Integer VALOR_CORREIOLength(){
				    return 12;
				}
				public Integer VALOR_CORREIOPrecision(){
				    return 2;
				}
				public String VALOR_CORREIODefault(){
				
					return null;
				
				}
				public String VALOR_CORREIOComment(){
				
				    return "";
				
				}
				public String VALOR_CORREIOPattern(){
				
					return "";
				
				}
				public String VALOR_CORREIOOriginalDbColumnName(){
				
					return "VALOR_CORREIO";
				
				}

				
			    public BigDecimal VALOR_AUTCOM;

				public BigDecimal getVALOR_AUTCOM () {
					return this.VALOR_AUTCOM;
				}

				public Boolean VALOR_AUTCOMIsNullable(){
				    return true;
				}
				public Boolean VALOR_AUTCOMIsKey(){
				    return false;
				}
				public Integer VALOR_AUTCOMLength(){
				    return 12;
				}
				public Integer VALOR_AUTCOMPrecision(){
				    return 2;
				}
				public String VALOR_AUTCOMDefault(){
				
					return null;
				
				}
				public String VALOR_AUTCOMComment(){
				
				    return "";
				
				}
				public String VALOR_AUTCOMPattern(){
				
					return "";
				
				}
				public String VALOR_AUTCOMOriginalDbColumnName(){
				
					return "VALOR_AUTCOM";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CORREIO = (BigDecimal) dis.readObject();
					
						this.VALOR_AUTCOM = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CORREIO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_AUTCOM);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CORREIO="+String.valueOf(VALOR_CORREIO));
		sb.append(",VALOR_AUTCOM="+String.valueOf(VALOR_AUTCOM));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row26Struct row26 = new row26Struct();




	
	/**
	 * [tFileOutputExcel_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_4", false);
		start_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tFileOutputExcel_4 = 0;
		


		
		int columnIndex_tFileOutputExcel_4 = 0;
		boolean headerIsInserted_tFileOutputExcel_4 = false;
		
		
		String fileName_tFileOutputExcel_4=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_4 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_4 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_4.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_4.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_4.setSheet("Batimento");
		xlsxTool_tFileOutputExcel_4.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_4.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_4.setXY(true,4,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_4 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_4 = chm_tFileOutputExcel_4.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_4", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_4) {
			
				xlsxTool_tFileOutputExcel_4.prepareXlsxFile(fileName_tFileOutputExcel_4);
			
		}
		
		xlsxTool_tFileOutputExcel_4.setFont("");
		
		xlsxTool_tFileOutputExcel_4.addRow();
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VALOR_CORREIO");
		
		xlsxTool_tFileOutputExcel_4.addCellValue("VALOR_AUTCOM");
		
		nb_line_tFileOutputExcel_4++;
		headerIsInserted_tFileOutputExcel_4 = true;
		

 



/**
 * [tFileOutputExcel_4 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row14Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row14Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row26.VALOR_CORREIO = next_tHashInput_7.VALOR_CORREIO;
	row26.VALOR_AUTCOM = next_tHashInput_7.VALOR_AUTCOM;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_4.addRow();
									   				
	    				if(row26.VALOR_CORREIO != null) {
    						
							xlsxTool_tFileOutputExcel_4.addCellValue((row26.VALOR_CORREIO.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
									   				
	    				if(row26.VALOR_AUTCOM != null) {
    						
							xlsxTool_tFileOutputExcel_4.addCellValue((row26.VALOR_AUTCOM.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_4.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_4++;
				
 


	tos_count_tFileOutputExcel_4++;

/**
 * [tFileOutputExcel_4 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

							columnIndex_tFileOutputExcel_4 = 0;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
							columnIndex_tFileOutputExcel_4 = 1;
						
					xlsxTool_tFileOutputExcel_4.setColAutoSize(columnIndex_tFileOutputExcel_4);
	
	
	
	
			xlsxTool_tFileOutputExcel_4.writeExcel(fileName_tFileOutputExcel_4,true);
	
		if(headerIsInserted_tFileOutputExcel_4 && nb_line_tFileOutputExcel_4 > 0){
			nb_line_tFileOutputExcel_4 = nb_line_tFileOutputExcel_4 -1;
		}
		globalMap.put("tFileOutputExcel_4_NB_LINE",nb_line_tFileOutputExcel_4);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_4", true);
end_Hash.put("tFileOutputExcel_4", System.currentTimeMillis());




/**
 * [tFileOutputExcel_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_7:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk19", 0, "ok");
								} 
							
							tHashInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_4 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_4";
	
	

 



/**
 * [tFileOutputExcel_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class Agr_valorStruct implements routines.system.IPersistableRow<Agr_valorStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal DIFERENCA_VALOR;

				public BigDecimal getDIFERENCA_VALOR () {
					return this.DIFERENCA_VALOR;
				}

				public Boolean DIFERENCA_VALORIsNullable(){
				    return true;
				}
				public Boolean DIFERENCA_VALORIsKey(){
				    return false;
				}
				public Integer DIFERENCA_VALORLength(){
				    return 12;
				}
				public Integer DIFERENCA_VALORPrecision(){
				    return 2;
				}
				public String DIFERENCA_VALORDefault(){
				
					return null;
				
				}
				public String DIFERENCA_VALORComment(){
				
				    return "";
				
				}
				public String DIFERENCA_VALORPattern(){
				
					return "";
				
				}
				public String DIFERENCA_VALOROriginalDbColumnName(){
				
					return "DIFERENCA_VALOR";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.DIFERENCA_VALOR = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.DIFERENCA_VALOR = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.DIFERENCA_VALOR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.DIFERENCA_VALOR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("DIFERENCA_VALOR="+String.valueOf(DIFERENCA_VALOR));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Agr_valorStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public BigDecimal VALOR_CALC;

				public BigDecimal getVALOR_CALC () {
					return this.VALOR_CALC;
				}

				public Boolean VALOR_CALCIsNullable(){
				    return true;
				}
				public Boolean VALOR_CALCIsKey(){
				    return false;
				}
				public Integer VALOR_CALCLength(){
				    return 12;
				}
				public Integer VALOR_CALCPrecision(){
				    return 2;
				}
				public String VALOR_CALCDefault(){
				
					return null;
				
				}
				public String VALOR_CALCComment(){
				
				    return "";
				
				}
				public String VALOR_CALCPattern(){
				
					return "";
				
				}
				public String VALOR_CALCOriginalDbColumnName(){
				
					return "VALOR_CALC";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.VALOR_CALC = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VALOR_CALC);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("VALOR_CALC="+String.valueOf(VALOR_CALC));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row37Struct row37 = new row37Struct();
Agr_valorStruct Agr_valor = new Agr_valorStruct();





	
	/**
	 * [tFileOutputExcel_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_8", false);
		start_Hash.put("tFileOutputExcel_8", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Agr_valor");
					}
				
		int tos_count_tFileOutputExcel_8 = 0;
		


		
		int columnIndex_tFileOutputExcel_8 = 0;
		boolean headerIsInserted_tFileOutputExcel_8 = false;
		
		
		String fileName_tFileOutputExcel_8=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_8 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_8 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_8.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_8.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_8.setSheet("Batimento");
		xlsxTool_tFileOutputExcel_8.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_8.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_8.setXY(true,6,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_8 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_8 = chm_tFileOutputExcel_8.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_8", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_8) {
			
				xlsxTool_tFileOutputExcel_8.prepareXlsxFile(fileName_tFileOutputExcel_8);
			
		}
		
		xlsxTool_tFileOutputExcel_8.setFont("");
		
		xlsxTool_tFileOutputExcel_8.addRow();
		
		xlsxTool_tFileOutputExcel_8.addCellValue("DIFERENCA_VALOR");
		
		nb_line_tFileOutputExcel_8++;
		headerIsInserted_tFileOutputExcel_8 = true;
		

 



/**
 * [tFileOutputExcel_8 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
Agr_valorStruct Agr_valor_tmp = new Agr_valorStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row32Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row32Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    row32Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row37.VALOR_CALC = next_tHashInput_11.VALOR_CALC;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

Agr_valor = null;


// # Output table : 'Agr_valor'
Agr_valor_tmp.DIFERENCA_VALOR = row37.VALOR_CALC;
Agr_valor = Agr_valor_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "Agr_valor"
if(Agr_valor != null) { 



	
	/**
	 * [tFileOutputExcel_8 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Agr_valor"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_8.addRow();
									   				
	    				if(Agr_valor.DIFERENCA_VALOR != null) {
    						
							xlsxTool_tFileOutputExcel_8.addCellValue((Agr_valor.DIFERENCA_VALOR.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_8.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_8++;
				
 


	tos_count_tFileOutputExcel_8++;

/**
 * [tFileOutputExcel_8 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

 



/**
 * [tFileOutputExcel_8 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

 



/**
 * [tFileOutputExcel_8 process_data_end ] stop
 */

} // End of branch "Agr_valor"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_8 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

							columnIndex_tFileOutputExcel_8 = 0;
						
					xlsxTool_tFileOutputExcel_8.setColAutoSize(columnIndex_tFileOutputExcel_8);
	
	
	
	
			xlsxTool_tFileOutputExcel_8.writeExcel(fileName_tFileOutputExcel_8,true);
	
		if(headerIsInserted_tFileOutputExcel_8 && nb_line_tFileOutputExcel_8 > 0){
			nb_line_tFileOutputExcel_8 = nb_line_tFileOutputExcel_8 -1;
		}
		globalMap.put("tFileOutputExcel_8_NB_LINE",nb_line_tFileOutputExcel_8);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Agr_valor");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_8", true);
end_Hash.put("tFileOutputExcel_8", System.currentTimeMillis());




/**
 * [tFileOutputExcel_8 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tHashInput_8Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_8 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_8";
	
	

 



/**
 * [tFileOutputExcel_8 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];

	
			    public Integer POSITIVO;

				public Integer getPOSITIVO () {
					return this.POSITIVO;
				}

				public Boolean POSITIVOIsNullable(){
				    return true;
				}
				public Boolean POSITIVOIsKey(){
				    return false;
				}
				public Integer POSITIVOLength(){
				    return null;
				}
				public Integer POSITIVOPrecision(){
				    return null;
				}
				public String POSITIVODefault(){
				
					return null;
				
				}
				public String POSITIVOComment(){
				
				    return "";
				
				}
				public String POSITIVOPattern(){
				
					return "";
				
				}
				public String POSITIVOOriginalDbColumnName(){
				
					return "POSITIVO";
				
				}

				
			    public Integer EQUILIBRADO;

				public Integer getEQUILIBRADO () {
					return this.EQUILIBRADO;
				}

				public Boolean EQUILIBRADOIsNullable(){
				    return true;
				}
				public Boolean EQUILIBRADOIsKey(){
				    return false;
				}
				public Integer EQUILIBRADOLength(){
				    return null;
				}
				public Integer EQUILIBRADOPrecision(){
				    return null;
				}
				public String EQUILIBRADODefault(){
				
					return null;
				
				}
				public String EQUILIBRADOComment(){
				
				    return "";
				
				}
				public String EQUILIBRADOPattern(){
				
					return "";
				
				}
				public String EQUILIBRADOOriginalDbColumnName(){
				
					return "EQUILIBRADO";
				
				}

				
			    public Integer NEGATIVO;

				public Integer getNEGATIVO () {
					return this.NEGATIVO;
				}

				public Boolean NEGATIVOIsNullable(){
				    return true;
				}
				public Boolean NEGATIVOIsKey(){
				    return false;
				}
				public Integer NEGATIVOLength(){
				    return null;
				}
				public Integer NEGATIVOPrecision(){
				    return null;
				}
				public String NEGATIVODefault(){
				
					return null;
				
				}
				public String NEGATIVOComment(){
				
				    return "";
				
				}
				public String NEGATIVOPattern(){
				
					return "";
				
				}
				public String NEGATIVOOriginalDbColumnName(){
				
					return "NEGATIVO";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
						this.POSITIVO = readInteger(dis);
					
						this.EQUILIBRADO = readInteger(dis);
					
						this.NEGATIVO = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.POSITIVO,dos);
					
					// Integer
				
						writeInteger(this.EQUILIBRADO,dos);
					
					// Integer
				
						writeInteger(this.NEGATIVO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("POSITIVO="+String.valueOf(POSITIVO));
		sb.append(",EQUILIBRADO="+String.valueOf(EQUILIBRADO));
		sb.append(",NEGATIVO="+String.valueOf(NEGATIVO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();




	
	/**
	 * [tFileOutputExcel_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_5", false);
		start_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tFileOutputExcel_5 = 0;
		


		
		int columnIndex_tFileOutputExcel_5 = 0;
		boolean headerIsInserted_tFileOutputExcel_5 = false;
		
		
		String fileName_tFileOutputExcel_5=""+context.Pasta_Rede+"/Validacao/"+context.data_atual+"/"+context.Arquivo+"/Conferencia_Frete_"+context.data_atual1+".xls";
		int nb_line_tFileOutputExcel_5 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_5 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_5.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_5.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_5.setSheet("Batimento");
		xlsxTool_tFileOutputExcel_5.setAppend(true,true, false);
		xlsxTool_tFileOutputExcel_5.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_5.setXY(true,7,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_5 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_5 = chm_tFileOutputExcel_5.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_5", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_5) {
			
				xlsxTool_tFileOutputExcel_5.prepareXlsxFile(fileName_tFileOutputExcel_5);
			
		}
		
		xlsxTool_tFileOutputExcel_5.setFont("");
		
		xlsxTool_tFileOutputExcel_5.addRow();
		
		xlsxTool_tFileOutputExcel_5.addCellValue("POSITIVO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("EQUILIBRADO");
		
		xlsxTool_tFileOutputExcel_5.addCellValue("NEGATIVO");
		
		nb_line_tFileOutputExcel_5++;
		headerIsInserted_tFileOutputExcel_5 = true;
		

 



/**
 * [tFileOutputExcel_5 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida1Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<saida1Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    saida1Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row27.POSITIVO = next_tHashInput_8.POSITIVO;
	row27.EQUILIBRADO = next_tHashInput_8.EQUILIBRADO;
	row27.NEGATIVO = next_tHashInput_8.NEGATIVO;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_5.addRow();
									   				
	    				if(row27.POSITIVO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(Double.parseDouble(String.valueOf(row27.POSITIVO)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row27.EQUILIBRADO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(Double.parseDouble(String.valueOf(row27.EQUILIBRADO)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
									   				
	    				if(row27.NEGATIVO != null) {
    				
							xlsxTool_tFileOutputExcel_5.addCellValue(Double.parseDouble(String.valueOf(row27.NEGATIVO)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_5.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_5++;
				
 


	tos_count_tFileOutputExcel_5++;

/**
 * [tFileOutputExcel_5 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

							columnIndex_tFileOutputExcel_5 = 0;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 1;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
							columnIndex_tFileOutputExcel_5 = 2;
						
					xlsxTool_tFileOutputExcel_5.setColAutoSize(columnIndex_tFileOutputExcel_5);
	
	
	
	
			xlsxTool_tFileOutputExcel_5.writeExcel(fileName_tFileOutputExcel_5,true);
	
		if(headerIsInserted_tFileOutputExcel_5 && nb_line_tFileOutputExcel_5 > 0){
			nb_line_tFileOutputExcel_5 = nb_line_tFileOutputExcel_5 -1;
		}
		globalMap.put("tFileOutputExcel_5_NB_LINE",nb_line_tFileOutputExcel_5);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_5", true);
end_Hash.put("tFileOutputExcel_5", System.currentTimeMillis());




/**
 * [tFileOutputExcel_5 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_8:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_5 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_5";
	
	

 



/**
 * [tFileOutputExcel_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableComparableLookupRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public java.util.Date PLP_DTAENV;

				public java.util.Date getPLP_DTAENV () {
					return this.PLP_DTAENV;
				}

				public Boolean PLP_DTAENVIsNullable(){
				    return true;
				}
				public Boolean PLP_DTAENVIsKey(){
				    return false;
				}
				public Integer PLP_DTAENVLength(){
				    return null;
				}
				public Integer PLP_DTAENVPrecision(){
				    return null;
				}
				public String PLP_DTAENVDefault(){
				
					return null;
				
				}
				public String PLP_DTAENVComment(){
				
				    return "";
				
				}
				public String PLP_DTAENVPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String PLP_DTAENVOriginalDbColumnName(){
				
					return "PLP_DTAENV";
				
				}

				
			    public String OBJ;

				public String getOBJ () {
					return this.OBJ;
				}

				public Boolean OBJIsNullable(){
				    return true;
				}
				public Boolean OBJIsKey(){
				    return false;
				}
				public Integer OBJLength(){
				    return null;
				}
				public Integer OBJPrecision(){
				    return null;
				}
				public String OBJDefault(){
				
					return null;
				
				}
				public String OBJComment(){
				
				    return "";
				
				}
				public String OBJPattern(){
				
					return "";
				
				}
				public String OBJOriginalDbColumnName(){
				
					return "OBJ";
				
				}

				
			    public java.util.Date GER_DTAENT;

				public java.util.Date getGER_DTAENT () {
					return this.GER_DTAENT;
				}

				public Boolean GER_DTAENTIsNullable(){
				    return true;
				}
				public Boolean GER_DTAENTIsKey(){
				    return false;
				}
				public Integer GER_DTAENTLength(){
				    return null;
				}
				public Integer GER_DTAENTPrecision(){
				    return null;
				}
				public String GER_DTAENTDefault(){
				
					return null;
				
				}
				public String GER_DTAENTComment(){
				
				    return "";
				
				}
				public String GER_DTAENTPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String GER_DTAENTOriginalDbColumnName(){
				
					return "GER_DTAENT";
				
				}

				
			    public String DOC;

				public String getDOC () {
					return this.DOC;
				}

				public Boolean DOCIsNullable(){
				    return true;
				}
				public Boolean DOCIsKey(){
				    return false;
				}
				public Integer DOCLength(){
				    return null;
				}
				public Integer DOCPrecision(){
				    return null;
				}
				public String DOCDefault(){
				
					return null;
				
				}
				public String DOCComment(){
				
				    return "";
				
				}
				public String DOCPattern(){
				
					return "";
				
				}
				public String DOCOriginalDbColumnName(){
				
					return "DOC";
				
				}

				
			    public String GER_CODVEN;

				public String getGER_CODVEN () {
					return this.GER_CODVEN;
				}

				public Boolean GER_CODVENIsNullable(){
				    return true;
				}
				public Boolean GER_CODVENIsKey(){
				    return false;
				}
				public Integer GER_CODVENLength(){
				    return null;
				}
				public Integer GER_CODVENPrecision(){
				    return null;
				}
				public String GER_CODVENDefault(){
				
					return null;
				
				}
				public String GER_CODVENComment(){
				
				    return "";
				
				}
				public String GER_CODVENPattern(){
				
					return "";
				
				}
				public String GER_CODVENOriginalDbColumnName(){
				
					return "GER_CODVEN";
				
				}

				
			    public String NOM_VEN;

				public String getNOM_VEN () {
					return this.NOM_VEN;
				}

				public Boolean NOM_VENIsNullable(){
				    return true;
				}
				public Boolean NOM_VENIsKey(){
				    return false;
				}
				public Integer NOM_VENLength(){
				    return null;
				}
				public Integer NOM_VENPrecision(){
				    return null;
				}
				public String NOM_VENDefault(){
				
					return null;
				
				}
				public String NOM_VENComment(){
				
				    return "";
				
				}
				public String NOM_VENPattern(){
				
					return "";
				
				}
				public String NOM_VENOriginalDbColumnName(){
				
					return "NOM_VEN";
				
				}

				
			    public BigDecimal GER_TOTFRE;

				public BigDecimal getGER_TOTFRE () {
					return this.GER_TOTFRE;
				}

				public Boolean GER_TOTFREIsNullable(){
				    return true;
				}
				public Boolean GER_TOTFREIsKey(){
				    return false;
				}
				public Integer GER_TOTFRELength(){
				    return 12;
				}
				public Integer GER_TOTFREPrecision(){
				    return 2;
				}
				public String GER_TOTFREDefault(){
				
					return null;
				
				}
				public String GER_TOTFREComment(){
				
				    return "";
				
				}
				public String GER_TOTFREPattern(){
				
					return "";
				
				}
				public String GER_TOTFREOriginalDbColumnName(){
				
					return "GER_TOTFRE";
				
				}

				
			    public BigDecimal GER_PESBRU;

				public BigDecimal getGER_PESBRU () {
					return this.GER_PESBRU;
				}

				public Boolean GER_PESBRUIsNullable(){
				    return true;
				}
				public Boolean GER_PESBRUIsKey(){
				    return false;
				}
				public Integer GER_PESBRULength(){
				    return 12;
				}
				public Integer GER_PESBRUPrecision(){
				    return 2;
				}
				public String GER_PESBRUDefault(){
				
					return null;
				
				}
				public String GER_PESBRUComment(){
				
				    return "";
				
				}
				public String GER_PESBRUPattern(){
				
					return "";
				
				}
				public String GER_PESBRUOriginalDbColumnName(){
				
					return "GER_PESBRU";
				
				}

				
			    public String DET_CODITE;

				public String getDET_CODITE () {
					return this.DET_CODITE;
				}

				public Boolean DET_CODITEIsNullable(){
				    return true;
				}
				public Boolean DET_CODITEIsKey(){
				    return false;
				}
				public Integer DET_CODITELength(){
				    return null;
				}
				public Integer DET_CODITEPrecision(){
				    return null;
				}
				public String DET_CODITEDefault(){
				
					return null;
				
				}
				public String DET_CODITEComment(){
				
				    return "";
				
				}
				public String DET_CODITEPattern(){
				
					return "";
				
				}
				public String DET_CODITEOriginalDbColumnName(){
				
					return "DET_CODITE";
				
				}

				
			    public String DET_DESCRI;

				public String getDET_DESCRI () {
					return this.DET_DESCRI;
				}

				public Boolean DET_DESCRIIsNullable(){
				    return true;
				}
				public Boolean DET_DESCRIIsKey(){
				    return false;
				}
				public Integer DET_DESCRILength(){
				    return null;
				}
				public Integer DET_DESCRIPrecision(){
				    return null;
				}
				public String DET_DESCRIDefault(){
				
					return null;
				
				}
				public String DET_DESCRIComment(){
				
				    return "";
				
				}
				public String DET_DESCRIPattern(){
				
					return "";
				
				}
				public String DET_DESCRIOriginalDbColumnName(){
				
					return "DET_DESCRI";
				
				}

				
			    public BigDecimal DET_QTDITE;

				public BigDecimal getDET_QTDITE () {
					return this.DET_QTDITE;
				}

				public Boolean DET_QTDITEIsNullable(){
				    return true;
				}
				public Boolean DET_QTDITEIsKey(){
				    return false;
				}
				public Integer DET_QTDITELength(){
				    return 12;
				}
				public Integer DET_QTDITEPrecision(){
				    return 2;
				}
				public String DET_QTDITEDefault(){
				
					return null;
				
				}
				public String DET_QTDITEComment(){
				
				    return "";
				
				}
				public String DET_QTDITEPattern(){
				
					return "";
				
				}
				public String DET_QTDITEOriginalDbColumnName(){
				
					return "DET_QTDITE";
				
				}

				
			    public BigDecimal DET_TOTPES;

				public BigDecimal getDET_TOTPES () {
					return this.DET_TOTPES;
				}

				public Boolean DET_TOTPESIsNullable(){
				    return true;
				}
				public Boolean DET_TOTPESIsKey(){
				    return false;
				}
				public Integer DET_TOTPESLength(){
				    return 12;
				}
				public Integer DET_TOTPESPrecision(){
				    return 2;
				}
				public String DET_TOTPESDefault(){
				
					return null;
				
				}
				public String DET_TOTPESComment(){
				
				    return "";
				
				}
				public String DET_TOTPESPattern(){
				
					return "";
				
				}
				public String DET_TOTPESOriginalDbColumnName(){
				
					return "DET_TOTPES";
				
				}

				
			    public BigDecimal ITE_EXPALT;

				public BigDecimal getITE_EXPALT () {
					return this.ITE_EXPALT;
				}

				public Boolean ITE_EXPALTIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPALTIsKey(){
				    return false;
				}
				public Integer ITE_EXPALTLength(){
				    return 12;
				}
				public Integer ITE_EXPALTPrecision(){
				    return 2;
				}
				public String ITE_EXPALTDefault(){
				
					return null;
				
				}
				public String ITE_EXPALTComment(){
				
				    return "";
				
				}
				public String ITE_EXPALTPattern(){
				
					return "";
				
				}
				public String ITE_EXPALTOriginalDbColumnName(){
				
					return "ITE_EXPALT";
				
				}

				
			    public BigDecimal ITE_EXPLAR;

				public BigDecimal getITE_EXPLAR () {
					return this.ITE_EXPLAR;
				}

				public Boolean ITE_EXPLARIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPLARIsKey(){
				    return false;
				}
				public Integer ITE_EXPLARLength(){
				    return 12;
				}
				public Integer ITE_EXPLARPrecision(){
				    return 2;
				}
				public String ITE_EXPLARDefault(){
				
					return null;
				
				}
				public String ITE_EXPLARComment(){
				
				    return "";
				
				}
				public String ITE_EXPLARPattern(){
				
					return "";
				
				}
				public String ITE_EXPLAROriginalDbColumnName(){
				
					return "ITE_EXPLAR";
				
				}

				
			    public BigDecimal ITE_EXPPRO;

				public BigDecimal getITE_EXPPRO () {
					return this.ITE_EXPPRO;
				}

				public Boolean ITE_EXPPROIsNullable(){
				    return true;
				}
				public Boolean ITE_EXPPROIsKey(){
				    return false;
				}
				public Integer ITE_EXPPROLength(){
				    return 12;
				}
				public Integer ITE_EXPPROPrecision(){
				    return 2;
				}
				public String ITE_EXPPRODefault(){
				
					return null;
				
				}
				public String ITE_EXPPROComment(){
				
				    return "";
				
				}
				public String ITE_EXPPROPattern(){
				
					return "";
				
				}
				public String ITE_EXPPROOriginalDbColumnName(){
				
					return "ITE_EXPPRO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.OBJ == null) ? 0 : this.OBJ.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.OBJ == null) {
							if (other.OBJ != null)
								return false;
						
						} else if (!this.OBJ.equals(other.OBJ))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.PLP_DTAENV = this.PLP_DTAENV;
	            other.OBJ = this.OBJ;
	            other.GER_DTAENT = this.GER_DTAENT;
	            other.DOC = this.DOC;
	            other.GER_CODVEN = this.GER_CODVEN;
	            other.NOM_VEN = this.NOM_VEN;
	            other.GER_TOTFRE = this.GER_TOTFRE;
	            other.GER_PESBRU = this.GER_PESBRU;
	            other.DET_CODITE = this.DET_CODITE;
	            other.DET_DESCRI = this.DET_DESCRI;
	            other.DET_QTDITE = this.DET_QTDITE;
	            other.DET_TOTPES = this.DET_TOTPES;
	            other.ITE_EXPALT = this.ITE_EXPALT;
	            other.ITE_EXPLAR = this.ITE_EXPLAR;
	            other.ITE_EXPPRO = this.ITE_EXPPRO;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.OBJ = this.OBJ;
	            	
	}




	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.OBJ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conferencia_fretes) {

        	try {

        		int length = 0;
		
					this.OBJ = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.OBJ,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.OBJ,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.PLP_DTAENV = readDate(dis,ois);
					
						this.GER_DTAENT = readDate(dis,ois);
					
						this.DOC = readString(dis,ois);
					
						this.GER_CODVEN = readString(dis,ois);
					
						this.NOM_VEN = readString(dis,ois);
					
       			    	this.GER_TOTFRE = (BigDecimal) ois.readObject();
					
       			    	this.GER_PESBRU = (BigDecimal) ois.readObject();
					
						this.DET_CODITE = readString(dis,ois);
					
						this.DET_DESCRI = readString(dis,ois);
					
       			    	this.DET_QTDITE = (BigDecimal) ois.readObject();
					
       			    	this.DET_TOTPES = (BigDecimal) ois.readObject();
					
       			    	this.ITE_EXPALT = (BigDecimal) ois.readObject();
					
       			    	this.ITE_EXPLAR = (BigDecimal) ois.readObject();
					
       			    	this.ITE_EXPPRO = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.PLP_DTAENV = readDate(dis,objectIn);
					
						this.GER_DTAENT = readDate(dis,objectIn);
					
						this.DOC = readString(dis,objectIn);
					
						this.GER_CODVEN = readString(dis,objectIn);
					
						this.NOM_VEN = readString(dis,objectIn);
					
       			    	this.GER_TOTFRE = (BigDecimal) objectIn.readObject();
					
       			    	this.GER_PESBRU = (BigDecimal) objectIn.readObject();
					
						this.DET_CODITE = readString(dis,objectIn);
					
						this.DET_DESCRI = readString(dis,objectIn);
					
       			    	this.DET_QTDITE = (BigDecimal) objectIn.readObject();
					
       			    	this.DET_TOTPES = (BigDecimal) objectIn.readObject();
					
       			    	this.ITE_EXPALT = (BigDecimal) objectIn.readObject();
					
       			    	this.ITE_EXPLAR = (BigDecimal) objectIn.readObject();
					
       			    	this.ITE_EXPPRO = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeDate(this.PLP_DTAENV, dos, oos);
					
						writeDate(this.GER_DTAENT, dos, oos);
					
						writeString(this.DOC, dos, oos);
					
						writeString(this.GER_CODVEN, dos, oos);
					
						writeString(this.NOM_VEN, dos, oos);
					
       			    	oos.writeObject(this.GER_TOTFRE);
					
       			    	oos.writeObject(this.GER_PESBRU);
					
						writeString(this.DET_CODITE, dos, oos);
					
						writeString(this.DET_DESCRI, dos, oos);
					
       			    	oos.writeObject(this.DET_QTDITE);
					
       			    	oos.writeObject(this.DET_TOTPES);
					
       			    	oos.writeObject(this.ITE_EXPALT);
					
       			    	oos.writeObject(this.ITE_EXPLAR);
					
       			    	oos.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeDate(this.PLP_DTAENV, dos, objectOut);
					
						writeDate(this.GER_DTAENT, dos, objectOut);
					
						writeString(this.DOC, dos, objectOut);
					
						writeString(this.GER_CODVEN, dos, objectOut);
					
						writeString(this.NOM_VEN, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.GER_TOTFRE);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.GER_PESBRU);
					
						writeString(this.DET_CODITE, dos, objectOut);
					
						writeString(this.DET_DESCRI, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DET_QTDITE);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.DET_TOTPES);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ITE_EXPALT);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ITE_EXPLAR);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ITE_EXPPRO);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("PLP_DTAENV="+String.valueOf(PLP_DTAENV));
		sb.append(",OBJ="+OBJ);
		sb.append(",GER_DTAENT="+String.valueOf(GER_DTAENT));
		sb.append(",DOC="+DOC);
		sb.append(",GER_CODVEN="+GER_CODVEN);
		sb.append(",NOM_VEN="+NOM_VEN);
		sb.append(",GER_TOTFRE="+String.valueOf(GER_TOTFRE));
		sb.append(",GER_PESBRU="+String.valueOf(GER_PESBRU));
		sb.append(",DET_CODITE="+DET_CODITE);
		sb.append(",DET_DESCRI="+DET_DESCRI);
		sb.append(",DET_QTDITE="+String.valueOf(DET_QTDITE));
		sb.append(",DET_TOTPES="+String.valueOf(DET_TOTPES));
		sb.append(",ITE_EXPALT="+String.valueOf(ITE_EXPALT));
		sb.append(",ITE_EXPLAR="+String.valueOf(ITE_EXPLAR));
		sb.append(",ITE_EXPPRO="+String.valueOf(ITE_EXPPRO));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.OBJ, other.OBJ);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tAdvancedHash_row8 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row8", false);
		start_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tAdvancedHash_row8 = 0;
		

			   		// connection name:row8
			   		// source node:tHashInput_2 - inputs:(after_tHashInput_1) outputs:(row8,row8) | target node:tAdvancedHash_row8 - inputs:(row8) outputs:()
			   		// linked node: tMap_1 - inputs:(row7,row8) outputs:(Batimento1,Reject)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row8 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row8Struct>getLookup(matchingModeEnum_row8);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row8", tHash_Lookup_row8);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row8 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row1Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row1Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row1Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row8.PLP_DTAENV = next_tHashInput_2.PLP_DTAENV;
	row8.OBJ = next_tHashInput_2.OBJ;
	row8.GER_DTAENT = next_tHashInput_2.GER_DTAENT;
	row8.DOC = next_tHashInput_2.DOC;
	row8.GER_CODVEN = next_tHashInput_2.GER_CODVEN;
	row8.NOM_VEN = next_tHashInput_2.NOM_VEN;
	row8.GER_TOTFRE = next_tHashInput_2.GER_TOTFRE;
	row8.GER_PESBRU = next_tHashInput_2.GER_PESBRU;
	row8.DET_CODITE = next_tHashInput_2.DET_CODITE;
	row8.DET_DESCRI = next_tHashInput_2.DET_DESCRI;
	row8.DET_QTDITE = next_tHashInput_2.DET_QTDITE;
	row8.DET_TOTPES = next_tHashInput_2.DET_TOTPES;
	row8.ITE_EXPALT = next_tHashInput_2.ITE_EXPALT;
	row8.ITE_EXPLAR = next_tHashInput_2.ITE_EXPLAR;
	row8.ITE_EXPPRO = next_tHashInput_2.ITE_EXPPRO;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					


			   
			   

					row8Struct row8_HashRow = new row8Struct();
		   	   	   
				
				row8_HashRow.PLP_DTAENV = row8.PLP_DTAENV;
				
				row8_HashRow.OBJ = row8.OBJ;
				
				row8_HashRow.GER_DTAENT = row8.GER_DTAENT;
				
				row8_HashRow.DOC = row8.DOC;
				
				row8_HashRow.GER_CODVEN = row8.GER_CODVEN;
				
				row8_HashRow.NOM_VEN = row8.NOM_VEN;
				
				row8_HashRow.GER_TOTFRE = row8.GER_TOTFRE;
				
				row8_HashRow.GER_PESBRU = row8.GER_PESBRU;
				
				row8_HashRow.DET_CODITE = row8.DET_CODITE;
				
				row8_HashRow.DET_DESCRI = row8.DET_DESCRI;
				
				row8_HashRow.DET_QTDITE = row8.DET_QTDITE;
				
				row8_HashRow.DET_TOTPES = row8.DET_TOTPES;
				
				row8_HashRow.ITE_EXPALT = row8.ITE_EXPALT;
				
				row8_HashRow.ITE_EXPLAR = row8.ITE_EXPLAR;
				
				row8_HashRow.ITE_EXPPRO = row8.ITE_EXPPRO;
				
			tHash_Lookup_row8.put(row8_HashRow);
			
            




 


	tos_count_tAdvancedHash_row8++;

/**
 * [tAdvancedHash_row8 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conferencia_fretes_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

tHash_Lookup_row8.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row8", true);
end_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());




/**
 * [tAdvancedHash_row8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tHashInput_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_conferencia_fretes relatorio_conferencia_fretesClass = new relatorio_conferencia_fretes();

        int exitCode = relatorio_conferencia_fretesClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_conferencia_fretes.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_conferencia_fretes_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_conferencia_fretes.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("WINSPARE_DB", "id_String");
                        if(context.getStringValue("WINSPARE_DB") == null) {
                            context.WINSPARE_DB = null;
                        } else {
                            context.WINSPARE_DB=(String) context.getProperty("WINSPARE_DB");
                        }
                        context.setContextType("WINSPARE_HOST", "id_String");
                        if(context.getStringValue("WINSPARE_HOST") == null) {
                            context.WINSPARE_HOST = null;
                        } else {
                            context.WINSPARE_HOST=(String) context.getProperty("WINSPARE_HOST");
                        }
                        context.setContextType("WINSPARE_PORT", "id_String");
                        if(context.getStringValue("WINSPARE_PORT") == null) {
                            context.WINSPARE_PORT = null;
                        } else {
                            context.WINSPARE_PORT=(String) context.getProperty("WINSPARE_PORT");
                        }
                        context.setContextType("WINSPARE_PWD", "id_String");
                        if(context.getStringValue("WINSPARE_PWD") == null) {
                            context.WINSPARE_PWD = null;
                        } else {
                            context.WINSPARE_PWD=(String) context.getProperty("WINSPARE_PWD");
                        }
                        context.setContextType("WINSPARE_USER", "id_String");
                        if(context.getStringValue("WINSPARE_USER") == null) {
                            context.WINSPARE_USER = null;
                        } else {
                            context.WINSPARE_USER=(String) context.getProperty("WINSPARE_USER");
                        }
                        context.setContextType("data_atual", "id_String");
                        if(context.getStringValue("data_atual") == null) {
                            context.data_atual = null;
                        } else {
                            context.data_atual=(String) context.getProperty("data_atual");
                        }
                        context.setContextType("data_atual1", "id_String");
                        if(context.getStringValue("data_atual1") == null) {
                            context.data_atual1 = null;
                        } else {
                            context.data_atual1=(String) context.getProperty("data_atual1");
                        }
                        context.setContextType("Pasta_Rede", "id_String");
                        if(context.getStringValue("Pasta_Rede") == null) {
                            context.Pasta_Rede = null;
                        } else {
                            context.Pasta_Rede=(String) context.getProperty("Pasta_Rede");
                        }
                        context.setContextType("Arquivo", "id_Integer");
                        if(context.getStringValue("Arquivo") == null) {
                            context.Arquivo = null;
                        } else {
                            try{
                                context.Arquivo=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Arquivo"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Arquivo", e.getMessage()));
                                context.Arquivo=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("WINSPARE_DB")) {
                context.WINSPARE_DB = (String) parentContextMap.get("WINSPARE_DB");
            }if (parentContextMap.containsKey("WINSPARE_HOST")) {
                context.WINSPARE_HOST = (String) parentContextMap.get("WINSPARE_HOST");
            }if (parentContextMap.containsKey("WINSPARE_PORT")) {
                context.WINSPARE_PORT = (String) parentContextMap.get("WINSPARE_PORT");
            }if (parentContextMap.containsKey("WINSPARE_PWD")) {
                context.WINSPARE_PWD = (String) parentContextMap.get("WINSPARE_PWD");
            }if (parentContextMap.containsKey("WINSPARE_USER")) {
                context.WINSPARE_USER = (String) parentContextMap.get("WINSPARE_USER");
            }if (parentContextMap.containsKey("data_atual")) {
                context.data_atual = (String) parentContextMap.get("data_atual");
            }if (parentContextMap.containsKey("data_atual1")) {
                context.data_atual1 = (String) parentContextMap.get("data_atual1");
            }if (parentContextMap.containsKey("Pasta_Rede")) {
                context.Pasta_Rede = (String) parentContextMap.get("Pasta_Rede");
            }if (parentContextMap.containsKey("Arquivo")) {
                context.Arquivo = (Integer) parentContextMap.get("Arquivo");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_6Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_6) {
globalMap.put("tDBInput_6_SUBPROCESS_STATE", -1);

e_tDBInput_6.printStackTrace();

}catch (java.lang.Error e_tDBInput_6) {
globalMap.put("tDBInput_6_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_6;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);

e_tFileInputExcel_1.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_conferencia_fretes");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1151134 characters generated by Talend Open Studio for Big Data 
 *     on the 4 de novembro de 2024 19:10:07 BRT
 ************************************************************************************************/