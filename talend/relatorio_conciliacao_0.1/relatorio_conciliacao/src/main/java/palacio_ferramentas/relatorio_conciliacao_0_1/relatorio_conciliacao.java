// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_conciliacao_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJava_1
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJavaRow_10
	//import java.util.List;

	//the import part of tJavaRow_11
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJavaRow_7
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_conciliacao Purpose: <br>
 * Description:  <br>
 * @author luisll@uol.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_conciliacao implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(summary != null){
				
					this.setProperty("summary", summary.toString());
				
			}
			
			if(erro_code != null){
				
					this.setProperty("erro_code", erro_code.toString());
				
			}
			
			if(DW_HOST != null){
				
					this.setProperty("DW_HOST", DW_HOST.toString());
				
			}
			
			if(DW_USER != null){
				
					this.setProperty("DW_USER", DW_USER.toString());
				
			}
			
			if(DW_PASSWORD != null){
				
					this.setProperty("DW_PASSWORD", DW_PASSWORD.toString());
				
			}
			
			if(DW_DB != null){
				
					this.setProperty("DW_DB", DW_DB.toString());
				
			}
			
			if(DW_PORT != null){
				
					this.setProperty("DW_PORT", DW_PORT.toString());
				
			}
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(mesprocessamento != null){
				
					this.setProperty("mesprocessamento", mesprocessamento.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String summary;
public String getSummary(){
	return this.summary;
}
public Integer erro_code;
public Integer getErro_code(){
	return this.erro_code;
}
public String DW_HOST;
public String getDW_HOST(){
	return this.DW_HOST;
}
public String DW_USER;
public String getDW_USER(){
	return this.DW_USER;
}
public String DW_PASSWORD;
public String getDW_PASSWORD(){
	return this.DW_PASSWORD;
}
public String DW_DB;
public String getDW_DB(){
	return this.DW_DB;
}
public String DW_PORT;
public String getDW_PORT(){
	return this.DW_PORT;
}
public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public String versao;
public String getVersao(){
	return this.versao;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public Integer mesprocessamento;
public Integer getMesprocessamento(){
	return this.mesprocessamento;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_conciliacao";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_conciliacao.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_conciliacao.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFixedFlowInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFixedFlowInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tConvertType_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileInputExcel_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileInputExcel_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row49_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_1_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_1_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_1_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_2_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_2_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_2_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_4_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_4_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_4_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAggregateRow_3_AGGOUT_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
							tAggregateRow_3_AGGIN_error(exception, errorComponent, globalMap);
						
						}
					
			public void tAggregateRow_3_AGGIN_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFixedFlowInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileInputExcel_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tDBConnection_1Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = context.JDBC_PARAMETERS;
            String url_tDBConnection_1 = "jdbc:postgresql://"+context.DW_HOST+":"+"5432"+"/"+context.DW_DB;
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = context.DW_USER;
	
	
		
	final String decryptedPassword_tDBConnection_1 = context.DW_PASSWORD; 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tFixedFlowInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_valor_final;

				public Double getSum_valor_final () {
					return this.sum_valor_final;
				}

				public Boolean sum_valor_finalIsNullable(){
				    return true;
				}
				public Boolean sum_valor_finalIsKey(){
				    return false;
				}
				public Integer sum_valor_finalLength(){
				    return null;
				}
				public Integer sum_valor_finalPrecision(){
				    return null;
				}
				public String sum_valor_finalDefault(){
				
					return null;
				
				}
				public String sum_valor_finalComment(){
				
				    return "";
				
				}
				public String sum_valor_finalPattern(){
				
					return "";
				
				}
				public String sum_valor_finalOriginalDbColumnName(){
				
					return "sum_valor_final";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_valor_final="+String.valueOf(sum_valor_final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row37Struct row37 = new row37Struct();




	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row37Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row37Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_1", false);
		start_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_1";
	
	
		int tos_count_tFixedFlowInput_1 = 0;
		

	    for (int i_tFixedFlowInput_1 = 0 ; i_tFixedFlowInput_1 < 1 ; i_tFixedFlowInput_1++) {
	                	            	
    	            		row37.COD_ENTREGA = null;        	            	
    	            	        	            	
    	            		row37.sum_valor_final = 0.0;
    	            	

 



/**
 * [tFixedFlowInput_1 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 


	tos_count_tFixedFlowInput_1++;

/**
 * [tFixedFlowInput_1 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					



    
		row37Struct oneRow_tHashOutput_3 = new row37Struct();
				
					oneRow_tHashOutput_3.COD_ENTREGA = row37.COD_ENTREGA;
					oneRow_tHashOutput_3.sum_valor_final = row37.sum_valor_final;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_1 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

        }
        globalMap.put("tFixedFlowInput_1_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_1", true);
end_Hash.put("tFixedFlowInput_1", System.currentTimeMillis());




/**
 * [tFixedFlowInput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFixedFlowInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tFixedFlowInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_1 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_1";
	
	

 



/**
 * [tFixedFlowInput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_2", false);
		start_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_2";
	
	
		int tos_count_tFixedFlowInput_2 = 0;
		

	    for (int i_tFixedFlowInput_2 = 0 ; i_tFixedFlowInput_2 < 1 ; i_tFixedFlowInput_2++) {
	                	            	
    	            		row10.COD_ENTREGA = null;        	            	
    	            	        	            	
    	            		row10.sum_Custo = 0.0;
    	            	

 



/**
 * [tFixedFlowInput_2 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 


	tos_count_tFixedFlowInput_2++;

/**
 * [tFixedFlowInput_2 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					



    
		row10Struct oneRow_tHashOutput_4 = new row10Struct();
				
					oneRow_tHashOutput_4.COD_ENTREGA = row10.COD_ENTREGA;
					oneRow_tHashOutput_4.sum_Custo = row10.sum_Custo;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_2 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

        }
        globalMap.put("tFixedFlowInput_2_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_2", true);
end_Hash.put("tFixedFlowInput_2", System.currentTimeMillis());




/**
 * [tFixedFlowInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFixedFlowInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tFixedFlowInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_2 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_2";
	
	

 



/**
 * [tFixedFlowInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row212Struct implements routines.system.IPersistableRow<row212Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return true;
				}
				public Integer ID_ANYMARKETLength(){
				    return 11;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return true;
				}
				public Integer CPF_CNPJLength(){
				    return 15;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return true;
				}
				public Integer CLIENTELength(){
				    return 70;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return true;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return 25;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return true;
				}
				public Integer DATA_PEDIDOLength(){
				    return 25;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return true;
				}
				public Integer MARKETPLACELength(){
				    return 50;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return true;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return 10;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return 3;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return true;
				}
				public Integer STATUSLength(){
				    return 25;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return true;
				}
				public Integer FRETELength(){
				    return 10;
				}
				public Integer FRETEPrecision(){
				    return 3;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return true;
				}
				public Integer DESCONTOLength(){
				    return 10;
				}
				public Integer DESCONTOPrecision(){
				    return 3;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return true;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return 10;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return 3;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return true;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return 10;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return 3;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return true;
				}
				public Integer TITULO_PRODUTOLength(){
				    return 150;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return true;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return true;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 10;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 3;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return true;
				}
				public Integer SKU_PRODUTOLength(){
				    return 8;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return true;
				}
				public Integer EAN_PRODUTOLength(){
				    return 20;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return true;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return 50;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return true;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return 20;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return true;
				}
				public Integer COD_ENTREGALength(){
				    return 12;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_ANYMARKET == null) ? 0 : this.ID_ANYMARKET.hashCode());
					
						result = prime * result + ((this.TIPO_DOCUMENTO == null) ? 0 : this.TIPO_DOCUMENTO.hashCode());
					
						result = prime * result + ((this.CPF_CNPJ == null) ? 0 : this.CPF_CNPJ.hashCode());
					
						result = prime * result + ((this.CLIENTE == null) ? 0 : this.CLIENTE.hashCode());
					
						result = prime * result + ((this.CODIGO_PEDIDO == null) ? 0 : this.CODIGO_PEDIDO.hashCode());
					
						result = prime * result + ((this.DATA_PEDIDO == null) ? 0 : this.DATA_PEDIDO.hashCode());
					
						result = prime * result + ((this.MARKETPLACE == null) ? 0 : this.MARKETPLACE.hashCode());
					
						result = prime * result + ((this.FRETE_DO_LOJISTA == null) ? 0 : this.FRETE_DO_LOJISTA.hashCode());
					
						result = prime * result + ((this.STATUS == null) ? 0 : this.STATUS.hashCode());
					
						result = prime * result + ((this.FRETE == null) ? 0 : this.FRETE.hashCode());
					
						result = prime * result + ((this.DESCONTO == null) ? 0 : this.DESCONTO.hashCode());
					
						result = prime * result + ((this.VALOR_TOTAL_PRODUTOS == null) ? 0 : this.VALOR_TOTAL_PRODUTOS.hashCode());
					
						result = prime * result + ((this.TOTAL_PEDIDO == null) ? 0 : this.TOTAL_PEDIDO.hashCode());
					
						result = prime * result + ((this.TITULO_PRODUTO == null) ? 0 : this.TITULO_PRODUTO.hashCode());
					
						result = prime * result + ((this.QUANTIDADE == null) ? 0 : this.QUANTIDADE.hashCode());
					
						result = prime * result + ((this.VALOR_UNITARIO == null) ? 0 : this.VALOR_UNITARIO.hashCode());
					
						result = prime * result + ((this.SKU_PRODUTO == null) ? 0 : this.SKU_PRODUTO.hashCode());
					
						result = prime * result + ((this.EAN_PRODUTO == null) ? 0 : this.EAN_PRODUTO.hashCode());
					
						result = prime * result + ((this.NOME_LOJA_OFICIAL == null) ? 0 : this.NOME_LOJA_OFICIAL.hashCode());
					
						result = prime * result + ((this.TIPO_LISTAGEM == null) ? 0 : this.TIPO_LISTAGEM.hashCode());
					
						result = prime * result + ((this.COD_ENTREGA == null) ? 0 : this.COD_ENTREGA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row212Struct other = (row212Struct) obj;
		
						if (this.ID_ANYMARKET == null) {
							if (other.ID_ANYMARKET != null)
								return false;
						
						} else if (!this.ID_ANYMARKET.equals(other.ID_ANYMARKET))
						
							return false;
					
						if (this.TIPO_DOCUMENTO == null) {
							if (other.TIPO_DOCUMENTO != null)
								return false;
						
						} else if (!this.TIPO_DOCUMENTO.equals(other.TIPO_DOCUMENTO))
						
							return false;
					
						if (this.CPF_CNPJ == null) {
							if (other.CPF_CNPJ != null)
								return false;
						
						} else if (!this.CPF_CNPJ.equals(other.CPF_CNPJ))
						
							return false;
					
						if (this.CLIENTE == null) {
							if (other.CLIENTE != null)
								return false;
						
						} else if (!this.CLIENTE.equals(other.CLIENTE))
						
							return false;
					
						if (this.CODIGO_PEDIDO == null) {
							if (other.CODIGO_PEDIDO != null)
								return false;
						
						} else if (!this.CODIGO_PEDIDO.equals(other.CODIGO_PEDIDO))
						
							return false;
					
						if (this.DATA_PEDIDO == null) {
							if (other.DATA_PEDIDO != null)
								return false;
						
						} else if (!this.DATA_PEDIDO.equals(other.DATA_PEDIDO))
						
							return false;
					
						if (this.MARKETPLACE == null) {
							if (other.MARKETPLACE != null)
								return false;
						
						} else if (!this.MARKETPLACE.equals(other.MARKETPLACE))
						
							return false;
					
						if (this.FRETE_DO_LOJISTA == null) {
							if (other.FRETE_DO_LOJISTA != null)
								return false;
						
						} else if (!this.FRETE_DO_LOJISTA.equals(other.FRETE_DO_LOJISTA))
						
							return false;
					
						if (this.STATUS == null) {
							if (other.STATUS != null)
								return false;
						
						} else if (!this.STATUS.equals(other.STATUS))
						
							return false;
					
						if (this.FRETE == null) {
							if (other.FRETE != null)
								return false;
						
						} else if (!this.FRETE.equals(other.FRETE))
						
							return false;
					
						if (this.DESCONTO == null) {
							if (other.DESCONTO != null)
								return false;
						
						} else if (!this.DESCONTO.equals(other.DESCONTO))
						
							return false;
					
						if (this.VALOR_TOTAL_PRODUTOS == null) {
							if (other.VALOR_TOTAL_PRODUTOS != null)
								return false;
						
						} else if (!this.VALOR_TOTAL_PRODUTOS.equals(other.VALOR_TOTAL_PRODUTOS))
						
							return false;
					
						if (this.TOTAL_PEDIDO == null) {
							if (other.TOTAL_PEDIDO != null)
								return false;
						
						} else if (!this.TOTAL_PEDIDO.equals(other.TOTAL_PEDIDO))
						
							return false;
					
						if (this.TITULO_PRODUTO == null) {
							if (other.TITULO_PRODUTO != null)
								return false;
						
						} else if (!this.TITULO_PRODUTO.equals(other.TITULO_PRODUTO))
						
							return false;
					
						if (this.QUANTIDADE == null) {
							if (other.QUANTIDADE != null)
								return false;
						
						} else if (!this.QUANTIDADE.equals(other.QUANTIDADE))
						
							return false;
					
						if (this.VALOR_UNITARIO == null) {
							if (other.VALOR_UNITARIO != null)
								return false;
						
						} else if (!this.VALOR_UNITARIO.equals(other.VALOR_UNITARIO))
						
							return false;
					
						if (this.SKU_PRODUTO == null) {
							if (other.SKU_PRODUTO != null)
								return false;
						
						} else if (!this.SKU_PRODUTO.equals(other.SKU_PRODUTO))
						
							return false;
					
						if (this.EAN_PRODUTO == null) {
							if (other.EAN_PRODUTO != null)
								return false;
						
						} else if (!this.EAN_PRODUTO.equals(other.EAN_PRODUTO))
						
							return false;
					
						if (this.NOME_LOJA_OFICIAL == null) {
							if (other.NOME_LOJA_OFICIAL != null)
								return false;
						
						} else if (!this.NOME_LOJA_OFICIAL.equals(other.NOME_LOJA_OFICIAL))
						
							return false;
					
						if (this.TIPO_LISTAGEM == null) {
							if (other.TIPO_LISTAGEM != null)
								return false;
						
						} else if (!this.TIPO_LISTAGEM.equals(other.TIPO_LISTAGEM))
						
							return false;
					
						if (this.COD_ENTREGA == null) {
							if (other.COD_ENTREGA != null)
								return false;
						
						} else if (!this.COD_ENTREGA.equals(other.COD_ENTREGA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row212Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            other.CPF_CNPJ = this.CPF_CNPJ;
	            other.CLIENTE = this.CLIENTE;
	            other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            other.DATA_PEDIDO = this.DATA_PEDIDO;
	            other.MARKETPLACE = this.MARKETPLACE;
	            other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            other.STATUS = this.STATUS;
	            other.FRETE = this.FRETE;
	            other.DESCONTO = this.DESCONTO;
	            other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            other.QUANTIDADE = this.QUANTIDADE;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.SKU_PRODUTO = this.SKU_PRODUTO;
	            other.EAN_PRODUTO = this.EAN_PRODUTO;
	            other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            other.COD_ENTREGA = this.COD_ENTREGA;
	            
	}

	public void copyKeysDataTo(row212Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            	other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            	other.CPF_CNPJ = this.CPF_CNPJ;
	            	other.CLIENTE = this.CLIENTE;
	            	other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            	other.DATA_PEDIDO = this.DATA_PEDIDO;
	            	other.MARKETPLACE = this.MARKETPLACE;
	            	other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            	other.STATUS = this.STATUS;
	            	other.FRETE = this.FRETE;
	            	other.DESCONTO = this.DESCONTO;
	            	other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            	other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            	other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            	other.QUANTIDADE = this.QUANTIDADE;
	            	other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            	other.SKU_PRODUTO = this.SKU_PRODUTO;
	            	other.EAN_PRODUTO = this.EAN_PRODUTO;
	            	other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            	other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            	other.COD_ENTREGA = this.COD_ENTREGA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row212Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_ANYMARKET, other.ID_ANYMARKET);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_DOCUMENTO, other.TIPO_DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CPF_CNPJ, other.CPF_CNPJ);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CLIENTE, other.CLIENTE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_PEDIDO, other.CODIGO_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DATA_PEDIDO, other.DATA_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MARKETPLACE, other.MARKETPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE_DO_LOJISTA, other.FRETE_DO_LOJISTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.STATUS, other.STATUS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE, other.FRETE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCONTO, other.DESCONTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_TOTAL_PRODUTOS, other.VALOR_TOTAL_PRODUTOS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TOTAL_PEDIDO, other.TOTAL_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TITULO_PRODUTO, other.TITULO_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.QUANTIDADE, other.QUANTIDADE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_UNITARIO, other.VALOR_UNITARIO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.SKU_PRODUTO, other.SKU_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.EAN_PRODUTO, other.EAN_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NOME_LOJA_OFICIAL, other.NOME_LOJA_OFICIAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LISTAGEM, other.TIPO_LISTAGEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.COD_ENTREGA, other.COD_ENTREGA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFixedFlowInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row212Struct row212 = new row212Struct();




	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row212");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row212Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row212Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFixedFlowInput_3", false);
		start_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());
		
	
	currentComponent="tFixedFlowInput_3";
	
	
		int tos_count_tFixedFlowInput_3 = 0;
		

	    for (int i_tFixedFlowInput_3 = 0 ; i_tFixedFlowInput_3 < 1 ; i_tFixedFlowInput_3++) {
	                	            	
    	            		row212.ID_ANYMARKET = "";
    	            	        	            	
    	            		row212.TIPO_DOCUMENTO = "";
    	            	        	            	
    	            		row212.CPF_CNPJ = "";
    	            	        	            	
    	            		row212.CLIENTE = "";
    	            	        	            	
    	            		row212.CODIGO_PEDIDO = "";
    	            	        	            	
    	            		row212.DATA_PEDIDO = "";
    	            	        	            	
    	            		row212.MARKETPLACE = "";
    	            	        	            	
    	            		row212.FRETE_DO_LOJISTA = 0.0;
    	            	        	            	
    	            		row212.STATUS = "";
    	            	        	            	
    	            		row212.FRETE = 0.0;
    	            	        	            	
    	            		row212.DESCONTO = 0.0;
    	            	        	            	
    	            		row212.VALOR_TOTAL_PRODUTOS = 0.0;
    	            	        	            	
    	            		row212.TOTAL_PEDIDO = 0.0;
    	            	        	            	
    	            		row212.TITULO_PRODUTO = "";
    	            	        	            	
    	            		row212.QUANTIDADE = 0;
    	            	        	            	
    	            		row212.VALOR_UNITARIO = 0.0;
    	            	        	            	
    	            		row212.SKU_PRODUTO = "";
    	            	        	            	
    	            		row212.EAN_PRODUTO = "";
    	            	        	            	
    	            		row212.NOME_LOJA_OFICIAL = "";
    	            	        	            	
    	            		row212.TIPO_LISTAGEM = "";
    	            	        	            	
    	            		row212.COD_ENTREGA = null;        	            	
    	            	

 



/**
 * [tFixedFlowInput_3 begin ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 main ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 


	tos_count_tFixedFlowInput_3++;

/**
 * [tFixedFlowInput_3 main ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row212"
						
						);
					}
					



    
		row212Struct oneRow_tHashOutput_5 = new row212Struct();
				
					oneRow_tHashOutput_5.ID_ANYMARKET = row212.ID_ANYMARKET;
					oneRow_tHashOutput_5.TIPO_DOCUMENTO = row212.TIPO_DOCUMENTO;
					oneRow_tHashOutput_5.CPF_CNPJ = row212.CPF_CNPJ;
					oneRow_tHashOutput_5.CLIENTE = row212.CLIENTE;
					oneRow_tHashOutput_5.CODIGO_PEDIDO = row212.CODIGO_PEDIDO;
					oneRow_tHashOutput_5.DATA_PEDIDO = row212.DATA_PEDIDO;
					oneRow_tHashOutput_5.MARKETPLACE = row212.MARKETPLACE;
					oneRow_tHashOutput_5.FRETE_DO_LOJISTA = row212.FRETE_DO_LOJISTA;
					oneRow_tHashOutput_5.STATUS = row212.STATUS;
					oneRow_tHashOutput_5.FRETE = row212.FRETE;
					oneRow_tHashOutput_5.DESCONTO = row212.DESCONTO;
					oneRow_tHashOutput_5.VALOR_TOTAL_PRODUTOS = row212.VALOR_TOTAL_PRODUTOS;
					oneRow_tHashOutput_5.TOTAL_PEDIDO = row212.TOTAL_PEDIDO;
					oneRow_tHashOutput_5.TITULO_PRODUTO = row212.TITULO_PRODUTO;
					oneRow_tHashOutput_5.QUANTIDADE = row212.QUANTIDADE;
					oneRow_tHashOutput_5.VALOR_UNITARIO = row212.VALOR_UNITARIO;
					oneRow_tHashOutput_5.SKU_PRODUTO = row212.SKU_PRODUTO;
					oneRow_tHashOutput_5.EAN_PRODUTO = row212.EAN_PRODUTO;
					oneRow_tHashOutput_5.NOME_LOJA_OFICIAL = row212.NOME_LOJA_OFICIAL;
					oneRow_tHashOutput_5.TIPO_LISTAGEM = row212.TIPO_LISTAGEM;
					oneRow_tHashOutput_5.COD_ENTREGA = row212.COD_ENTREGA;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tFixedFlowInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 process_data_end ] stop
 */
	
	/**
	 * [tFixedFlowInput_3 end ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

        }
        globalMap.put("tFixedFlowInput_3_NB_LINE", 1);        

 

ok_Hash.put("tFixedFlowInput_3", true);
end_Hash.put("tFixedFlowInput_3", System.currentTimeMillis());




/**
 * [tFixedFlowInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row212");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFixedFlowInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFixedFlowInput_3 finally ] start
	 */

	

	
	
	currentComponent="tFixedFlowInput_3";
	
	

 



/**
 * [tFixedFlowInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFixedFlowInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public Integer mes;

				public Integer getMes () {
					return this.mes;
				}

				public Boolean mesIsNullable(){
				    return true;
				}
				public Boolean mesIsKey(){
				    return false;
				}
				public Integer mesLength(){
				    return null;
				}
				public Integer mesPrecision(){
				    return null;
				}
				public String mesDefault(){
				
					return "";
				
				}
				public String mesComment(){
				
				    return "";
				
				}
				public String mesPattern(){
				
					return "";
				
				}
				public String mesOriginalDbColumnName(){
				
					return "mes";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.mes = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.mes = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.mes,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.mes,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("mes="+String.valueOf(mes));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public Integer mes;

				public Integer getMes () {
					return this.mes;
				}

				public Boolean mesIsNullable(){
				    return true;
				}
				public Boolean mesIsKey(){
				    return false;
				}
				public Integer mesLength(){
				    return null;
				}
				public Integer mesPrecision(){
				    return null;
				}
				public String mesDefault(){
				
					return "";
				
				}
				public String mesComment(){
				
				    return "";
				
				}
				public String mesPattern(){
				
					return "";
				
				}
				public String mesOriginalDbColumnName(){
				
					return "mes";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.mes = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.mes = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.mes,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.mes,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("mes="+String.valueOf(mes));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
row2Struct row2 = new row2Struct();





	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tJava_1 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyyMMdd_HHmmss");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


context.data_execucao = data;

//System.out.println(context.mesprocessamento);
//System.out.println(input_row.mes);

 



/**
 * [tJava_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "SELECT to_char(current_date , 'YYYYMM') as mes";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row1.mes = null;
							} else {
		                          
            row1.mes = rs_tDBInput_1.getInt(1);
            if(rs_tDBInput_1.wasNull()){
                    row1.mes = null;
            }
		                    }
					


 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

    //Code generate according to input schema and output schema
context.mesprocessamento = row1.mes;

//System.out.println(context.mesprocessamento);
//System.out.println(row1.mes);
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row50Struct implements routines.system.IPersistableRow<row50Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row50Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_1 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_1> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
						this.QUANTIDADE = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_1 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return true;
				}
				public Integer ID_ANYMARKETLength(){
				    return 11;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return true;
				}
				public Integer CPF_CNPJLength(){
				    return 15;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return true;
				}
				public Integer CLIENTELength(){
				    return 70;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return true;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return 25;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return true;
				}
				public Integer DATA_PEDIDOLength(){
				    return 25;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return true;
				}
				public Integer MARKETPLACELength(){
				    return 50;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return true;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return 10;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return 3;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return true;
				}
				public Integer STATUSLength(){
				    return 25;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return true;
				}
				public Integer FRETELength(){
				    return 10;
				}
				public Integer FRETEPrecision(){
				    return 3;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return true;
				}
				public Integer DESCONTOLength(){
				    return 10;
				}
				public Integer DESCONTOPrecision(){
				    return 3;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return true;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return 10;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return 3;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return true;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return 10;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return 3;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return true;
				}
				public Integer TITULO_PRODUTOLength(){
				    return 150;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return true;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return true;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 10;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 3;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return true;
				}
				public Integer SKU_PRODUTOLength(){
				    return 8;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return true;
				}
				public Integer EAN_PRODUTOLength(){
				    return 20;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return true;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return 50;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return true;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return 20;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return true;
				}
				public Integer COD_ENTREGALength(){
				    return 12;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_ANYMARKET == null) ? 0 : this.ID_ANYMARKET.hashCode());
					
						result = prime * result + ((this.TIPO_DOCUMENTO == null) ? 0 : this.TIPO_DOCUMENTO.hashCode());
					
						result = prime * result + ((this.CPF_CNPJ == null) ? 0 : this.CPF_CNPJ.hashCode());
					
						result = prime * result + ((this.CLIENTE == null) ? 0 : this.CLIENTE.hashCode());
					
						result = prime * result + ((this.CODIGO_PEDIDO == null) ? 0 : this.CODIGO_PEDIDO.hashCode());
					
						result = prime * result + ((this.DATA_PEDIDO == null) ? 0 : this.DATA_PEDIDO.hashCode());
					
						result = prime * result + ((this.MARKETPLACE == null) ? 0 : this.MARKETPLACE.hashCode());
					
						result = prime * result + ((this.FRETE_DO_LOJISTA == null) ? 0 : this.FRETE_DO_LOJISTA.hashCode());
					
						result = prime * result + ((this.STATUS == null) ? 0 : this.STATUS.hashCode());
					
						result = prime * result + ((this.FRETE == null) ? 0 : this.FRETE.hashCode());
					
						result = prime * result + ((this.DESCONTO == null) ? 0 : this.DESCONTO.hashCode());
					
						result = prime * result + ((this.VALOR_TOTAL_PRODUTOS == null) ? 0 : this.VALOR_TOTAL_PRODUTOS.hashCode());
					
						result = prime * result + ((this.TOTAL_PEDIDO == null) ? 0 : this.TOTAL_PEDIDO.hashCode());
					
						result = prime * result + ((this.TITULO_PRODUTO == null) ? 0 : this.TITULO_PRODUTO.hashCode());
					
						result = prime * result + ((this.QUANTIDADE == null) ? 0 : this.QUANTIDADE.hashCode());
					
						result = prime * result + ((this.VALOR_UNITARIO == null) ? 0 : this.VALOR_UNITARIO.hashCode());
					
						result = prime * result + ((this.SKU_PRODUTO == null) ? 0 : this.SKU_PRODUTO.hashCode());
					
						result = prime * result + ((this.EAN_PRODUTO == null) ? 0 : this.EAN_PRODUTO.hashCode());
					
						result = prime * result + ((this.NOME_LOJA_OFICIAL == null) ? 0 : this.NOME_LOJA_OFICIAL.hashCode());
					
						result = prime * result + ((this.TIPO_LISTAGEM == null) ? 0 : this.TIPO_LISTAGEM.hashCode());
					
						result = prime * result + ((this.COD_ENTREGA == null) ? 0 : this.COD_ENTREGA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row5Struct other = (row5Struct) obj;
		
						if (this.ID_ANYMARKET == null) {
							if (other.ID_ANYMARKET != null)
								return false;
						
						} else if (!this.ID_ANYMARKET.equals(other.ID_ANYMARKET))
						
							return false;
					
						if (this.TIPO_DOCUMENTO == null) {
							if (other.TIPO_DOCUMENTO != null)
								return false;
						
						} else if (!this.TIPO_DOCUMENTO.equals(other.TIPO_DOCUMENTO))
						
							return false;
					
						if (this.CPF_CNPJ == null) {
							if (other.CPF_CNPJ != null)
								return false;
						
						} else if (!this.CPF_CNPJ.equals(other.CPF_CNPJ))
						
							return false;
					
						if (this.CLIENTE == null) {
							if (other.CLIENTE != null)
								return false;
						
						} else if (!this.CLIENTE.equals(other.CLIENTE))
						
							return false;
					
						if (this.CODIGO_PEDIDO == null) {
							if (other.CODIGO_PEDIDO != null)
								return false;
						
						} else if (!this.CODIGO_PEDIDO.equals(other.CODIGO_PEDIDO))
						
							return false;
					
						if (this.DATA_PEDIDO == null) {
							if (other.DATA_PEDIDO != null)
								return false;
						
						} else if (!this.DATA_PEDIDO.equals(other.DATA_PEDIDO))
						
							return false;
					
						if (this.MARKETPLACE == null) {
							if (other.MARKETPLACE != null)
								return false;
						
						} else if (!this.MARKETPLACE.equals(other.MARKETPLACE))
						
							return false;
					
						if (this.FRETE_DO_LOJISTA == null) {
							if (other.FRETE_DO_LOJISTA != null)
								return false;
						
						} else if (!this.FRETE_DO_LOJISTA.equals(other.FRETE_DO_LOJISTA))
						
							return false;
					
						if (this.STATUS == null) {
							if (other.STATUS != null)
								return false;
						
						} else if (!this.STATUS.equals(other.STATUS))
						
							return false;
					
						if (this.FRETE == null) {
							if (other.FRETE != null)
								return false;
						
						} else if (!this.FRETE.equals(other.FRETE))
						
							return false;
					
						if (this.DESCONTO == null) {
							if (other.DESCONTO != null)
								return false;
						
						} else if (!this.DESCONTO.equals(other.DESCONTO))
						
							return false;
					
						if (this.VALOR_TOTAL_PRODUTOS == null) {
							if (other.VALOR_TOTAL_PRODUTOS != null)
								return false;
						
						} else if (!this.VALOR_TOTAL_PRODUTOS.equals(other.VALOR_TOTAL_PRODUTOS))
						
							return false;
					
						if (this.TOTAL_PEDIDO == null) {
							if (other.TOTAL_PEDIDO != null)
								return false;
						
						} else if (!this.TOTAL_PEDIDO.equals(other.TOTAL_PEDIDO))
						
							return false;
					
						if (this.TITULO_PRODUTO == null) {
							if (other.TITULO_PRODUTO != null)
								return false;
						
						} else if (!this.TITULO_PRODUTO.equals(other.TITULO_PRODUTO))
						
							return false;
					
						if (this.QUANTIDADE == null) {
							if (other.QUANTIDADE != null)
								return false;
						
						} else if (!this.QUANTIDADE.equals(other.QUANTIDADE))
						
							return false;
					
						if (this.VALOR_UNITARIO == null) {
							if (other.VALOR_UNITARIO != null)
								return false;
						
						} else if (!this.VALOR_UNITARIO.equals(other.VALOR_UNITARIO))
						
							return false;
					
						if (this.SKU_PRODUTO == null) {
							if (other.SKU_PRODUTO != null)
								return false;
						
						} else if (!this.SKU_PRODUTO.equals(other.SKU_PRODUTO))
						
							return false;
					
						if (this.EAN_PRODUTO == null) {
							if (other.EAN_PRODUTO != null)
								return false;
						
						} else if (!this.EAN_PRODUTO.equals(other.EAN_PRODUTO))
						
							return false;
					
						if (this.NOME_LOJA_OFICIAL == null) {
							if (other.NOME_LOJA_OFICIAL != null)
								return false;
						
						} else if (!this.NOME_LOJA_OFICIAL.equals(other.NOME_LOJA_OFICIAL))
						
							return false;
					
						if (this.TIPO_LISTAGEM == null) {
							if (other.TIPO_LISTAGEM != null)
								return false;
						
						} else if (!this.TIPO_LISTAGEM.equals(other.TIPO_LISTAGEM))
						
							return false;
					
						if (this.COD_ENTREGA == null) {
							if (other.COD_ENTREGA != null)
								return false;
						
						} else if (!this.COD_ENTREGA.equals(other.COD_ENTREGA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row5Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            other.CPF_CNPJ = this.CPF_CNPJ;
	            other.CLIENTE = this.CLIENTE;
	            other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            other.DATA_PEDIDO = this.DATA_PEDIDO;
	            other.MARKETPLACE = this.MARKETPLACE;
	            other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            other.STATUS = this.STATUS;
	            other.FRETE = this.FRETE;
	            other.DESCONTO = this.DESCONTO;
	            other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            other.QUANTIDADE = this.QUANTIDADE;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.SKU_PRODUTO = this.SKU_PRODUTO;
	            other.EAN_PRODUTO = this.EAN_PRODUTO;
	            other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            other.COD_ENTREGA = this.COD_ENTREGA;
	            
	}

	public void copyKeysDataTo(row5Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            	other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            	other.CPF_CNPJ = this.CPF_CNPJ;
	            	other.CLIENTE = this.CLIENTE;
	            	other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            	other.DATA_PEDIDO = this.DATA_PEDIDO;
	            	other.MARKETPLACE = this.MARKETPLACE;
	            	other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            	other.STATUS = this.STATUS;
	            	other.FRETE = this.FRETE;
	            	other.DESCONTO = this.DESCONTO;
	            	other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            	other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            	other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            	other.QUANTIDADE = this.QUANTIDADE;
	            	other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            	other.SKU_PRODUTO = this.SKU_PRODUTO;
	            	other.EAN_PRODUTO = this.EAN_PRODUTO;
	            	other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            	other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            	other.COD_ENTREGA = this.COD_ENTREGA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_ANYMARKET, other.ID_ANYMARKET);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_DOCUMENTO, other.TIPO_DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CPF_CNPJ, other.CPF_CNPJ);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CLIENTE, other.CLIENTE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_PEDIDO, other.CODIGO_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DATA_PEDIDO, other.DATA_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MARKETPLACE, other.MARKETPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE_DO_LOJISTA, other.FRETE_DO_LOJISTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.STATUS, other.STATUS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE, other.FRETE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCONTO, other.DESCONTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_TOTAL_PRODUTOS, other.VALOR_TOTAL_PRODUTOS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TOTAL_PEDIDO, other.TOTAL_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TITULO_PRODUTO, other.TITULO_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.QUANTIDADE, other.QUANTIDADE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_UNITARIO, other.VALOR_UNITARIO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.SKU_PRODUTO, other.SKU_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.EAN_PRODUTO, other.EAN_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NOME_LOJA_OFICIAL, other.NOME_LOJA_OFICIAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LISTAGEM, other.TIPO_LISTAGEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.COD_ENTREGA, other.COD_ENTREGA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return true;
				}
				public Integer ID_ANYMARKETLength(){
				    return 11;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return true;
				}
				public Integer CPF_CNPJLength(){
				    return 15;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return true;
				}
				public Integer CLIENTELength(){
				    return 70;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return true;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return 25;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return true;
				}
				public Integer DATA_PEDIDOLength(){
				    return 25;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return true;
				}
				public Integer MARKETPLACELength(){
				    return 50;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return true;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return 10;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return 3;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return true;
				}
				public Integer STATUSLength(){
				    return 25;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return true;
				}
				public Integer FRETELength(){
				    return 10;
				}
				public Integer FRETEPrecision(){
				    return 3;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return true;
				}
				public Integer DESCONTOLength(){
				    return 10;
				}
				public Integer DESCONTOPrecision(){
				    return 3;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return true;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return 10;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return 3;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return true;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return 10;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return 3;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return true;
				}
				public Integer TITULO_PRODUTOLength(){
				    return 150;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return true;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return true;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 10;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 3;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return true;
				}
				public Integer SKU_PRODUTOLength(){
				    return 8;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return true;
				}
				public Integer EAN_PRODUTOLength(){
				    return 20;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return true;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return 50;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return true;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return 20;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return true;
				}
				public Integer COD_ENTREGALength(){
				    return 12;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_ANYMARKET == null) ? 0 : this.ID_ANYMARKET.hashCode());
					
						result = prime * result + ((this.TIPO_DOCUMENTO == null) ? 0 : this.TIPO_DOCUMENTO.hashCode());
					
						result = prime * result + ((this.CPF_CNPJ == null) ? 0 : this.CPF_CNPJ.hashCode());
					
						result = prime * result + ((this.CLIENTE == null) ? 0 : this.CLIENTE.hashCode());
					
						result = prime * result + ((this.CODIGO_PEDIDO == null) ? 0 : this.CODIGO_PEDIDO.hashCode());
					
						result = prime * result + ((this.DATA_PEDIDO == null) ? 0 : this.DATA_PEDIDO.hashCode());
					
						result = prime * result + ((this.MARKETPLACE == null) ? 0 : this.MARKETPLACE.hashCode());
					
						result = prime * result + ((this.FRETE_DO_LOJISTA == null) ? 0 : this.FRETE_DO_LOJISTA.hashCode());
					
						result = prime * result + ((this.STATUS == null) ? 0 : this.STATUS.hashCode());
					
						result = prime * result + ((this.FRETE == null) ? 0 : this.FRETE.hashCode());
					
						result = prime * result + ((this.DESCONTO == null) ? 0 : this.DESCONTO.hashCode());
					
						result = prime * result + ((this.VALOR_TOTAL_PRODUTOS == null) ? 0 : this.VALOR_TOTAL_PRODUTOS.hashCode());
					
						result = prime * result + ((this.TOTAL_PEDIDO == null) ? 0 : this.TOTAL_PEDIDO.hashCode());
					
						result = prime * result + ((this.TITULO_PRODUTO == null) ? 0 : this.TITULO_PRODUTO.hashCode());
					
						result = prime * result + ((this.QUANTIDADE == null) ? 0 : this.QUANTIDADE.hashCode());
					
						result = prime * result + ((this.VALOR_UNITARIO == null) ? 0 : this.VALOR_UNITARIO.hashCode());
					
						result = prime * result + ((this.SKU_PRODUTO == null) ? 0 : this.SKU_PRODUTO.hashCode());
					
						result = prime * result + ((this.EAN_PRODUTO == null) ? 0 : this.EAN_PRODUTO.hashCode());
					
						result = prime * result + ((this.NOME_LOJA_OFICIAL == null) ? 0 : this.NOME_LOJA_OFICIAL.hashCode());
					
						result = prime * result + ((this.TIPO_LISTAGEM == null) ? 0 : this.TIPO_LISTAGEM.hashCode());
					
						result = prime * result + ((this.COD_ENTREGA == null) ? 0 : this.COD_ENTREGA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row3Struct other = (row3Struct) obj;
		
						if (this.ID_ANYMARKET == null) {
							if (other.ID_ANYMARKET != null)
								return false;
						
						} else if (!this.ID_ANYMARKET.equals(other.ID_ANYMARKET))
						
							return false;
					
						if (this.TIPO_DOCUMENTO == null) {
							if (other.TIPO_DOCUMENTO != null)
								return false;
						
						} else if (!this.TIPO_DOCUMENTO.equals(other.TIPO_DOCUMENTO))
						
							return false;
					
						if (this.CPF_CNPJ == null) {
							if (other.CPF_CNPJ != null)
								return false;
						
						} else if (!this.CPF_CNPJ.equals(other.CPF_CNPJ))
						
							return false;
					
						if (this.CLIENTE == null) {
							if (other.CLIENTE != null)
								return false;
						
						} else if (!this.CLIENTE.equals(other.CLIENTE))
						
							return false;
					
						if (this.CODIGO_PEDIDO == null) {
							if (other.CODIGO_PEDIDO != null)
								return false;
						
						} else if (!this.CODIGO_PEDIDO.equals(other.CODIGO_PEDIDO))
						
							return false;
					
						if (this.DATA_PEDIDO == null) {
							if (other.DATA_PEDIDO != null)
								return false;
						
						} else if (!this.DATA_PEDIDO.equals(other.DATA_PEDIDO))
						
							return false;
					
						if (this.MARKETPLACE == null) {
							if (other.MARKETPLACE != null)
								return false;
						
						} else if (!this.MARKETPLACE.equals(other.MARKETPLACE))
						
							return false;
					
						if (this.FRETE_DO_LOJISTA == null) {
							if (other.FRETE_DO_LOJISTA != null)
								return false;
						
						} else if (!this.FRETE_DO_LOJISTA.equals(other.FRETE_DO_LOJISTA))
						
							return false;
					
						if (this.STATUS == null) {
							if (other.STATUS != null)
								return false;
						
						} else if (!this.STATUS.equals(other.STATUS))
						
							return false;
					
						if (this.FRETE == null) {
							if (other.FRETE != null)
								return false;
						
						} else if (!this.FRETE.equals(other.FRETE))
						
							return false;
					
						if (this.DESCONTO == null) {
							if (other.DESCONTO != null)
								return false;
						
						} else if (!this.DESCONTO.equals(other.DESCONTO))
						
							return false;
					
						if (this.VALOR_TOTAL_PRODUTOS == null) {
							if (other.VALOR_TOTAL_PRODUTOS != null)
								return false;
						
						} else if (!this.VALOR_TOTAL_PRODUTOS.equals(other.VALOR_TOTAL_PRODUTOS))
						
							return false;
					
						if (this.TOTAL_PEDIDO == null) {
							if (other.TOTAL_PEDIDO != null)
								return false;
						
						} else if (!this.TOTAL_PEDIDO.equals(other.TOTAL_PEDIDO))
						
							return false;
					
						if (this.TITULO_PRODUTO == null) {
							if (other.TITULO_PRODUTO != null)
								return false;
						
						} else if (!this.TITULO_PRODUTO.equals(other.TITULO_PRODUTO))
						
							return false;
					
						if (this.QUANTIDADE == null) {
							if (other.QUANTIDADE != null)
								return false;
						
						} else if (!this.QUANTIDADE.equals(other.QUANTIDADE))
						
							return false;
					
						if (this.VALOR_UNITARIO == null) {
							if (other.VALOR_UNITARIO != null)
								return false;
						
						} else if (!this.VALOR_UNITARIO.equals(other.VALOR_UNITARIO))
						
							return false;
					
						if (this.SKU_PRODUTO == null) {
							if (other.SKU_PRODUTO != null)
								return false;
						
						} else if (!this.SKU_PRODUTO.equals(other.SKU_PRODUTO))
						
							return false;
					
						if (this.EAN_PRODUTO == null) {
							if (other.EAN_PRODUTO != null)
								return false;
						
						} else if (!this.EAN_PRODUTO.equals(other.EAN_PRODUTO))
						
							return false;
					
						if (this.NOME_LOJA_OFICIAL == null) {
							if (other.NOME_LOJA_OFICIAL != null)
								return false;
						
						} else if (!this.NOME_LOJA_OFICIAL.equals(other.NOME_LOJA_OFICIAL))
						
							return false;
					
						if (this.TIPO_LISTAGEM == null) {
							if (other.TIPO_LISTAGEM != null)
								return false;
						
						} else if (!this.TIPO_LISTAGEM.equals(other.TIPO_LISTAGEM))
						
							return false;
					
						if (this.COD_ENTREGA == null) {
							if (other.COD_ENTREGA != null)
								return false;
						
						} else if (!this.COD_ENTREGA.equals(other.COD_ENTREGA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row3Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            other.CPF_CNPJ = this.CPF_CNPJ;
	            other.CLIENTE = this.CLIENTE;
	            other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            other.DATA_PEDIDO = this.DATA_PEDIDO;
	            other.MARKETPLACE = this.MARKETPLACE;
	            other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            other.STATUS = this.STATUS;
	            other.FRETE = this.FRETE;
	            other.DESCONTO = this.DESCONTO;
	            other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            other.QUANTIDADE = this.QUANTIDADE;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.SKU_PRODUTO = this.SKU_PRODUTO;
	            other.EAN_PRODUTO = this.EAN_PRODUTO;
	            other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            other.COD_ENTREGA = this.COD_ENTREGA;
	            
	}

	public void copyKeysDataTo(row3Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            	other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            	other.CPF_CNPJ = this.CPF_CNPJ;
	            	other.CLIENTE = this.CLIENTE;
	            	other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            	other.DATA_PEDIDO = this.DATA_PEDIDO;
	            	other.MARKETPLACE = this.MARKETPLACE;
	            	other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            	other.STATUS = this.STATUS;
	            	other.FRETE = this.FRETE;
	            	other.DESCONTO = this.DESCONTO;
	            	other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            	other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            	other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            	other.QUANTIDADE = this.QUANTIDADE;
	            	other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            	other.SKU_PRODUTO = this.SKU_PRODUTO;
	            	other.EAN_PRODUTO = this.EAN_PRODUTO;
	            	other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            	other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            	other.COD_ENTREGA = this.COD_ENTREGA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_ANYMARKET, other.ID_ANYMARKET);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_DOCUMENTO, other.TIPO_DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CPF_CNPJ, other.CPF_CNPJ);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CLIENTE, other.CLIENTE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_PEDIDO, other.CODIGO_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DATA_PEDIDO, other.DATA_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MARKETPLACE, other.MARKETPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE_DO_LOJISTA, other.FRETE_DO_LOJISTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.STATUS, other.STATUS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE, other.FRETE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCONTO, other.DESCONTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_TOTAL_PRODUTOS, other.VALOR_TOTAL_PRODUTOS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TOTAL_PEDIDO, other.TOTAL_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TITULO_PRODUTO, other.TITULO_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.QUANTIDADE, other.QUANTIDADE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_UNITARIO, other.VALOR_UNITARIO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.SKU_PRODUTO, other.SKU_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.EAN_PRODUTO, other.EAN_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NOME_LOJA_OFICIAL, other.NOME_LOJA_OFICIAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LISTAGEM, other.TIPO_LISTAGEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.COD_ENTREGA, other.COD_ENTREGA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
row3Struct row5 = row3;
row50Struct row50 = new row50Struct();
row12Struct row12 = new row12Struct();
row12Struct row29 = row12;





	
	/**
	 * [tAggregateRow_1_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGOUT", false);
		start_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tAggregateRow_1_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_1 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_1 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_1 utilClass_tAggregateRow_1 = new UtilClass_tAggregateRow_1();

	

	class AggOperationStruct_tAggregateRow_1 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				BigDecimal COD_ENTREGA;int count = 0;
       			int QUANTIDADE_clmCount = 0;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.COD_ENTREGA == null) ? 0 : this.COD_ENTREGA.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_1 other = (AggOperationStruct_tAggregateRow_1) obj;
			
							if (this.COD_ENTREGA == null) {
								if (other.COD_ENTREGA != null) 
									return false;
							} else if (!this.COD_ENTREGA.equals(other.COD_ENTREGA)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_1 operation_result_tAggregateRow_1 = null;
	AggOperationStruct_tAggregateRow_1 operation_finder_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();
	java.util.Map<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1> hash_tAggregateRow_1 = new java.util.HashMap<AggOperationStruct_tAggregateRow_1,AggOperationStruct_tAggregateRow_1>();
	

 



/**
 * [tAggregateRow_1_AGGOUT begin ] stop
 */



	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row3Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row3Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
    
	
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "select\n	id_anymarket,\n	tipo_documento,\n	cpf_cnpj,\n	cliente,\n	codigo_pedido,\n	data_pedido,\n	marketplace,\n	frete_"
+"do_lojista,\n	status,\n	frete,\n	desconto,\n	valor_total_produtos,\n	total_pedido,\n	titulo_produto,\n	quantidade,\n	val"
+"or_unitario,\n	sku_produto,\n	ean_produto,\n	nome_loja_oficial,\n	tipo_listagem,\n	cod_entrega\n from dw_t_conciliacao_t"
+"emp\nwhere mes_processamento >= "+context.mesprocessamento+"-2";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row3.ID_ANYMARKET = null;
							} else {
	                         		
        	row3.ID_ANYMARKET = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row3.TIPO_DOCUMENTO = null;
							} else {
	                         		
        	row3.TIPO_DOCUMENTO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 2, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row3.CPF_CNPJ = null;
							} else {
	                         		
        	row3.CPF_CNPJ = routines.system.JDBCUtil.getString(rs_tDBInput_3, 3, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row3.CLIENTE = null;
							} else {
	                         		
        	row3.CLIENTE = routines.system.JDBCUtil.getString(rs_tDBInput_3, 4, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 5) {
								row3.CODIGO_PEDIDO = null;
							} else {
	                         		
        	row3.CODIGO_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 5, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 6) {
								row3.DATA_PEDIDO = null;
							} else {
	                         		
        	row3.DATA_PEDIDO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 6, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 7) {
								row3.MARKETPLACE = null;
							} else {
	                         		
        	row3.MARKETPLACE = routines.system.JDBCUtil.getString(rs_tDBInput_3, 7, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 8) {
								row3.FRETE_DO_LOJISTA = null;
							} else {
	                         		
            row3.FRETE_DO_LOJISTA = rs_tDBInput_3.getDouble(8);
            if(rs_tDBInput_3.wasNull()){
                    row3.FRETE_DO_LOJISTA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 9) {
								row3.STATUS = null;
							} else {
	                         		
        	row3.STATUS = routines.system.JDBCUtil.getString(rs_tDBInput_3, 9, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 10) {
								row3.FRETE = null;
							} else {
	                         		
            row3.FRETE = rs_tDBInput_3.getDouble(10);
            if(rs_tDBInput_3.wasNull()){
                    row3.FRETE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 11) {
								row3.DESCONTO = null;
							} else {
	                         		
            row3.DESCONTO = rs_tDBInput_3.getDouble(11);
            if(rs_tDBInput_3.wasNull()){
                    row3.DESCONTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 12) {
								row3.VALOR_TOTAL_PRODUTOS = null;
							} else {
	                         		
            row3.VALOR_TOTAL_PRODUTOS = rs_tDBInput_3.getDouble(12);
            if(rs_tDBInput_3.wasNull()){
                    row3.VALOR_TOTAL_PRODUTOS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 13) {
								row3.TOTAL_PEDIDO = null;
							} else {
	                         		
            row3.TOTAL_PEDIDO = rs_tDBInput_3.getDouble(13);
            if(rs_tDBInput_3.wasNull()){
                    row3.TOTAL_PEDIDO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 14) {
								row3.TITULO_PRODUTO = null;
							} else {
	                         		
        	row3.TITULO_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 14, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 15) {
								row3.QUANTIDADE = null;
							} else {
		                          
            row3.QUANTIDADE = rs_tDBInput_3.getInt(15);
            if(rs_tDBInput_3.wasNull()){
                    row3.QUANTIDADE = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 16) {
								row3.VALOR_UNITARIO = null;
							} else {
	                         		
            row3.VALOR_UNITARIO = rs_tDBInput_3.getDouble(16);
            if(rs_tDBInput_3.wasNull()){
                    row3.VALOR_UNITARIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 17) {
								row3.SKU_PRODUTO = null;
							} else {
	                         		
        	row3.SKU_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 17, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 18) {
								row3.EAN_PRODUTO = null;
							} else {
	                         		
        	row3.EAN_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 18, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 19) {
								row3.NOME_LOJA_OFICIAL = null;
							} else {
	                         		
        	row3.NOME_LOJA_OFICIAL = routines.system.JDBCUtil.getString(rs_tDBInput_3, 19, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 20) {
								row3.TIPO_LISTAGEM = null;
							} else {
	                         		
        	row3.TIPO_LISTAGEM = routines.system.JDBCUtil.getString(rs_tDBInput_3, 20, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 21) {
								row3.COD_ENTREGA = null;
							} else {
		                          
            row3.COD_ENTREGA = rs_tDBInput_3.getBigDecimal(21);
            if(rs_tDBInput_3.wasNull()){
                    row3.COD_ENTREGA = null;
            }
		                    }
					


 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					



    
		row3Struct oneRow_tHashOutput_7 = new row3Struct();
				
					oneRow_tHashOutput_7.ID_ANYMARKET = row3.ID_ANYMARKET;
					oneRow_tHashOutput_7.TIPO_DOCUMENTO = row3.TIPO_DOCUMENTO;
					oneRow_tHashOutput_7.CPF_CNPJ = row3.CPF_CNPJ;
					oneRow_tHashOutput_7.CLIENTE = row3.CLIENTE;
					oneRow_tHashOutput_7.CODIGO_PEDIDO = row3.CODIGO_PEDIDO;
					oneRow_tHashOutput_7.DATA_PEDIDO = row3.DATA_PEDIDO;
					oneRow_tHashOutput_7.MARKETPLACE = row3.MARKETPLACE;
					oneRow_tHashOutput_7.FRETE_DO_LOJISTA = row3.FRETE_DO_LOJISTA;
					oneRow_tHashOutput_7.STATUS = row3.STATUS;
					oneRow_tHashOutput_7.FRETE = row3.FRETE;
					oneRow_tHashOutput_7.DESCONTO = row3.DESCONTO;
					oneRow_tHashOutput_7.VALOR_TOTAL_PRODUTOS = row3.VALOR_TOTAL_PRODUTOS;
					oneRow_tHashOutput_7.TOTAL_PEDIDO = row3.TOTAL_PEDIDO;
					oneRow_tHashOutput_7.TITULO_PRODUTO = row3.TITULO_PRODUTO;
					oneRow_tHashOutput_7.QUANTIDADE = row3.QUANTIDADE;
					oneRow_tHashOutput_7.VALOR_UNITARIO = row3.VALOR_UNITARIO;
					oneRow_tHashOutput_7.SKU_PRODUTO = row3.SKU_PRODUTO;
					oneRow_tHashOutput_7.EAN_PRODUTO = row3.EAN_PRODUTO;
					oneRow_tHashOutput_7.NOME_LOJA_OFICIAL = row3.NOME_LOJA_OFICIAL;
					oneRow_tHashOutput_7.TIPO_LISTAGEM = row3.TIPO_LISTAGEM;
					oneRow_tHashOutput_7.COD_ENTREGA = row3.COD_ENTREGA;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 
     row5 = row3;


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					
	
operation_finder_tAggregateRow_1.COD_ENTREGA = row5.COD_ENTREGA;
			

	operation_finder_tAggregateRow_1.hashCodeDirty = true;
	
	operation_result_tAggregateRow_1 = hash_tAggregateRow_1.get(operation_finder_tAggregateRow_1);

	

	if(operation_result_tAggregateRow_1 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_1 = new AggOperationStruct_tAggregateRow_1();

		operation_result_tAggregateRow_1.COD_ENTREGA = operation_finder_tAggregateRow_1.COD_ENTREGA;
				
		
		

		hash_tAggregateRow_1.put(operation_result_tAggregateRow_1, operation_result_tAggregateRow_1);
	
	} // G_OutMain_AggR_001


	
				operation_result_tAggregateRow_1.QUANTIDADE_clmCount++;
				operation_result_tAggregateRow_1.count++;
				


 


	tos_count_tAggregateRow_1_AGGOUT++;

/**
 * [tAggregateRow_1_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_1_AGGOUT", true);
end_Hash.put("tAggregateRow_1_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGOUT end ] stop
 */




	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
	
         class Util_tLogRow_1 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[2];

        public void addRow(String[] row) {

            for (int i = 0; i < 2; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 1 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 1 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%2$-");
        			        sbformat.append(colLengths[1]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);                
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);	                

                
                    //last column
                    for (int i = 0; i < colLengths[1] - fillChars[1].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();
        util_tLogRow_1.setTableName("tLogRow_1");
        util_tLogRow_1.addRow(new String[]{"COD_ENTREGA","QUANTIDADE",});        
 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row50");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_1_AGGIN", false);
		start_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	
		int tos_count_tAggregateRow_1_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_1> values_tAggregateRow_1 = hash_tAggregateRow_1.values();

globalMap.put("tAggregateRow_1_NB_LINE", values_tAggregateRow_1.size());

for(AggOperationStruct_tAggregateRow_1 aggregated_row_tAggregateRow_1 : values_tAggregateRow_1) { // G_AggR_600



 



/**
 * [tAggregateRow_1_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

            				    row50.COD_ENTREGA = aggregated_row_tAggregateRow_1.COD_ENTREGA;
            				    row50.QUANTIDADE = (int) aggregated_row_tAggregateRow_1.count;
	                                	row50.QUANTIDADE = (int) aggregated_row_tAggregateRow_1.QUANTIDADE_clmCount;
	                                	

 


	tos_count_tAggregateRow_1_AGGIN++;

/**
 * [tAggregateRow_1_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row50"
						
						);
					}
					

    //Code generate according to input schema and output schema
row12.COD_ENTREGA = row50.COD_ENTREGA;
//row12.QUANTIDADE = row50.QUANTIDADE;


if (row50.QUANTIDADE.equals(1)) {
row12.QUANTIDADE = 0;
} else{
row12.QUANTIDADE = row50.QUANTIDADE;
}
    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					



    
		row12Struct oneRow_tHashOutput_6 = new row12Struct();
				
					oneRow_tHashOutput_6.COD_ENTREGA = row12.COD_ENTREGA;
					oneRow_tHashOutput_6.QUANTIDADE = row12.QUANTIDADE;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 
     row29 = row12;


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_1 = new String[2];
   				
	    		if(row29.COD_ENTREGA != null) { //              
                 row_tLogRow_1[0]=    						
								row29.COD_ENTREGA.toPlainString()
					          ;	
							
	    		} //			
    			   				
	    		if(row29.QUANTIDADE != null) { //              
                 row_tLogRow_1[1]=    						    
				                String.valueOf(row29.QUANTIDADE)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_1.addRow(row_tLogRow_1);	
				nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_1_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_1_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_1_AGGIN", true);
end_Hash.put("tAggregateRow_1_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_1_AGGIN end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row50");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_1 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    
                    consoleOut_tLogRow_1.println(util_tLogRow_1.format().toString());
                    consoleOut_tLogRow_1.flush();
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_1_AGGIN"
							globalMap.remove("tAggregateRow_1");
						
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGOUT";
	
	

 



/**
 * [tAggregateRow_1_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_1_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_1";
	
	currentComponent="tAggregateRow_1_AGGIN";
	
	

 



/**
 * [tAggregateRow_1_AGGIN finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_valor_final;

				public Double getSum_valor_final () {
					return this.sum_valor_final;
				}

				public Boolean sum_valor_finalIsNullable(){
				    return true;
				}
				public Boolean sum_valor_finalIsKey(){
				    return false;
				}
				public Integer sum_valor_finalLength(){
				    return null;
				}
				public Integer sum_valor_finalPrecision(){
				    return null;
				}
				public String sum_valor_finalDefault(){
				
					return null;
				
				}
				public String sum_valor_finalComment(){
				
				    return "";
				
				}
				public String sum_valor_finalPattern(){
				
					return "";
				
				}
				public String sum_valor_finalOriginalDbColumnName(){
				
					return "sum_valor_final";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_valor_final="+String.valueOf(sum_valor_final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_2 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_2> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_valor_final;

				public Double getSum_valor_final () {
					return this.sum_valor_final;
				}

				public Boolean sum_valor_finalIsNullable(){
				    return true;
				}
				public Boolean sum_valor_finalIsKey(){
				    return false;
				}
				public Integer sum_valor_finalLength(){
				    return null;
				}
				public Integer sum_valor_finalPrecision(){
				    return null;
				}
				public String sum_valor_finalDefault(){
				
					return null;
				
				}
				public String sum_valor_finalComment(){
				
				    return "";
				
				}
				public String sum_valor_finalPattern(){
				
					return "";
				
				}
				public String sum_valor_finalOriginalDbColumnName(){
				
					return "sum_valor_final";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_valor_final="+String.valueOf(sum_valor_final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_2 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida4Struct implements routines.system.IPersistableRow<saida4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class agregateStruct implements routines.system.IPersistableRow<agregateStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_valor_final;

				public Double getSum_valor_final () {
					return this.sum_valor_final;
				}

				public Boolean sum_valor_finalIsNullable(){
				    return true;
				}
				public Boolean sum_valor_finalIsKey(){
				    return false;
				}
				public Integer sum_valor_finalLength(){
				    return null;
				}
				public Integer sum_valor_finalPrecision(){
				    return null;
				}
				public String sum_valor_finalDefault(){
				
					return null;
				
				}
				public String sum_valor_finalComment(){
				
				    return "";
				
				}
				public String sum_valor_finalPattern(){
				
					return "";
				
				}
				public String sum_valor_finalOriginalDbColumnName(){
				
					return "sum_valor_final";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_valor_final="+String.valueOf(sum_valor_final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(agregateStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfSaida2Struct implements routines.system.IPersistableRow<copyOfSaida2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfSaida2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class copyOfsaida1Struct implements routines.system.IPersistableRow<copyOfsaida1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfsaida1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return true;
				}
				public Integer ID_ANYMARKETLength(){
				    return 11;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return true;
				}
				public Integer CPF_CNPJLength(){
				    return 15;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return true;
				}
				public Integer CLIENTELength(){
				    return 70;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return true;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return 25;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return true;
				}
				public Integer DATA_PEDIDOLength(){
				    return 25;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return true;
				}
				public Integer MARKETPLACELength(){
				    return 50;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return true;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return 10;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return 3;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return true;
				}
				public Integer STATUSLength(){
				    return 25;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return true;
				}
				public Integer FRETELength(){
				    return 10;
				}
				public Integer FRETEPrecision(){
				    return 3;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return true;
				}
				public Integer DESCONTOLength(){
				    return 10;
				}
				public Integer DESCONTOPrecision(){
				    return 3;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return true;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return 10;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return 3;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return true;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return 10;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return 3;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return true;
				}
				public Integer TITULO_PRODUTOLength(){
				    return 150;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return true;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return true;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 10;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 3;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return true;
				}
				public Integer SKU_PRODUTOLength(){
				    return 8;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return true;
				}
				public Integer EAN_PRODUTOLength(){
				    return 20;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return true;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return 50;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return true;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return 20;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return true;
				}
				public Integer COD_ENTREGALength(){
				    return 12;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_1Struct implements routines.system.IPersistableRow<after_tHashInput_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return true;
				}
				public Integer ID_ANYMARKETLength(){
				    return 11;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return true;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return 5;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return true;
				}
				public Integer CPF_CNPJLength(){
				    return 15;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return true;
				}
				public Integer CLIENTELength(){
				    return 70;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return true;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return 25;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return true;
				}
				public Integer DATA_PEDIDOLength(){
				    return 25;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return true;
				}
				public Integer MARKETPLACELength(){
				    return 50;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return true;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return 10;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return 3;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return true;
				}
				public Integer STATUSLength(){
				    return 25;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return true;
				}
				public Integer FRETELength(){
				    return 10;
				}
				public Integer FRETEPrecision(){
				    return 3;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return true;
				}
				public Integer DESCONTOLength(){
				    return 10;
				}
				public Integer DESCONTOPrecision(){
				    return 3;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return true;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return 10;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return 3;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return true;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return 10;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return 3;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return true;
				}
				public Integer TITULO_PRODUTOLength(){
				    return 150;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return true;
				}
				public Integer QUANTIDADELength(){
				    return 8;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return true;
				}
				public Integer VALOR_UNITARIOLength(){
				    return 10;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return 3;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return true;
				}
				public Integer SKU_PRODUTOLength(){
				    return 8;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return true;
				}
				public Integer EAN_PRODUTOLength(){
				    return 20;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return true;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return 50;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return true;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return 20;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return true;
				}
				public Integer COD_ENTREGALength(){
				    return 12;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_ANYMARKET == null) ? 0 : this.ID_ANYMARKET.hashCode());
					
						result = prime * result + ((this.TIPO_DOCUMENTO == null) ? 0 : this.TIPO_DOCUMENTO.hashCode());
					
						result = prime * result + ((this.CPF_CNPJ == null) ? 0 : this.CPF_CNPJ.hashCode());
					
						result = prime * result + ((this.CLIENTE == null) ? 0 : this.CLIENTE.hashCode());
					
						result = prime * result + ((this.CODIGO_PEDIDO == null) ? 0 : this.CODIGO_PEDIDO.hashCode());
					
						result = prime * result + ((this.DATA_PEDIDO == null) ? 0 : this.DATA_PEDIDO.hashCode());
					
						result = prime * result + ((this.MARKETPLACE == null) ? 0 : this.MARKETPLACE.hashCode());
					
						result = prime * result + ((this.FRETE_DO_LOJISTA == null) ? 0 : this.FRETE_DO_LOJISTA.hashCode());
					
						result = prime * result + ((this.STATUS == null) ? 0 : this.STATUS.hashCode());
					
						result = prime * result + ((this.FRETE == null) ? 0 : this.FRETE.hashCode());
					
						result = prime * result + ((this.DESCONTO == null) ? 0 : this.DESCONTO.hashCode());
					
						result = prime * result + ((this.VALOR_TOTAL_PRODUTOS == null) ? 0 : this.VALOR_TOTAL_PRODUTOS.hashCode());
					
						result = prime * result + ((this.TOTAL_PEDIDO == null) ? 0 : this.TOTAL_PEDIDO.hashCode());
					
						result = prime * result + ((this.TITULO_PRODUTO == null) ? 0 : this.TITULO_PRODUTO.hashCode());
					
						result = prime * result + ((this.QUANTIDADE == null) ? 0 : this.QUANTIDADE.hashCode());
					
						result = prime * result + ((this.VALOR_UNITARIO == null) ? 0 : this.VALOR_UNITARIO.hashCode());
					
						result = prime * result + ((this.SKU_PRODUTO == null) ? 0 : this.SKU_PRODUTO.hashCode());
					
						result = prime * result + ((this.EAN_PRODUTO == null) ? 0 : this.EAN_PRODUTO.hashCode());
					
						result = prime * result + ((this.NOME_LOJA_OFICIAL == null) ? 0 : this.NOME_LOJA_OFICIAL.hashCode());
					
						result = prime * result + ((this.TIPO_LISTAGEM == null) ? 0 : this.TIPO_LISTAGEM.hashCode());
					
						result = prime * result + ((this.COD_ENTREGA == null) ? 0 : this.COD_ENTREGA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tHashInput_1Struct other = (after_tHashInput_1Struct) obj;
		
						if (this.ID_ANYMARKET == null) {
							if (other.ID_ANYMARKET != null)
								return false;
						
						} else if (!this.ID_ANYMARKET.equals(other.ID_ANYMARKET))
						
							return false;
					
						if (this.TIPO_DOCUMENTO == null) {
							if (other.TIPO_DOCUMENTO != null)
								return false;
						
						} else if (!this.TIPO_DOCUMENTO.equals(other.TIPO_DOCUMENTO))
						
							return false;
					
						if (this.CPF_CNPJ == null) {
							if (other.CPF_CNPJ != null)
								return false;
						
						} else if (!this.CPF_CNPJ.equals(other.CPF_CNPJ))
						
							return false;
					
						if (this.CLIENTE == null) {
							if (other.CLIENTE != null)
								return false;
						
						} else if (!this.CLIENTE.equals(other.CLIENTE))
						
							return false;
					
						if (this.CODIGO_PEDIDO == null) {
							if (other.CODIGO_PEDIDO != null)
								return false;
						
						} else if (!this.CODIGO_PEDIDO.equals(other.CODIGO_PEDIDO))
						
							return false;
					
						if (this.DATA_PEDIDO == null) {
							if (other.DATA_PEDIDO != null)
								return false;
						
						} else if (!this.DATA_PEDIDO.equals(other.DATA_PEDIDO))
						
							return false;
					
						if (this.MARKETPLACE == null) {
							if (other.MARKETPLACE != null)
								return false;
						
						} else if (!this.MARKETPLACE.equals(other.MARKETPLACE))
						
							return false;
					
						if (this.FRETE_DO_LOJISTA == null) {
							if (other.FRETE_DO_LOJISTA != null)
								return false;
						
						} else if (!this.FRETE_DO_LOJISTA.equals(other.FRETE_DO_LOJISTA))
						
							return false;
					
						if (this.STATUS == null) {
							if (other.STATUS != null)
								return false;
						
						} else if (!this.STATUS.equals(other.STATUS))
						
							return false;
					
						if (this.FRETE == null) {
							if (other.FRETE != null)
								return false;
						
						} else if (!this.FRETE.equals(other.FRETE))
						
							return false;
					
						if (this.DESCONTO == null) {
							if (other.DESCONTO != null)
								return false;
						
						} else if (!this.DESCONTO.equals(other.DESCONTO))
						
							return false;
					
						if (this.VALOR_TOTAL_PRODUTOS == null) {
							if (other.VALOR_TOTAL_PRODUTOS != null)
								return false;
						
						} else if (!this.VALOR_TOTAL_PRODUTOS.equals(other.VALOR_TOTAL_PRODUTOS))
						
							return false;
					
						if (this.TOTAL_PEDIDO == null) {
							if (other.TOTAL_PEDIDO != null)
								return false;
						
						} else if (!this.TOTAL_PEDIDO.equals(other.TOTAL_PEDIDO))
						
							return false;
					
						if (this.TITULO_PRODUTO == null) {
							if (other.TITULO_PRODUTO != null)
								return false;
						
						} else if (!this.TITULO_PRODUTO.equals(other.TITULO_PRODUTO))
						
							return false;
					
						if (this.QUANTIDADE == null) {
							if (other.QUANTIDADE != null)
								return false;
						
						} else if (!this.QUANTIDADE.equals(other.QUANTIDADE))
						
							return false;
					
						if (this.VALOR_UNITARIO == null) {
							if (other.VALOR_UNITARIO != null)
								return false;
						
						} else if (!this.VALOR_UNITARIO.equals(other.VALOR_UNITARIO))
						
							return false;
					
						if (this.SKU_PRODUTO == null) {
							if (other.SKU_PRODUTO != null)
								return false;
						
						} else if (!this.SKU_PRODUTO.equals(other.SKU_PRODUTO))
						
							return false;
					
						if (this.EAN_PRODUTO == null) {
							if (other.EAN_PRODUTO != null)
								return false;
						
						} else if (!this.EAN_PRODUTO.equals(other.EAN_PRODUTO))
						
							return false;
					
						if (this.NOME_LOJA_OFICIAL == null) {
							if (other.NOME_LOJA_OFICIAL != null)
								return false;
						
						} else if (!this.NOME_LOJA_OFICIAL.equals(other.NOME_LOJA_OFICIAL))
						
							return false;
					
						if (this.TIPO_LISTAGEM == null) {
							if (other.TIPO_LISTAGEM != null)
								return false;
						
						} else if (!this.TIPO_LISTAGEM.equals(other.TIPO_LISTAGEM))
						
							return false;
					
						if (this.COD_ENTREGA == null) {
							if (other.COD_ENTREGA != null)
								return false;
						
						} else if (!this.COD_ENTREGA.equals(other.COD_ENTREGA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tHashInput_1Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            other.CPF_CNPJ = this.CPF_CNPJ;
	            other.CLIENTE = this.CLIENTE;
	            other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            other.DATA_PEDIDO = this.DATA_PEDIDO;
	            other.MARKETPLACE = this.MARKETPLACE;
	            other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            other.STATUS = this.STATUS;
	            other.FRETE = this.FRETE;
	            other.DESCONTO = this.DESCONTO;
	            other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            other.QUANTIDADE = this.QUANTIDADE;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.SKU_PRODUTO = this.SKU_PRODUTO;
	            other.EAN_PRODUTO = this.EAN_PRODUTO;
	            other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            other.COD_ENTREGA = this.COD_ENTREGA;
	            
	}

	public void copyKeysDataTo(after_tHashInput_1Struct other) {

		other.ID_ANYMARKET = this.ID_ANYMARKET;
	            	other.TIPO_DOCUMENTO = this.TIPO_DOCUMENTO;
	            	other.CPF_CNPJ = this.CPF_CNPJ;
	            	other.CLIENTE = this.CLIENTE;
	            	other.CODIGO_PEDIDO = this.CODIGO_PEDIDO;
	            	other.DATA_PEDIDO = this.DATA_PEDIDO;
	            	other.MARKETPLACE = this.MARKETPLACE;
	            	other.FRETE_DO_LOJISTA = this.FRETE_DO_LOJISTA;
	            	other.STATUS = this.STATUS;
	            	other.FRETE = this.FRETE;
	            	other.DESCONTO = this.DESCONTO;
	            	other.VALOR_TOTAL_PRODUTOS = this.VALOR_TOTAL_PRODUTOS;
	            	other.TOTAL_PEDIDO = this.TOTAL_PEDIDO;
	            	other.TITULO_PRODUTO = this.TITULO_PRODUTO;
	            	other.QUANTIDADE = this.QUANTIDADE;
	            	other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            	other.SKU_PRODUTO = this.SKU_PRODUTO;
	            	other.EAN_PRODUTO = this.EAN_PRODUTO;
	            	other.NOME_LOJA_OFICIAL = this.NOME_LOJA_OFICIAL;
	            	other.TIPO_LISTAGEM = this.TIPO_LISTAGEM;
	            	other.COD_ENTREGA = this.COD_ENTREGA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_ANYMARKET, other.ID_ANYMARKET);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_DOCUMENTO, other.TIPO_DOCUMENTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CPF_CNPJ, other.CPF_CNPJ);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CLIENTE, other.CLIENTE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CODIGO_PEDIDO, other.CODIGO_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DATA_PEDIDO, other.DATA_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.MARKETPLACE, other.MARKETPLACE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE_DO_LOJISTA, other.FRETE_DO_LOJISTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.STATUS, other.STATUS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.FRETE, other.FRETE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.DESCONTO, other.DESCONTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_TOTAL_PRODUTOS, other.VALOR_TOTAL_PRODUTOS);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TOTAL_PEDIDO, other.TOTAL_PEDIDO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TITULO_PRODUTO, other.TITULO_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.QUANTIDADE, other.QUANTIDADE);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.VALOR_UNITARIO, other.VALOR_UNITARIO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.SKU_PRODUTO, other.SKU_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.EAN_PRODUTO, other.EAN_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.NOME_LOJA_OFICIAL, other.NOME_LOJA_OFICIAL);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.TIPO_LISTAGEM, other.TIPO_LISTAGEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.COD_ENTREGA, other.COD_ENTREGA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_3Process(globalMap);
		tHashInput_17Process(globalMap);
		tHashInput_4Process(globalMap);

		row18Struct row18 = new row18Struct();
copyOfsaida1Struct copyOfsaida1 = new copyOfsaida1Struct();
row16Struct row16 = new row16Struct();
row20Struct row20 = new row20Struct();
copyOfSaida2Struct copyOfSaida2 = new copyOfSaida2Struct();
row22Struct row22 = new row22Struct();
row41Struct row41 = new row41Struct();
saida4Struct saida4 = new saida4Struct();
agregateStruct agregate = new agregateStruct();
row35Struct row35 = new row35Struct();











	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida4");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida4Struct> tHashFile_tHashOutput_8 = null;
		String hashKey_tHashOutput_8 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_8";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_8)){
			    if(mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8) == null){
	      		    mf_tHashOutput_8.getResourceMap().put(hashKey_tHashOutput_8, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida4Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }else{
			    	tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }
			}
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */




	
	/**
	 * [tAggregateRow_2_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGOUT", false);
		start_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"agregate");
					}
				
		int tos_count_tAggregateRow_2_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_2 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_2 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_2 utilClass_tAggregateRow_2 = new UtilClass_tAggregateRow_2();

	

	class AggOperationStruct_tAggregateRow_2 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				BigDecimal COD_ENTREGA;BigDecimal sum_valor_final_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.COD_ENTREGA == null) ? 0 : this.COD_ENTREGA.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_2 other = (AggOperationStruct_tAggregateRow_2) obj;
			
							if (this.COD_ENTREGA == null) {
								if (other.COD_ENTREGA != null) 
									return false;
							} else if (!this.COD_ENTREGA.equals(other.COD_ENTREGA)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_2 operation_result_tAggregateRow_2 = null;
	AggOperationStruct_tAggregateRow_2 operation_finder_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();
	java.util.Map<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2> hash_tAggregateRow_2 = new java.util.HashMap<AggOperationStruct_tAggregateRow_2,AggOperationStruct_tAggregateRow_2>();
	

 



/**
 * [tAggregateRow_2_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida4Struct saida4_tmp = new saida4Struct();
agregateStruct agregate_tmp = new agregateStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfSaida2");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct>) 
					globalMap.get( "tHash_Lookup_row21" ))
					;					
					
	

row21Struct row21HashKey = new row21Struct();
row21Struct row21Default = new row21Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfSaida2Struct copyOfSaida2_tmp = new copyOfSaida2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tMap_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_19", false);
		start_Hash.put("tMap_19", System.currentTimeMillis());
		
	
	currentComponent="tMap_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfsaida1");
					}
				
		int tos_count_tMap_19 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) 
					globalMap.get( "tHash_Lookup_row47" ))
					;					
					
	

row47Struct row47HashKey = new row47Struct();
row47Struct row47Default = new row47Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_19__Struct  {
}
Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
row16Struct row16_tmp = new row16Struct();
// ###############################

        
        



        









 



/**
 * [tMap_19 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct>) 
					globalMap.get( "tHash_Lookup_row19" ))
					;					
					
	

row19Struct row19HashKey = new row19Struct();
row19Struct row19Default = new row19Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfsaida1Struct copyOfsaida1_tmp = new copyOfsaida1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row3Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row3Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row3Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row18.ID_ANYMARKET = next_tHashInput_1.ID_ANYMARKET;
	row18.TIPO_DOCUMENTO = next_tHashInput_1.TIPO_DOCUMENTO;
	row18.CPF_CNPJ = next_tHashInput_1.CPF_CNPJ;
	row18.CLIENTE = next_tHashInput_1.CLIENTE;
	row18.CODIGO_PEDIDO = next_tHashInput_1.CODIGO_PEDIDO;
	row18.DATA_PEDIDO = next_tHashInput_1.DATA_PEDIDO;
	row18.MARKETPLACE = next_tHashInput_1.MARKETPLACE;
	row18.FRETE_DO_LOJISTA = next_tHashInput_1.FRETE_DO_LOJISTA;
	row18.STATUS = next_tHashInput_1.STATUS;
	row18.FRETE = next_tHashInput_1.FRETE;
	row18.DESCONTO = next_tHashInput_1.DESCONTO;
	row18.VALOR_TOTAL_PRODUTOS = next_tHashInput_1.VALOR_TOTAL_PRODUTOS;
	row18.TOTAL_PEDIDO = next_tHashInput_1.TOTAL_PEDIDO;
	row18.TITULO_PRODUTO = next_tHashInput_1.TITULO_PRODUTO;
	row18.QUANTIDADE = next_tHashInput_1.QUANTIDADE;
	row18.VALOR_UNITARIO = next_tHashInput_1.VALOR_UNITARIO;
	row18.SKU_PRODUTO = next_tHashInput_1.SKU_PRODUTO;
	row18.EAN_PRODUTO = next_tHashInput_1.EAN_PRODUTO;
	row18.NOME_LOJA_OFICIAL = next_tHashInput_1.NOME_LOJA_OFICIAL;
	row18.TIPO_LISTAGEM = next_tHashInput_1.TIPO_LISTAGEM;
	row18.COD_ENTREGA = next_tHashInput_1.COD_ENTREGA;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row19Struct row19 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row19" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow19 = false;
       		  	    	
       		  	    	
 							row19Struct row19ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row19HashKey.SHIPPING_ID = row18.COD_ENTREGA ;
                        		    		

								
		                        	row19HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row19.lookup( row19HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row19 != null && tHash_Lookup_row19.getCount(row19HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row19' and it contains more one result from keys :  row19.SHIPPING_ID = '" + row19HashKey.SHIPPING_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row19Struct fromLookup_row19 = null;
							row19 = row19Default;
										 
							
								 
							
							
								if (tHash_Lookup_row19 !=null && tHash_Lookup_row19.hasNext()) { // G 099
								
							
								
								fromLookup_row19 = tHash_Lookup_row19.next();

							
							
								} // G 099
							
							

							if(fromLookup_row19 != null) {
								row19 = fromLookup_row19;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

copyOfsaida1 = null;


// # Output table : 'copyOfsaida1'
copyOfsaida1_tmp.ID_ANYMARKET = row18.ID_ANYMARKET ;
copyOfsaida1_tmp.TIPO_DOCUMENTO = row18.TIPO_DOCUMENTO ;
copyOfsaida1_tmp.CPF_CNPJ = row18.CPF_CNPJ ;
copyOfsaida1_tmp.CLIENTE = row18.CLIENTE ;
copyOfsaida1_tmp.CODIGO_PEDIDO = row18.CODIGO_PEDIDO ;
copyOfsaida1_tmp.DATA_PEDIDO = row18.DATA_PEDIDO ;
copyOfsaida1_tmp.MARKETPLACE = row18.MARKETPLACE ;
copyOfsaida1_tmp.FRETE_DO_LOJISTA = row18.FRETE_DO_LOJISTA ;
copyOfsaida1_tmp.STATUS = row18.STATUS ;
copyOfsaida1_tmp.FRETE = row18.FRETE ;
copyOfsaida1_tmp.DESCONTO = row18.DESCONTO ;
copyOfsaida1_tmp.VALOR_TOTAL_PRODUTOS = row18.VALOR_TOTAL_PRODUTOS ;
copyOfsaida1_tmp.TOTAL_PEDIDO = row18.TOTAL_PEDIDO ;
copyOfsaida1_tmp.TITULO_PRODUTO = row18.TITULO_PRODUTO ;
copyOfsaida1_tmp.QUANTIDADE = row18.QUANTIDADE ;
copyOfsaida1_tmp.VALOR_UNITARIO = row18.VALOR_UNITARIO ;
copyOfsaida1_tmp.SKU_PRODUTO = row18.SKU_PRODUTO ;
copyOfsaida1_tmp.EAN_PRODUTO = row18.EAN_PRODUTO ;
copyOfsaida1_tmp.NOME_LOJA_OFICIAL = row18.NOME_LOJA_OFICIAL ;
copyOfsaida1_tmp.TIPO_LISTAGEM = row18.TIPO_LISTAGEM ;
copyOfsaida1_tmp.COD_ENTREGA = row18.COD_ENTREGA ;
copyOfsaida1_tmp.MLB_CATEGORIA = null;
copyOfsaida1_tmp.Comissao = row19.MP_FEE_AMOUNT != null ? row19.MP_FEE_AMOUNT : 0 ;
copyOfsaida1_tmp.Comissao1 = null;
copyOfsaida1_tmp.Percent_Comissao = null;
copyOfsaida1_tmp.Valor_final = null;
copyOfsaida1_tmp.Validacao = null;
copyOfsaida1_tmp.Diferenca = null;
copyOfsaida1_tmp.Desconto1 = null;
copyOfsaida1_tmp.Mais_de_um = null;
copyOfsaida1_tmp.Valor_Final1 = null;
copyOfsaida1_tmp.Validacao1 = null;
copyOfsaida1_tmp.Diferenca1 = null;
copyOfsaida1_tmp.Sem_desconto_comercial = null;
copyOfsaida1_tmp.Solicitar = null;
copyOfsaida1_tmp.Valor_Cobrado = null;
copyOfsaida1_tmp.Valor_Correto = null;
copyOfsaida1_tmp.Valor_a_devolver = null;
copyOfsaida1_tmp.Observacao = null;
copyOfsaida1_tmp.Repasse = null;
copyOfsaida1_tmp.Frete1 = row19.SHIPPING_FEE_AMOUNT != null ? row19.SHIPPING_FEE_AMOUNT : 0 ;
copyOfsaida1_tmp.Custo = null;
copyOfsaida1_tmp.Margem = null;
copyOfsaida1_tmp.SOURCE_ID = row19.SOURCE_ID ;
copyOfsaida1 = copyOfsaida1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "copyOfsaida1"
if(copyOfsaida1 != null) { 



	
	/**
	 * [tMap_19 main ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfsaida1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;
		
						row47Struct row47 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_19 = false;
		boolean mainRowRejected_tMap_19 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row47" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow47 = false;
       		  	    	
       		  	    	
 							row47Struct row47ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_19) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_19 = false;
								
                        		    		    row47HashKey.SKU = copyOfsaida1.SKU_PRODUTO ;
                        		    		

								
		                        	row47HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row47.lookup( row47HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row47 != null && tHash_Lookup_row47.getCount(row47HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row47' and it contains more one result from keys :  row47.SKU = '" + row47HashKey.SKU + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row47Struct fromLookup_row47 = null;
							row47 = row47Default;
										 
							
								 
							
							
								if (tHash_Lookup_row47 !=null && tHash_Lookup_row47.hasNext()) { // G 099
								
							
								
								fromLookup_row47 = tHash_Lookup_row47.next();

							
							
								} // G 099
							
							

							if(fromLookup_row47 != null) {
								row47 = fromLookup_row47;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_19__Struct Var = Var__tMap_19;// ###############################
        // ###############################
        // # Output tables

row16 = null;


// # Output table : 'row16'
row16_tmp.ID_ANYMARKET = copyOfsaida1.ID_ANYMARKET;
row16_tmp.TIPO_DOCUMENTO = copyOfsaida1.TIPO_DOCUMENTO;
row16_tmp.CPF_CNPJ = copyOfsaida1.CPF_CNPJ;
row16_tmp.CLIENTE = copyOfsaida1.CLIENTE;
row16_tmp.CODIGO_PEDIDO = copyOfsaida1.CODIGO_PEDIDO;
row16_tmp.DATA_PEDIDO = copyOfsaida1.DATA_PEDIDO;
row16_tmp.MARKETPLACE = copyOfsaida1.MARKETPLACE;
row16_tmp.FRETE_DO_LOJISTA = copyOfsaida1.FRETE_DO_LOJISTA;
row16_tmp.STATUS = copyOfsaida1.STATUS;
row16_tmp.FRETE = copyOfsaida1.FRETE;
row16_tmp.DESCONTO = copyOfsaida1.DESCONTO;
row16_tmp.VALOR_TOTAL_PRODUTOS = copyOfsaida1.VALOR_TOTAL_PRODUTOS;
row16_tmp.TOTAL_PEDIDO = copyOfsaida1.TOTAL_PEDIDO;
row16_tmp.TITULO_PRODUTO = copyOfsaida1.TITULO_PRODUTO;
row16_tmp.QUANTIDADE = copyOfsaida1.QUANTIDADE;
row16_tmp.VALOR_UNITARIO = copyOfsaida1.VALOR_UNITARIO;
row16_tmp.SKU_PRODUTO = copyOfsaida1.SKU_PRODUTO;
row16_tmp.EAN_PRODUTO = copyOfsaida1.EAN_PRODUTO;
row16_tmp.NOME_LOJA_OFICIAL = copyOfsaida1.NOME_LOJA_OFICIAL;
row16_tmp.TIPO_LISTAGEM = row47.Categoria ;
row16_tmp.COD_ENTREGA = copyOfsaida1.COD_ENTREGA;
row16_tmp.MLB_CATEGORIA = row47.CategoriaID ;
row16_tmp.Comissao = copyOfsaida1.Comissao;
row16_tmp.Comissao1 = copyOfsaida1.Comissao1;
row16_tmp.Percent_Comissao = copyOfsaida1.Percent_Comissao;
row16_tmp.Valor_final = copyOfsaida1.Valor_final;
row16_tmp.Validacao = copyOfsaida1.Validacao;
row16_tmp.Diferenca = copyOfsaida1.Diferenca;
row16_tmp.Desconto1 = copyOfsaida1.Desconto1;
row16_tmp.Mais_de_um = copyOfsaida1.Mais_de_um;
row16_tmp.Valor_Final1 = copyOfsaida1.Valor_Final1;
row16_tmp.Validacao1 = copyOfsaida1.Validacao1;
row16_tmp.Diferenca1 = copyOfsaida1.Diferenca1;
row16_tmp.Sem_desconto_comercial = copyOfsaida1.Sem_desconto_comercial;
row16_tmp.Solicitar = copyOfsaida1.Solicitar;
row16_tmp.Valor_Cobrado = copyOfsaida1.Valor_Cobrado;
row16_tmp.Valor_Correto = copyOfsaida1.Valor_Correto;
row16_tmp.Valor_a_devolver = copyOfsaida1.Valor_a_devolver;
row16_tmp.Observacao = copyOfsaida1.Observacao;
row16_tmp.Repasse = copyOfsaida1.Repasse;
row16_tmp.Frete1 = copyOfsaida1.Frete1;
row16_tmp.Custo = copyOfsaida1.Custo;
row16_tmp.Margem = copyOfsaida1.Margem;
row16_tmp.SOURCE_ID = copyOfsaida1.SOURCE_ID ;
row16 = row16_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_19 = false;










 


	tos_count_tMap_19++;

/**
 * [tMap_19 main ] stop
 */
	
	/**
	 * [tMap_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_begin ] stop
 */
// Start of branch "row16"
if(row16 != null) { 



	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					

    //Code generate according to input schema and output schema
row20.ID_ANYMARKET = row16.ID_ANYMARKET;
row20.TIPO_DOCUMENTO = row16.TIPO_DOCUMENTO;
row20.CPF_CNPJ = row16.CPF_CNPJ;
row20.CLIENTE = row16.CLIENTE;
row20.CODIGO_PEDIDO = row16.CODIGO_PEDIDO;
row20.DATA_PEDIDO = row16.DATA_PEDIDO;
row20.MARKETPLACE = row16.MARKETPLACE;
row20.FRETE_DO_LOJISTA = row16.FRETE_DO_LOJISTA;
row20.STATUS = row16.STATUS;
row20.FRETE = row16.FRETE;
row20.DESCONTO = row16.DESCONTO;
row20.VALOR_TOTAL_PRODUTOS = row16.VALOR_TOTAL_PRODUTOS;
row20.TOTAL_PEDIDO = row16.TOTAL_PEDIDO;
row20.TITULO_PRODUTO = row16.TITULO_PRODUTO;
row20.QUANTIDADE = row16.QUANTIDADE;
row20.VALOR_UNITARIO = row16.VALOR_UNITARIO;
row20.SKU_PRODUTO = row16.SKU_PRODUTO;
row20.EAN_PRODUTO = row16.EAN_PRODUTO;
row20.NOME_LOJA_OFICIAL = row16.NOME_LOJA_OFICIAL;
row20.TIPO_LISTAGEM = row16.TIPO_LISTAGEM;
row20.COD_ENTREGA = row16.COD_ENTREGA;
row20.MLB_CATEGORIA = row16.MLB_CATEGORIA;
row20.Comissao = row16.Comissao;
//row20.Comissao1 = row16.Comissao1;
row20.Percent_Comissao = row16.Percent_Comissao;
row20.Valor_final = row16.Valor_final;
row20.Validacao = row16.Validacao;
row20.Diferenca = row16.Diferenca;
row20.Desconto1 = row16.Desconto1;
row20.Mais_de_um = row16.Mais_de_um;
row20.Valor_Final1 = row16.Valor_Final1;
row20.Validacao1 = row16.Validacao1;
row20.Diferenca1 = row16.Diferenca1;
row20.Sem_desconto_comercial = row16.Sem_desconto_comercial;
row20.Solicitar = row16.Solicitar;
row20.Valor_Cobrado = row16.Valor_Cobrado;
row20.Valor_Correto = row16.Valor_Correto;
row20.Valor_a_devolver = row16.Valor_a_devolver;
row20.Observacao = row16.Observacao;
row20.Repasse = row16.Repasse;
row20.Frete1 = row16.Frete1;
row20.Custo = row16.Custo;
row20.Margem = row16.Margem;


// Calculo da Comissão R$
if (row16.VALOR_UNITARIO < 79) {
row20.Comissao1 = ((row16.VALOR_UNITARIO-(5*row16.QUANTIDADE))/row16.VALOR_UNITARIO);
} else{
row20.Comissao1 = ((row16.Comissao / row16.VALOR_UNITARIO));
}


// agregando os campos NOME DA LOJA OFICIAL & MLB CATEGORIA & TIPO DE LISTAGEM
row20.CONCATENATE = row20.NOME_LOJA_OFICIAL+""+row20.MLB_CATEGORIA+""+row20.TIPO_LISTAGEM;

row20.SOURCE_ID = row16.SOURCE_ID;
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
						row21Struct row21 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row21" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow21 = false;
       		  	    	
       		  	    	
 							row21Struct row21ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_6) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_6 = false;
								
                        		    		    row21HashKey.concat = row20.CONCATENATE ;
                        		    		

								
		                        	row21HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row21.lookup( row21HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row21 != null && tHash_Lookup_row21.getCount(row21HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row21' and it contains more one result from keys :  row21.concat = '" + row21HashKey.concat + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row21Struct fromLookup_row21 = null;
							row21 = row21Default;
										 
							
								 
							
							
								if (tHash_Lookup_row21 !=null && tHash_Lookup_row21.hasNext()) { // G 099
								
							
								
								fromLookup_row21 = tHash_Lookup_row21.next();

							
							
								} // G 099
							
							

							if(fromLookup_row21 != null) {
								row21 = fromLookup_row21;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

copyOfSaida2 = null;


// # Output table : 'copyOfSaida2'
copyOfSaida2_tmp.ID_ANYMARKET = row20.ID_ANYMARKET ;
copyOfSaida2_tmp.TIPO_DOCUMENTO = row20.TIPO_DOCUMENTO ;
copyOfSaida2_tmp.CPF_CNPJ = row20.CPF_CNPJ ;
copyOfSaida2_tmp.CLIENTE = row20.CLIENTE ;
copyOfSaida2_tmp.CODIGO_PEDIDO = row20.CODIGO_PEDIDO ;
copyOfSaida2_tmp.DATA_PEDIDO = row20.DATA_PEDIDO ;
copyOfSaida2_tmp.MARKETPLACE = row20.MARKETPLACE ;
copyOfSaida2_tmp.FRETE_DO_LOJISTA = row20.FRETE_DO_LOJISTA ;
copyOfSaida2_tmp.STATUS = row20.STATUS ;
copyOfSaida2_tmp.FRETE = row20.FRETE ;
copyOfSaida2_tmp.DESCONTO = row20.DESCONTO ;
copyOfSaida2_tmp.VALOR_TOTAL_PRODUTOS = row20.VALOR_TOTAL_PRODUTOS ;
copyOfSaida2_tmp.TOTAL_PEDIDO = row20.TOTAL_PEDIDO ;
copyOfSaida2_tmp.TITULO_PRODUTO = row20.TITULO_PRODUTO ;
copyOfSaida2_tmp.QUANTIDADE = row20.QUANTIDADE ;
copyOfSaida2_tmp.VALOR_UNITARIO = row20.VALOR_UNITARIO ;
copyOfSaida2_tmp.SKU_PRODUTO = row20.SKU_PRODUTO ;
copyOfSaida2_tmp.EAN_PRODUTO = row20.EAN_PRODUTO ;
copyOfSaida2_tmp.NOME_LOJA_OFICIAL = row20.NOME_LOJA_OFICIAL ;
copyOfSaida2_tmp.TIPO_LISTAGEM = row21.Categoria ;
copyOfSaida2_tmp.COD_ENTREGA = row20.COD_ENTREGA ;
copyOfSaida2_tmp.MLB_CATEGORIA = row20.MLB_CATEGORIA ;
copyOfSaida2_tmp.Comissao = row20.Comissao ;
copyOfSaida2_tmp.Comissao1 = row20.Comissao1 ;
copyOfSaida2_tmp.Percent_Comissao = row21.Comissao_Liquida != null ? row21.Comissao_Liquida : 0 ;
copyOfSaida2_tmp.Valor_final = row20.Valor_final ;
copyOfSaida2_tmp.Validacao = row20.Validacao ;
copyOfSaida2_tmp.Diferenca = row20.Diferenca ;
copyOfSaida2_tmp.Desconto1 = row21.desconto != null ? row21.desconto : 0 ;
copyOfSaida2_tmp.Mais_de_um = row20.Mais_de_um ;
copyOfSaida2_tmp.Valor_Final1 = row20.Valor_Final1 ;
copyOfSaida2_tmp.Validacao1 = row20.Validacao1 ;
copyOfSaida2_tmp.Diferenca1 = row20.Diferenca1 ;
copyOfSaida2_tmp.Sem_desconto_comercial = row20.Sem_desconto_comercial ;
copyOfSaida2_tmp.Solicitar = row20.Solicitar ;
copyOfSaida2_tmp.Valor_Cobrado = row20.Valor_Cobrado ;
copyOfSaida2_tmp.Valor_Correto = row20.Valor_Correto ;
copyOfSaida2_tmp.Valor_a_devolver = row20.Valor_a_devolver ;
copyOfSaida2_tmp.Observacao = row20.Observacao ;
copyOfSaida2_tmp.Repasse = row20.Repasse ;
copyOfSaida2_tmp.Frete1 = row20.Frete1 ;
copyOfSaida2_tmp.Custo = row20.Custo ;
copyOfSaida2_tmp.Margem = row20.Margem ;
copyOfSaida2_tmp.CONCATENATE = row20.CONCATENATE ;
copyOfSaida2_tmp.SOURCE_ID = row20.SOURCE_ID ;
copyOfSaida2 = copyOfSaida2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "copyOfSaida2"
if(copyOfSaida2 != null) { 



	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfSaida2"
						
						);
					}
					

    //Code generate according to input schema and output schema
row22.ID_ANYMARKET = copyOfSaida2.ID_ANYMARKET;
row22.TIPO_DOCUMENTO = copyOfSaida2.TIPO_DOCUMENTO;
row22.CPF_CNPJ = copyOfSaida2.CPF_CNPJ;
row22.CLIENTE = copyOfSaida2.CLIENTE;
row22.CODIGO_PEDIDO = copyOfSaida2.CODIGO_PEDIDO;
row22.DATA_PEDIDO = copyOfSaida2.DATA_PEDIDO;
row22.MARKETPLACE = copyOfSaida2.MARKETPLACE;
row22.FRETE_DO_LOJISTA = copyOfSaida2.FRETE_DO_LOJISTA;
row22.STATUS = copyOfSaida2.STATUS;
row22.FRETE = copyOfSaida2.FRETE;
row22.DESCONTO = copyOfSaida2.DESCONTO;
row22.VALOR_TOTAL_PRODUTOS = copyOfSaida2.VALOR_TOTAL_PRODUTOS;
row22.TOTAL_PEDIDO = copyOfSaida2.TOTAL_PEDIDO;
row22.TITULO_PRODUTO = copyOfSaida2.TITULO_PRODUTO;
row22.QUANTIDADE = copyOfSaida2.QUANTIDADE;
row22.VALOR_UNITARIO = copyOfSaida2.VALOR_UNITARIO;
row22.SKU_PRODUTO = copyOfSaida2.SKU_PRODUTO;
row22.EAN_PRODUTO = copyOfSaida2.EAN_PRODUTO;
row22.NOME_LOJA_OFICIAL = copyOfSaida2.NOME_LOJA_OFICIAL;
row22.TIPO_LISTAGEM = copyOfSaida2.TIPO_LISTAGEM;

//if (copyOfSaida2.TIPO_LISTAGEM.equals("gold_pro")) {
//row22.STATUS = "Clássico";
//}
//else row22.STATUS = "Premium";

row22.COD_ENTREGA = copyOfSaida2.COD_ENTREGA;
row22.MLB_CATEGORIA = copyOfSaida2.MLB_CATEGORIA;
row22.Comissao = copyOfSaida2.Comissao;

//if(row22.Comissao = row22.Valor_final)
/*if row22.Valor_final.equals(row22.Comissao))
{
row22.Validacao = "TRUE";
}
else
{row22.Validacao = "FALSE";
}*/

row22.Comissao1 = copyOfSaida2.Comissao1;
row22.Percent_Comissao = copyOfSaida2.Percent_Comissao;
//row22.Valor_final = copyOfSaida2.Valor_final;

if (copyOfSaida2.VALOR_UNITARIO < 79) 
{
 row22.Valor_final = (((copyOfSaida2.VALOR_UNITARIO*copyOfSaida2.QUANTIDADE)*copyOfSaida2.Percent_Comissao)+(5.5*copyOfSaida2.QUANTIDADE))*(1-copyOfSaida2.Desconto1);
}
else{
row22.Valor_final = (((copyOfSaida2.QUANTIDADE*copyOfSaida2.VALOR_UNITARIO)*copyOfSaida2.Percent_Comissao))*(1-copyOfSaida2.Desconto1);
}

row22.Validacao = copyOfSaida2.Validacao;
//row22.Diferenca = copyOfSaida2.Diferenca;
row22.Diferenca = row22.Valor_final - row22.Comissao;
row22.Desconto1 = copyOfSaida2.Desconto1;
row22.Mais_de_um = copyOfSaida2.Mais_de_um;
row22.Valor_Final1 = copyOfSaida2.Valor_Final1;
row22.Validacao1 = copyOfSaida2.Validacao1;
row22.Diferenca1 = copyOfSaida2.Diferenca1;
row22.Sem_desconto_comercial = copyOfSaida2.Sem_desconto_comercial;
row22.Solicitar = copyOfSaida2.Solicitar;
row22.Valor_Cobrado = copyOfSaida2.Valor_Cobrado;
row22.Valor_Correto = copyOfSaida2.Valor_Correto;
row22.Valor_a_devolver = copyOfSaida2.Valor_a_devolver;
row22.Observacao = copyOfSaida2.Observacao;
row22.Repasse = copyOfSaida2.Repasse;
row22.Frete1 = copyOfSaida2.Frete1;
row22.Custo = copyOfSaida2.Custo;
row22.Margem = copyOfSaida2.Margem;
row22.CONCATENATE = copyOfSaida2.CONCATENATE;
row22.SOURCE_ID = copyOfSaida2.SOURCE_ID;
    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					

    //Code generate according to input schema and output schema
row41.ID_ANYMARKET = row22.ID_ANYMARKET;
row41.TIPO_DOCUMENTO = row22.TIPO_DOCUMENTO;
row41.CPF_CNPJ = row22.CPF_CNPJ;
row41.CLIENTE = row22.CLIENTE;
row41.CODIGO_PEDIDO = row22.CODIGO_PEDIDO;
row41.DATA_PEDIDO = row22.DATA_PEDIDO;
row41.MARKETPLACE = row22.MARKETPLACE;
row41.FRETE_DO_LOJISTA = row22.FRETE_DO_LOJISTA;
row41.STATUS = row22.STATUS;
row41.FRETE = row22.FRETE;
row41.DESCONTO = row22.DESCONTO;
row41.VALOR_TOTAL_PRODUTOS = row22.VALOR_TOTAL_PRODUTOS;
row41.TOTAL_PEDIDO = row22.TOTAL_PEDIDO;
row41.TITULO_PRODUTO = row22.TITULO_PRODUTO;
row41.QUANTIDADE = row22.QUANTIDADE;
row41.VALOR_UNITARIO = row22.VALOR_UNITARIO;
row41.SKU_PRODUTO = row22.SKU_PRODUTO;
row41.EAN_PRODUTO = row22.EAN_PRODUTO;
row41.NOME_LOJA_OFICIAL = row22.NOME_LOJA_OFICIAL;
row41.TIPO_LISTAGEM = row22.TIPO_LISTAGEM;
row41.COD_ENTREGA = row22.COD_ENTREGA;
row41.MLB_CATEGORIA = row22.MLB_CATEGORIA;
row41.Comissao = row22.Comissao;
row41.Comissao1 = row22.Comissao1;
row41.Percent_Comissao = row22.Percent_Comissao;
row41.Valor_final = row22.Valor_final;
//row41.Validacao = row22.Validacao;
if (row41.Comissao <= row41.Valor_final)
{
row41.Validacao = "VERDADEIRO";
}
else
{row41.Validacao = "FALSO";
}
row41.Diferenca = row22.Diferenca;
row41.Desconto1 = row22.Desconto1;
row41.Mais_de_um = row22.Mais_de_um;
row41.Valor_Final1 = row22.Valor_Final1;
row41.Validacao1 = row22.Validacao1;
row41.Diferenca1 = row22.Diferenca1;
row41.Sem_desconto_comercial = row22.Sem_desconto_comercial;
row41.Solicitar = row22.Solicitar;
row41.Valor_Cobrado = row22.Valor_Cobrado;
row41.Valor_Correto = row22.Valor_Correto;
row41.Valor_a_devolver = row22.Valor_a_devolver;
row41.Observacao = row22.Observacao;
row41.Repasse = row22.Repasse;
row41.Frete1 = row22.Frete1;
row41.Custo = row22.Custo;
row41.Margem = row22.Margem;
row41.CONCATENATE = row22.CONCATENATE;


//System.out.println("Comissaojava5: "+row41.Comissao1);
row41.SOURCE_ID = row22.SOURCE_ID;
    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

saida4 = null;
agregate = null;


// # Output table : 'saida4'
saida4_tmp.ID_ANYMARKET = row41.ID_ANYMARKET;
saida4_tmp.TIPO_DOCUMENTO = row41.TIPO_DOCUMENTO;
saida4_tmp.CPF_CNPJ = row41.CPF_CNPJ;
saida4_tmp.CLIENTE = row41.CLIENTE;
saida4_tmp.CODIGO_PEDIDO = row41.CODIGO_PEDIDO;
saida4_tmp.DATA_PEDIDO = row41.DATA_PEDIDO;
saida4_tmp.MARKETPLACE = row41.MARKETPLACE;
saida4_tmp.FRETE_DO_LOJISTA = row41.FRETE_DO_LOJISTA;
saida4_tmp.STATUS = row41.STATUS;
saida4_tmp.FRETE = row41.FRETE;
saida4_tmp.DESCONTO = row41.DESCONTO;
saida4_tmp.VALOR_TOTAL_PRODUTOS = row41.VALOR_TOTAL_PRODUTOS;
saida4_tmp.TOTAL_PEDIDO = row41.TOTAL_PEDIDO;
saida4_tmp.TITULO_PRODUTO = row41.TITULO_PRODUTO;
saida4_tmp.QUANTIDADE = row41.QUANTIDADE;
saida4_tmp.VALOR_UNITARIO = row41.VALOR_UNITARIO;
saida4_tmp.SKU_PRODUTO = row41.SKU_PRODUTO;
saida4_tmp.EAN_PRODUTO = row41.EAN_PRODUTO;
saida4_tmp.NOME_LOJA_OFICIAL = row41.NOME_LOJA_OFICIAL;
saida4_tmp.TIPO_LISTAGEM = row41.TIPO_LISTAGEM;
saida4_tmp.COD_ENTREGA = row41.COD_ENTREGA;
saida4_tmp.MLB_CATEGORIA = row41.MLB_CATEGORIA;
saida4_tmp.Comissao = row41.Comissao;
saida4_tmp.Comissao1 = row41.Comissao1;
saida4_tmp.Percent_Comissao = row41.Percent_Comissao;
saida4_tmp.Valor_final = row41.Valor_final;
saida4_tmp.Validacao = row41.Validacao;
saida4_tmp.Diferenca = row41.Diferenca;
saida4_tmp.Desconto1 = row41.Desconto1;
saida4_tmp.Mais_de_um = row41.Mais_de_um;
saida4_tmp.Valor_Final1 = row41.Valor_Final1;
saida4_tmp.Validacao1 = row41.Validacao1;
saida4_tmp.Diferenca1 = row41.Diferenca1;
saida4_tmp.Sem_desconto_comercial = row41.Sem_desconto_comercial;
saida4_tmp.Solicitar = row41.Solicitar;
saida4_tmp.Valor_Cobrado = row41.Valor_Cobrado;
saida4_tmp.Valor_Correto = row41.Valor_Correto;
saida4_tmp.Valor_a_devolver = row41.Valor_a_devolver;
saida4_tmp.Observacao = row41.Observacao;
saida4_tmp.Repasse = row41.Repasse;
saida4_tmp.Frete1 = row41.Frete1;
saida4_tmp.Custo = row41.Custo;
saida4_tmp.Margem = row41.Margem;
saida4_tmp.CONCATENATE = row41.CONCATENATE;
saida4_tmp.SOURCE_ID = row41.SOURCE_ID ;
saida4 = saida4_tmp;

// # Output table : 'agregate'
agregate_tmp.COD_ENTREGA = row41.COD_ENTREGA ;
agregate_tmp.sum_valor_final = row41.Valor_final ;
agregate = agregate_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "saida4"
if(saida4 != null) { 



	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida4"
						
						);
					}
					



    
		saida4Struct oneRow_tHashOutput_8 = new saida4Struct();
				
					oneRow_tHashOutput_8.ID_ANYMARKET = saida4.ID_ANYMARKET;
					oneRow_tHashOutput_8.TIPO_DOCUMENTO = saida4.TIPO_DOCUMENTO;
					oneRow_tHashOutput_8.CPF_CNPJ = saida4.CPF_CNPJ;
					oneRow_tHashOutput_8.CLIENTE = saida4.CLIENTE;
					oneRow_tHashOutput_8.CODIGO_PEDIDO = saida4.CODIGO_PEDIDO;
					oneRow_tHashOutput_8.DATA_PEDIDO = saida4.DATA_PEDIDO;
					oneRow_tHashOutput_8.MARKETPLACE = saida4.MARKETPLACE;
					oneRow_tHashOutput_8.FRETE_DO_LOJISTA = saida4.FRETE_DO_LOJISTA;
					oneRow_tHashOutput_8.STATUS = saida4.STATUS;
					oneRow_tHashOutput_8.FRETE = saida4.FRETE;
					oneRow_tHashOutput_8.DESCONTO = saida4.DESCONTO;
					oneRow_tHashOutput_8.VALOR_TOTAL_PRODUTOS = saida4.VALOR_TOTAL_PRODUTOS;
					oneRow_tHashOutput_8.TOTAL_PEDIDO = saida4.TOTAL_PEDIDO;
					oneRow_tHashOutput_8.TITULO_PRODUTO = saida4.TITULO_PRODUTO;
					oneRow_tHashOutput_8.QUANTIDADE = saida4.QUANTIDADE;
					oneRow_tHashOutput_8.VALOR_UNITARIO = saida4.VALOR_UNITARIO;
					oneRow_tHashOutput_8.SKU_PRODUTO = saida4.SKU_PRODUTO;
					oneRow_tHashOutput_8.EAN_PRODUTO = saida4.EAN_PRODUTO;
					oneRow_tHashOutput_8.NOME_LOJA_OFICIAL = saida4.NOME_LOJA_OFICIAL;
					oneRow_tHashOutput_8.TIPO_LISTAGEM = saida4.TIPO_LISTAGEM;
					oneRow_tHashOutput_8.COD_ENTREGA = saida4.COD_ENTREGA;
					oneRow_tHashOutput_8.MLB_CATEGORIA = saida4.MLB_CATEGORIA;
					oneRow_tHashOutput_8.Comissao = saida4.Comissao;
					oneRow_tHashOutput_8.Comissao1 = saida4.Comissao1;
					oneRow_tHashOutput_8.Percent_Comissao = saida4.Percent_Comissao;
					oneRow_tHashOutput_8.Valor_final = saida4.Valor_final;
					oneRow_tHashOutput_8.Validacao = saida4.Validacao;
					oneRow_tHashOutput_8.Diferenca = saida4.Diferenca;
					oneRow_tHashOutput_8.Desconto1 = saida4.Desconto1;
					oneRow_tHashOutput_8.Mais_de_um = saida4.Mais_de_um;
					oneRow_tHashOutput_8.Valor_Final1 = saida4.Valor_Final1;
					oneRow_tHashOutput_8.Validacao1 = saida4.Validacao1;
					oneRow_tHashOutput_8.Diferenca1 = saida4.Diferenca1;
					oneRow_tHashOutput_8.Sem_desconto_comercial = saida4.Sem_desconto_comercial;
					oneRow_tHashOutput_8.Solicitar = saida4.Solicitar;
					oneRow_tHashOutput_8.Valor_Cobrado = saida4.Valor_Cobrado;
					oneRow_tHashOutput_8.Valor_Correto = saida4.Valor_Correto;
					oneRow_tHashOutput_8.Valor_a_devolver = saida4.Valor_a_devolver;
					oneRow_tHashOutput_8.Observacao = saida4.Observacao;
					oneRow_tHashOutput_8.Repasse = saida4.Repasse;
					oneRow_tHashOutput_8.Frete1 = saida4.Frete1;
					oneRow_tHashOutput_8.Custo = saida4.Custo;
					oneRow_tHashOutput_8.Margem = saida4.Margem;
					oneRow_tHashOutput_8.CONCATENATE = saida4.CONCATENATE;
					oneRow_tHashOutput_8.SOURCE_ID = saida4.SOURCE_ID;
		
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */

} // End of branch "saida4"




// Start of branch "agregate"
if(agregate != null) { 



	
	/**
	 * [tAggregateRow_2_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"agregate"
						
						);
					}
					
	
operation_finder_tAggregateRow_2.COD_ENTREGA = agregate.COD_ENTREGA;
			

	operation_finder_tAggregateRow_2.hashCodeDirty = true;
	
	operation_result_tAggregateRow_2 = hash_tAggregateRow_2.get(operation_finder_tAggregateRow_2);

	

	if(operation_result_tAggregateRow_2 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_2 = new AggOperationStruct_tAggregateRow_2();

		operation_result_tAggregateRow_2.COD_ENTREGA = operation_finder_tAggregateRow_2.COD_ENTREGA;
				
		
		

		hash_tAggregateRow_2.put(operation_result_tAggregateRow_2, operation_result_tAggregateRow_2);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_2.sum_valor_final_sum == null) {
						operation_result_tAggregateRow_2.sum_valor_final_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_2.sum_valor_final_sum = operation_result_tAggregateRow_2.sum_valor_final_sum.add(
						new BigDecimal(
							String.valueOf(
								agregate.sum_valor_final
							)
						)
					);
					


 


	tos_count_tAggregateRow_2_AGGOUT++;

/**
 * [tAggregateRow_2_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT process_data_end ] stop
 */

} // End of branch "agregate"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */

} // End of branch "copyOfSaida2"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */

} // End of branch "row16"




	
	/**
	 * [tMap_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_end ] stop
 */

} // End of branch "copyOfsaida1"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row19 != null) {
						tHash_Lookup_row19.endGet();
					}
					globalMap.remove( "tHash_Lookup_row19" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tMap_19 end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row47 != null) {
						tHash_Lookup_row47.endGet();
					}
					globalMap.remove( "tHash_Lookup_row47" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfsaida1");
			  	}
			  	
 

ok_Hash.put("tMap_19", true);
end_Hash.put("tMap_19", System.currentTimeMillis());




/**
 * [tMap_19 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row21 != null) {
						tHash_Lookup_row21.endGet();
					}
					globalMap.remove( "tHash_Lookup_row21" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfSaida2");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida4");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */




	
	/**
	 * [tAggregateRow_2_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"agregate");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_2_AGGOUT", true);
end_Hash.put("tAggregateRow_2_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row37Struct> tHashFile_tHashOutput_2 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_2.getKeyMap().put("tHashFile_relatorio_conciliacao_" +pid + "_tHashOutput_2", "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_3");
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_2_AGGIN", false);
		start_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	
		int tos_count_tAggregateRow_2_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_2> values_tAggregateRow_2 = hash_tAggregateRow_2.values();

globalMap.put("tAggregateRow_2_NB_LINE", values_tAggregateRow_2.size());

for(AggOperationStruct_tAggregateRow_2 aggregated_row_tAggregateRow_2 : values_tAggregateRow_2) { // G_AggR_600



 



/**
 * [tAggregateRow_2_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

            				    row35.COD_ENTREGA = aggregated_row_tAggregateRow_2.COD_ENTREGA;
            				    
    								if(aggregated_row_tAggregateRow_2.sum_valor_final_sum != null) {
    								row35.sum_valor_final = aggregated_row_tAggregateRow_2.sum_valor_final_sum.doubleValue();
										
    								}else{
    								
    									row35.sum_valor_final = null;
    									
    								}
    								

 


	tos_count_tAggregateRow_2_AGGIN++;

/**
 * [tAggregateRow_2_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					




		if(tHashFile_tHashOutput_2 == null){
			tHashFile_tHashOutput_2 = mf_tHashOutput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_3");
			mf_tHashOutput_2.getResourceMap().put("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_2", tHashFile_tHashOutput_2);
		}
		row37Struct oneRow_tHashOutput_2 = new row37Struct();
			oneRow_tHashOutput_2.COD_ENTREGA = row35.COD_ENTREGA;
			oneRow_tHashOutput_2.sum_valor_final = row35.sum_valor_final;
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;	

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_2_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_2_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_2_AGGIN", true);
end_Hash.put("tAggregateRow_2_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_2_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */






























				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tHashInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_2_AGGIN"
							globalMap.remove("tAggregateRow_2");
						
					     			//free memory for "tMap_6"
					     			globalMap.remove("tHash_Lookup_row21"); 
				     			
					     			//free memory for "tMap_19"
					     			globalMap.remove("tHash_Lookup_row47"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row19"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tMap_19 finally ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */




	
	/**
	 * [tAggregateRow_2_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGOUT";
	
	

 



/**
 * [tAggregateRow_2_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_2_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_2";
	
	currentComponent="tAggregateRow_2_AGGIN";
	
	

 



/**
 * [tAggregateRow_2_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */






























				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_4 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_4> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_4 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida8Struct implements routines.system.IPersistableRow<saida8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Agregate_custoStruct implements routines.system.IPersistableRow<Agregate_custoStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Agregate_custoStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida7Struct implements routines.system.IPersistableRow<saida7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida5Struct implements routines.system.IPersistableRow<saida5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saidaStruct implements routines.system.IPersistableRow<saidaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saidaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida3Struct implements routines.system.IPersistableRow<Saida3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row42Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class duplicado_vfStruct implements routines.system.IPersistableRow<duplicado_vfStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(duplicado_vfStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_6Struct implements routines.system.IPersistableRow<after_tHashInput_6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_7Process(globalMap);
		tHashInput_8Process(globalMap);
		tHashInput_9Process(globalMap);
		tHashInput_11Process(globalMap);
		tHashInput_12Process(globalMap);

		row26Struct row26 = new row26Struct();
duplicado_vfStruct duplicado_vf = new duplicado_vfStruct();
row42Struct row42 = new row42Struct();
Saida3Struct Saida3 = new Saida3Struct();
saidaStruct saida = new saidaStruct();
saida5Struct saida5 = new saida5Struct();
saida7Struct saida7 = new saida7Struct();
saida8Struct saida8 = new saida8Struct();
Agregate_custoStruct Agregate_custo = new Agregate_custoStruct();
row28Struct row28 = new row28Struct();











	
	/**
	 * [tHashOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_14", false);
		start_Hash.put("tHashOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida8");
					}
				
		int tos_count_tHashOutput_14 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida8Struct> tHashFile_tHashOutput_14 = null;
		String hashKey_tHashOutput_14 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_14";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_14)){
			    if(mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14) == null){
	      		    mf_tHashOutput_14.getResourceMap().put(hashKey_tHashOutput_14, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida8Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }else{
			    	tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }
			}
        int nb_line_tHashOutput_14 = 0;

 



/**
 * [tHashOutput_14 begin ] stop
 */




	
	/**
	 * [tAggregateRow_4_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGOUT", false);
		start_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Agregate_custo");
					}
				
		int tos_count_tAggregateRow_4_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_4 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_4 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_4 utilClass_tAggregateRow_4 = new UtilClass_tAggregateRow_4();

	

	class AggOperationStruct_tAggregateRow_4 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				BigDecimal COD_ENTREGA;BigDecimal sum_Custo_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.COD_ENTREGA == null) ? 0 : this.COD_ENTREGA.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_4 other = (AggOperationStruct_tAggregateRow_4) obj;
			
							if (this.COD_ENTREGA == null) {
								if (other.COD_ENTREGA != null) 
									return false;
							} else if (!this.COD_ENTREGA.equals(other.COD_ENTREGA)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_4 operation_result_tAggregateRow_4 = null;
	AggOperationStruct_tAggregateRow_4 operation_finder_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();
	java.util.Map<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4> hash_tAggregateRow_4 = new java.util.HashMap<AggOperationStruct_tAggregateRow_4,AggOperationStruct_tAggregateRow_4>();
	

 



/**
 * [tAggregateRow_4_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida7");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct>) 
					globalMap.get( "tHash_Lookup_row54" ))
					;					
					
	

row54Struct row54HashKey = new row54Struct();
row54Struct row54Default = new row54Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida8Struct saida8_tmp = new saida8Struct();
Agregate_custoStruct Agregate_custo_tmp = new Agregate_custoStruct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida5");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct> tHash_Lookup_row45 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct>) 
					globalMap.get( "tHash_Lookup_row45" ))
					;					
					
	

row45Struct row45HashKey = new row45Struct();
row45Struct row45Default = new row45Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida7Struct saida7_tmp = new saida7Struct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida3");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct> tHash_Lookup_row33 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct>) 
					globalMap.get( "tHash_Lookup_row33" ))
					;					
					
	

row33Struct row33HashKey = new row33Struct();
row33Struct row33Default = new row33Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
saidaStruct saida_tmp = new saidaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row42");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
					globalMap.get( "tHash_Lookup_row32" ))
					;					
					
	

row32Struct row32HashKey = new row32Struct();
row32Struct row32Default = new row32Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida3Struct Saida3_tmp = new Saida3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"duplicado_vf");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
					globalMap.get( "tHash_Lookup_row36" ))
					;					
					
	

row36Struct row36HashKey = new row36Struct();
row36Struct row36Default = new row36Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
duplicado_vfStruct duplicado_vf_tmp = new duplicado_vfStruct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida4Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<saida4Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    saida4Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row26.ID_ANYMARKET = next_tHashInput_6.ID_ANYMARKET;
	row26.TIPO_DOCUMENTO = next_tHashInput_6.TIPO_DOCUMENTO;
	row26.CPF_CNPJ = next_tHashInput_6.CPF_CNPJ;
	row26.CLIENTE = next_tHashInput_6.CLIENTE;
	row26.CODIGO_PEDIDO = next_tHashInput_6.CODIGO_PEDIDO;
	row26.DATA_PEDIDO = next_tHashInput_6.DATA_PEDIDO;
	row26.MARKETPLACE = next_tHashInput_6.MARKETPLACE;
	row26.FRETE_DO_LOJISTA = next_tHashInput_6.FRETE_DO_LOJISTA;
	row26.STATUS = next_tHashInput_6.STATUS;
	row26.FRETE = next_tHashInput_6.FRETE;
	row26.DESCONTO = next_tHashInput_6.DESCONTO;
	row26.VALOR_TOTAL_PRODUTOS = next_tHashInput_6.VALOR_TOTAL_PRODUTOS;
	row26.TOTAL_PEDIDO = next_tHashInput_6.TOTAL_PEDIDO;
	row26.TITULO_PRODUTO = next_tHashInput_6.TITULO_PRODUTO;
	row26.QUANTIDADE = next_tHashInput_6.QUANTIDADE;
	row26.VALOR_UNITARIO = next_tHashInput_6.VALOR_UNITARIO;
	row26.SKU_PRODUTO = next_tHashInput_6.SKU_PRODUTO;
	row26.EAN_PRODUTO = next_tHashInput_6.EAN_PRODUTO;
	row26.NOME_LOJA_OFICIAL = next_tHashInput_6.NOME_LOJA_OFICIAL;
	row26.TIPO_LISTAGEM = next_tHashInput_6.TIPO_LISTAGEM;
	row26.COD_ENTREGA = next_tHashInput_6.COD_ENTREGA;
	row26.MLB_CATEGORIA = next_tHashInput_6.MLB_CATEGORIA;
	row26.Comissao = next_tHashInput_6.Comissao;
	row26.Comissao1 = next_tHashInput_6.Comissao1;
	row26.Percent_Comissao = next_tHashInput_6.Percent_Comissao;
	row26.Valor_final = next_tHashInput_6.Valor_final;
	row26.Validacao = next_tHashInput_6.Validacao;
	row26.Diferenca = next_tHashInput_6.Diferenca;
	row26.Desconto1 = next_tHashInput_6.Desconto1;
	row26.Mais_de_um = next_tHashInput_6.Mais_de_um;
	row26.Valor_Final1 = next_tHashInput_6.Valor_Final1;
	row26.Validacao1 = next_tHashInput_6.Validacao1;
	row26.Diferenca1 = next_tHashInput_6.Diferenca1;
	row26.Sem_desconto_comercial = next_tHashInput_6.Sem_desconto_comercial;
	row26.Solicitar = next_tHashInput_6.Solicitar;
	row26.Valor_Cobrado = next_tHashInput_6.Valor_Cobrado;
	row26.Valor_Correto = next_tHashInput_6.Valor_Correto;
	row26.Valor_a_devolver = next_tHashInput_6.Valor_a_devolver;
	row26.Observacao = next_tHashInput_6.Observacao;
	row26.Repasse = next_tHashInput_6.Repasse;
	row26.Frete1 = next_tHashInput_6.Frete1;
	row26.Custo = next_tHashInput_6.Custo;
	row26.Margem = next_tHashInput_6.Margem;
	row26.CONCATENATE = next_tHashInput_6.CONCATENATE;
	row26.SOURCE_ID = next_tHashInput_6.SOURCE_ID;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
						row36Struct row36 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row36" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow36 = false;
       		  	    	
       		  	    	
 							row36Struct row36ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_11) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_11 = false;
								
                        		    		    row36HashKey.COD_ENTREGA = row26.COD_ENTREGA ;
                        		    		

								
		                        	row36HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row36.lookup( row36HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row36 != null && tHash_Lookup_row36.getCount(row36HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row36' and it contains more one result from keys :  row36.COD_ENTREGA = '" + row36HashKey.COD_ENTREGA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row36Struct fromLookup_row36 = null;
							row36 = row36Default;
										 
							
								 
							
							
								if (tHash_Lookup_row36 !=null && tHash_Lookup_row36.hasNext()) { // G 099
								
							
								
								fromLookup_row36 = tHash_Lookup_row36.next();

							
							
								} // G 099
							
							

							if(fromLookup_row36 != null) {
								row36 = fromLookup_row36;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

duplicado_vf = null;


// # Output table : 'duplicado_vf'
duplicado_vf_tmp.ID_ANYMARKET = row26.ID_ANYMARKET;
duplicado_vf_tmp.TIPO_DOCUMENTO = row26.TIPO_DOCUMENTO;
duplicado_vf_tmp.CPF_CNPJ = row26.CPF_CNPJ;
duplicado_vf_tmp.CLIENTE = row26.CLIENTE;
duplicado_vf_tmp.CODIGO_PEDIDO = row26.CODIGO_PEDIDO;
duplicado_vf_tmp.DATA_PEDIDO = row26.DATA_PEDIDO;
duplicado_vf_tmp.MARKETPLACE = row26.MARKETPLACE;
duplicado_vf_tmp.FRETE_DO_LOJISTA = row26.FRETE_DO_LOJISTA;
duplicado_vf_tmp.STATUS = row26.STATUS;
duplicado_vf_tmp.FRETE = row26.FRETE;
duplicado_vf_tmp.DESCONTO = row26.DESCONTO;
duplicado_vf_tmp.VALOR_TOTAL_PRODUTOS = row26.VALOR_TOTAL_PRODUTOS;
duplicado_vf_tmp.TOTAL_PEDIDO = row26.TOTAL_PEDIDO;
duplicado_vf_tmp.TITULO_PRODUTO = row26.TITULO_PRODUTO;
duplicado_vf_tmp.QUANTIDADE = row26.QUANTIDADE;
duplicado_vf_tmp.VALOR_UNITARIO = row26.VALOR_UNITARIO;
duplicado_vf_tmp.SKU_PRODUTO = row26.SKU_PRODUTO;
duplicado_vf_tmp.EAN_PRODUTO = row26.EAN_PRODUTO;
duplicado_vf_tmp.NOME_LOJA_OFICIAL = row26.NOME_LOJA_OFICIAL;
duplicado_vf_tmp.TIPO_LISTAGEM = row26.TIPO_LISTAGEM;
duplicado_vf_tmp.COD_ENTREGA = row26.COD_ENTREGA;
duplicado_vf_tmp.MLB_CATEGORIA = row26.MLB_CATEGORIA;
duplicado_vf_tmp.Comissao = row26.Comissao != null ? row26.Comissao : 0 ;
duplicado_vf_tmp.Comissao1 = row26.Comissao1;
duplicado_vf_tmp.Percent_Comissao = row26.Percent_Comissao;
duplicado_vf_tmp.Valor_final = row26.Valor_final;
duplicado_vf_tmp.Validacao = row26.Validacao;
duplicado_vf_tmp.Diferenca = row26.Diferenca;
duplicado_vf_tmp.Desconto1 = row26.Desconto1;
duplicado_vf_tmp.Mais_de_um = row26.Mais_de_um;
duplicado_vf_tmp.Valor_Final1 = row36.sum_valor_final != null ? row36.sum_valor_final : 0 ;
duplicado_vf_tmp.Validacao1 = row26.Validacao1;
duplicado_vf_tmp.Diferenca1 = row26.Diferenca1;
duplicado_vf_tmp.Sem_desconto_comercial = row26.Sem_desconto_comercial;
duplicado_vf_tmp.Solicitar = row26.Solicitar;
duplicado_vf_tmp.Valor_Cobrado = row26.Valor_Cobrado;
duplicado_vf_tmp.Valor_Correto = row26.Valor_Correto;
duplicado_vf_tmp.Valor_a_devolver = row26.Valor_a_devolver;
duplicado_vf_tmp.Observacao = row26.Observacao;
duplicado_vf_tmp.Repasse = row26.Repasse;
duplicado_vf_tmp.Frete1 = row26.Frete1;
duplicado_vf_tmp.Custo = row26.Custo;
duplicado_vf_tmp.Margem = row26.Margem;
duplicado_vf_tmp.CONCATENATE = row26.CONCATENATE;
duplicado_vf_tmp.SOURCE_ID = row26.SOURCE_ID ;
duplicado_vf = duplicado_vf_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "duplicado_vf"
if(duplicado_vf != null) { 



	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"duplicado_vf"
						
						);
					}
					

    //Code generate according to input schema and output schema
row42.ID_ANYMARKET = duplicado_vf.ID_ANYMARKET;
row42.TIPO_DOCUMENTO = duplicado_vf.TIPO_DOCUMENTO;
row42.CPF_CNPJ = duplicado_vf.CPF_CNPJ;
row42.CLIENTE = duplicado_vf.CLIENTE;
row42.CODIGO_PEDIDO = duplicado_vf.CODIGO_PEDIDO;
row42.DATA_PEDIDO = duplicado_vf.DATA_PEDIDO;
row42.MARKETPLACE = duplicado_vf.MARKETPLACE;
row42.FRETE_DO_LOJISTA = duplicado_vf.FRETE_DO_LOJISTA;
row42.STATUS = duplicado_vf.STATUS;
row42.FRETE = duplicado_vf.FRETE;
row42.DESCONTO = duplicado_vf.DESCONTO;
row42.VALOR_TOTAL_PRODUTOS = duplicado_vf.VALOR_TOTAL_PRODUTOS;
row42.TOTAL_PEDIDO = duplicado_vf.TOTAL_PEDIDO;
row42.TITULO_PRODUTO = duplicado_vf.TITULO_PRODUTO;
row42.QUANTIDADE = duplicado_vf.QUANTIDADE;
row42.VALOR_UNITARIO = duplicado_vf.VALOR_UNITARIO;
row42.SKU_PRODUTO = duplicado_vf.SKU_PRODUTO;
row42.EAN_PRODUTO = duplicado_vf.EAN_PRODUTO;
row42.NOME_LOJA_OFICIAL = duplicado_vf.NOME_LOJA_OFICIAL;
row42.TIPO_LISTAGEM = duplicado_vf.TIPO_LISTAGEM;
row42.COD_ENTREGA = duplicado_vf.COD_ENTREGA;
row42.MLB_CATEGORIA = duplicado_vf.MLB_CATEGORIA;
row42.Comissao = duplicado_vf.Comissao;
row42.Comissao1 = duplicado_vf.Comissao1;
row42.Percent_Comissao = duplicado_vf.Percent_Comissao;
row42.Desconto1 = duplicado_vf.Desconto1;
row42.Mais_de_um = duplicado_vf.Mais_de_um;
row42.Valor_Final1 = duplicado_vf.Valor_Final1;
//row42.Validacao1 = duplicado_vf.Validacao1;
//row42.Diferenca1 = duplicado_vf.Diferenca1;
row42.Sem_desconto_comercial = duplicado_vf.Sem_desconto_comercial;
row42.Solicitar = duplicado_vf.Solicitar;
row42.Valor_Cobrado = duplicado_vf.Comissao; //duplicado_vf.Valor_Cobrado;
row42.Valor_Correto = duplicado_vf.Valor_Correto;
row42.Valor_a_devolver = duplicado_vf.Valor_a_devolver;
row42.Observacao = duplicado_vf.Observacao;
row42.Repasse = duplicado_vf.Repasse;
row42.Frete1 = duplicado_vf.Frete1;
row42.Custo = duplicado_vf.Custo;
row42.Margem = duplicado_vf.Margem;
row42.CONCATENATE = duplicado_vf.CONCATENATE;
row42.Valor_final = duplicado_vf.Valor_final;
row42.Validacao = duplicado_vf.Validacao;
row42.Diferenca = duplicado_vf.Diferenca;


if (row42.Comissao <= row42.Valor_Final1)
{
row42.Validacao1 = "VERDADEIRO";
}
else
{row42.Validacao1 = "FALSO";
}

row42.Diferenca1 = row42.Valor_Final1 - row42.Comissao;
row42.SOURCE_ID = duplicado_vf.SOURCE_ID;
    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row42"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
						row32Struct row32 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row32" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow32 = false;
       		  	    	
       		  	    	
 							row32Struct row32ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_12) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_12 = false;
								
                        		    		    row32HashKey.concat = row42.CONCATENATE ;
                        		    		

								
		                        	row32HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row32.lookup( row32HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row32 != null && tHash_Lookup_row32.getCount(row32HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row32' and it contains more one result from keys :  row32.concat = '" + row32HashKey.concat + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row32Struct fromLookup_row32 = null;
							row32 = row32Default;
										 
							
								 
							
							
								if (tHash_Lookup_row32 !=null && tHash_Lookup_row32.hasNext()) { // G 099
								
							
								
								fromLookup_row32 = tHash_Lookup_row32.next();

							
							
								} // G 099
							
							

							if(fromLookup_row32 != null) {
								row32 = fromLookup_row32;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

Saida3 = null;


// # Output table : 'Saida3'
Saida3_tmp.ID_ANYMARKET = row42.ID_ANYMARKET ;
Saida3_tmp.TIPO_DOCUMENTO = row42.TIPO_DOCUMENTO ;
Saida3_tmp.CPF_CNPJ = row42.CPF_CNPJ ;
Saida3_tmp.CLIENTE = row42.CLIENTE ;
Saida3_tmp.CODIGO_PEDIDO = row42.CODIGO_PEDIDO ;
Saida3_tmp.DATA_PEDIDO = row42.DATA_PEDIDO ;
Saida3_tmp.MARKETPLACE = row42.MARKETPLACE ;
Saida3_tmp.FRETE_DO_LOJISTA = row42.FRETE_DO_LOJISTA ;
Saida3_tmp.STATUS = row42.STATUS ;
Saida3_tmp.FRETE = row42.FRETE ;
Saida3_tmp.DESCONTO = row42.DESCONTO ;
Saida3_tmp.VALOR_TOTAL_PRODUTOS = row42.VALOR_TOTAL_PRODUTOS ;
Saida3_tmp.TOTAL_PEDIDO = row42.TOTAL_PEDIDO ;
Saida3_tmp.TITULO_PRODUTO = row42.TITULO_PRODUTO ;
Saida3_tmp.QUANTIDADE = row42.QUANTIDADE ;
Saida3_tmp.VALOR_UNITARIO = row42.VALOR_UNITARIO ;
Saida3_tmp.SKU_PRODUTO = row42.SKU_PRODUTO ;
Saida3_tmp.EAN_PRODUTO = row42.EAN_PRODUTO ;
Saida3_tmp.NOME_LOJA_OFICIAL = row42.NOME_LOJA_OFICIAL ;
Saida3_tmp.TIPO_LISTAGEM = row42.TIPO_LISTAGEM ;
Saida3_tmp.COD_ENTREGA = row42.COD_ENTREGA ;
Saida3_tmp.MLB_CATEGORIA = row42.MLB_CATEGORIA ;
Saida3_tmp.Comissao = row42.Comissao ;
Saida3_tmp.Comissao1 = row42.Comissao1 ;
Saida3_tmp.Percent_Comissao = row42.Percent_Comissao ;
Saida3_tmp.Valor_final = row42.Valor_final ;
Saida3_tmp.Validacao = row42.Validacao ;
Saida3_tmp.Diferenca = row42.Diferenca ;
Saida3_tmp.Desconto1 = row32.desconto != null ? row32.desconto : 0 ;
Saida3_tmp.Mais_de_um = row42.Mais_de_um ;
Saida3_tmp.Valor_Final1 = row42.Valor_Final1 ;
Saida3_tmp.Validacao1 = row42.Validacao1 ;
Saida3_tmp.Diferenca1 = row42.Diferenca1 ;
Saida3_tmp.Sem_desconto_comercial = row42.Sem_desconto_comercial ;
Saida3_tmp.Solicitar = row42.Solicitar ;
Saida3_tmp.Valor_Cobrado = row42.Valor_Cobrado ;
Saida3_tmp.Valor_Correto = row42.Valor_Correto ;
Saida3_tmp.Valor_a_devolver = row42.Valor_a_devolver ;
Saida3_tmp.Observacao = row42.Observacao ;
Saida3_tmp.Repasse = row42.Repasse ;
Saida3_tmp.Frete1 = row42.Frete1 ;
Saida3_tmp.Custo = row42.Custo ;
Saida3_tmp.Margem = row42.Margem ;
Saida3_tmp.CONCATENATE = row42.CONCATENATE ;
Saida3_tmp.SOURCE_ID = row42.SOURCE_ID ;
Saida3 = Saida3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "Saida3"
if(Saida3 != null) { 



	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
						row33Struct row33 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row33" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow33 = false;
       		  	    	
       		  	    	
 							row33Struct row33ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_13) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_13 = false;
								
                        		    		    row33HashKey.COD_ENTREGA = Saida3.COD_ENTREGA ;
                        		    		

								
		                        	row33HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row33.lookup( row33HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row33 != null && tHash_Lookup_row33.getCount(row33HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row33' and it contains more one result from keys :  row33.COD_ENTREGA = '" + row33HashKey.COD_ENTREGA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row33Struct fromLookup_row33 = null;
							row33 = row33Default;
										 
							
								 
							
							
								if (tHash_Lookup_row33 !=null && tHash_Lookup_row33.hasNext()) { // G 099
								
							
								
								fromLookup_row33 = tHash_Lookup_row33.next();

							
							
								} // G 099
							
							

							if(fromLookup_row33 != null) {
								row33 = fromLookup_row33;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

saida = null;


// # Output table : 'saida'
saida_tmp.ID_ANYMARKET = Saida3.ID_ANYMARKET;
saida_tmp.TIPO_DOCUMENTO = Saida3.TIPO_DOCUMENTO;
saida_tmp.CPF_CNPJ = Saida3.CPF_CNPJ;
saida_tmp.CLIENTE = Saida3.CLIENTE;
saida_tmp.CODIGO_PEDIDO = Saida3.CODIGO_PEDIDO;
saida_tmp.DATA_PEDIDO = Saida3.DATA_PEDIDO;
saida_tmp.MARKETPLACE = Saida3.MARKETPLACE;
saida_tmp.FRETE_DO_LOJISTA = Saida3.FRETE_DO_LOJISTA;
saida_tmp.STATUS = Saida3.STATUS;
saida_tmp.FRETE = Saida3.FRETE;
saida_tmp.DESCONTO = Saida3.DESCONTO;
saida_tmp.VALOR_TOTAL_PRODUTOS = Saida3.VALOR_TOTAL_PRODUTOS;
saida_tmp.TOTAL_PEDIDO = Saida3.TOTAL_PEDIDO;
saida_tmp.TITULO_PRODUTO = Saida3.TITULO_PRODUTO;
saida_tmp.QUANTIDADE = Saida3.QUANTIDADE;
saida_tmp.VALOR_UNITARIO = Saida3.VALOR_UNITARIO;
saida_tmp.SKU_PRODUTO = Saida3.SKU_PRODUTO;
saida_tmp.EAN_PRODUTO = Saida3.EAN_PRODUTO;
saida_tmp.NOME_LOJA_OFICIAL = Saida3.NOME_LOJA_OFICIAL;
saida_tmp.TIPO_LISTAGEM = Saida3.TIPO_LISTAGEM;
saida_tmp.COD_ENTREGA = Saida3.COD_ENTREGA;
saida_tmp.MLB_CATEGORIA = Saida3.MLB_CATEGORIA;
saida_tmp.Comissao = Saida3.Comissao;
saida_tmp.Comissao1 = Saida3.Comissao1;
saida_tmp.Percent_Comissao = Saida3.Percent_Comissao;
saida_tmp.Valor_final = Saida3.Valor_final;
saida_tmp.Validacao = Saida3.Validacao;
saida_tmp.Diferenca = Saida3.Diferenca;
saida_tmp.Desconto1 = Saida3.Desconto1;
saida_tmp.Mais_de_um = row33.QTDE_COD_ENTREGA != null ? row33.QTDE_COD_ENTREGA : 0 ;
saida_tmp.Valor_Final1 = Saida3.Valor_Final1;
saida_tmp.Validacao1 = Saida3.Validacao1;
saida_tmp.Diferenca1 = Saida3.Diferenca1;
saida_tmp.Sem_desconto_comercial = Saida3.Sem_desconto_comercial;
saida_tmp.Solicitar = Saida3.Solicitar;
saida_tmp.Valor_Cobrado = Saida3.Valor_Cobrado;
saida_tmp.Valor_Correto = Saida3.Valor_Correto;
saida_tmp.Valor_a_devolver = Saida3.Valor_a_devolver;
saida_tmp.Observacao = Saida3.Observacao;
saida_tmp.Repasse = Saida3.Repasse;
saida_tmp.Frete1 = Saida3.Frete1;
saida_tmp.Custo = Saida3.Custo;
saida_tmp.Margem = Saida3.Margem;
saida_tmp.CONCATENATE = Saida3.CONCATENATE ;
saida_tmp.SOURCE_ID = Saida3.SOURCE_ID ;
saida = saida_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "saida"
if(saida != null) { 



	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida"
						
						);
					}
					

    //Code generate according to input schema and output schema
saida5.ID_ANYMARKET = saida.ID_ANYMARKET;
saida5.TIPO_DOCUMENTO = saida.TIPO_DOCUMENTO;
saida5.CPF_CNPJ = saida.CPF_CNPJ;
saida5.CLIENTE = saida.CLIENTE;
saida5.CODIGO_PEDIDO = saida.CODIGO_PEDIDO;
saida5.DATA_PEDIDO = saida.DATA_PEDIDO;
saida5.MARKETPLACE = saida.MARKETPLACE;
saida5.FRETE_DO_LOJISTA = saida.FRETE_DO_LOJISTA;
saida5.STATUS = saida.STATUS;
saida5.FRETE = saida.FRETE;
saida5.DESCONTO = saida.DESCONTO;
saida5.VALOR_TOTAL_PRODUTOS = saida.VALOR_TOTAL_PRODUTOS;
saida5.TOTAL_PEDIDO = saida.TOTAL_PEDIDO;
saida5.TITULO_PRODUTO = saida.TITULO_PRODUTO;
saida5.QUANTIDADE = saida.QUANTIDADE;
saida5.VALOR_UNITARIO = saida.VALOR_UNITARIO;
saida5.SKU_PRODUTO = saida.SKU_PRODUTO;
saida5.EAN_PRODUTO = saida.EAN_PRODUTO;
saida5.NOME_LOJA_OFICIAL = saida.NOME_LOJA_OFICIAL;
saida5.TIPO_LISTAGEM = saida.TIPO_LISTAGEM;
saida5.COD_ENTREGA = saida.COD_ENTREGA;
saida5.MLB_CATEGORIA = saida.MLB_CATEGORIA;
saida5.Comissao = saida.Comissao;
saida5.Comissao1 = saida.Comissao1;
saida5.Percent_Comissao = saida.Percent_Comissao;
saida5.Valor_final = saida.Valor_final;
saida5.Validacao = saida.Validacao;
saida5.Diferenca = saida.Diferenca;
saida5.Desconto1 = saida.Desconto1;
saida5.Mais_de_um = saida.Mais_de_um;
saida5.Comissao1 = saida.Comissao1;
/*if (saida.Mais_de_um < 79) {
saida5.Comissao1 = 1-((saida.VALOR_UNITARIO -(5*saida.QUANTIDADE))/ saida.VALOR_UNITARIO);
} else{
saida5.Comissao1 = 1-((saida.Comissao / saida.VALOR_UNITARIO));
}*/

saida5.Valor_Final1 = saida.Valor_Final1;
saida5.Validacao1 = saida.Validacao1;
saida5.Diferenca1 = saida.Diferenca1;
saida5.Sem_desconto_comercial = saida.Sem_desconto_comercial;
saida5.Solicitar = saida.Solicitar;
saida5.Valor_Cobrado = saida.Valor_Cobrado;
//saida5.Valor_Correto = saida.Valor_Correto;
if (saida5.Mais_de_um.equals(0))
{
saida5.Valor_Correto = saida5.Valor_final;
}
else
{saida5.Valor_Correto = saida5.Valor_Final1;
}
//saida5.Valor_a_devolver = saida.Valor_a_devolver;
if (saida5.Mais_de_um.equals(0))
{
saida5.Valor_a_devolver = saida5.Diferenca;
}
else
{saida5.Valor_a_devolver = saida5.Diferenca1;
}
saida5.Observacao = saida.Observacao;
saida5.Repasse = saida.Repasse;
saida5.Frete1 = saida.Frete1;
saida5.Custo = saida.Custo;
saida5.Margem = saida.Margem;
saida5.CONCATENATE = saida.CONCATENATE;

//System.out.println("Comissaojava9: "+saida5.Comissao1);
saida5.SOURCE_ID = saida.SOURCE_ID;
    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida5"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
						row45Struct row45 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_15 = false;
		boolean mainRowRejected_tMap_15 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row45" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow45 = false;
       		  	    	
       		  	    	
 							row45Struct row45ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row45HashKey.CD_PRODUTO = saida5.SKU_PRODUTO ;
                        		    		

								
		                        	row45HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row45.lookup( row45HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row45 != null && tHash_Lookup_row45.getCount(row45HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row45' and it contains more one result from keys :  row45.CD_PRODUTO = '" + row45HashKey.CD_PRODUTO + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row45Struct fromLookup_row45 = null;
							row45 = row45Default;
										 
							
								 
							
							
								if (tHash_Lookup_row45 !=null && tHash_Lookup_row45.hasNext()) { // G 099
								
							
								
								fromLookup_row45 = tHash_Lookup_row45.next();

							
							
								} // G 099
							
							

							if(fromLookup_row45 != null) {
								row45 = fromLookup_row45;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

saida7 = null;


// # Output table : 'saida7'
saida7_tmp.ID_ANYMARKET = saida5.ID_ANYMARKET;
saida7_tmp.TIPO_DOCUMENTO = saida5.TIPO_DOCUMENTO;
saida7_tmp.CPF_CNPJ = saida5.CPF_CNPJ;
saida7_tmp.CLIENTE = saida5.CLIENTE;
saida7_tmp.CODIGO_PEDIDO = saida5.CODIGO_PEDIDO;
saida7_tmp.DATA_PEDIDO = saida5.DATA_PEDIDO;
saida7_tmp.MARKETPLACE = saida5.MARKETPLACE;
saida7_tmp.FRETE_DO_LOJISTA = saida5.FRETE_DO_LOJISTA;
saida7_tmp.STATUS = saida5.STATUS;
saida7_tmp.FRETE = saida5.FRETE;
saida7_tmp.DESCONTO = saida5.DESCONTO;
saida7_tmp.VALOR_TOTAL_PRODUTOS = saida5.VALOR_TOTAL_PRODUTOS;
saida7_tmp.TOTAL_PEDIDO = saida5.TOTAL_PEDIDO;
saida7_tmp.TITULO_PRODUTO = saida5.TITULO_PRODUTO;
saida7_tmp.QUANTIDADE = saida5.QUANTIDADE;
saida7_tmp.VALOR_UNITARIO = saida5.VALOR_UNITARIO;
saida7_tmp.SKU_PRODUTO = saida5.SKU_PRODUTO;
saida7_tmp.EAN_PRODUTO = saida5.EAN_PRODUTO;
saida7_tmp.NOME_LOJA_OFICIAL = saida5.NOME_LOJA_OFICIAL;
saida7_tmp.TIPO_LISTAGEM = saida5.TIPO_LISTAGEM;
saida7_tmp.COD_ENTREGA = saida5.COD_ENTREGA;
saida7_tmp.MLB_CATEGORIA = saida5.MLB_CATEGORIA;
saida7_tmp.Comissao = saida5.Comissao;
saida7_tmp.Comissao1 = saida5.Comissao1;
saida7_tmp.Percent_Comissao = saida5.Percent_Comissao;
saida7_tmp.Valor_final = saida5.Valor_final;
saida7_tmp.Validacao = saida5.Validacao;
saida7_tmp.Diferenca = saida5.Diferenca;
saida7_tmp.Desconto1 = saida5.Desconto1;
saida7_tmp.Mais_de_um = saida5.Mais_de_um;
saida7_tmp.Valor_Final1 = saida5.Valor_Final1;
saida7_tmp.Validacao1 = saida5.Validacao1;
saida7_tmp.Diferenca1 = saida5.Diferenca1;
saida7_tmp.Sem_desconto_comercial = saida5.Sem_desconto_comercial;
saida7_tmp.Solicitar = saida5.Solicitar;
saida7_tmp.Valor_Cobrado = saida5.Valor_Cobrado;
saida7_tmp.Valor_a_devolver = saida5.Valor_a_devolver;
saida7_tmp.Observacao = saida5.Observacao;
saida7_tmp.Repasse = saida5.Repasse;
saida7_tmp.Frete1 = saida5.Frete1;
saida7_tmp.Custo = (row45.VL_CUSTO != null ? row45.VL_CUSTO : 0) *saida5.QUANTIDADE ;
saida7_tmp.Margem = saida5.Margem;
saida7_tmp.Valor_Correto = saida5.Valor_Correto;
saida7_tmp.CONCATENATE = saida5.CONCATENATE ;
saida7_tmp.SOURCE_ID = saida5.SOURCE_ID ;
saida7 = saida7_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "saida7"
if(saida7 != null) { 



	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida7"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		
						row54Struct row54 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_16 = false;
		boolean mainRowRejected_tMap_16 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row54" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow54 = false;
       		  	    	
       		  	    	
 							row54Struct row54ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_16) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_16 = false;
								
                        		    		    row54HashKey.SHIPPING_ID = saida7.COD_ENTREGA ;
                        		    		

								
		                        	row54HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row54.lookup( row54HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row54 != null && tHash_Lookup_row54.getCount(row54HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row54' and it contains more one result from keys :  row54.SHIPPING_ID = '" + row54HashKey.SHIPPING_ID + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row54Struct fromLookup_row54 = null;
							row54 = row54Default;
										 
							
								 
							
							
								if (tHash_Lookup_row54 !=null && tHash_Lookup_row54.hasNext()) { // G 099
								
							
								
								fromLookup_row54 = tHash_Lookup_row54.next();

							
							
								} // G 099
							
							

							if(fromLookup_row54 != null) {
								row54 = fromLookup_row54;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
        // ###############################
        // # Output tables

saida8 = null;
Agregate_custo = null;


// # Output table : 'saida8'
saida8_tmp.ID_ANYMARKET = saida7.ID_ANYMARKET;
saida8_tmp.TIPO_DOCUMENTO = saida7.TIPO_DOCUMENTO;
saida8_tmp.CPF_CNPJ = saida7.CPF_CNPJ;
saida8_tmp.CLIENTE = saida7.CLIENTE;
saida8_tmp.CODIGO_PEDIDO = saida7.CODIGO_PEDIDO;
saida8_tmp.DATA_PEDIDO = saida7.DATA_PEDIDO;
saida8_tmp.MARKETPLACE = saida7.MARKETPLACE;
saida8_tmp.FRETE_DO_LOJISTA = saida7.FRETE_DO_LOJISTA;
saida8_tmp.STATUS = saida7.STATUS;
saida8_tmp.FRETE = saida7.FRETE;
saida8_tmp.DESCONTO = saida7.DESCONTO;
saida8_tmp.VALOR_TOTAL_PRODUTOS = saida7.VALOR_TOTAL_PRODUTOS;
saida8_tmp.TOTAL_PEDIDO = saida7.TOTAL_PEDIDO;
saida8_tmp.TITULO_PRODUTO = saida7.TITULO_PRODUTO;
saida8_tmp.QUANTIDADE = saida7.QUANTIDADE;
saida8_tmp.VALOR_UNITARIO = saida7.VALOR_UNITARIO;
saida8_tmp.SKU_PRODUTO = saida7.SKU_PRODUTO;
saida8_tmp.EAN_PRODUTO = saida7.EAN_PRODUTO;
saida8_tmp.NOME_LOJA_OFICIAL = saida7.NOME_LOJA_OFICIAL;
saida8_tmp.TIPO_LISTAGEM = saida7.TIPO_LISTAGEM;
saida8_tmp.COD_ENTREGA = saida7.COD_ENTREGA;
saida8_tmp.MLB_CATEGORIA = saida7.MLB_CATEGORIA;
saida8_tmp.Comissao = saida7.Comissao;
saida8_tmp.Comissao1 = saida7.Comissao1;
saida8_tmp.Percent_Comissao = saida7.Percent_Comissao;
saida8_tmp.Valor_final = saida7.Valor_final;
saida8_tmp.Validacao = saida7.Validacao;
saida8_tmp.Diferenca = saida7.Diferenca;
saida8_tmp.Desconto1 = saida7.Desconto1;
saida8_tmp.Mais_de_um = saida7.Mais_de_um;
saida8_tmp.Valor_Final1 = saida7.Valor_Final1;
saida8_tmp.Validacao1 = saida7.Validacao1;
saida8_tmp.Diferenca1 = saida7.Diferenca1;
saida8_tmp.Sem_desconto_comercial = saida7.Sem_desconto_comercial;
saida8_tmp.Solicitar = saida7.Solicitar;
saida8_tmp.Valor_Cobrado = saida7.Valor_Cobrado;
saida8_tmp.Valor_a_devolver = saida7.Valor_a_devolver;
saida8_tmp.Observacao = saida7.Observacao;
saida8_tmp.Repasse = row54.NET_CREDIT_AMOUNT ;
saida8_tmp.Frete1 = saida7.Frete1;
saida8_tmp.Custo = saida7.Custo;
saida8_tmp.Margem = saida7.Margem;
saida8_tmp.Valor_Correto = saida7.Valor_Correto;
saida8_tmp.CONCATENATE = saida7.CONCATENATE ;
saida8_tmp.SOURCE_ID = saida7.SOURCE_ID ;
saida8 = saida8_tmp;

// # Output table : 'Agregate_custo'
Agregate_custo_tmp.COD_ENTREGA = saida7.COD_ENTREGA ;
Agregate_custo_tmp.sum_Custo = saida7.Custo ;
Agregate_custo = Agregate_custo_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "saida8"
if(saida8 != null) { 



	
	/**
	 * [tHashOutput_14 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida8"
						
						);
					}
					



    
		saida8Struct oneRow_tHashOutput_14 = new saida8Struct();
				
					oneRow_tHashOutput_14.ID_ANYMARKET = saida8.ID_ANYMARKET;
					oneRow_tHashOutput_14.TIPO_DOCUMENTO = saida8.TIPO_DOCUMENTO;
					oneRow_tHashOutput_14.CPF_CNPJ = saida8.CPF_CNPJ;
					oneRow_tHashOutput_14.CLIENTE = saida8.CLIENTE;
					oneRow_tHashOutput_14.CODIGO_PEDIDO = saida8.CODIGO_PEDIDO;
					oneRow_tHashOutput_14.DATA_PEDIDO = saida8.DATA_PEDIDO;
					oneRow_tHashOutput_14.MARKETPLACE = saida8.MARKETPLACE;
					oneRow_tHashOutput_14.FRETE_DO_LOJISTA = saida8.FRETE_DO_LOJISTA;
					oneRow_tHashOutput_14.STATUS = saida8.STATUS;
					oneRow_tHashOutput_14.FRETE = saida8.FRETE;
					oneRow_tHashOutput_14.DESCONTO = saida8.DESCONTO;
					oneRow_tHashOutput_14.VALOR_TOTAL_PRODUTOS = saida8.VALOR_TOTAL_PRODUTOS;
					oneRow_tHashOutput_14.TOTAL_PEDIDO = saida8.TOTAL_PEDIDO;
					oneRow_tHashOutput_14.TITULO_PRODUTO = saida8.TITULO_PRODUTO;
					oneRow_tHashOutput_14.QUANTIDADE = saida8.QUANTIDADE;
					oneRow_tHashOutput_14.VALOR_UNITARIO = saida8.VALOR_UNITARIO;
					oneRow_tHashOutput_14.SKU_PRODUTO = saida8.SKU_PRODUTO;
					oneRow_tHashOutput_14.EAN_PRODUTO = saida8.EAN_PRODUTO;
					oneRow_tHashOutput_14.NOME_LOJA_OFICIAL = saida8.NOME_LOJA_OFICIAL;
					oneRow_tHashOutput_14.TIPO_LISTAGEM = saida8.TIPO_LISTAGEM;
					oneRow_tHashOutput_14.COD_ENTREGA = saida8.COD_ENTREGA;
					oneRow_tHashOutput_14.MLB_CATEGORIA = saida8.MLB_CATEGORIA;
					oneRow_tHashOutput_14.Comissao = saida8.Comissao;
					oneRow_tHashOutput_14.Comissao1 = saida8.Comissao1;
					oneRow_tHashOutput_14.Percent_Comissao = saida8.Percent_Comissao;
					oneRow_tHashOutput_14.Valor_final = saida8.Valor_final;
					oneRow_tHashOutput_14.Validacao = saida8.Validacao;
					oneRow_tHashOutput_14.Diferenca = saida8.Diferenca;
					oneRow_tHashOutput_14.Desconto1 = saida8.Desconto1;
					oneRow_tHashOutput_14.Mais_de_um = saida8.Mais_de_um;
					oneRow_tHashOutput_14.Valor_Final1 = saida8.Valor_Final1;
					oneRow_tHashOutput_14.Validacao1 = saida8.Validacao1;
					oneRow_tHashOutput_14.Diferenca1 = saida8.Diferenca1;
					oneRow_tHashOutput_14.Sem_desconto_comercial = saida8.Sem_desconto_comercial;
					oneRow_tHashOutput_14.Solicitar = saida8.Solicitar;
					oneRow_tHashOutput_14.Valor_Cobrado = saida8.Valor_Cobrado;
					oneRow_tHashOutput_14.Valor_a_devolver = saida8.Valor_a_devolver;
					oneRow_tHashOutput_14.Observacao = saida8.Observacao;
					oneRow_tHashOutput_14.Repasse = saida8.Repasse;
					oneRow_tHashOutput_14.Frete1 = saida8.Frete1;
					oneRow_tHashOutput_14.Custo = saida8.Custo;
					oneRow_tHashOutput_14.Margem = saida8.Margem;
					oneRow_tHashOutput_14.Valor_Correto = saida8.Valor_Correto;
					oneRow_tHashOutput_14.CONCATENATE = saida8.CONCATENATE;
					oneRow_tHashOutput_14.SOURCE_ID = saida8.SOURCE_ID;
		
        tHashFile_tHashOutput_14.put(oneRow_tHashOutput_14);
        nb_line_tHashOutput_14 ++;

 


	tos_count_tHashOutput_14++;

/**
 * [tHashOutput_14 main ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_end ] stop
 */

} // End of branch "saida8"




// Start of branch "Agregate_custo"
if(Agregate_custo != null) { 



	
	/**
	 * [tAggregateRow_4_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Agregate_custo"
						
						);
					}
					
	
operation_finder_tAggregateRow_4.COD_ENTREGA = Agregate_custo.COD_ENTREGA;
			

	operation_finder_tAggregateRow_4.hashCodeDirty = true;
	
	operation_result_tAggregateRow_4 = hash_tAggregateRow_4.get(operation_finder_tAggregateRow_4);

	

	if(operation_result_tAggregateRow_4 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_4 = new AggOperationStruct_tAggregateRow_4();

		operation_result_tAggregateRow_4.COD_ENTREGA = operation_finder_tAggregateRow_4.COD_ENTREGA;
				
		
		

		hash_tAggregateRow_4.put(operation_result_tAggregateRow_4, operation_result_tAggregateRow_4);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_4.sum_Custo_sum == null) {
						operation_result_tAggregateRow_4.sum_Custo_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_4.sum_Custo_sum = operation_result_tAggregateRow_4.sum_Custo_sum.add(
						new BigDecimal(
							String.valueOf(
								Agregate_custo.sum_Custo
							)
						)
					);
					


 


	tos_count_tAggregateRow_4_AGGOUT++;

/**
 * [tAggregateRow_4_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT process_data_end ] stop
 */

} // End of branch "Agregate_custo"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_end ] stop
 */

} // End of branch "saida7"




	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */

} // End of branch "saida"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */

} // End of branch "Saida3"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */

} // End of branch "duplicado_vf"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row36 != null) {
						tHash_Lookup_row36.endGet();
					}
					globalMap.remove( "tHash_Lookup_row36" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"duplicado_vf");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());




/**
 * [tJavaRow_8 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row32 != null) {
						tHash_Lookup_row32.endGet();
					}
					globalMap.remove( "tHash_Lookup_row32" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row42");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row33 != null) {
						tHash_Lookup_row33.endGet();
					}
					globalMap.remove( "tHash_Lookup_row33" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida3");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row45 != null) {
						tHash_Lookup_row45.endGet();
					}
					globalMap.remove( "tHash_Lookup_row45" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida5");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row54 != null) {
						tHash_Lookup_row54.endGet();
					}
					globalMap.remove( "tHash_Lookup_row54" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida7");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */

	
	/**
	 * [tHashOutput_14 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
globalMap.put("tHashOutput_14_NB_LINE", nb_line_tHashOutput_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida8");
			  	}
			  	
 

ok_Hash.put("tHashOutput_14", true);
end_Hash.put("tHashOutput_14", System.currentTimeMillis());




/**
 * [tHashOutput_14 end ] stop
 */




	
	/**
	 * [tAggregateRow_4_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Agregate_custo");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_4_AGGOUT", true);
end_Hash.put("tAggregateRow_4_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_15", false);
		start_Hash.put("tHashOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tHashOutput_15 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashOutput_15 = null; 
		//use this map to keep the present key and the previous key of AdvancedMemoryHashFile
		mf_tHashOutput_15.getKeyMap().put("tHashFile_relatorio_conciliacao_" +pid + "_tHashOutput_15", "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_4");
        int nb_line_tHashOutput_15 = 0;

 



/**
 * [tHashOutput_15 begin ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_4_AGGIN", false);
		start_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	
		int tos_count_tAggregateRow_4_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_4> values_tAggregateRow_4 = hash_tAggregateRow_4.values();

globalMap.put("tAggregateRow_4_NB_LINE", values_tAggregateRow_4.size());

for(AggOperationStruct_tAggregateRow_4 aggregated_row_tAggregateRow_4 : values_tAggregateRow_4) { // G_AggR_600



 



/**
 * [tAggregateRow_4_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

            				    row28.COD_ENTREGA = aggregated_row_tAggregateRow_4.COD_ENTREGA;
            				    
    								if(aggregated_row_tAggregateRow_4.sum_Custo_sum != null) {
    								row28.sum_Custo = aggregated_row_tAggregateRow_4.sum_Custo_sum.doubleValue();
										
    								}else{
    								
    									row28.sum_Custo = null;
    									
    								}
    								

 


	tos_count_tAggregateRow_4_AGGIN++;

/**
 * [tAggregateRow_4_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_15 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					




		if(tHashFile_tHashOutput_15 == null){
			tHashFile_tHashOutput_15 = mf_tHashOutput_15.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_4");
			mf_tHashOutput_15.getResourceMap().put("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_15", tHashFile_tHashOutput_15);
		}
		row10Struct oneRow_tHashOutput_15 = new row10Struct();
			oneRow_tHashOutput_15.COD_ENTREGA = row28.COD_ENTREGA;
			oneRow_tHashOutput_15.sum_Custo = row28.sum_Custo;
        tHashFile_tHashOutput_15.put(oneRow_tHashOutput_15);
        nb_line_tHashOutput_15 ++;	

 


	tos_count_tHashOutput_15++;

/**
 * [tHashOutput_15 main ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_4_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_4_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_4_AGGIN", true);
end_Hash.put("tAggregateRow_4_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_4_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_15 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
globalMap.put("tHashOutput_15_NB_LINE", nb_line_tHashOutput_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tHashOutput_15", true);
end_Hash.put("tHashOutput_15", System.currentTimeMillis());




/**
 * [tHashOutput_15 end ] stop
 */






























				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tHashInput_13Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_4_AGGIN"
							globalMap.remove("tAggregateRow_4");
						
					     			//free memory for "tMap_16"
					     			globalMap.remove("tHash_Lookup_row54"); 
				     			
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row45"); 
				     			
					     			//free memory for "tMap_13"
					     			globalMap.remove("tHash_Lookup_row33"); 
				     			
					     			//free memory for "tMap_12"
					     			globalMap.remove("tHash_Lookup_row32"); 
				     			
					     			//free memory for "tMap_11"
					     			globalMap.remove("tHash_Lookup_row36"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 finally ] stop
 */

	
	/**
	 * [tHashOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 finally ] stop
 */




	
	/**
	 * [tAggregateRow_4_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGOUT";
	
	

 



/**
 * [tAggregateRow_4_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_4_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_4";
	
	currentComponent="tAggregateRow_4_AGGIN";
	
	

 



/**
 * [tAggregateRow_4_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 finally ] stop
 */






























				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row48Struct implements routines.system.IPersistableRow<row48Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public Integer MesProcessamento;

				public Integer getMesProcessamento () {
					return this.MesProcessamento;
				}

				public Boolean MesProcessamentoIsNullable(){
				    return true;
				}
				public Boolean MesProcessamentoIsKey(){
				    return false;
				}
				public Integer MesProcessamentoLength(){
				    return null;
				}
				public Integer MesProcessamentoPrecision(){
				    return null;
				}
				public String MesProcessamentoDefault(){
				
					return null;
				
				}
				public String MesProcessamentoComment(){
				
				    return "";
				
				}
				public String MesProcessamentoPattern(){
				
					return "";
				
				}
				public String MesProcessamentoOriginalDbColumnName(){
				
					return "MesProcessamento";
				
				}

				
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public String Comissao1;

				public String getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public String Valor_final;

				public String getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public String Diferenca;

				public String getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public String Valor_Final1;

				public String getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public String Diferenca1;

				public String getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public String Valor_Cobrado;

				public String getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public String Valor_Correto;

				public String getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public String Valor_a_devolver;

				public String getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public String CONCATE_FRETE;

				public String getCONCATE_FRETE () {
					return this.CONCATE_FRETE;
				}

				public Boolean CONCATE_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCATE_FRETEIsKey(){
				    return false;
				}
				public Integer CONCATE_FRETELength(){
				    return null;
				}
				public Integer CONCATE_FRETEPrecision(){
				    return null;
				}
				public String CONCATE_FRETEDefault(){
				
					return null;
				
				}
				public String CONCATE_FRETEComment(){
				
				    return "";
				
				}
				public String CONCATE_FRETEPattern(){
				
					return "";
				
				}
				public String CONCATE_FRETEOriginalDbColumnName(){
				
					return "CONCATE_FRETE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.MesProcessamento = readInteger(dis);
					
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
					this.Comissao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
					this.Valor_final = readString(dis);
					
					this.Validacao = readString(dis);
					
					this.Diferenca = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
					this.Valor_Final1 = readString(dis);
					
					this.Validacao1 = readString(dis);
					
					this.Diferenca1 = readString(dis);
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
					this.Valor_Cobrado = readString(dis);
					
					this.Valor_Correto = readString(dis);
					
					this.Valor_a_devolver = readString(dis);
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.MesProcessamento = readInteger(dis);
					
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
					this.Comissao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
					this.Valor_final = readString(dis);
					
					this.Validacao = readString(dis);
					
					this.Diferenca = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
					this.Valor_Final1 = readString(dis);
					
					this.Validacao1 = readString(dis);
					
					this.Diferenca1 = readString(dis);
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
					this.Valor_Cobrado = readString(dis);
					
					this.Valor_Correto = readString(dis);
					
					this.Valor_a_devolver = readString(dis);
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.MesProcessamento,dos);
					
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// String
				
						writeString(this.Comissao1,dos);
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// String
				
						writeString(this.Valor_final,dos);
					
					// String
				
						writeString(this.Validacao,dos);
					
					// String
				
						writeString(this.Diferenca,dos);
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// String
				
						writeString(this.Valor_Final1,dos);
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// String
				
						writeString(this.Diferenca1,dos);
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// String
				
						writeString(this.Valor_Cobrado,dos);
					
					// String
				
						writeString(this.Valor_Correto,dos);
					
					// String
				
						writeString(this.Valor_a_devolver,dos);
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.MesProcessamento,dos);
					
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// String
				
						writeString(this.Comissao1,dos);
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// String
				
						writeString(this.Valor_final,dos);
					
					// String
				
						writeString(this.Validacao,dos);
					
					// String
				
						writeString(this.Diferenca,dos);
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// String
				
						writeString(this.Valor_Final1,dos);
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// String
				
						writeString(this.Diferenca1,dos);
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// String
				
						writeString(this.Valor_Cobrado,dos);
					
					// String
				
						writeString(this.Valor_Correto,dos);
					
					// String
				
						writeString(this.Valor_a_devolver,dos);
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("MesProcessamento="+String.valueOf(MesProcessamento));
		sb.append(",ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+Comissao1);
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+Valor_final);
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+Diferenca);
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+Valor_Final1);
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+Diferenca1);
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+Valor_Cobrado);
		sb.append(",Valor_Correto="+Valor_Correto);
		sb.append(",Valor_a_devolver="+Valor_a_devolver);
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",CONCATE_FRETE="+CONCATE_FRETE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row48Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida16Struct implements routines.system.IPersistableRow<Saida16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public Integer MesProcessamento;

				public Integer getMesProcessamento () {
					return this.MesProcessamento;
				}

				public Boolean MesProcessamentoIsNullable(){
				    return true;
				}
				public Boolean MesProcessamentoIsKey(){
				    return false;
				}
				public Integer MesProcessamentoLength(){
				    return null;
				}
				public Integer MesProcessamentoPrecision(){
				    return null;
				}
				public String MesProcessamentoDefault(){
				
					return null;
				
				}
				public String MesProcessamentoComment(){
				
				    return "";
				
				}
				public String MesProcessamentoPattern(){
				
					return "";
				
				}
				public String MesProcessamentoOriginalDbColumnName(){
				
					return "MesProcessamento";
				
				}

				
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public String CONCATE_FRETE;

				public String getCONCATE_FRETE () {
					return this.CONCATE_FRETE;
				}

				public Boolean CONCATE_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCATE_FRETEIsKey(){
				    return false;
				}
				public Integer CONCATE_FRETELength(){
				    return null;
				}
				public Integer CONCATE_FRETEPrecision(){
				    return null;
				}
				public String CONCATE_FRETEDefault(){
				
					return null;
				
				}
				public String CONCATE_FRETEComment(){
				
				    return "";
				
				}
				public String CONCATE_FRETEPattern(){
				
					return "";
				
				}
				public String CONCATE_FRETEOriginalDbColumnName(){
				
					return "CONCATE_FRETE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.MesProcessamento = readInteger(dis);
					
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.MesProcessamento = readInteger(dis);
					
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.MesProcessamento,dos);
					
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.MesProcessamento,dos);
					
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("MesProcessamento="+String.valueOf(MesProcessamento));
		sb.append(",ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",CONCATE_FRETE="+CONCATE_FRETE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public String CONCATE_FRETE;

				public String getCONCATE_FRETE () {
					return this.CONCATE_FRETE;
				}

				public Boolean CONCATE_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCATE_FRETEIsKey(){
				    return false;
				}
				public Integer CONCATE_FRETELength(){
				    return null;
				}
				public Integer CONCATE_FRETEPrecision(){
				    return null;
				}
				public String CONCATE_FRETEDefault(){
				
					return null;
				
				}
				public String CONCATE_FRETEComment(){
				
				    return "";
				
				}
				public String CONCATE_FRETEPattern(){
				
					return "";
				
				}
				public String CONCATE_FRETEOriginalDbColumnName(){
				
					return "CONCATE_FRETE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",CONCATE_FRETE="+CONCATE_FRETE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida13Struct implements routines.system.IPersistableRow<Saida13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public String CONCATE_FRETE;

				public String getCONCATE_FRETE () {
					return this.CONCATE_FRETE;
				}

				public Boolean CONCATE_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCATE_FRETEIsKey(){
				    return false;
				}
				public Integer CONCATE_FRETELength(){
				    return null;
				}
				public Integer CONCATE_FRETEPrecision(){
				    return null;
				}
				public String CONCATE_FRETEDefault(){
				
					return null;
				
				}
				public String CONCATE_FRETEComment(){
				
				    return "";
				
				}
				public String CONCATE_FRETEPattern(){
				
					return "";
				
				}
				public String CONCATE_FRETEOriginalDbColumnName(){
				
					return "CONCATE_FRETE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",CONCATE_FRETE="+CONCATE_FRETE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row55Struct implements routines.system.IPersistableRow<row55Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public String CONCATE_FRETE;

				public String getCONCATE_FRETE () {
					return this.CONCATE_FRETE;
				}

				public Boolean CONCATE_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCATE_FRETEIsKey(){
				    return false;
				}
				public Integer CONCATE_FRETELength(){
				    return null;
				}
				public Integer CONCATE_FRETEPrecision(){
				    return null;
				}
				public String CONCATE_FRETEDefault(){
				
					return null;
				
				}
				public String CONCATE_FRETEComment(){
				
				    return "";
				
				}
				public String CONCATE_FRETEPattern(){
				
					return "";
				
				}
				public String CONCATE_FRETEOriginalDbColumnName(){
				
					return "CONCATE_FRETE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
					this.CONCATE_FRETE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// String
				
						writeString(this.CONCATE_FRETE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",CONCATE_FRETE="+CONCATE_FRETE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row55Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida15Struct implements routines.system.IPersistableRow<saida15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row51Struct implements routines.system.IPersistableRow<row51Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row51Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Saida9Struct implements routines.system.IPersistableRow<Saida9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Saida9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_13Struct implements routines.system.IPersistableRow<after_tHashInput_13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String ID_ANYMARKET;

				public String getID_ANYMARKET () {
					return this.ID_ANYMARKET;
				}

				public Boolean ID_ANYMARKETIsNullable(){
				    return true;
				}
				public Boolean ID_ANYMARKETIsKey(){
				    return false;
				}
				public Integer ID_ANYMARKETLength(){
				    return null;
				}
				public Integer ID_ANYMARKETPrecision(){
				    return null;
				}
				public String ID_ANYMARKETDefault(){
				
					return null;
				
				}
				public String ID_ANYMARKETComment(){
				
				    return "";
				
				}
				public String ID_ANYMARKETPattern(){
				
					return "";
				
				}
				public String ID_ANYMARKETOriginalDbColumnName(){
				
					return "ID_ANYMARKET";
				
				}

				
			    public String TIPO_DOCUMENTO;

				public String getTIPO_DOCUMENTO () {
					return this.TIPO_DOCUMENTO;
				}

				public Boolean TIPO_DOCUMENTOIsNullable(){
				    return true;
				}
				public Boolean TIPO_DOCUMENTOIsKey(){
				    return false;
				}
				public Integer TIPO_DOCUMENTOLength(){
				    return null;
				}
				public Integer TIPO_DOCUMENTOPrecision(){
				    return null;
				}
				public String TIPO_DOCUMENTODefault(){
				
					return null;
				
				}
				public String TIPO_DOCUMENTOComment(){
				
				    return "";
				
				}
				public String TIPO_DOCUMENTOPattern(){
				
					return "";
				
				}
				public String TIPO_DOCUMENTOOriginalDbColumnName(){
				
					return "TIPO_DOCUMENTO";
				
				}

				
			    public String CPF_CNPJ;

				public String getCPF_CNPJ () {
					return this.CPF_CNPJ;
				}

				public Boolean CPF_CNPJIsNullable(){
				    return true;
				}
				public Boolean CPF_CNPJIsKey(){
				    return false;
				}
				public Integer CPF_CNPJLength(){
				    return null;
				}
				public Integer CPF_CNPJPrecision(){
				    return null;
				}
				public String CPF_CNPJDefault(){
				
					return null;
				
				}
				public String CPF_CNPJComment(){
				
				    return "";
				
				}
				public String CPF_CNPJPattern(){
				
					return "";
				
				}
				public String CPF_CNPJOriginalDbColumnName(){
				
					return "CPF_CNPJ";
				
				}

				
			    public String CLIENTE;

				public String getCLIENTE () {
					return this.CLIENTE;
				}

				public Boolean CLIENTEIsNullable(){
				    return true;
				}
				public Boolean CLIENTEIsKey(){
				    return false;
				}
				public Integer CLIENTELength(){
				    return null;
				}
				public Integer CLIENTEPrecision(){
				    return null;
				}
				public String CLIENTEDefault(){
				
					return null;
				
				}
				public String CLIENTEComment(){
				
				    return "";
				
				}
				public String CLIENTEPattern(){
				
					return "";
				
				}
				public String CLIENTEOriginalDbColumnName(){
				
					return "CLIENTE";
				
				}

				
			    public String CODIGO_PEDIDO;

				public String getCODIGO_PEDIDO () {
					return this.CODIGO_PEDIDO;
				}

				public Boolean CODIGO_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean CODIGO_PEDIDOIsKey(){
				    return false;
				}
				public Integer CODIGO_PEDIDOLength(){
				    return null;
				}
				public Integer CODIGO_PEDIDOPrecision(){
				    return null;
				}
				public String CODIGO_PEDIDODefault(){
				
					return null;
				
				}
				public String CODIGO_PEDIDOComment(){
				
				    return "";
				
				}
				public String CODIGO_PEDIDOPattern(){
				
					return "";
				
				}
				public String CODIGO_PEDIDOOriginalDbColumnName(){
				
					return "CODIGO_PEDIDO";
				
				}

				
			    public String DATA_PEDIDO;

				public String getDATA_PEDIDO () {
					return this.DATA_PEDIDO;
				}

				public Boolean DATA_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean DATA_PEDIDOIsKey(){
				    return false;
				}
				public Integer DATA_PEDIDOLength(){
				    return null;
				}
				public Integer DATA_PEDIDOPrecision(){
				    return null;
				}
				public String DATA_PEDIDODefault(){
				
					return null;
				
				}
				public String DATA_PEDIDOComment(){
				
				    return "";
				
				}
				public String DATA_PEDIDOPattern(){
				
					return "";
				
				}
				public String DATA_PEDIDOOriginalDbColumnName(){
				
					return "DATA_PEDIDO";
				
				}

				
			    public String MARKETPLACE;

				public String getMARKETPLACE () {
					return this.MARKETPLACE;
				}

				public Boolean MARKETPLACEIsNullable(){
				    return true;
				}
				public Boolean MARKETPLACEIsKey(){
				    return false;
				}
				public Integer MARKETPLACELength(){
				    return null;
				}
				public Integer MARKETPLACEPrecision(){
				    return null;
				}
				public String MARKETPLACEDefault(){
				
					return null;
				
				}
				public String MARKETPLACEComment(){
				
				    return "";
				
				}
				public String MARKETPLACEPattern(){
				
					return "";
				
				}
				public String MARKETPLACEOriginalDbColumnName(){
				
					return "MARKETPLACE";
				
				}

				
			    public Double FRETE_DO_LOJISTA;

				public Double getFRETE_DO_LOJISTA () {
					return this.FRETE_DO_LOJISTA;
				}

				public Boolean FRETE_DO_LOJISTAIsNullable(){
				    return true;
				}
				public Boolean FRETE_DO_LOJISTAIsKey(){
				    return false;
				}
				public Integer FRETE_DO_LOJISTALength(){
				    return null;
				}
				public Integer FRETE_DO_LOJISTAPrecision(){
				    return null;
				}
				public String FRETE_DO_LOJISTADefault(){
				
					return null;
				
				}
				public String FRETE_DO_LOJISTAComment(){
				
				    return "";
				
				}
				public String FRETE_DO_LOJISTAPattern(){
				
					return "";
				
				}
				public String FRETE_DO_LOJISTAOriginalDbColumnName(){
				
					return "FRETE_DO_LOJISTA";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				
			    public Double FRETE;

				public Double getFRETE () {
					return this.FRETE;
				}

				public Boolean FRETEIsNullable(){
				    return true;
				}
				public Boolean FRETEIsKey(){
				    return false;
				}
				public Integer FRETELength(){
				    return null;
				}
				public Integer FRETEPrecision(){
				    return null;
				}
				public String FRETEDefault(){
				
					return null;
				
				}
				public String FRETEComment(){
				
				    return "";
				
				}
				public String FRETEPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String FRETEOriginalDbColumnName(){
				
					return "FRETE";
				
				}

				
			    public Double DESCONTO;

				public Double getDESCONTO () {
					return this.DESCONTO;
				}

				public Boolean DESCONTOIsNullable(){
				    return true;
				}
				public Boolean DESCONTOIsKey(){
				    return false;
				}
				public Integer DESCONTOLength(){
				    return null;
				}
				public Integer DESCONTOPrecision(){
				    return null;
				}
				public String DESCONTODefault(){
				
					return null;
				
				}
				public String DESCONTOComment(){
				
				    return "";
				
				}
				public String DESCONTOPattern(){
				
					return "";
				
				}
				public String DESCONTOOriginalDbColumnName(){
				
					return "DESCONTO";
				
				}

				
			    public Double VALOR_TOTAL_PRODUTOS;

				public Double getVALOR_TOTAL_PRODUTOS () {
					return this.VALOR_TOTAL_PRODUTOS;
				}

				public Boolean VALOR_TOTAL_PRODUTOSIsNullable(){
				    return true;
				}
				public Boolean VALOR_TOTAL_PRODUTOSIsKey(){
				    return false;
				}
				public Integer VALOR_TOTAL_PRODUTOSLength(){
				    return null;
				}
				public Integer VALOR_TOTAL_PRODUTOSPrecision(){
				    return null;
				}
				public String VALOR_TOTAL_PRODUTOSDefault(){
				
					return null;
				
				}
				public String VALOR_TOTAL_PRODUTOSComment(){
				
				    return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSPattern(){
				
					return "";
				
				}
				public String VALOR_TOTAL_PRODUTOSOriginalDbColumnName(){
				
					return "VALOR_TOTAL_PRODUTOS";
				
				}

				
			    public Double TOTAL_PEDIDO;

				public Double getTOTAL_PEDIDO () {
					return this.TOTAL_PEDIDO;
				}

				public Boolean TOTAL_PEDIDOIsNullable(){
				    return true;
				}
				public Boolean TOTAL_PEDIDOIsKey(){
				    return false;
				}
				public Integer TOTAL_PEDIDOLength(){
				    return null;
				}
				public Integer TOTAL_PEDIDOPrecision(){
				    return null;
				}
				public String TOTAL_PEDIDODefault(){
				
					return null;
				
				}
				public String TOTAL_PEDIDOComment(){
				
				    return "";
				
				}
				public String TOTAL_PEDIDOPattern(){
				
					return "";
				
				}
				public String TOTAL_PEDIDOOriginalDbColumnName(){
				
					return "TOTAL_PEDIDO";
				
				}

				
			    public String TITULO_PRODUTO;

				public String getTITULO_PRODUTO () {
					return this.TITULO_PRODUTO;
				}

				public Boolean TITULO_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean TITULO_PRODUTOIsKey(){
				    return false;
				}
				public Integer TITULO_PRODUTOLength(){
				    return null;
				}
				public Integer TITULO_PRODUTOPrecision(){
				    return null;
				}
				public String TITULO_PRODUTODefault(){
				
					return null;
				
				}
				public String TITULO_PRODUTOComment(){
				
				    return "";
				
				}
				public String TITULO_PRODUTOPattern(){
				
					return "";
				
				}
				public String TITULO_PRODUTOOriginalDbColumnName(){
				
					return "TITULO_PRODUTO";
				
				}

				
			    public Integer QUANTIDADE;

				public Integer getQUANTIDADE () {
					return this.QUANTIDADE;
				}

				public Boolean QUANTIDADEIsNullable(){
				    return true;
				}
				public Boolean QUANTIDADEIsKey(){
				    return false;
				}
				public Integer QUANTIDADELength(){
				    return null;
				}
				public Integer QUANTIDADEPrecision(){
				    return null;
				}
				public String QUANTIDADEDefault(){
				
					return null;
				
				}
				public String QUANTIDADEComment(){
				
				    return "";
				
				}
				public String QUANTIDADEPattern(){
				
					return "";
				
				}
				public String QUANTIDADEOriginalDbColumnName(){
				
					return "QUANTIDADE";
				
				}

				
			    public Double VALOR_UNITARIO;

				public Double getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}

				public Boolean VALOR_UNITARIOIsNullable(){
				    return true;
				}
				public Boolean VALOR_UNITARIOIsKey(){
				    return false;
				}
				public Integer VALOR_UNITARIOLength(){
				    return null;
				}
				public Integer VALOR_UNITARIOPrecision(){
				    return null;
				}
				public String VALOR_UNITARIODefault(){
				
					return null;
				
				}
				public String VALOR_UNITARIOComment(){
				
				    return "";
				
				}
				public String VALOR_UNITARIOPattern(){
				
					return "";
				
				}
				public String VALOR_UNITARIOOriginalDbColumnName(){
				
					return "VALOR_UNITARIO";
				
				}

				
			    public String SKU_PRODUTO;

				public String getSKU_PRODUTO () {
					return this.SKU_PRODUTO;
				}

				public Boolean SKU_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean SKU_PRODUTOIsKey(){
				    return false;
				}
				public Integer SKU_PRODUTOLength(){
				    return null;
				}
				public Integer SKU_PRODUTOPrecision(){
				    return null;
				}
				public String SKU_PRODUTODefault(){
				
					return null;
				
				}
				public String SKU_PRODUTOComment(){
				
				    return "";
				
				}
				public String SKU_PRODUTOPattern(){
				
					return "";
				
				}
				public String SKU_PRODUTOOriginalDbColumnName(){
				
					return "SKU_PRODUTO";
				
				}

				
			    public String EAN_PRODUTO;

				public String getEAN_PRODUTO () {
					return this.EAN_PRODUTO;
				}

				public Boolean EAN_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean EAN_PRODUTOIsKey(){
				    return false;
				}
				public Integer EAN_PRODUTOLength(){
				    return null;
				}
				public Integer EAN_PRODUTOPrecision(){
				    return null;
				}
				public String EAN_PRODUTODefault(){
				
					return null;
				
				}
				public String EAN_PRODUTOComment(){
				
				    return "";
				
				}
				public String EAN_PRODUTOPattern(){
				
					return "";
				
				}
				public String EAN_PRODUTOOriginalDbColumnName(){
				
					return "EAN_PRODUTO";
				
				}

				
			    public String NOME_LOJA_OFICIAL;

				public String getNOME_LOJA_OFICIAL () {
					return this.NOME_LOJA_OFICIAL;
				}

				public Boolean NOME_LOJA_OFICIALIsNullable(){
				    return true;
				}
				public Boolean NOME_LOJA_OFICIALIsKey(){
				    return false;
				}
				public Integer NOME_LOJA_OFICIALLength(){
				    return null;
				}
				public Integer NOME_LOJA_OFICIALPrecision(){
				    return null;
				}
				public String NOME_LOJA_OFICIALDefault(){
				
					return null;
				
				}
				public String NOME_LOJA_OFICIALComment(){
				
				    return "";
				
				}
				public String NOME_LOJA_OFICIALPattern(){
				
					return "";
				
				}
				public String NOME_LOJA_OFICIALOriginalDbColumnName(){
				
					return "NOME_LOJA_OFICIAL";
				
				}

				
			    public String TIPO_LISTAGEM;

				public String getTIPO_LISTAGEM () {
					return this.TIPO_LISTAGEM;
				}

				public Boolean TIPO_LISTAGEMIsNullable(){
				    return true;
				}
				public Boolean TIPO_LISTAGEMIsKey(){
				    return false;
				}
				public Integer TIPO_LISTAGEMLength(){
				    return null;
				}
				public Integer TIPO_LISTAGEMPrecision(){
				    return null;
				}
				public String TIPO_LISTAGEMDefault(){
				
					return null;
				
				}
				public String TIPO_LISTAGEMComment(){
				
				    return "";
				
				}
				public String TIPO_LISTAGEMPattern(){
				
					return "";
				
				}
				public String TIPO_LISTAGEMOriginalDbColumnName(){
				
					return "TIPO_LISTAGEM";
				
				}

				
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public String MLB_CATEGORIA;

				public String getMLB_CATEGORIA () {
					return this.MLB_CATEGORIA;
				}

				public Boolean MLB_CATEGORIAIsNullable(){
				    return true;
				}
				public Boolean MLB_CATEGORIAIsKey(){
				    return false;
				}
				public Integer MLB_CATEGORIALength(){
				    return null;
				}
				public Integer MLB_CATEGORIAPrecision(){
				    return null;
				}
				public String MLB_CATEGORIADefault(){
				
					return null;
				
				}
				public String MLB_CATEGORIAComment(){
				
				    return "";
				
				}
				public String MLB_CATEGORIAPattern(){
				
					return "";
				
				}
				public String MLB_CATEGORIAOriginalDbColumnName(){
				
					return "MLB_CATEGORIA";
				
				}

				
			    public Double Comissao;

				public Double getComissao () {
					return this.Comissao;
				}

				public Boolean ComissaoIsNullable(){
				    return true;
				}
				public Boolean ComissaoIsKey(){
				    return false;
				}
				public Integer ComissaoLength(){
				    return null;
				}
				public Integer ComissaoPrecision(){
				    return null;
				}
				public String ComissaoDefault(){
				
					return null;
				
				}
				public String ComissaoComment(){
				
				    return "";
				
				}
				public String ComissaoPattern(){
				
					return "";
				
				}
				public String ComissaoOriginalDbColumnName(){
				
					return "Comissao";
				
				}

				
			    public Double Comissao1;

				public Double getComissao1 () {
					return this.Comissao1;
				}

				public Boolean Comissao1IsNullable(){
				    return true;
				}
				public Boolean Comissao1IsKey(){
				    return false;
				}
				public Integer Comissao1Length(){
				    return null;
				}
				public Integer Comissao1Precision(){
				    return 3;
				}
				public String Comissao1Default(){
				
					return null;
				
				}
				public String Comissao1Comment(){
				
				    return "";
				
				}
				public String Comissao1Pattern(){
				
					return "";
				
				}
				public String Comissao1OriginalDbColumnName(){
				
					return "Comissao1";
				
				}

				
			    public Double Percent_Comissao;

				public Double getPercent_Comissao () {
					return this.Percent_Comissao;
				}

				public Boolean Percent_ComissaoIsNullable(){
				    return true;
				}
				public Boolean Percent_ComissaoIsKey(){
				    return false;
				}
				public Integer Percent_ComissaoLength(){
				    return null;
				}
				public Integer Percent_ComissaoPrecision(){
				    return null;
				}
				public String Percent_ComissaoDefault(){
				
					return null;
				
				}
				public String Percent_ComissaoComment(){
				
				    return "";
				
				}
				public String Percent_ComissaoPattern(){
				
					return "";
				
				}
				public String Percent_ComissaoOriginalDbColumnName(){
				
					return "Percent_Comissao";
				
				}

				
			    public Double Valor_final;

				public Double getValor_final () {
					return this.Valor_final;
				}

				public Boolean Valor_finalIsNullable(){
				    return true;
				}
				public Boolean Valor_finalIsKey(){
				    return false;
				}
				public Integer Valor_finalLength(){
				    return null;
				}
				public Integer Valor_finalPrecision(){
				    return null;
				}
				public String Valor_finalDefault(){
				
					return null;
				
				}
				public String Valor_finalComment(){
				
				    return "";
				
				}
				public String Valor_finalPattern(){
				
					return "";
				
				}
				public String Valor_finalOriginalDbColumnName(){
				
					return "Valor_final";
				
				}

				
			    public String Validacao;

				public String getValidacao () {
					return this.Validacao;
				}

				public Boolean ValidacaoIsNullable(){
				    return true;
				}
				public Boolean ValidacaoIsKey(){
				    return false;
				}
				public Integer ValidacaoLength(){
				    return null;
				}
				public Integer ValidacaoPrecision(){
				    return null;
				}
				public String ValidacaoDefault(){
				
					return null;
				
				}
				public String ValidacaoComment(){
				
				    return "";
				
				}
				public String ValidacaoPattern(){
				
					return "";
				
				}
				public String ValidacaoOriginalDbColumnName(){
				
					return "Validacao";
				
				}

				
			    public Double Diferenca;

				public Double getDiferenca () {
					return this.Diferenca;
				}

				public Boolean DiferencaIsNullable(){
				    return true;
				}
				public Boolean DiferencaIsKey(){
				    return false;
				}
				public Integer DiferencaLength(){
				    return null;
				}
				public Integer DiferencaPrecision(){
				    return null;
				}
				public String DiferencaDefault(){
				
					return null;
				
				}
				public String DiferencaComment(){
				
				    return "";
				
				}
				public String DiferencaPattern(){
				
					return "";
				
				}
				public String DiferencaOriginalDbColumnName(){
				
					return "Diferenca";
				
				}

				
			    public Double Desconto1;

				public Double getDesconto1 () {
					return this.Desconto1;
				}

				public Boolean Desconto1IsNullable(){
				    return true;
				}
				public Boolean Desconto1IsKey(){
				    return false;
				}
				public Integer Desconto1Length(){
				    return null;
				}
				public Integer Desconto1Precision(){
				    return null;
				}
				public String Desconto1Default(){
				
					return null;
				
				}
				public String Desconto1Comment(){
				
				    return "";
				
				}
				public String Desconto1Pattern(){
				
					return "";
				
				}
				public String Desconto1OriginalDbColumnName(){
				
					return "Desconto1";
				
				}

				
			    public Integer Mais_de_um;

				public Integer getMais_de_um () {
					return this.Mais_de_um;
				}

				public Boolean Mais_de_umIsNullable(){
				    return true;
				}
				public Boolean Mais_de_umIsKey(){
				    return false;
				}
				public Integer Mais_de_umLength(){
				    return null;
				}
				public Integer Mais_de_umPrecision(){
				    return null;
				}
				public String Mais_de_umDefault(){
				
					return null;
				
				}
				public String Mais_de_umComment(){
				
				    return "";
				
				}
				public String Mais_de_umPattern(){
				
					return "";
				
				}
				public String Mais_de_umOriginalDbColumnName(){
				
					return "Mais_de_um";
				
				}

				
			    public Double Valor_Final1;

				public Double getValor_Final1 () {
					return this.Valor_Final1;
				}

				public Boolean Valor_Final1IsNullable(){
				    return true;
				}
				public Boolean Valor_Final1IsKey(){
				    return false;
				}
				public Integer Valor_Final1Length(){
				    return null;
				}
				public Integer Valor_Final1Precision(){
				    return null;
				}
				public String Valor_Final1Default(){
				
					return null;
				
				}
				public String Valor_Final1Comment(){
				
				    return "";
				
				}
				public String Valor_Final1Pattern(){
				
					return "";
				
				}
				public String Valor_Final1OriginalDbColumnName(){
				
					return "Valor_Final1";
				
				}

				
			    public String Validacao1;

				public String getValidacao1 () {
					return this.Validacao1;
				}

				public Boolean Validacao1IsNullable(){
				    return true;
				}
				public Boolean Validacao1IsKey(){
				    return false;
				}
				public Integer Validacao1Length(){
				    return null;
				}
				public Integer Validacao1Precision(){
				    return null;
				}
				public String Validacao1Default(){
				
					return null;
				
				}
				public String Validacao1Comment(){
				
				    return "";
				
				}
				public String Validacao1Pattern(){
				
					return "";
				
				}
				public String Validacao1OriginalDbColumnName(){
				
					return "Validacao1";
				
				}

				
			    public Double Diferenca1;

				public Double getDiferenca1 () {
					return this.Diferenca1;
				}

				public Boolean Diferenca1IsNullable(){
				    return true;
				}
				public Boolean Diferenca1IsKey(){
				    return false;
				}
				public Integer Diferenca1Length(){
				    return null;
				}
				public Integer Diferenca1Precision(){
				    return null;
				}
				public String Diferenca1Default(){
				
					return null;
				
				}
				public String Diferenca1Comment(){
				
				    return "";
				
				}
				public String Diferenca1Pattern(){
				
					return "";
				
				}
				public String Diferenca1OriginalDbColumnName(){
				
					return "Diferenca1";
				
				}

				
			    public String Sem_desconto_comercial;

				public String getSem_desconto_comercial () {
					return this.Sem_desconto_comercial;
				}

				public Boolean Sem_desconto_comercialIsNullable(){
				    return true;
				}
				public Boolean Sem_desconto_comercialIsKey(){
				    return false;
				}
				public Integer Sem_desconto_comercialLength(){
				    return null;
				}
				public Integer Sem_desconto_comercialPrecision(){
				    return null;
				}
				public String Sem_desconto_comercialDefault(){
				
					return null;
				
				}
				public String Sem_desconto_comercialComment(){
				
				    return "";
				
				}
				public String Sem_desconto_comercialPattern(){
				
					return "";
				
				}
				public String Sem_desconto_comercialOriginalDbColumnName(){
				
					return "Sem_desconto_comercial";
				
				}

				
			    public String Solicitar;

				public String getSolicitar () {
					return this.Solicitar;
				}

				public Boolean SolicitarIsNullable(){
				    return true;
				}
				public Boolean SolicitarIsKey(){
				    return false;
				}
				public Integer SolicitarLength(){
				    return null;
				}
				public Integer SolicitarPrecision(){
				    return null;
				}
				public String SolicitarDefault(){
				
					return null;
				
				}
				public String SolicitarComment(){
				
				    return "";
				
				}
				public String SolicitarPattern(){
				
					return "";
				
				}
				public String SolicitarOriginalDbColumnName(){
				
					return "Solicitar";
				
				}

				
			    public Double Valor_Cobrado;

				public Double getValor_Cobrado () {
					return this.Valor_Cobrado;
				}

				public Boolean Valor_CobradoIsNullable(){
				    return true;
				}
				public Boolean Valor_CobradoIsKey(){
				    return false;
				}
				public Integer Valor_CobradoLength(){
				    return null;
				}
				public Integer Valor_CobradoPrecision(){
				    return null;
				}
				public String Valor_CobradoDefault(){
				
					return null;
				
				}
				public String Valor_CobradoComment(){
				
				    return "";
				
				}
				public String Valor_CobradoPattern(){
				
					return "";
				
				}
				public String Valor_CobradoOriginalDbColumnName(){
				
					return "Valor_Cobrado";
				
				}

				
			    public Double Valor_a_devolver;

				public Double getValor_a_devolver () {
					return this.Valor_a_devolver;
				}

				public Boolean Valor_a_devolverIsNullable(){
				    return true;
				}
				public Boolean Valor_a_devolverIsKey(){
				    return false;
				}
				public Integer Valor_a_devolverLength(){
				    return null;
				}
				public Integer Valor_a_devolverPrecision(){
				    return null;
				}
				public String Valor_a_devolverDefault(){
				
					return null;
				
				}
				public String Valor_a_devolverComment(){
				
				    return "";
				
				}
				public String Valor_a_devolverPattern(){
				
					return "";
				
				}
				public String Valor_a_devolverOriginalDbColumnName(){
				
					return "Valor_a_devolver";
				
				}

				
			    public String Observacao;

				public String getObservacao () {
					return this.Observacao;
				}

				public Boolean ObservacaoIsNullable(){
				    return true;
				}
				public Boolean ObservacaoIsKey(){
				    return false;
				}
				public Integer ObservacaoLength(){
				    return null;
				}
				public Integer ObservacaoPrecision(){
				    return null;
				}
				public String ObservacaoDefault(){
				
					return null;
				
				}
				public String ObservacaoComment(){
				
				    return "";
				
				}
				public String ObservacaoPattern(){
				
					return "";
				
				}
				public String ObservacaoOriginalDbColumnName(){
				
					return "Observacao";
				
				}

				
			    public Double Repasse;

				public Double getRepasse () {
					return this.Repasse;
				}

				public Boolean RepasseIsNullable(){
				    return true;
				}
				public Boolean RepasseIsKey(){
				    return false;
				}
				public Integer RepasseLength(){
				    return null;
				}
				public Integer RepassePrecision(){
				    return null;
				}
				public String RepasseDefault(){
				
					return null;
				
				}
				public String RepasseComment(){
				
				    return "";
				
				}
				public String RepassePattern(){
				
					return "";
				
				}
				public String RepasseOriginalDbColumnName(){
				
					return "Repasse";
				
				}

				
			    public Double Frete1;

				public Double getFrete1 () {
					return this.Frete1;
				}

				public Boolean Frete1IsNullable(){
				    return true;
				}
				public Boolean Frete1IsKey(){
				    return false;
				}
				public Integer Frete1Length(){
				    return null;
				}
				public Integer Frete1Precision(){
				    return null;
				}
				public String Frete1Default(){
				
					return null;
				
				}
				public String Frete1Comment(){
				
				    return "";
				
				}
				public String Frete1Pattern(){
				
					return "";
				
				}
				public String Frete1OriginalDbColumnName(){
				
					return "Frete1";
				
				}

				
			    public Double Custo;

				public Double getCusto () {
					return this.Custo;
				}

				public Boolean CustoIsNullable(){
				    return true;
				}
				public Boolean CustoIsKey(){
				    return false;
				}
				public Integer CustoLength(){
				    return null;
				}
				public Integer CustoPrecision(){
				    return null;
				}
				public String CustoDefault(){
				
					return null;
				
				}
				public String CustoComment(){
				
				    return "";
				
				}
				public String CustoPattern(){
				
					return "";
				
				}
				public String CustoOriginalDbColumnName(){
				
					return "Custo";
				
				}

				
			    public Double Margem;

				public Double getMargem () {
					return this.Margem;
				}

				public Boolean MargemIsNullable(){
				    return true;
				}
				public Boolean MargemIsKey(){
				    return false;
				}
				public Integer MargemLength(){
				    return null;
				}
				public Integer MargemPrecision(){
				    return null;
				}
				public String MargemDefault(){
				
					return null;
				
				}
				public String MargemComment(){
				
				    return "";
				
				}
				public String MargemPattern(){
				
					return "";
				
				}
				public String MargemOriginalDbColumnName(){
				
					return "Margem";
				
				}

				
			    public Double Valor_Correto;

				public Double getValor_Correto () {
					return this.Valor_Correto;
				}

				public Boolean Valor_CorretoIsNullable(){
				    return true;
				}
				public Boolean Valor_CorretoIsKey(){
				    return false;
				}
				public Integer Valor_CorretoLength(){
				    return null;
				}
				public Integer Valor_CorretoPrecision(){
				    return null;
				}
				public String Valor_CorretoDefault(){
				
					return null;
				
				}
				public String Valor_CorretoComment(){
				
				    return "";
				
				}
				public String Valor_CorretoPattern(){
				
					return "";
				
				}
				public String Valor_CorretoOriginalDbColumnName(){
				
					return "Valor_Correto";
				
				}

				
			    public String CONCATENATE;

				public String getCONCATENATE () {
					return this.CONCATENATE;
				}

				public Boolean CONCATENATEIsNullable(){
				    return true;
				}
				public Boolean CONCATENATEIsKey(){
				    return false;
				}
				public Integer CONCATENATELength(){
				    return null;
				}
				public Integer CONCATENATEPrecision(){
				    return null;
				}
				public String CONCATENATEDefault(){
				
					return null;
				
				}
				public String CONCATENATEComment(){
				
				    return "";
				
				}
				public String CONCATENATEPattern(){
				
					return "";
				
				}
				public String CONCATENATEOriginalDbColumnName(){
				
					return "CONCATENATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.ID_ANYMARKET = readString(dis);
					
					this.TIPO_DOCUMENTO = readString(dis);
					
					this.CPF_CNPJ = readString(dis);
					
					this.CLIENTE = readString(dis);
					
					this.CODIGO_PEDIDO = readString(dis);
					
					this.DATA_PEDIDO = readString(dis);
					
					this.MARKETPLACE = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE_DO_LOJISTA = null;
           				} else {
           			    	this.FRETE_DO_LOJISTA = dis.readDouble();
           				}
					
					this.STATUS = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FRETE = null;
           				} else {
           			    	this.FRETE = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.DESCONTO = null;
           				} else {
           			    	this.DESCONTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_TOTAL_PRODUTOS = null;
           				} else {
           			    	this.VALOR_TOTAL_PRODUTOS = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TOTAL_PEDIDO = null;
           				} else {
           			    	this.TOTAL_PEDIDO = dis.readDouble();
           				}
					
					this.TITULO_PRODUTO = readString(dis);
					
						this.QUANTIDADE = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VALOR_UNITARIO = null;
           				} else {
           			    	this.VALOR_UNITARIO = dis.readDouble();
           				}
					
					this.SKU_PRODUTO = readString(dis);
					
					this.EAN_PRODUTO = readString(dis);
					
					this.NOME_LOJA_OFICIAL = readString(dis);
					
					this.TIPO_LISTAGEM = readString(dis);
					
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
					this.MLB_CATEGORIA = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao = null;
           				} else {
           			    	this.Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao1 = null;
           				} else {
           			    	this.Comissao1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Percent_Comissao = null;
           				} else {
           			    	this.Percent_Comissao = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_final = null;
           				} else {
           			    	this.Valor_final = dis.readDouble();
           				}
					
					this.Validacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca = null;
           				} else {
           			    	this.Diferenca = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Desconto1 = null;
           				} else {
           			    	this.Desconto1 = dis.readDouble();
           				}
					
						this.Mais_de_um = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Final1 = null;
           				} else {
           			    	this.Valor_Final1 = dis.readDouble();
           				}
					
					this.Validacao1 = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Diferenca1 = null;
           				} else {
           			    	this.Diferenca1 = dis.readDouble();
           				}
					
					this.Sem_desconto_comercial = readString(dis);
					
					this.Solicitar = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Cobrado = null;
           				} else {
           			    	this.Valor_Cobrado = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_a_devolver = null;
           				} else {
           			    	this.Valor_a_devolver = dis.readDouble();
           				}
					
					this.Observacao = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Repasse = null;
           				} else {
           			    	this.Repasse = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Frete1 = null;
           				} else {
           			    	this.Frete1 = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Custo = null;
           				} else {
           			    	this.Custo = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Margem = null;
           				} else {
           			    	this.Margem = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Valor_Correto = null;
           				} else {
           			    	this.Valor_Correto = dis.readDouble();
           				}
					
					this.CONCATENATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ID_ANYMARKET,dos);
					
					// String
				
						writeString(this.TIPO_DOCUMENTO,dos);
					
					// String
				
						writeString(this.CPF_CNPJ,dos);
					
					// String
				
						writeString(this.CLIENTE,dos);
					
					// String
				
						writeString(this.CODIGO_PEDIDO,dos);
					
					// String
				
						writeString(this.DATA_PEDIDO,dos);
					
					// String
				
						writeString(this.MARKETPLACE,dos);
					
					// Double
				
						if(this.FRETE_DO_LOJISTA == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE_DO_LOJISTA);
		            	}
					
					// String
				
						writeString(this.STATUS,dos);
					
					// Double
				
						if(this.FRETE == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FRETE);
		            	}
					
					// Double
				
						if(this.DESCONTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.DESCONTO);
		            	}
					
					// Double
				
						if(this.VALOR_TOTAL_PRODUTOS == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_TOTAL_PRODUTOS);
		            	}
					
					// Double
				
						if(this.TOTAL_PEDIDO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TOTAL_PEDIDO);
		            	}
					
					// String
				
						writeString(this.TITULO_PRODUTO,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDADE,dos);
					
					// Double
				
						if(this.VALOR_UNITARIO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VALOR_UNITARIO);
		            	}
					
					// String
				
						writeString(this.SKU_PRODUTO,dos);
					
					// String
				
						writeString(this.EAN_PRODUTO,dos);
					
					// String
				
						writeString(this.NOME_LOJA_OFICIAL,dos);
					
					// String
				
						writeString(this.TIPO_LISTAGEM,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
					// String
				
						writeString(this.MLB_CATEGORIA,dos);
					
					// Double
				
						if(this.Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao);
		            	}
					
					// Double
				
						if(this.Comissao1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao1);
		            	}
					
					// Double
				
						if(this.Percent_Comissao == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Percent_Comissao);
		            	}
					
					// Double
				
						if(this.Valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_final);
		            	}
					
					// String
				
						writeString(this.Validacao,dos);
					
					// Double
				
						if(this.Diferenca == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca);
		            	}
					
					// Double
				
						if(this.Desconto1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Desconto1);
		            	}
					
					// Integer
				
						writeInteger(this.Mais_de_um,dos);
					
					// Double
				
						if(this.Valor_Final1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Final1);
		            	}
					
					// String
				
						writeString(this.Validacao1,dos);
					
					// Double
				
						if(this.Diferenca1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Diferenca1);
		            	}
					
					// String
				
						writeString(this.Sem_desconto_comercial,dos);
					
					// String
				
						writeString(this.Solicitar,dos);
					
					// Double
				
						if(this.Valor_Cobrado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Cobrado);
		            	}
					
					// Double
				
						if(this.Valor_a_devolver == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_a_devolver);
		            	}
					
					// String
				
						writeString(this.Observacao,dos);
					
					// Double
				
						if(this.Repasse == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Repasse);
		            	}
					
					// Double
				
						if(this.Frete1 == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Frete1);
		            	}
					
					// Double
				
						if(this.Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Custo);
		            	}
					
					// Double
				
						if(this.Margem == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Margem);
		            	}
					
					// Double
				
						if(this.Valor_Correto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Valor_Correto);
		            	}
					
					// String
				
						writeString(this.CONCATENATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ID_ANYMARKET="+ID_ANYMARKET);
		sb.append(",TIPO_DOCUMENTO="+TIPO_DOCUMENTO);
		sb.append(",CPF_CNPJ="+CPF_CNPJ);
		sb.append(",CLIENTE="+CLIENTE);
		sb.append(",CODIGO_PEDIDO="+CODIGO_PEDIDO);
		sb.append(",DATA_PEDIDO="+DATA_PEDIDO);
		sb.append(",MARKETPLACE="+MARKETPLACE);
		sb.append(",FRETE_DO_LOJISTA="+String.valueOf(FRETE_DO_LOJISTA));
		sb.append(",STATUS="+STATUS);
		sb.append(",FRETE="+String.valueOf(FRETE));
		sb.append(",DESCONTO="+String.valueOf(DESCONTO));
		sb.append(",VALOR_TOTAL_PRODUTOS="+String.valueOf(VALOR_TOTAL_PRODUTOS));
		sb.append(",TOTAL_PEDIDO="+String.valueOf(TOTAL_PEDIDO));
		sb.append(",TITULO_PRODUTO="+TITULO_PRODUTO);
		sb.append(",QUANTIDADE="+String.valueOf(QUANTIDADE));
		sb.append(",VALOR_UNITARIO="+String.valueOf(VALOR_UNITARIO));
		sb.append(",SKU_PRODUTO="+SKU_PRODUTO);
		sb.append(",EAN_PRODUTO="+EAN_PRODUTO);
		sb.append(",NOME_LOJA_OFICIAL="+NOME_LOJA_OFICIAL);
		sb.append(",TIPO_LISTAGEM="+TIPO_LISTAGEM);
		sb.append(",COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",MLB_CATEGORIA="+MLB_CATEGORIA);
		sb.append(",Comissao="+String.valueOf(Comissao));
		sb.append(",Comissao1="+String.valueOf(Comissao1));
		sb.append(",Percent_Comissao="+String.valueOf(Percent_Comissao));
		sb.append(",Valor_final="+String.valueOf(Valor_final));
		sb.append(",Validacao="+Validacao);
		sb.append(",Diferenca="+String.valueOf(Diferenca));
		sb.append(",Desconto1="+String.valueOf(Desconto1));
		sb.append(",Mais_de_um="+String.valueOf(Mais_de_um));
		sb.append(",Valor_Final1="+String.valueOf(Valor_Final1));
		sb.append(",Validacao1="+Validacao1);
		sb.append(",Diferenca1="+String.valueOf(Diferenca1));
		sb.append(",Sem_desconto_comercial="+Sem_desconto_comercial);
		sb.append(",Solicitar="+Solicitar);
		sb.append(",Valor_Cobrado="+String.valueOf(Valor_Cobrado));
		sb.append(",Valor_a_devolver="+String.valueOf(Valor_a_devolver));
		sb.append(",Observacao="+Observacao);
		sb.append(",Repasse="+String.valueOf(Repasse));
		sb.append(",Frete1="+String.valueOf(Frete1));
		sb.append(",Custo="+String.valueOf(Custo));
		sb.append(",Margem="+String.valueOf(Margem));
		sb.append(",Valor_Correto="+String.valueOf(Valor_Correto));
		sb.append(",CONCATENATE="+CONCATENATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_14Process(globalMap);
		tHashInput_15Process(globalMap);
		tHashInput_18Process(globalMap);

		row34Struct row34 = new row34Struct();
Saida9Struct Saida9 = new Saida9Struct();
Saida9Struct row51 = Saida9;
saida15Struct saida15 = new saida15Struct();
row55Struct row55 = new row55Struct();
Saida13Struct Saida13 = new Saida13Struct();
Saida13Struct row31 = Saida13;
Saida16Struct Saida16 = new Saida16Struct();
row48Struct row48 = new row48Struct();












	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row48");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		String fileName_tFileOutputExcel_1="//storage/Setores/Power BI/Dados/Conciliacao/Conferencia/Consiliacao-"+context.mesprocessamento+"-"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_1.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_1.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_1.setSheet("Sheet1");
		xlsxTool_tFileOutputExcel_1.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("ARIAL");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("MesProcessamento");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ID_ANYMARKET");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TIPO_DOCUMENTO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CPF_CNPJ");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CLIENTE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_PEDIDO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DATA_PEDIDO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("MARKETPLACE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FRETE_DO_LOJISTA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("STATUS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FRETE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESCONTO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_TOTAL_PRODUTOS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TOTAL_PEDIDO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TITULO_PRODUTO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("QUANTIDADE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_UNITARIO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("SKU_PRODUTO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("EAN_PRODUTO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NOME_LOJA_OFICIAL");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TIPO_LISTAGEM");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("COD_ENTREGA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("MLB_CATEGORIA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Comissao");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Comissao1");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Percent_Comissao");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Valor_final");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Validacao");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Diferenca");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Desconto1");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Mais_de_um");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Valor_Final1");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Validacao1");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Diferenca1");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Sem_desconto_comercial");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Solicitar");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Valor_Cobrado");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Valor_Correto");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Valor_a_devolver");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Observacao");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Repasse");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Frete1");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Custo");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Margem");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("sum_Custo");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CONCATE_FRETE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("SOURCE_ID");
		
		nb_line_tFileOutputExcel_1++;
		headerIsInserted_tFileOutputExcel_1 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_11", false);
		start_Hash.put("tJavaRow_11", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida16");
					}
				
		int tos_count_tJavaRow_11 = 0;
		

int nb_line_tJavaRow_11 = 0;

 



/**
 * [tJavaRow_11 begin ] stop
 */



	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida16Struct Saida16_tmp = new Saida16Struct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tHashOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_16", false);
		start_Hash.put("tHashOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida13");
					}
				
		int tos_count_tHashOutput_16 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida13Struct> tHashFile_tHashOutput_16 = null;
		String hashKey_tHashOutput_16 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_16";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_16)){
			    if(mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16) == null){
	      		    mf_tHashOutput_16.getResourceMap().put(hashKey_tHashOutput_16, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<Saida13Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }else{
			    	tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }
			}
        int nb_line_tHashOutput_16 = 0;

 



/**
 * [tHashOutput_16 begin ] stop
 */



	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row55");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct> tHash_Lookup_row49 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct>) 
					globalMap.get( "tHash_Lookup_row49" ))
					;					
					
	

row49Struct row49HashKey = new row49Struct();
row49Struct row49Default = new row49Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida13Struct Saida13_tmp = new Saida13Struct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tJavaRow_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_10", false);
		start_Hash.put("tJavaRow_10", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida15");
					}
				
		int tos_count_tJavaRow_10 = 0;
		

int nb_line_tJavaRow_10 = 0;

 



/**
 * [tJavaRow_10 begin ] stop
 */



	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row51");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct> tHash_Lookup_row39 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct>) 
					globalMap.get( "tHash_Lookup_row39" ))
					;					
					
	

row39Struct row39HashKey = new row39Struct();
row39Struct row39Default = new row39Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida15Struct saida15_tmp = new saida15Struct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tLogRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_5", false);
		start_Hash.put("tLogRow_5", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Saida9");
					}
				
		int tos_count_tLogRow_5 = 0;
		

 



/**
 * [tLogRow_5 begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
					globalMap.get( "tHash_Lookup_row30" ))
					;					
					
	

row30Struct row30HashKey = new row30Struct();
row30Struct row30Default = new row30Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
Saida9Struct Saida9_tmp = new Saida9Struct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tHashInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_13", false);
		start_Hash.put("tHashInput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_13";
	
	
		int tos_count_tHashInput_13 = 0;
		


int nb_line_tHashInput_13 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida8Struct> tHashFile_tHashInput_13 = mf_tHashInput_13.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_14");
if(tHashFile_tHashInput_13==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<saida8Struct> iterator_tHashInput_13 = tHashFile_tHashInput_13.iterator();
while (iterator_tHashInput_13.hasNext()) {
    saida8Struct next_tHashInput_13 = iterator_tHashInput_13.next();

	row34.ID_ANYMARKET = next_tHashInput_13.ID_ANYMARKET;
	row34.TIPO_DOCUMENTO = next_tHashInput_13.TIPO_DOCUMENTO;
	row34.CPF_CNPJ = next_tHashInput_13.CPF_CNPJ;
	row34.CLIENTE = next_tHashInput_13.CLIENTE;
	row34.CODIGO_PEDIDO = next_tHashInput_13.CODIGO_PEDIDO;
	row34.DATA_PEDIDO = next_tHashInput_13.DATA_PEDIDO;
	row34.MARKETPLACE = next_tHashInput_13.MARKETPLACE;
	row34.FRETE_DO_LOJISTA = next_tHashInput_13.FRETE_DO_LOJISTA;
	row34.STATUS = next_tHashInput_13.STATUS;
	row34.FRETE = next_tHashInput_13.FRETE;
	row34.DESCONTO = next_tHashInput_13.DESCONTO;
	row34.VALOR_TOTAL_PRODUTOS = next_tHashInput_13.VALOR_TOTAL_PRODUTOS;
	row34.TOTAL_PEDIDO = next_tHashInput_13.TOTAL_PEDIDO;
	row34.TITULO_PRODUTO = next_tHashInput_13.TITULO_PRODUTO;
	row34.QUANTIDADE = next_tHashInput_13.QUANTIDADE;
	row34.VALOR_UNITARIO = next_tHashInput_13.VALOR_UNITARIO;
	row34.SKU_PRODUTO = next_tHashInput_13.SKU_PRODUTO;
	row34.EAN_PRODUTO = next_tHashInput_13.EAN_PRODUTO;
	row34.NOME_LOJA_OFICIAL = next_tHashInput_13.NOME_LOJA_OFICIAL;
	row34.TIPO_LISTAGEM = next_tHashInput_13.TIPO_LISTAGEM;
	row34.COD_ENTREGA = next_tHashInput_13.COD_ENTREGA;
	row34.MLB_CATEGORIA = next_tHashInput_13.MLB_CATEGORIA;
	row34.Comissao = next_tHashInput_13.Comissao;
	row34.Comissao1 = next_tHashInput_13.Comissao1;
	row34.Percent_Comissao = next_tHashInput_13.Percent_Comissao;
	row34.Valor_final = next_tHashInput_13.Valor_final;
	row34.Validacao = next_tHashInput_13.Validacao;
	row34.Diferenca = next_tHashInput_13.Diferenca;
	row34.Desconto1 = next_tHashInput_13.Desconto1;
	row34.Mais_de_um = next_tHashInput_13.Mais_de_um;
	row34.Valor_Final1 = next_tHashInput_13.Valor_Final1;
	row34.Validacao1 = next_tHashInput_13.Validacao1;
	row34.Diferenca1 = next_tHashInput_13.Diferenca1;
	row34.Sem_desconto_comercial = next_tHashInput_13.Sem_desconto_comercial;
	row34.Solicitar = next_tHashInput_13.Solicitar;
	row34.Valor_Cobrado = next_tHashInput_13.Valor_Cobrado;
	row34.Valor_a_devolver = next_tHashInput_13.Valor_a_devolver;
	row34.Observacao = next_tHashInput_13.Observacao;
	row34.Repasse = next_tHashInput_13.Repasse;
	row34.Frete1 = next_tHashInput_13.Frete1;
	row34.Custo = next_tHashInput_13.Custo;
	row34.Margem = next_tHashInput_13.Margem;
	row34.Valor_Correto = next_tHashInput_13.Valor_Correto;
	row34.CONCATENATE = next_tHashInput_13.CONCATENATE;
	row34.SOURCE_ID = next_tHashInput_13.SOURCE_ID;

 



/**
 * [tHashInput_13 begin ] stop
 */
	
	/**
	 * [tHashInput_13 main ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 


	tos_count_tHashInput_13++;

/**
 * [tHashInput_13 main ] stop
 */
	
	/**
	 * [tHashInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		
						row30Struct row30 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_17 = false;
		boolean mainRowRejected_tMap_17 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row30" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow30 = false;
       		  	    	
       		  	    	
 							row30Struct row30ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_17) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_17 = false;
								
                        		    		    row30HashKey.COD_ENTREGA = row34.COD_ENTREGA ;
                        		    		

								
		                        	row30HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row30.lookup( row30HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row30 != null && tHash_Lookup_row30.getCount(row30HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row30' and it contains more one result from keys :  row30.COD_ENTREGA = '" + row30HashKey.COD_ENTREGA + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row30Struct fromLookup_row30 = null;
							row30 = row30Default;
										 
							
								 
							
							
								if (tHash_Lookup_row30 !=null && tHash_Lookup_row30.hasNext()) { // G 099
								
							
								
								fromLookup_row30 = tHash_Lookup_row30.next();

							
							
								} // G 099
							
							

							if(fromLookup_row30 != null) {
								row30 = fromLookup_row30;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;// ###############################
        // ###############################
        // # Output tables

Saida9 = null;


// # Output table : 'Saida9'
Saida9_tmp.ID_ANYMARKET = row34.ID_ANYMARKET;
Saida9_tmp.TIPO_DOCUMENTO = row34.TIPO_DOCUMENTO;
Saida9_tmp.CPF_CNPJ = row34.CPF_CNPJ;
Saida9_tmp.CLIENTE = row34.CLIENTE;
Saida9_tmp.CODIGO_PEDIDO = row34.CODIGO_PEDIDO;
Saida9_tmp.DATA_PEDIDO = row34.DATA_PEDIDO;
Saida9_tmp.MARKETPLACE = row34.MARKETPLACE;
Saida9_tmp.FRETE_DO_LOJISTA = row34.FRETE_DO_LOJISTA;
Saida9_tmp.STATUS = row34.STATUS;
Saida9_tmp.FRETE = row34.FRETE;
Saida9_tmp.DESCONTO = row34.DESCONTO;
Saida9_tmp.VALOR_TOTAL_PRODUTOS = row34.VALOR_TOTAL_PRODUTOS;
Saida9_tmp.TOTAL_PEDIDO = row34.TOTAL_PEDIDO;
Saida9_tmp.TITULO_PRODUTO = row34.TITULO_PRODUTO;
Saida9_tmp.QUANTIDADE = row34.QUANTIDADE;
Saida9_tmp.VALOR_UNITARIO = row34.VALOR_UNITARIO;
Saida9_tmp.SKU_PRODUTO = row34.SKU_PRODUTO;
Saida9_tmp.EAN_PRODUTO = row34.EAN_PRODUTO;
Saida9_tmp.NOME_LOJA_OFICIAL = row34.NOME_LOJA_OFICIAL;
Saida9_tmp.TIPO_LISTAGEM = row34.TIPO_LISTAGEM;
Saida9_tmp.COD_ENTREGA = row34.COD_ENTREGA;
Saida9_tmp.MLB_CATEGORIA = row34.MLB_CATEGORIA;
Saida9_tmp.Comissao = row34.Comissao;
Saida9_tmp.Comissao1 = row34.Comissao1;
Saida9_tmp.Percent_Comissao = row34.Percent_Comissao;
Saida9_tmp.Valor_final = row34.Valor_final;
Saida9_tmp.Validacao = row34.Validacao;
Saida9_tmp.Diferenca = row34.Diferenca;
Saida9_tmp.Desconto1 = row34.Desconto1 != null ? row34.Desconto1 : 0 ;
Saida9_tmp.Mais_de_um = row34.Mais_de_um;
Saida9_tmp.Valor_Final1 = row34.Valor_Final1;
Saida9_tmp.Validacao1 = row34.Validacao1;
Saida9_tmp.Diferenca1 = row34.Diferenca1;
Saida9_tmp.Sem_desconto_comercial = row34.Sem_desconto_comercial;
Saida9_tmp.Solicitar = row34.Solicitar;
Saida9_tmp.Valor_Cobrado = row34.Valor_Cobrado;
Saida9_tmp.Valor_Correto = row34.Valor_Correto;
Saida9_tmp.Valor_a_devolver = row34.Valor_a_devolver;
Saida9_tmp.Observacao = row34.Observacao;
Saida9_tmp.Repasse = row34.Repasse != null ? row34.Repasse : 0 ;
Saida9_tmp.Frete1 = row34.Frete1 != null ? row34.Frete1 : 0 ;
Saida9_tmp.Custo = row34.Custo != null ? row34.Custo : 0 ;
Saida9_tmp.Margem = row34.Margem != null ? row34.Margem : 0 ;
Saida9_tmp.sum_Custo = row30.sum_Custo != null ? row30.sum_Custo : 0 ;
Saida9_tmp.SOURCE_ID = row34.SOURCE_ID ;
Saida9 = Saida9_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "Saida9"
if(Saida9 != null) { 



	
	/**
	 * [tLogRow_5 main ] start
	 */

	

	
	
	currentComponent="tLogRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida9"
						
						);
					}
					

 
     row51 = Saida9;


	tos_count_tLogRow_5++;

/**
 * [tLogRow_5 main ] stop
 */
	
	/**
	 * [tLogRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_5";
	
	

 



/**
 * [tLogRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row51"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		
						row39Struct row39 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_18 = false;
		boolean mainRowRejected_tMap_18 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row39" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow39 = false;
       		  	    	
       		  	    	
 							row39Struct row39ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_18) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_18 = false;
								
                        		    		    row39HashKey.SKU = row51.SKU_PRODUTO ;
                        		    		

								
		                        	row39HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row39.lookup( row39HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row39 != null && tHash_Lookup_row39.getCount(row39HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row39' and it contains more one result from keys :  row39.SKU = '" + row39HashKey.SKU + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row39Struct fromLookup_row39 = null;
							row39 = row39Default;
										 
							
								 
							
							
								if (tHash_Lookup_row39 !=null && tHash_Lookup_row39.hasNext()) { // G 099
								
							
								
								fromLookup_row39 = tHash_Lookup_row39.next();

							
							
								} // G 099
							
							

							if(fromLookup_row39 != null) {
								row39 = fromLookup_row39;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
        // ###############################
        // # Output tables

saida15 = null;


// # Output table : 'saida15'
saida15_tmp.ID_ANYMARKET = row51.ID_ANYMARKET;
saida15_tmp.TIPO_DOCUMENTO = row51.TIPO_DOCUMENTO;
saida15_tmp.CPF_CNPJ = row51.CPF_CNPJ;
saida15_tmp.CLIENTE = row51.CLIENTE;
saida15_tmp.CODIGO_PEDIDO = row51.CODIGO_PEDIDO;
saida15_tmp.DATA_PEDIDO = row51.DATA_PEDIDO;
saida15_tmp.MARKETPLACE = row51.MARKETPLACE;
saida15_tmp.FRETE_DO_LOJISTA = row51.FRETE_DO_LOJISTA;
saida15_tmp.STATUS = row51.STATUS;
saida15_tmp.FRETE = row51.FRETE;
saida15_tmp.DESCONTO = row51.DESCONTO;
saida15_tmp.VALOR_TOTAL_PRODUTOS = row51.VALOR_TOTAL_PRODUTOS;
saida15_tmp.TOTAL_PEDIDO = row51.TOTAL_PEDIDO;
saida15_tmp.TITULO_PRODUTO = row51.TITULO_PRODUTO;
saida15_tmp.QUANTIDADE = row51.QUANTIDADE;
saida15_tmp.VALOR_UNITARIO = row51.VALOR_UNITARIO;
saida15_tmp.SKU_PRODUTO = row51.SKU_PRODUTO;
saida15_tmp.EAN_PRODUTO = row51.EAN_PRODUTO;
saida15_tmp.NOME_LOJA_OFICIAL = row51.NOME_LOJA_OFICIAL;
saida15_tmp.TIPO_LISTAGEM = row51.TIPO_LISTAGEM;
saida15_tmp.COD_ENTREGA = row51.COD_ENTREGA;
saida15_tmp.MLB_CATEGORIA = row39.CategoriaID ;
saida15_tmp.Comissao = row51.Comissao;
saida15_tmp.Comissao1 = row51.Comissao1;
saida15_tmp.Percent_Comissao = row51.Percent_Comissao;
saida15_tmp.Valor_final = row51.Valor_final;
saida15_tmp.Validacao = row51.Validacao;
saida15_tmp.Diferenca = row51.Diferenca;
saida15_tmp.Desconto1 = row51.Desconto1;
saida15_tmp.Mais_de_um = row51.Mais_de_um;
saida15_tmp.Valor_Final1 = row51.Valor_Final1;
saida15_tmp.Validacao1 = row51.Validacao1;
saida15_tmp.Diferenca1 = row51.Diferenca1;
saida15_tmp.Sem_desconto_comercial = row51.Sem_desconto_comercial;
saida15_tmp.Solicitar = row51.Solicitar;
saida15_tmp.Valor_Cobrado = row51.Valor_Cobrado;
saida15_tmp.Valor_Correto = row51.Valor_Correto;
saida15_tmp.Valor_a_devolver = row51.Valor_a_devolver;
saida15_tmp.Observacao = row51.Observacao;
saida15_tmp.Repasse = row51.Repasse;
saida15_tmp.Frete1 = row51.Frete1;
saida15_tmp.Custo = row51.Custo;
saida15_tmp.Margem = row51.Margem;
saida15_tmp.sum_Custo = row51.sum_Custo;
saida15_tmp.SOURCE_ID = row51.SOURCE_ID ;
saida15 = saida15_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "saida15"
if(saida15 != null) { 



	
	/**
	 * [tJavaRow_10 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida15"
						
						);
					}
					

    //Code generate according to input schema and output schema
row55.ID_ANYMARKET = saida15.ID_ANYMARKET;
row55.TIPO_DOCUMENTO = saida15.TIPO_DOCUMENTO;
row55.CPF_CNPJ = saida15.CPF_CNPJ;
row55.CLIENTE = saida15.CLIENTE;
row55.CODIGO_PEDIDO = saida15.CODIGO_PEDIDO;
row55.DATA_PEDIDO = saida15.DATA_PEDIDO;
row55.MARKETPLACE = saida15.MARKETPLACE;
row55.FRETE_DO_LOJISTA = saida15.FRETE_DO_LOJISTA;
row55.STATUS = saida15.STATUS;
row55.FRETE = saida15.FRETE;
row55.DESCONTO = saida15.DESCONTO;
row55.VALOR_TOTAL_PRODUTOS = saida15.VALOR_TOTAL_PRODUTOS;
row55.TOTAL_PEDIDO = saida15.TOTAL_PEDIDO;
row55.TITULO_PRODUTO = saida15.TITULO_PRODUTO;
row55.QUANTIDADE = saida15.QUANTIDADE;
row55.VALOR_UNITARIO = saida15.VALOR_UNITARIO;
row55.SKU_PRODUTO = saida15.SKU_PRODUTO;
row55.EAN_PRODUTO = saida15.EAN_PRODUTO;
row55.NOME_LOJA_OFICIAL = saida15.NOME_LOJA_OFICIAL;
row55.TIPO_LISTAGEM = saida15.TIPO_LISTAGEM;
row55.COD_ENTREGA = saida15.COD_ENTREGA;
row55.MLB_CATEGORIA = saida15.MLB_CATEGORIA;
row55.Comissao = saida15.Comissao;
row55.Comissao1 = saida15.Comissao1;
row55.Percent_Comissao = saida15.Percent_Comissao;
row55.Valor_final = saida15.Valor_final;
row55.Validacao = saida15.Validacao;
row55.Diferenca = saida15.Diferenca;
row55.Desconto1 = saida15.Desconto1;
row55.Mais_de_um = saida15.Mais_de_um;
row55.Valor_Final1 = saida15.Valor_Final1;
row55.Validacao1 = saida15.Validacao1;
row55.Diferenca1 = saida15.Diferenca1;
row55.Sem_desconto_comercial = saida15.Sem_desconto_comercial;
row55.Solicitar = saida15.Solicitar;
row55.Valor_Cobrado = saida15.Valor_Cobrado;
row55.Valor_Correto = saida15.Valor_Correto;
row55.Valor_a_devolver = saida15.Valor_a_devolver;
row55.Observacao = saida15.Observacao;
row55.Repasse = saida15.Repasse;
row55.Frete1 = saida15.Frete1;
row55.Custo = saida15.Custo;
row55.sum_Custo = saida15.sum_Custo;
//row55.Margem = saida15.Margem;

if (row55.Repasse < 0)
{
row55.Margem = (row55.Repasse/row55.sum_Custo);
}
else
{
row55.Margem = ((row55.Repasse/row55.sum_Custo)*-1);
}



row55.CONCATE_FRETE = row55.COD_ENTREGA +""+ "shipping";
row55.SOURCE_ID = saida15.SOURCE_ID;
    nb_line_tJavaRow_10++;   

 


	tos_count_tJavaRow_10++;

/**
 * [tJavaRow_10 main ] stop
 */
	
	/**
	 * [tJavaRow_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row55"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		
						row49Struct row49 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_20 = false;
		boolean mainRowRejected_tMap_20 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row49" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow49 = false;
       		  	    	
       		  	    	
 							row49Struct row49ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_20) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_20 = false;
								
                        		    		    row49HashKey.CONCAT_FRETE = row55.CONCATE_FRETE ;
                        		    		

								
		                        	row49HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row49.lookup( row49HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row49 != null && tHash_Lookup_row49.getCount(row49HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row49' and it contains more one result from keys :  row49.CONCAT_FRETE = '" + row49HashKey.CONCAT_FRETE + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row49Struct fromLookup_row49 = null;
							row49 = row49Default;
										 
							
								 
							
							
								if (tHash_Lookup_row49 !=null && tHash_Lookup_row49.hasNext()) { // G 099
								
							
								
								fromLookup_row49 = tHash_Lookup_row49.next();

							
							
								} // G 099
							
							

							if(fromLookup_row49 != null) {
								row49 = fromLookup_row49;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;// ###############################
        // ###############################
        // # Output tables

Saida13 = null;


// # Output table : 'Saida13'
Saida13_tmp.ID_ANYMARKET = row55.ID_ANYMARKET;
Saida13_tmp.TIPO_DOCUMENTO = row55.TIPO_DOCUMENTO;
Saida13_tmp.CPF_CNPJ = row55.CPF_CNPJ;
Saida13_tmp.CLIENTE = row55.CLIENTE;
Saida13_tmp.CODIGO_PEDIDO = row55.CODIGO_PEDIDO;
Saida13_tmp.DATA_PEDIDO = row55.DATA_PEDIDO;
Saida13_tmp.MARKETPLACE = row55.MARKETPLACE;
Saida13_tmp.FRETE_DO_LOJISTA = row55.FRETE_DO_LOJISTA;
Saida13_tmp.STATUS = row55.STATUS;
Saida13_tmp.FRETE = row55.FRETE;
Saida13_tmp.DESCONTO = row55.DESCONTO;
Saida13_tmp.VALOR_TOTAL_PRODUTOS = row55.VALOR_TOTAL_PRODUTOS;
Saida13_tmp.TOTAL_PEDIDO = row55.TOTAL_PEDIDO;
Saida13_tmp.TITULO_PRODUTO = row55.TITULO_PRODUTO;
Saida13_tmp.QUANTIDADE = row55.QUANTIDADE;
Saida13_tmp.VALOR_UNITARIO = row55.VALOR_UNITARIO;
Saida13_tmp.SKU_PRODUTO = row55.SKU_PRODUTO;
Saida13_tmp.EAN_PRODUTO = row55.EAN_PRODUTO;
Saida13_tmp.NOME_LOJA_OFICIAL = row55.NOME_LOJA_OFICIAL;
Saida13_tmp.TIPO_LISTAGEM = row55.TIPO_LISTAGEM;
Saida13_tmp.COD_ENTREGA = row55.COD_ENTREGA;
Saida13_tmp.MLB_CATEGORIA = row55.MLB_CATEGORIA;
Saida13_tmp.Comissao = row55.Comissao;
Saida13_tmp.Comissao1 = row55.Comissao1;
Saida13_tmp.Percent_Comissao = row55.Percent_Comissao;
Saida13_tmp.Valor_final = row55.Valor_final;
Saida13_tmp.Validacao = row55.Validacao;
Saida13_tmp.Diferenca = row55.Diferenca;
Saida13_tmp.Desconto1 = row55.Desconto1;
Saida13_tmp.Mais_de_um = row55.Mais_de_um;
Saida13_tmp.Valor_Final1 = row55.Valor_Final1;
Saida13_tmp.Validacao1 = row55.Validacao1;
Saida13_tmp.Diferenca1 = row55.Diferenca1;
Saida13_tmp.Sem_desconto_comercial = row55.Sem_desconto_comercial;
Saida13_tmp.Solicitar = row55.Solicitar;
Saida13_tmp.Valor_Cobrado = row55.Valor_Cobrado;
Saida13_tmp.Valor_Correto = row55.Valor_Correto;
Saida13_tmp.Valor_a_devolver = row55.Valor_a_devolver;
Saida13_tmp.Observacao = row55.Observacao;
Saida13_tmp.Repasse = row55.Repasse;
Saida13_tmp.Frete1 = row49.SHIPPING_FEE_AMOUNT != null ? row49.SHIPPING_FEE_AMOUNT : 0 ;
Saida13_tmp.Custo = row55.Custo;
Saida13_tmp.Margem = row55.Margem;
Saida13_tmp.sum_Custo = row55.sum_Custo;
Saida13_tmp.CONCATE_FRETE = row55.CONCATE_FRETE;
Saida13_tmp.SOURCE_ID = row55.SOURCE_ID ;
Saida13 = Saida13_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "Saida13"
if(Saida13 != null) { 



	
	/**
	 * [tHashOutput_16 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida13"
						
						);
					}
					



    
		Saida13Struct oneRow_tHashOutput_16 = new Saida13Struct();
				
					oneRow_tHashOutput_16.ID_ANYMARKET = Saida13.ID_ANYMARKET;
					oneRow_tHashOutput_16.TIPO_DOCUMENTO = Saida13.TIPO_DOCUMENTO;
					oneRow_tHashOutput_16.CPF_CNPJ = Saida13.CPF_CNPJ;
					oneRow_tHashOutput_16.CLIENTE = Saida13.CLIENTE;
					oneRow_tHashOutput_16.CODIGO_PEDIDO = Saida13.CODIGO_PEDIDO;
					oneRow_tHashOutput_16.DATA_PEDIDO = Saida13.DATA_PEDIDO;
					oneRow_tHashOutput_16.MARKETPLACE = Saida13.MARKETPLACE;
					oneRow_tHashOutput_16.FRETE_DO_LOJISTA = Saida13.FRETE_DO_LOJISTA;
					oneRow_tHashOutput_16.STATUS = Saida13.STATUS;
					oneRow_tHashOutput_16.FRETE = Saida13.FRETE;
					oneRow_tHashOutput_16.DESCONTO = Saida13.DESCONTO;
					oneRow_tHashOutput_16.VALOR_TOTAL_PRODUTOS = Saida13.VALOR_TOTAL_PRODUTOS;
					oneRow_tHashOutput_16.TOTAL_PEDIDO = Saida13.TOTAL_PEDIDO;
					oneRow_tHashOutput_16.TITULO_PRODUTO = Saida13.TITULO_PRODUTO;
					oneRow_tHashOutput_16.QUANTIDADE = Saida13.QUANTIDADE;
					oneRow_tHashOutput_16.VALOR_UNITARIO = Saida13.VALOR_UNITARIO;
					oneRow_tHashOutput_16.SKU_PRODUTO = Saida13.SKU_PRODUTO;
					oneRow_tHashOutput_16.EAN_PRODUTO = Saida13.EAN_PRODUTO;
					oneRow_tHashOutput_16.NOME_LOJA_OFICIAL = Saida13.NOME_LOJA_OFICIAL;
					oneRow_tHashOutput_16.TIPO_LISTAGEM = Saida13.TIPO_LISTAGEM;
					oneRow_tHashOutput_16.COD_ENTREGA = Saida13.COD_ENTREGA;
					oneRow_tHashOutput_16.MLB_CATEGORIA = Saida13.MLB_CATEGORIA;
					oneRow_tHashOutput_16.Comissao = Saida13.Comissao;
					oneRow_tHashOutput_16.Comissao1 = Saida13.Comissao1;
					oneRow_tHashOutput_16.Percent_Comissao = Saida13.Percent_Comissao;
					oneRow_tHashOutput_16.Valor_final = Saida13.Valor_final;
					oneRow_tHashOutput_16.Validacao = Saida13.Validacao;
					oneRow_tHashOutput_16.Diferenca = Saida13.Diferenca;
					oneRow_tHashOutput_16.Desconto1 = Saida13.Desconto1;
					oneRow_tHashOutput_16.Mais_de_um = Saida13.Mais_de_um;
					oneRow_tHashOutput_16.Valor_Final1 = Saida13.Valor_Final1;
					oneRow_tHashOutput_16.Validacao1 = Saida13.Validacao1;
					oneRow_tHashOutput_16.Diferenca1 = Saida13.Diferenca1;
					oneRow_tHashOutput_16.Sem_desconto_comercial = Saida13.Sem_desconto_comercial;
					oneRow_tHashOutput_16.Solicitar = Saida13.Solicitar;
					oneRow_tHashOutput_16.Valor_Cobrado = Saida13.Valor_Cobrado;
					oneRow_tHashOutput_16.Valor_Correto = Saida13.Valor_Correto;
					oneRow_tHashOutput_16.Valor_a_devolver = Saida13.Valor_a_devolver;
					oneRow_tHashOutput_16.Observacao = Saida13.Observacao;
					oneRow_tHashOutput_16.Repasse = Saida13.Repasse;
					oneRow_tHashOutput_16.Frete1 = Saida13.Frete1;
					oneRow_tHashOutput_16.Custo = Saida13.Custo;
					oneRow_tHashOutput_16.Margem = Saida13.Margem;
					oneRow_tHashOutput_16.sum_Custo = Saida13.sum_Custo;
					oneRow_tHashOutput_16.CONCATE_FRETE = Saida13.CONCATE_FRETE;
					oneRow_tHashOutput_16.SOURCE_ID = Saida13.SOURCE_ID;
		
        tHashFile_tHashOutput_16.put(oneRow_tHashOutput_16);
        nb_line_tHashOutput_16 ++;

 
     row31 = Saida13;


	tos_count_tHashOutput_16++;

/**
 * [tHashOutput_16 main ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_begin ] stop
 */

	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_21 = false;
		boolean mainRowRejected_tMap_21 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
        // ###############################
        // # Output tables

Saida16 = null;


// # Output table : 'Saida16'
Saida16_tmp.MesProcessamento = context.mesprocessamento;
Saida16_tmp.ID_ANYMARKET = row31.ID_ANYMARKET;
Saida16_tmp.TIPO_DOCUMENTO = row31.TIPO_DOCUMENTO;
Saida16_tmp.CPF_CNPJ = row31.CPF_CNPJ;
Saida16_tmp.CLIENTE = StringHandling.DOWNCASE(row31.CLIENTE);
Saida16_tmp.CODIGO_PEDIDO = row31.CODIGO_PEDIDO;
Saida16_tmp.DATA_PEDIDO = row31.DATA_PEDIDO;
Saida16_tmp.MARKETPLACE = StringHandling.DOWNCASE(row31.MARKETPLACE);
Saida16_tmp.FRETE_DO_LOJISTA = row31.FRETE_DO_LOJISTA;
Saida16_tmp.STATUS = row31.STATUS;
Saida16_tmp.FRETE = row31.FRETE;
Saida16_tmp.DESCONTO = row31.DESCONTO;
Saida16_tmp.VALOR_TOTAL_PRODUTOS = row31.VALOR_TOTAL_PRODUTOS;
Saida16_tmp.TOTAL_PEDIDO = row31.TOTAL_PEDIDO;
Saida16_tmp.TITULO_PRODUTO = row31.TITULO_PRODUTO;
Saida16_tmp.QUANTIDADE = row31.QUANTIDADE;
Saida16_tmp.VALOR_UNITARIO = row31.VALOR_UNITARIO;
Saida16_tmp.SKU_PRODUTO = row31.SKU_PRODUTO;
Saida16_tmp.EAN_PRODUTO = row31.EAN_PRODUTO;
Saida16_tmp.NOME_LOJA_OFICIAL = row31.NOME_LOJA_OFICIAL;
Saida16_tmp.TIPO_LISTAGEM = row31.TIPO_LISTAGEM;
Saida16_tmp.COD_ENTREGA = row31.COD_ENTREGA;
Saida16_tmp.MLB_CATEGORIA = row31.MLB_CATEGORIA;
Saida16_tmp.Comissao = row31.Comissao;
Saida16_tmp.Comissao1 = row31.Comissao1;
Saida16_tmp.Percent_Comissao = row31.Percent_Comissao;
Saida16_tmp.Valor_final = row31.Valor_final;
Saida16_tmp.Validacao = row31.Validacao;
Saida16_tmp.Diferenca = row31.Diferenca;
Saida16_tmp.Desconto1 = row31.Desconto1;
Saida16_tmp.Mais_de_um = row31.Mais_de_um;
Saida16_tmp.Valor_Final1 = row31.Valor_Final1;
Saida16_tmp.Validacao1 = row31.Validacao1;
Saida16_tmp.Diferenca1 = row31.Diferenca1;
Saida16_tmp.Sem_desconto_comercial = row31.Sem_desconto_comercial;
Saida16_tmp.Solicitar = row31.Solicitar;
Saida16_tmp.Valor_Cobrado = row31.Valor_Cobrado;
Saida16_tmp.Valor_Correto = row31.Valor_Correto;
Saida16_tmp.Valor_a_devolver = row31.Valor_a_devolver;
Saida16_tmp.Observacao = row31.Observacao;
Saida16_tmp.Repasse = row31.Repasse;
Saida16_tmp.Frete1 = row31.Frete1;
Saida16_tmp.Custo = row31.Custo;
Saida16_tmp.Margem = row31.Margem;
Saida16_tmp.sum_Custo = row31.sum_Custo;
Saida16_tmp.CONCATE_FRETE = row31.CONCATE_FRETE;
Saida16_tmp.SOURCE_ID = row31.SOURCE_ID ;
Saida16 = Saida16_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "Saida16"
if(Saida16 != null) { 



	
	/**
	 * [tJavaRow_11 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Saida16"
						
						);
					}
					

    //Code generate according to input schema and output schema
row48.MesProcessamento = Saida16.MesProcessamento;
row48.ID_ANYMARKET = Saida16.ID_ANYMARKET;
row48.TIPO_DOCUMENTO = Saida16.TIPO_DOCUMENTO;
row48.CPF_CNPJ = Saida16.CPF_CNPJ;
row48.CLIENTE = Saida16.CLIENTE;
row48.CODIGO_PEDIDO = Saida16.CODIGO_PEDIDO;
row48.DATA_PEDIDO = Saida16.DATA_PEDIDO;
row48.MARKETPLACE = Saida16.MARKETPLACE;
row48.FRETE_DO_LOJISTA = Saida16.FRETE_DO_LOJISTA;
row48.STATUS = Saida16.STATUS;
row48.FRETE = Saida16.FRETE;
row48.DESCONTO = Saida16.DESCONTO;
row48.VALOR_TOTAL_PRODUTOS = Saida16.VALOR_TOTAL_PRODUTOS;
row48.TOTAL_PEDIDO = Saida16.TOTAL_PEDIDO;
row48.TITULO_PRODUTO = Saida16.TITULO_PRODUTO;
row48.QUANTIDADE = Saida16.QUANTIDADE;
row48.VALOR_UNITARIO = Saida16.VALOR_UNITARIO;
row48.SKU_PRODUTO = Saida16.SKU_PRODUTO;
row48.EAN_PRODUTO = Saida16.EAN_PRODUTO;
row48.NOME_LOJA_OFICIAL = Saida16.NOME_LOJA_OFICIAL;
row48.TIPO_LISTAGEM = Saida16.TIPO_LISTAGEM;
row48.COD_ENTREGA = Saida16.COD_ENTREGA;
row48.MLB_CATEGORIA = Saida16.MLB_CATEGORIA;
row48.Comissao = Saida16.Comissao;
row48.Comissao1 = String.format("%.4f",Saida16.Comissao1);
row48.Percent_Comissao = Saida16.Percent_Comissao;
row48.Valor_final = String.format("%.2f",Saida16.Valor_final);
row48.Validacao = Saida16.Validacao;
row48.Diferenca = String.format("%.2f",Saida16.Diferenca);
row48.Desconto1 = Saida16.Desconto1;
row48.Mais_de_um = Saida16.Mais_de_um;
row48.Valor_Final1 = String.format("%.2f",Saida16.Valor_Final1);
row48.Validacao1 = Saida16.Validacao1;
row48.Diferenca1 = String.format("%.2f",Saida16.Diferenca1);
row48.Sem_desconto_comercial = Saida16.Sem_desconto_comercial;
row48.Solicitar = Saida16.Solicitar;
row48.Valor_Cobrado = String.format("%.2f",Saida16.Valor_Cobrado);
row48.Valor_Correto = String.format("%.2f",Saida16.Valor_Correto);
row48.Valor_a_devolver = String.format("%.2f",Saida16.Valor_a_devolver);
row48.Observacao = Saida16.Observacao;
row48.Repasse = Saida16.Repasse;
row48.Frete1 = Saida16.Frete1;
row48.Custo = Saida16.Custo;
row48.Margem = Saida16.Margem;
row48.sum_Custo = Saida16.sum_Custo;
row48.CONCATE_FRETE = Saida16.CONCATE_FRETE;
row48.SOURCE_ID = Saida16.SOURCE_ID;

    nb_line_tJavaRow_11++;   

 


	tos_count_tJavaRow_11++;

/**
 * [tJavaRow_11 main ] stop
 */
	
	/**
	 * [tJavaRow_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_begin ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row48"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(row48.MesProcessamento != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row48.MesProcessamento)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.ID_ANYMARKET != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.ID_ANYMARKET));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.TIPO_DOCUMENTO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.TIPO_DOCUMENTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.CPF_CNPJ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.CPF_CNPJ));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.CLIENTE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.CLIENTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.CODIGO_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.CODIGO_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.DATA_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.DATA_PEDIDO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.MARKETPLACE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.MARKETPLACE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.FRETE_DO_LOJISTA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.FRETE_DO_LOJISTA);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.STATUS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.STATUS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.FRETE);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.DESCONTO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.DESCONTO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.VALOR_TOTAL_PRODUTOS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.VALOR_TOTAL_PRODUTOS);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.TOTAL_PEDIDO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.TOTAL_PEDIDO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.TITULO_PRODUTO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.TITULO_PRODUTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.QUANTIDADE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row48.QUANTIDADE)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.VALOR_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.VALOR_UNITARIO);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.SKU_PRODUTO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.SKU_PRODUTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.EAN_PRODUTO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.EAN_PRODUTO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.NOME_LOJA_OFICIAL != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.NOME_LOJA_OFICIAL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.TIPO_LISTAGEM != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.TIPO_LISTAGEM));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.COD_ENTREGA != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row48.COD_ENTREGA).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.MLB_CATEGORIA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.MLB_CATEGORIA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Comissao != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.Comissao);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Comissao1 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Comissao1));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Percent_Comissao != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.Percent_Comissao);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Valor_final != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Valor_final));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Validacao != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Validacao));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Diferenca != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Diferenca));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Desconto1 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.Desconto1);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Mais_de_um != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row48.Mais_de_um)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Valor_Final1 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Valor_Final1));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Validacao1 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Validacao1));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Diferenca1 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Diferenca1));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Sem_desconto_comercial != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Sem_desconto_comercial));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Solicitar != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Solicitar));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Valor_Cobrado != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Valor_Cobrado));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Valor_Correto != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Valor_Correto));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Valor_a_devolver != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Valor_a_devolver));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Observacao != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.Observacao));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Repasse != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.Repasse);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Frete1 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.Frete1);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Custo != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.Custo);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.Margem != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.Margem);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.sum_Custo != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(row48.sum_Custo);
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.CONCATE_FRETE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.CONCATE_FRETE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row48.SOURCE_ID != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row48.SOURCE_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 process_data_end ] stop
 */

} // End of branch "Saida16"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_end ] stop
 */



	
	/**
	 * [tHashOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_end ] stop
 */

} // End of branch "Saida13"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 process_data_end ] stop
 */

} // End of branch "saida15"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_end ] stop
 */



	
	/**
	 * [tLogRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_5";
	
	

 



/**
 * [tLogRow_5 process_data_end ] stop
 */

} // End of branch "Saida9"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_13 end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	
    

		
			nb_line_tHashInput_13++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_14");
	


	globalMap.put("tHashInput_13_NB_LINE", nb_line_tHashInput_13);       

 

ok_Hash.put("tHashInput_13", true);
end_Hash.put("tHashInput_13", System.currentTimeMillis());




/**
 * [tHashInput_13 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row30 != null) {
						tHash_Lookup_row30.endGet();
					}
					globalMap.remove( "tHash_Lookup_row30" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tLogRow_5 end ] start
	 */

	

	
	
	currentComponent="tLogRow_5";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida9");
			  	}
			  	
 

ok_Hash.put("tLogRow_5", true);
end_Hash.put("tLogRow_5", System.currentTimeMillis());




/**
 * [tLogRow_5 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row39 != null) {
						tHash_Lookup_row39.endGet();
					}
					globalMap.remove( "tHash_Lookup_row39" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row51");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */

	
	/**
	 * [tJavaRow_10 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

globalMap.put("tJavaRow_10_NB_LINE",nb_line_tJavaRow_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida15");
			  	}
			  	
 

ok_Hash.put("tJavaRow_10", true);
end_Hash.put("tJavaRow_10", System.currentTimeMillis());




/**
 * [tJavaRow_10 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row49 != null) {
						tHash_Lookup_row49.endGet();
					}
					globalMap.remove( "tHash_Lookup_row49" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row55");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */

	
	/**
	 * [tHashOutput_16 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
globalMap.put("tHashOutput_16_NB_LINE", nb_line_tHashOutput_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida13");
			  	}
			  	
 

ok_Hash.put("tHashOutput_16", true);
end_Hash.put("tHashOutput_16", System.currentTimeMillis());




/**
 * [tHashOutput_16 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */

	
	/**
	 * [tJavaRow_11 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

globalMap.put("tJavaRow_11_NB_LINE",nb_line_tJavaRow_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Saida16");
			  	}
			  	
 

ok_Hash.put("tJavaRow_11", true);
end_Hash.put("tJavaRow_11", System.currentTimeMillis());




/**
 * [tJavaRow_11 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row48");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */



























				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_20"
					     			globalMap.remove("tHash_Lookup_row49"); 
				     			
					     			//free memory for "tMap_18"
					     			globalMap.remove("tHash_Lookup_row39"); 
				     			
					     			//free memory for "tMap_17"
					     			globalMap.remove("tHash_Lookup_row30"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tLogRow_5 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_5";
	
	

 



/**
 * [tLogRow_5 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 finally ] stop
 */

	
	/**
	 * [tJavaRow_10 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_10";
	
	

 



/**
 * [tJavaRow_10 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 finally ] stop
 */

	
	/**
	 * [tHashOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 finally ] stop
 */

	
	/**
	 * [tJavaRow_11 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_11";
	
	

 



/**
 * [tJavaRow_11 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */



























				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableComparableLookupRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String RELEASE_DATE;

				public String getRELEASE_DATE () {
					return this.RELEASE_DATE;
				}

				public Boolean RELEASE_DATEIsNullable(){
				    return true;
				}
				public Boolean RELEASE_DATEIsKey(){
				    return false;
				}
				public Integer RELEASE_DATELength(){
				    return null;
				}
				public Integer RELEASE_DATEPrecision(){
				    return null;
				}
				public String RELEASE_DATEDefault(){
				
					return null;
				
				}
				public String RELEASE_DATEComment(){
				
				    return "";
				
				}
				public String RELEASE_DATEPattern(){
				
					return "";
				
				}
				public String RELEASE_DATEOriginalDbColumnName(){
				
					return "RELEASE_DATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				
			    public String EXTERNAL_REFERENCE;

				public String getEXTERNAL_REFERENCE () {
					return this.EXTERNAL_REFERENCE;
				}

				public Boolean EXTERNAL_REFERENCEIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_REFERENCEIsKey(){
				    return false;
				}
				public Integer EXTERNAL_REFERENCELength(){
				    return null;
				}
				public Integer EXTERNAL_REFERENCEPrecision(){
				    return null;
				}
				public String EXTERNAL_REFERENCEDefault(){
				
					return null;
				
				}
				public String EXTERNAL_REFERENCEComment(){
				
				    return "";
				
				}
				public String EXTERNAL_REFERENCEPattern(){
				
					return "";
				
				}
				public String EXTERNAL_REFERENCEOriginalDbColumnName(){
				
					return "EXTERNAL_REFERENCE";
				
				}

				
			    public String RECORD_TYPE;

				public String getRECORD_TYPE () {
					return this.RECORD_TYPE;
				}

				public Boolean RECORD_TYPEIsNullable(){
				    return true;
				}
				public Boolean RECORD_TYPEIsKey(){
				    return false;
				}
				public Integer RECORD_TYPELength(){
				    return null;
				}
				public Integer RECORD_TYPEPrecision(){
				    return null;
				}
				public String RECORD_TYPEDefault(){
				
					return null;
				
				}
				public String RECORD_TYPEComment(){
				
				    return "";
				
				}
				public String RECORD_TYPEPattern(){
				
					return "";
				
				}
				public String RECORD_TYPEOriginalDbColumnName(){
				
					return "RECORD_TYPE";
				
				}

				
			    public String DESCRIPTION;

				public String getDESCRIPTION () {
					return this.DESCRIPTION;
				}

				public Boolean DESCRIPTIONIsNullable(){
				    return true;
				}
				public Boolean DESCRIPTIONIsKey(){
				    return false;
				}
				public Integer DESCRIPTIONLength(){
				    return null;
				}
				public Integer DESCRIPTIONPrecision(){
				    return null;
				}
				public String DESCRIPTIONDefault(){
				
					return null;
				
				}
				public String DESCRIPTIONComment(){
				
				    return "";
				
				}
				public String DESCRIPTIONPattern(){
				
					return "";
				
				}
				public String DESCRIPTIONOriginalDbColumnName(){
				
					return "DESCRIPTION";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				
			    public Double NET_DEBIT_AMOUNT;

				public Double getNET_DEBIT_AMOUNT () {
					return this.NET_DEBIT_AMOUNT;
				}

				public Boolean NET_DEBIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_DEBIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_DEBIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_DEBIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_DEBIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_DEBIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_DEBIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_DEBIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_DEBIT_AMOUNT";
				
				}

				
			    public Double GROSS_AMOUNT;

				public Double getGROSS_AMOUNT () {
					return this.GROSS_AMOUNT;
				}

				public Boolean GROSS_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean GROSS_AMOUNTIsKey(){
				    return false;
				}
				public Integer GROSS_AMOUNTLength(){
				    return null;
				}
				public Integer GROSS_AMOUNTPrecision(){
				    return null;
				}
				public String GROSS_AMOUNTDefault(){
				
					return null;
				
				}
				public String GROSS_AMOUNTComment(){
				
				    return "";
				
				}
				public String GROSS_AMOUNTPattern(){
				
					return "";
				
				}
				public String GROSS_AMOUNTOriginalDbColumnName(){
				
					return "GROSS_AMOUNT";
				
				}

				
			    public Double SELLER_AMOUNT;

				public Double getSELLER_AMOUNT () {
					return this.SELLER_AMOUNT;
				}

				public Boolean SELLER_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SELLER_AMOUNTIsKey(){
				    return false;
				}
				public Integer SELLER_AMOUNTLength(){
				    return null;
				}
				public Integer SELLER_AMOUNTPrecision(){
				    return null;
				}
				public String SELLER_AMOUNTDefault(){
				
					return null;
				
				}
				public String SELLER_AMOUNTComment(){
				
				    return "";
				
				}
				public String SELLER_AMOUNTPattern(){
				
					return "";
				
				}
				public String SELLER_AMOUNTOriginalDbColumnName(){
				
					return "SELLER_AMOUNT";
				
				}

				
			    public Double MP_FEE_AMOUNT;

				public Double getMP_FEE_AMOUNT () {
					return this.MP_FEE_AMOUNT;
				}

				public Boolean MP_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean MP_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer MP_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer MP_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String MP_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String MP_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String MP_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String MP_FEE_AMOUNTOriginalDbColumnName(){
				
					return "MP_FEE_AMOUNT";
				
				}

				
			    public Double FINANCING_FEE_AMOUNT;

				public Double getFINANCING_FEE_AMOUNT () {
					return this.FINANCING_FEE_AMOUNT;
				}

				public Boolean FINANCING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean FINANCING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer FINANCING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer FINANCING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String FINANCING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String FINANCING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String FINANCING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String FINANCING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "FINANCING_FEE_AMOUNT";
				
				}

				
			    public Double SHIPPING_FEE_AMOUNT;

				public Double getSHIPPING_FEE_AMOUNT () {
					return this.SHIPPING_FEE_AMOUNT;
				}

				public Boolean SHIPPING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer SHIPPING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer SHIPPING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String SHIPPING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String SHIPPING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String SHIPPING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String SHIPPING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "SHIPPING_FEE_AMOUNT";
				
				}

				
			    public Double TAXES_AMOUNT;

				public Double getTAXES_AMOUNT () {
					return this.TAXES_AMOUNT;
				}

				public Boolean TAXES_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean TAXES_AMOUNTIsKey(){
				    return false;
				}
				public Integer TAXES_AMOUNTLength(){
				    return null;
				}
				public Integer TAXES_AMOUNTPrecision(){
				    return null;
				}
				public String TAXES_AMOUNTDefault(){
				
					return null;
				
				}
				public String TAXES_AMOUNTComment(){
				
				    return "";
				
				}
				public String TAXES_AMOUNTPattern(){
				
					return "";
				
				}
				public String TAXES_AMOUNTOriginalDbColumnName(){
				
					return "TAXES_AMOUNT";
				
				}

				
			    public Double COUPON_AMOUNT;

				public Double getCOUPON_AMOUNT () {
					return this.COUPON_AMOUNT;
				}

				public Boolean COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String COUPON_AMOUNTOriginalDbColumnName(){
				
					return "COUPON_AMOUNT";
				
				}

				
			    public Integer INSTALLMENTS;

				public Integer getINSTALLMENTS () {
					return this.INSTALLMENTS;
				}

				public Boolean INSTALLMENTSIsNullable(){
				    return true;
				}
				public Boolean INSTALLMENTSIsKey(){
				    return false;
				}
				public Integer INSTALLMENTSLength(){
				    return null;
				}
				public Integer INSTALLMENTSPrecision(){
				    return null;
				}
				public String INSTALLMENTSDefault(){
				
					return null;
				
				}
				public String INSTALLMENTSComment(){
				
				    return "";
				
				}
				public String INSTALLMENTSPattern(){
				
					return "";
				
				}
				public String INSTALLMENTSOriginalDbColumnName(){
				
					return "INSTALLMENTS";
				
				}

				
			    public String PAYMENT_METHOD;

				public String getPAYMENT_METHOD () {
					return this.PAYMENT_METHOD;
				}

				public Boolean PAYMENT_METHODIsNullable(){
				    return true;
				}
				public Boolean PAYMENT_METHODIsKey(){
				    return false;
				}
				public Integer PAYMENT_METHODLength(){
				    return null;
				}
				public Integer PAYMENT_METHODPrecision(){
				    return null;
				}
				public String PAYMENT_METHODDefault(){
				
					return null;
				
				}
				public String PAYMENT_METHODComment(){
				
				    return "";
				
				}
				public String PAYMENT_METHODPattern(){
				
					return "";
				
				}
				public String PAYMENT_METHODOriginalDbColumnName(){
				
					return "PAYMENT_METHOD";
				
				}

				
			    public String TAX_DETAIL;

				public String getTAX_DETAIL () {
					return this.TAX_DETAIL;
				}

				public Boolean TAX_DETAILIsNullable(){
				    return true;
				}
				public Boolean TAX_DETAILIsKey(){
				    return false;
				}
				public Integer TAX_DETAILLength(){
				    return null;
				}
				public Integer TAX_DETAILPrecision(){
				    return null;
				}
				public String TAX_DETAILDefault(){
				
					return null;
				
				}
				public String TAX_DETAILComment(){
				
				    return "";
				
				}
				public String TAX_DETAILPattern(){
				
					return "";
				
				}
				public String TAX_DETAILOriginalDbColumnName(){
				
					return "TAX_DETAIL";
				
				}

				
			    public String TAX_AMOUNT_TELCO;

				public String getTAX_AMOUNT_TELCO () {
					return this.TAX_AMOUNT_TELCO;
				}

				public Boolean TAX_AMOUNT_TELCOIsNullable(){
				    return true;
				}
				public Boolean TAX_AMOUNT_TELCOIsKey(){
				    return false;
				}
				public Integer TAX_AMOUNT_TELCOLength(){
				    return null;
				}
				public Integer TAX_AMOUNT_TELCOPrecision(){
				    return null;
				}
				public String TAX_AMOUNT_TELCODefault(){
				
					return null;
				
				}
				public String TAX_AMOUNT_TELCOComment(){
				
				    return "";
				
				}
				public String TAX_AMOUNT_TELCOPattern(){
				
					return "";
				
				}
				public String TAX_AMOUNT_TELCOOriginalDbColumnName(){
				
					return "TAX_AMOUNT_TELCO";
				
				}

				
			    public String APPROVAL_DATE;

				public String getAPPROVAL_DATE () {
					return this.APPROVAL_DATE;
				}

				public Boolean APPROVAL_DATEIsNullable(){
				    return true;
				}
				public Boolean APPROVAL_DATEIsKey(){
				    return false;
				}
				public Integer APPROVAL_DATELength(){
				    return null;
				}
				public Integer APPROVAL_DATEPrecision(){
				    return null;
				}
				public String APPROVAL_DATEDefault(){
				
					return null;
				
				}
				public String APPROVAL_DATEComment(){
				
				    return "";
				
				}
				public String APPROVAL_DATEPattern(){
				
					return "";
				
				}
				public String APPROVAL_DATEOriginalDbColumnName(){
				
					return "APPROVAL_DATE";
				
				}

				
			    public String POS_ID;

				public String getPOS_ID () {
					return this.POS_ID;
				}

				public Boolean POS_IDIsNullable(){
				    return true;
				}
				public Boolean POS_IDIsKey(){
				    return false;
				}
				public Integer POS_IDLength(){
				    return null;
				}
				public Integer POS_IDPrecision(){
				    return null;
				}
				public String POS_IDDefault(){
				
					return null;
				
				}
				public String POS_IDComment(){
				
				    return "";
				
				}
				public String POS_IDPattern(){
				
					return "";
				
				}
				public String POS_IDOriginalDbColumnName(){
				
					return "POS_ID";
				
				}

				
			    public String POS_NAME;

				public String getPOS_NAME () {
					return this.POS_NAME;
				}

				public Boolean POS_NAMEIsNullable(){
				    return true;
				}
				public Boolean POS_NAMEIsKey(){
				    return false;
				}
				public Integer POS_NAMELength(){
				    return null;
				}
				public Integer POS_NAMEPrecision(){
				    return null;
				}
				public String POS_NAMEDefault(){
				
					return null;
				
				}
				public String POS_NAMEComment(){
				
				    return "";
				
				}
				public String POS_NAMEPattern(){
				
					return "";
				
				}
				public String POS_NAMEOriginalDbColumnName(){
				
					return "POS_NAME";
				
				}

				
			    public String EXTERNAL_POS_ID;

				public String getEXTERNAL_POS_ID () {
					return this.EXTERNAL_POS_ID;
				}

				public Boolean EXTERNAL_POS_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_POS_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_POS_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_POS_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_POS_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_POS_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_POS_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_POS_IDOriginalDbColumnName(){
				
					return "EXTERNAL_POS_ID";
				
				}

				
			    public String STORE_ID;

				public String getSTORE_ID () {
					return this.STORE_ID;
				}

				public Boolean STORE_IDIsNullable(){
				    return true;
				}
				public Boolean STORE_IDIsKey(){
				    return false;
				}
				public Integer STORE_IDLength(){
				    return null;
				}
				public Integer STORE_IDPrecision(){
				    return null;
				}
				public String STORE_IDDefault(){
				
					return null;
				
				}
				public String STORE_IDComment(){
				
				    return "";
				
				}
				public String STORE_IDPattern(){
				
					return "";
				
				}
				public String STORE_IDOriginalDbColumnName(){
				
					return "STORE_ID";
				
				}

				
			    public String STORE_NAME;

				public String getSTORE_NAME () {
					return this.STORE_NAME;
				}

				public Boolean STORE_NAMEIsNullable(){
				    return true;
				}
				public Boolean STORE_NAMEIsKey(){
				    return false;
				}
				public Integer STORE_NAMELength(){
				    return null;
				}
				public Integer STORE_NAMEPrecision(){
				    return null;
				}
				public String STORE_NAMEDefault(){
				
					return null;
				
				}
				public String STORE_NAMEComment(){
				
				    return "";
				
				}
				public String STORE_NAMEPattern(){
				
					return "";
				
				}
				public String STORE_NAMEOriginalDbColumnName(){
				
					return "STORE_NAME";
				
				}

				
			    public String EXTERNAL_STORE_ID;

				public String getEXTERNAL_STORE_ID () {
					return this.EXTERNAL_STORE_ID;
				}

				public Boolean EXTERNAL_STORE_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_STORE_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_STORE_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_STORE_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_STORE_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_STORE_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_STORE_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_STORE_IDOriginalDbColumnName(){
				
					return "EXTERNAL_STORE_ID";
				
				}

				
			    public String CURRENCY;

				public String getCURRENCY () {
					return this.CURRENCY;
				}

				public Boolean CURRENCYIsNullable(){
				    return true;
				}
				public Boolean CURRENCYIsKey(){
				    return false;
				}
				public Integer CURRENCYLength(){
				    return null;
				}
				public Integer CURRENCYPrecision(){
				    return null;
				}
				public String CURRENCYDefault(){
				
					return null;
				
				}
				public String CURRENCYComment(){
				
				    return "";
				
				}
				public String CURRENCYPattern(){
				
					return "";
				
				}
				public String CURRENCYOriginalDbColumnName(){
				
					return "CURRENCY";
				
				}

				
			    public String TAXES_DISAGGREGATED;

				public String getTAXES_DISAGGREGATED () {
					return this.TAXES_DISAGGREGATED;
				}

				public Boolean TAXES_DISAGGREGATEDIsNullable(){
				    return true;
				}
				public Boolean TAXES_DISAGGREGATEDIsKey(){
				    return false;
				}
				public Integer TAXES_DISAGGREGATEDLength(){
				    return null;
				}
				public Integer TAXES_DISAGGREGATEDPrecision(){
				    return null;
				}
				public String TAXES_DISAGGREGATEDDefault(){
				
					return null;
				
				}
				public String TAXES_DISAGGREGATEDComment(){
				
				    return "";
				
				}
				public String TAXES_DISAGGREGATEDPattern(){
				
					return "";
				
				}
				public String TAXES_DISAGGREGATEDOriginalDbColumnName(){
				
					return "TAXES_DISAGGREGATED";
				
				}

				
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public String SHIPMENT_MODE;

				public String getSHIPMENT_MODE () {
					return this.SHIPMENT_MODE;
				}

				public Boolean SHIPMENT_MODEIsNullable(){
				    return true;
				}
				public Boolean SHIPMENT_MODEIsKey(){
				    return false;
				}
				public Integer SHIPMENT_MODELength(){
				    return null;
				}
				public Integer SHIPMENT_MODEPrecision(){
				    return null;
				}
				public String SHIPMENT_MODEDefault(){
				
					return null;
				
				}
				public String SHIPMENT_MODEComment(){
				
				    return "";
				
				}
				public String SHIPMENT_MODEPattern(){
				
					return "";
				
				}
				public String SHIPMENT_MODEOriginalDbColumnName(){
				
					return "SHIPMENT_MODE";
				
				}

				
			    public String ORDER_ID;

				public String getORDER_ID () {
					return this.ORDER_ID;
				}

				public Boolean ORDER_IDIsNullable(){
				    return true;
				}
				public Boolean ORDER_IDIsKey(){
				    return false;
				}
				public Integer ORDER_IDLength(){
				    return null;
				}
				public Integer ORDER_IDPrecision(){
				    return null;
				}
				public String ORDER_IDDefault(){
				
					return null;
				
				}
				public String ORDER_IDComment(){
				
				    return "";
				
				}
				public String ORDER_IDPattern(){
				
					return "";
				
				}
				public String ORDER_IDOriginalDbColumnName(){
				
					return "ORDER_ID";
				
				}

				
			    public String PACK_ID;

				public String getPACK_ID () {
					return this.PACK_ID;
				}

				public Boolean PACK_IDIsNullable(){
				    return true;
				}
				public Boolean PACK_IDIsKey(){
				    return false;
				}
				public Integer PACK_IDLength(){
				    return null;
				}
				public Integer PACK_IDPrecision(){
				    return null;
				}
				public String PACK_IDDefault(){
				
					return null;
				
				}
				public String PACK_IDComment(){
				
				    return "";
				
				}
				public String PACK_IDPattern(){
				
					return "";
				
				}
				public String PACK_IDOriginalDbColumnName(){
				
					return "PACK_ID";
				
				}

				
			    public String METADATA;

				public String getMETADATA () {
					return this.METADATA;
				}

				public Boolean METADATAIsNullable(){
				    return true;
				}
				public Boolean METADATAIsKey(){
				    return false;
				}
				public Integer METADATALength(){
				    return null;
				}
				public Integer METADATAPrecision(){
				    return null;
				}
				public String METADATADefault(){
				
					return null;
				
				}
				public String METADATAComment(){
				
				    return "";
				
				}
				public String METADATAPattern(){
				
					return "";
				
				}
				public String METADATAOriginalDbColumnName(){
				
					return "METADATA";
				
				}

				
			    public String REFUND_ID;

				public String getREFUND_ID () {
					return this.REFUND_ID;
				}

				public Boolean REFUND_IDIsNullable(){
				    return true;
				}
				public Boolean REFUND_IDIsKey(){
				    return false;
				}
				public Integer REFUND_IDLength(){
				    return null;
				}
				public Integer REFUND_IDPrecision(){
				    return null;
				}
				public String REFUND_IDDefault(){
				
					return null;
				
				}
				public String REFUND_IDComment(){
				
				    return "";
				
				}
				public String REFUND_IDPattern(){
				
					return "";
				
				}
				public String REFUND_IDOriginalDbColumnName(){
				
					return "REFUND_ID";
				
				}

				
			    public String EFFECTIVE_COUPON_AMOUNT;

				public String getEFFECTIVE_COUPON_AMOUNT () {
					return this.EFFECTIVE_COUPON_AMOUNT;
				}

				public Boolean EFFECTIVE_COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean EFFECTIVE_COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String EFFECTIVE_COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String EFFECTIVE_COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTOriginalDbColumnName(){
				
					return "EFFECTIVE_COUPON_AMOUNT";
				
				}

				
			    public String POI_ID;

				public String getPOI_ID () {
					return this.POI_ID;
				}

				public Boolean POI_IDIsNullable(){
				    return true;
				}
				public Boolean POI_IDIsKey(){
				    return false;
				}
				public Integer POI_IDLength(){
				    return null;
				}
				public Integer POI_IDPrecision(){
				    return null;
				}
				public String POI_IDDefault(){
				
					return null;
				
				}
				public String POI_IDComment(){
				
				    return "";
				
				}
				public String POI_IDPattern(){
				
					return "";
				
				}
				public String POI_IDOriginalDbColumnName(){
				
					return "POI_ID";
				
				}

				
			    public String CONCAT_FRETE;

				public String getCONCAT_FRETE () {
					return this.CONCAT_FRETE;
				}

				public Boolean CONCAT_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCAT_FRETEIsKey(){
				    return false;
				}
				public Integer CONCAT_FRETELength(){
				    return null;
				}
				public Integer CONCAT_FRETEPrecision(){
				    return null;
				}
				public String CONCAT_FRETEDefault(){
				
					return null;
				
				}
				public String CONCAT_FRETEComment(){
				
				    return "";
				
				}
				public String CONCAT_FRETEPattern(){
				
					return "";
				
				}
				public String CONCAT_FRETEOriginalDbColumnName(){
				
					return "CONCAT_FRETE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SHIPPING_ID == null) ? 0 : new Double(this.SHIPPING_ID.doubleValue()).hashCode());
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row19Struct other = (row19Struct) obj;
		
						if (this.SHIPPING_ID == null) {
							if (other.SHIPPING_ID != null)
								return false;
						
						} else if ((other.SHIPPING_ID == null) || (this.SHIPPING_ID.compareTo(other.SHIPPING_ID)!=0))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row19Struct other) {

		other.RELEASE_DATE = this.RELEASE_DATE;
	            other.SOURCE_ID = this.SOURCE_ID;
	            other.EXTERNAL_REFERENCE = this.EXTERNAL_REFERENCE;
	            other.RECORD_TYPE = this.RECORD_TYPE;
	            other.DESCRIPTION = this.DESCRIPTION;
	            other.NET_CREDIT_AMOUNT = this.NET_CREDIT_AMOUNT;
	            other.NET_DEBIT_AMOUNT = this.NET_DEBIT_AMOUNT;
	            other.GROSS_AMOUNT = this.GROSS_AMOUNT;
	            other.SELLER_AMOUNT = this.SELLER_AMOUNT;
	            other.MP_FEE_AMOUNT = this.MP_FEE_AMOUNT;
	            other.FINANCING_FEE_AMOUNT = this.FINANCING_FEE_AMOUNT;
	            other.SHIPPING_FEE_AMOUNT = this.SHIPPING_FEE_AMOUNT;
	            other.TAXES_AMOUNT = this.TAXES_AMOUNT;
	            other.COUPON_AMOUNT = this.COUPON_AMOUNT;
	            other.INSTALLMENTS = this.INSTALLMENTS;
	            other.PAYMENT_METHOD = this.PAYMENT_METHOD;
	            other.TAX_DETAIL = this.TAX_DETAIL;
	            other.TAX_AMOUNT_TELCO = this.TAX_AMOUNT_TELCO;
	            other.APPROVAL_DATE = this.APPROVAL_DATE;
	            other.POS_ID = this.POS_ID;
	            other.POS_NAME = this.POS_NAME;
	            other.EXTERNAL_POS_ID = this.EXTERNAL_POS_ID;
	            other.STORE_ID = this.STORE_ID;
	            other.STORE_NAME = this.STORE_NAME;
	            other.EXTERNAL_STORE_ID = this.EXTERNAL_STORE_ID;
	            other.CURRENCY = this.CURRENCY;
	            other.TAXES_DISAGGREGATED = this.TAXES_DISAGGREGATED;
	            other.SHIPPING_ID = this.SHIPPING_ID;
	            other.SHIPMENT_MODE = this.SHIPMENT_MODE;
	            other.ORDER_ID = this.ORDER_ID;
	            other.PACK_ID = this.PACK_ID;
	            other.METADATA = this.METADATA;
	            other.REFUND_ID = this.REFUND_ID;
	            other.EFFECTIVE_COUPON_AMOUNT = this.EFFECTIVE_COUPON_AMOUNT;
	            other.POI_ID = this.POI_ID;
	            other.CONCAT_FRETE = this.CONCAT_FRETE;
	            
	}

	public void copyKeysDataTo(row19Struct other) {

		other.SHIPPING_ID = this.SHIPPING_ID;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.SHIPPING_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SHIPPING_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.RELEASE_DATE = readString(dis,ois);
					
						this.SOURCE_ID = readString(dis,ois);
					
						this.EXTERNAL_REFERENCE = readString(dis,ois);
					
						this.RECORD_TYPE = readString(dis,ois);
					
						this.DESCRIPTION = readString(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = dis.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis,ois);
					
						this.PAYMENT_METHOD = readString(dis,ois);
					
						this.TAX_DETAIL = readString(dis,ois);
					
						this.TAX_AMOUNT_TELCO = readString(dis,ois);
					
						this.APPROVAL_DATE = readString(dis,ois);
					
						this.POS_ID = readString(dis,ois);
					
						this.POS_NAME = readString(dis,ois);
					
						this.EXTERNAL_POS_ID = readString(dis,ois);
					
						this.STORE_ID = readString(dis,ois);
					
						this.STORE_NAME = readString(dis,ois);
					
						this.EXTERNAL_STORE_ID = readString(dis,ois);
					
						this.CURRENCY = readString(dis,ois);
					
						this.TAXES_DISAGGREGATED = readString(dis,ois);
					
						this.SHIPMENT_MODE = readString(dis,ois);
					
						this.ORDER_ID = readString(dis,ois);
					
						this.PACK_ID = readString(dis,ois);
					
						this.METADATA = readString(dis,ois);
					
						this.REFUND_ID = readString(dis,ois);
					
						this.EFFECTIVE_COUPON_AMOUNT = readString(dis,ois);
					
						this.POI_ID = readString(dis,ois);
					
						this.CONCAT_FRETE = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.RELEASE_DATE = readString(dis,objectIn);
					
						this.SOURCE_ID = readString(dis,objectIn);
					
						this.EXTERNAL_REFERENCE = readString(dis,objectIn);
					
						this.RECORD_TYPE = readString(dis,objectIn);
					
						this.DESCRIPTION = readString(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = objectIn.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis,objectIn);
					
						this.PAYMENT_METHOD = readString(dis,objectIn);
					
						this.TAX_DETAIL = readString(dis,objectIn);
					
						this.TAX_AMOUNT_TELCO = readString(dis,objectIn);
					
						this.APPROVAL_DATE = readString(dis,objectIn);
					
						this.POS_ID = readString(dis,objectIn);
					
						this.POS_NAME = readString(dis,objectIn);
					
						this.EXTERNAL_POS_ID = readString(dis,objectIn);
					
						this.STORE_ID = readString(dis,objectIn);
					
						this.STORE_NAME = readString(dis,objectIn);
					
						this.EXTERNAL_STORE_ID = readString(dis,objectIn);
					
						this.CURRENCY = readString(dis,objectIn);
					
						this.TAXES_DISAGGREGATED = readString(dis,objectIn);
					
						this.SHIPMENT_MODE = readString(dis,objectIn);
					
						this.ORDER_ID = readString(dis,objectIn);
					
						this.PACK_ID = readString(dis,objectIn);
					
						this.METADATA = readString(dis,objectIn);
					
						this.REFUND_ID = readString(dis,objectIn);
					
						this.EFFECTIVE_COUPON_AMOUNT = readString(dis,objectIn);
					
						this.POI_ID = readString(dis,objectIn);
					
						this.CONCAT_FRETE = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.RELEASE_DATE, dos, oos);
					
						writeString(this.SOURCE_ID, dos, oos);
					
						writeString(this.EXTERNAL_REFERENCE, dos, oos);
					
						writeString(this.RECORD_TYPE, dos, oos);
					
						writeString(this.DESCRIPTION, dos, oos);
					
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
						if(this.NET_DEBIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
						if(this.GROSS_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.GROSS_AMOUNT);
		            	}
					
						if(this.SELLER_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SELLER_AMOUNT);
		            	}
					
						if(this.MP_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
						if(this.FINANCING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
						if(this.SHIPPING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
						if(this.TAXES_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TAXES_AMOUNT);
		            	}
					
						if(this.COUPON_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					writeInteger(this.INSTALLMENTS, dos, oos);
					
						writeString(this.PAYMENT_METHOD, dos, oos);
					
						writeString(this.TAX_DETAIL, dos, oos);
					
						writeString(this.TAX_AMOUNT_TELCO, dos, oos);
					
						writeString(this.APPROVAL_DATE, dos, oos);
					
						writeString(this.POS_ID, dos, oos);
					
						writeString(this.POS_NAME, dos, oos);
					
						writeString(this.EXTERNAL_POS_ID, dos, oos);
					
						writeString(this.STORE_ID, dos, oos);
					
						writeString(this.STORE_NAME, dos, oos);
					
						writeString(this.EXTERNAL_STORE_ID, dos, oos);
					
						writeString(this.CURRENCY, dos, oos);
					
						writeString(this.TAXES_DISAGGREGATED, dos, oos);
					
						writeString(this.SHIPMENT_MODE, dos, oos);
					
						writeString(this.ORDER_ID, dos, oos);
					
						writeString(this.PACK_ID, dos, oos);
					
						writeString(this.METADATA, dos, oos);
					
						writeString(this.REFUND_ID, dos, oos);
					
						writeString(this.EFFECTIVE_COUPON_AMOUNT, dos, oos);
					
						writeString(this.POI_ID, dos, oos);
					
						writeString(this.CONCAT_FRETE, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.RELEASE_DATE, dos, objectOut);
					
						writeString(this.SOURCE_ID, dos, objectOut);
					
						writeString(this.EXTERNAL_REFERENCE, dos, objectOut);
					
						writeString(this.RECORD_TYPE, dos, objectOut);
					
						writeString(this.DESCRIPTION, dos, objectOut);
					
						if(this.NET_CREDIT_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
						if(this.NET_DEBIT_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
						if(this.GROSS_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.GROSS_AMOUNT);
		            	}
					
						if(this.SELLER_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.SELLER_AMOUNT);
		            	}
					
						if(this.MP_FEE_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
						if(this.FINANCING_FEE_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
						if(this.SHIPPING_FEE_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
						if(this.TAXES_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.TAXES_AMOUNT);
		            	}
					
						if(this.COUPON_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					writeInteger(this.INSTALLMENTS, dos, objectOut);
					
						writeString(this.PAYMENT_METHOD, dos, objectOut);
					
						writeString(this.TAX_DETAIL, dos, objectOut);
					
						writeString(this.TAX_AMOUNT_TELCO, dos, objectOut);
					
						writeString(this.APPROVAL_DATE, dos, objectOut);
					
						writeString(this.POS_ID, dos, objectOut);
					
						writeString(this.POS_NAME, dos, objectOut);
					
						writeString(this.EXTERNAL_POS_ID, dos, objectOut);
					
						writeString(this.STORE_ID, dos, objectOut);
					
						writeString(this.STORE_NAME, dos, objectOut);
					
						writeString(this.EXTERNAL_STORE_ID, dos, objectOut);
					
						writeString(this.CURRENCY, dos, objectOut);
					
						writeString(this.TAXES_DISAGGREGATED, dos, objectOut);
					
						writeString(this.SHIPMENT_MODE, dos, objectOut);
					
						writeString(this.ORDER_ID, dos, objectOut);
					
						writeString(this.PACK_ID, dos, objectOut);
					
						writeString(this.METADATA, dos, objectOut);
					
						writeString(this.REFUND_ID, dos, objectOut);
					
						writeString(this.EFFECTIVE_COUPON_AMOUNT, dos, objectOut);
					
						writeString(this.POI_ID, dos, objectOut);
					
						writeString(this.CONCAT_FRETE, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("RELEASE_DATE="+RELEASE_DATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
		sb.append(",EXTERNAL_REFERENCE="+EXTERNAL_REFERENCE);
		sb.append(",RECORD_TYPE="+RECORD_TYPE);
		sb.append(",DESCRIPTION="+DESCRIPTION);
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
		sb.append(",NET_DEBIT_AMOUNT="+String.valueOf(NET_DEBIT_AMOUNT));
		sb.append(",GROSS_AMOUNT="+String.valueOf(GROSS_AMOUNT));
		sb.append(",SELLER_AMOUNT="+String.valueOf(SELLER_AMOUNT));
		sb.append(",MP_FEE_AMOUNT="+String.valueOf(MP_FEE_AMOUNT));
		sb.append(",FINANCING_FEE_AMOUNT="+String.valueOf(FINANCING_FEE_AMOUNT));
		sb.append(",SHIPPING_FEE_AMOUNT="+String.valueOf(SHIPPING_FEE_AMOUNT));
		sb.append(",TAXES_AMOUNT="+String.valueOf(TAXES_AMOUNT));
		sb.append(",COUPON_AMOUNT="+String.valueOf(COUPON_AMOUNT));
		sb.append(",INSTALLMENTS="+String.valueOf(INSTALLMENTS));
		sb.append(",PAYMENT_METHOD="+PAYMENT_METHOD);
		sb.append(",TAX_DETAIL="+TAX_DETAIL);
		sb.append(",TAX_AMOUNT_TELCO="+TAX_AMOUNT_TELCO);
		sb.append(",APPROVAL_DATE="+APPROVAL_DATE);
		sb.append(",POS_ID="+POS_ID);
		sb.append(",POS_NAME="+POS_NAME);
		sb.append(",EXTERNAL_POS_ID="+EXTERNAL_POS_ID);
		sb.append(",STORE_ID="+STORE_ID);
		sb.append(",STORE_NAME="+STORE_NAME);
		sb.append(",EXTERNAL_STORE_ID="+EXTERNAL_STORE_ID);
		sb.append(",CURRENCY="+CURRENCY);
		sb.append(",TAXES_DISAGGREGATED="+TAXES_DISAGGREGATED);
		sb.append(",SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",SHIPMENT_MODE="+SHIPMENT_MODE);
		sb.append(",ORDER_ID="+ORDER_ID);
		sb.append(",PACK_ID="+PACK_ID);
		sb.append(",METADATA="+METADATA);
		sb.append(",REFUND_ID="+REFUND_ID);
		sb.append(",EFFECTIVE_COUPON_AMOUNT="+EFFECTIVE_COUPON_AMOUNT);
		sb.append(",POI_ID="+POI_ID);
		sb.append(",CONCAT_FRETE="+CONCAT_FRETE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SHIPPING_ID, other.SHIPPING_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();




	
	/**
	 * [tAdvancedHash_row19 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row19", false);
		start_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tAdvancedHash_row19 = 0;
		

			   		// connection name:row19
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_1) outputs:(row19,row19) | target node:tAdvancedHash_row19 - inputs:(row19) outputs:()
			   		// linked node: tMap_5 - inputs:(row18,row19) outputs:(copyOfsaida1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row19 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row19Struct> tHash_Lookup_row19 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row19Struct>getLookup(matchingModeEnum_row19);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row19", tHash_Lookup_row19);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row19 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row15Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row15Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row15Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row19.RELEASE_DATE = next_tHashInput_3.RELEASE_DATE;
	row19.SOURCE_ID = next_tHashInput_3.SOURCE_ID;
	row19.EXTERNAL_REFERENCE = next_tHashInput_3.EXTERNAL_REFERENCE;
	row19.RECORD_TYPE = next_tHashInput_3.RECORD_TYPE;
	row19.DESCRIPTION = next_tHashInput_3.DESCRIPTION;
	row19.NET_CREDIT_AMOUNT = next_tHashInput_3.NET_CREDIT_AMOUNT;
	row19.NET_DEBIT_AMOUNT = next_tHashInput_3.NET_DEBIT_AMOUNT;
	row19.GROSS_AMOUNT = next_tHashInput_3.GROSS_AMOUNT;
	row19.SELLER_AMOUNT = next_tHashInput_3.SELLER_AMOUNT;
	row19.MP_FEE_AMOUNT = next_tHashInput_3.MP_FEE_AMOUNT;
	row19.FINANCING_FEE_AMOUNT = next_tHashInput_3.FINANCING_FEE_AMOUNT;
	row19.SHIPPING_FEE_AMOUNT = next_tHashInput_3.SHIPPING_FEE_AMOUNT;
	row19.TAXES_AMOUNT = next_tHashInput_3.TAXES_AMOUNT;
	row19.COUPON_AMOUNT = next_tHashInput_3.COUPON_AMOUNT;
	row19.INSTALLMENTS = next_tHashInput_3.INSTALLMENTS;
	row19.PAYMENT_METHOD = next_tHashInput_3.PAYMENT_METHOD;
	row19.TAX_DETAIL = next_tHashInput_3.TAX_DETAIL;
	row19.TAX_AMOUNT_TELCO = next_tHashInput_3.TAX_AMOUNT_TELCO;
	row19.APPROVAL_DATE = next_tHashInput_3.APPROVAL_DATE;
	row19.POS_ID = next_tHashInput_3.POS_ID;
	row19.POS_NAME = next_tHashInput_3.POS_NAME;
	row19.EXTERNAL_POS_ID = next_tHashInput_3.EXTERNAL_POS_ID;
	row19.STORE_ID = next_tHashInput_3.STORE_ID;
	row19.STORE_NAME = next_tHashInput_3.STORE_NAME;
	row19.EXTERNAL_STORE_ID = next_tHashInput_3.EXTERNAL_STORE_ID;
	row19.CURRENCY = next_tHashInput_3.CURRENCY;
	row19.TAXES_DISAGGREGATED = next_tHashInput_3.TAXES_DISAGGREGATED;
	row19.SHIPPING_ID = next_tHashInput_3.SHIPPING_ID;
	row19.SHIPMENT_MODE = next_tHashInput_3.SHIPMENT_MODE;
	row19.ORDER_ID = next_tHashInput_3.ORDER_ID;
	row19.PACK_ID = next_tHashInput_3.PACK_ID;
	row19.METADATA = next_tHashInput_3.METADATA;
	row19.REFUND_ID = next_tHashInput_3.REFUND_ID;
	row19.EFFECTIVE_COUPON_AMOUNT = next_tHashInput_3.EFFECTIVE_COUPON_AMOUNT;
	row19.POI_ID = next_tHashInput_3.POI_ID;
	row19.CONCAT_FRETE = next_tHashInput_3.CONCAT_FRETE;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					


			   
			   

					row19Struct row19_HashRow = new row19Struct();
		   	   	   
				
				row19_HashRow.RELEASE_DATE = row19.RELEASE_DATE;
				
				row19_HashRow.SOURCE_ID = row19.SOURCE_ID;
				
				row19_HashRow.EXTERNAL_REFERENCE = row19.EXTERNAL_REFERENCE;
				
				row19_HashRow.RECORD_TYPE = row19.RECORD_TYPE;
				
				row19_HashRow.DESCRIPTION = row19.DESCRIPTION;
				
				row19_HashRow.NET_CREDIT_AMOUNT = row19.NET_CREDIT_AMOUNT;
				
				row19_HashRow.NET_DEBIT_AMOUNT = row19.NET_DEBIT_AMOUNT;
				
				row19_HashRow.GROSS_AMOUNT = row19.GROSS_AMOUNT;
				
				row19_HashRow.SELLER_AMOUNT = row19.SELLER_AMOUNT;
				
				row19_HashRow.MP_FEE_AMOUNT = row19.MP_FEE_AMOUNT;
				
				row19_HashRow.FINANCING_FEE_AMOUNT = row19.FINANCING_FEE_AMOUNT;
				
				row19_HashRow.SHIPPING_FEE_AMOUNT = row19.SHIPPING_FEE_AMOUNT;
				
				row19_HashRow.TAXES_AMOUNT = row19.TAXES_AMOUNT;
				
				row19_HashRow.COUPON_AMOUNT = row19.COUPON_AMOUNT;
				
				row19_HashRow.INSTALLMENTS = row19.INSTALLMENTS;
				
				row19_HashRow.PAYMENT_METHOD = row19.PAYMENT_METHOD;
				
				row19_HashRow.TAX_DETAIL = row19.TAX_DETAIL;
				
				row19_HashRow.TAX_AMOUNT_TELCO = row19.TAX_AMOUNT_TELCO;
				
				row19_HashRow.APPROVAL_DATE = row19.APPROVAL_DATE;
				
				row19_HashRow.POS_ID = row19.POS_ID;
				
				row19_HashRow.POS_NAME = row19.POS_NAME;
				
				row19_HashRow.EXTERNAL_POS_ID = row19.EXTERNAL_POS_ID;
				
				row19_HashRow.STORE_ID = row19.STORE_ID;
				
				row19_HashRow.STORE_NAME = row19.STORE_NAME;
				
				row19_HashRow.EXTERNAL_STORE_ID = row19.EXTERNAL_STORE_ID;
				
				row19_HashRow.CURRENCY = row19.CURRENCY;
				
				row19_HashRow.TAXES_DISAGGREGATED = row19.TAXES_DISAGGREGATED;
				
				row19_HashRow.SHIPPING_ID = row19.SHIPPING_ID;
				
				row19_HashRow.SHIPMENT_MODE = row19.SHIPMENT_MODE;
				
				row19_HashRow.ORDER_ID = row19.ORDER_ID;
				
				row19_HashRow.PACK_ID = row19.PACK_ID;
				
				row19_HashRow.METADATA = row19.METADATA;
				
				row19_HashRow.REFUND_ID = row19.REFUND_ID;
				
				row19_HashRow.EFFECTIVE_COUPON_AMOUNT = row19.EFFECTIVE_COUPON_AMOUNT;
				
				row19_HashRow.POI_ID = row19.POI_ID;
				
				row19_HashRow.CONCAT_FRETE = row19.CONCAT_FRETE;
				
			tHash_Lookup_row19.put(row19_HashRow);
			
            




 


	tos_count_tAdvancedHash_row19++;

/**
 * [tAdvancedHash_row19 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row19 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

tHash_Lookup_row19.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row19", true);
end_Hash.put("tAdvancedHash_row19", System.currentTimeMillis());




/**
 * [tAdvancedHash_row19 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row19 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row19";
	
	

 



/**
 * [tAdvancedHash_row19 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row47Struct implements routines.system.IPersistableComparableLookupRow<row47Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String MLB;

				public String getMLB () {
					return this.MLB;
				}

				public Boolean MLBIsNullable(){
				    return true;
				}
				public Boolean MLBIsKey(){
				    return false;
				}
				public Integer MLBLength(){
				    return null;
				}
				public Integer MLBPrecision(){
				    return null;
				}
				public String MLBDefault(){
				
					return null;
				
				}
				public String MLBComment(){
				
				    return "";
				
				}
				public String MLBPattern(){
				
					return "";
				
				}
				public String MLBOriginalDbColumnName(){
				
					return "MLB";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Apelido;

				public String getApelido () {
					return this.Apelido;
				}

				public Boolean ApelidoIsNullable(){
				    return true;
				}
				public Boolean ApelidoIsKey(){
				    return false;
				}
				public Integer ApelidoLength(){
				    return null;
				}
				public Integer ApelidoPrecision(){
				    return null;
				}
				public String ApelidoDefault(){
				
					return null;
				
				}
				public String ApelidoComment(){
				
				    return "";
				
				}
				public String ApelidoPattern(){
				
					return "";
				
				}
				public String ApelidoOriginalDbColumnName(){
				
					return "Apelido";
				
				}

				
			    public String Loja_Oficial;

				public String getLoja_Oficial () {
					return this.Loja_Oficial;
				}

				public Boolean Loja_OficialIsNullable(){
				    return true;
				}
				public Boolean Loja_OficialIsKey(){
				    return false;
				}
				public Integer Loja_OficialLength(){
				    return null;
				}
				public Integer Loja_OficialPrecision(){
				    return null;
				}
				public String Loja_OficialDefault(){
				
					return null;
				
				}
				public String Loja_OficialComment(){
				
				    return "";
				
				}
				public String Loja_OficialPattern(){
				
					return "";
				
				}
				public String Loja_OficialOriginalDbColumnName(){
				
					return "Loja_Oficial";
				
				}

				
			    public String Titulo;

				public String getTitulo () {
					return this.Titulo;
				}

				public Boolean TituloIsNullable(){
				    return true;
				}
				public Boolean TituloIsKey(){
				    return false;
				}
				public Integer TituloLength(){
				    return null;
				}
				public Integer TituloPrecision(){
				    return null;
				}
				public String TituloDefault(){
				
					return null;
				
				}
				public String TituloComment(){
				
				    return "";
				
				}
				public String TituloPattern(){
				
					return "";
				
				}
				public String TituloOriginalDbColumnName(){
				
					return "Titulo";
				
				}

				
			    public String Status;

				public String getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String Preco;

				public String getPreco () {
					return this.Preco;
				}

				public Boolean PrecoIsNullable(){
				    return true;
				}
				public Boolean PrecoIsKey(){
				    return false;
				}
				public Integer PrecoLength(){
				    return null;
				}
				public Integer PrecoPrecision(){
				    return null;
				}
				public String PrecoDefault(){
				
					return null;
				
				}
				public String PrecoComment(){
				
				    return "";
				
				}
				public String PrecoPattern(){
				
					return "";
				
				}
				public String PrecoOriginalDbColumnName(){
				
					return "Preco";
				
				}

				
			    public String Vendas;

				public String getVendas () {
					return this.Vendas;
				}

				public Boolean VendasIsNullable(){
				    return true;
				}
				public Boolean VendasIsKey(){
				    return false;
				}
				public Integer VendasLength(){
				    return null;
				}
				public Integer VendasPrecision(){
				    return null;
				}
				public String VendasDefault(){
				
					return null;
				
				}
				public String VendasComment(){
				
				    return "";
				
				}
				public String VendasPattern(){
				
					return "";
				
				}
				public String VendasOriginalDbColumnName(){
				
					return "Vendas";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public String Porcentagem_cobrada_do_ML;

				public String getPorcentagem_cobrada_do_ML () {
					return this.Porcentagem_cobrada_do_ML;
				}

				public Boolean Porcentagem_cobrada_do_MLIsNullable(){
				    return true;
				}
				public Boolean Porcentagem_cobrada_do_MLIsKey(){
				    return false;
				}
				public Integer Porcentagem_cobrada_do_MLLength(){
				    return null;
				}
				public Integer Porcentagem_cobrada_do_MLPrecision(){
				    return null;
				}
				public String Porcentagem_cobrada_do_MLDefault(){
				
					return null;
				
				}
				public String Porcentagem_cobrada_do_MLComment(){
				
				    return "";
				
				}
				public String Porcentagem_cobrada_do_MLPattern(){
				
					return "";
				
				}
				public String Porcentagem_cobrada_do_MLOriginalDbColumnName(){
				
					return "Porcentagem_cobrada_do_ML";
				
				}

				
			    public String Modo_Entrega;

				public String getModo_Entrega () {
					return this.Modo_Entrega;
				}

				public Boolean Modo_EntregaIsNullable(){
				    return true;
				}
				public Boolean Modo_EntregaIsKey(){
				    return false;
				}
				public Integer Modo_EntregaLength(){
				    return null;
				}
				public Integer Modo_EntregaPrecision(){
				    return null;
				}
				public String Modo_EntregaDefault(){
				
					return null;
				
				}
				public String Modo_EntregaComment(){
				
				    return "";
				
				}
				public String Modo_EntregaPattern(){
				
					return "";
				
				}
				public String Modo_EntregaOriginalDbColumnName(){
				
					return "Modo_Entrega";
				
				}

				
			    public String Frete_Gratis;

				public String getFrete_Gratis () {
					return this.Frete_Gratis;
				}

				public Boolean Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Frete_GratisIsKey(){
				    return false;
				}
				public Integer Frete_GratisLength(){
				    return null;
				}
				public Integer Frete_GratisPrecision(){
				    return null;
				}
				public String Frete_GratisDefault(){
				
					return null;
				
				}
				public String Frete_GratisComment(){
				
				    return "";
				
				}
				public String Frete_GratisPattern(){
				
					return "";
				
				}
				public String Frete_GratisOriginalDbColumnName(){
				
					return "Frete_Gratis";
				
				}

				
			    public String Tarifa_Frete_Gratis;

				public String getTarifa_Frete_Gratis () {
					return this.Tarifa_Frete_Gratis;
				}

				public Boolean Tarifa_Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Tarifa_Frete_GratisIsKey(){
				    return false;
				}
				public Integer Tarifa_Frete_GratisLength(){
				    return null;
				}
				public Integer Tarifa_Frete_GratisPrecision(){
				    return null;
				}
				public String Tarifa_Frete_GratisDefault(){
				
					return null;
				
				}
				public String Tarifa_Frete_GratisComment(){
				
				    return "";
				
				}
				public String Tarifa_Frete_GratisPattern(){
				
					return "";
				
				}
				public String Tarifa_Frete_GratisOriginalDbColumnName(){
				
					return "Tarifa_Frete_Gratis";
				
				}

				
			    public String Estoque;

				public String getEstoque () {
					return this.Estoque;
				}

				public Boolean EstoqueIsNullable(){
				    return true;
				}
				public Boolean EstoqueIsKey(){
				    return false;
				}
				public Integer EstoqueLength(){
				    return null;
				}
				public Integer EstoquePrecision(){
				    return null;
				}
				public String EstoqueDefault(){
				
					return null;
				
				}
				public String EstoqueComment(){
				
				    return "";
				
				}
				public String EstoquePattern(){
				
					return "";
				
				}
				public String EstoqueOriginalDbColumnName(){
				
					return "Estoque";
				
				}

				
			    public String Dimensoes;

				public String getDimensoes () {
					return this.Dimensoes;
				}

				public Boolean DimensoesIsNullable(){
				    return true;
				}
				public Boolean DimensoesIsKey(){
				    return false;
				}
				public Integer DimensoesLength(){
				    return null;
				}
				public Integer DimensoesPrecision(){
				    return null;
				}
				public String DimensoesDefault(){
				
					return null;
				
				}
				public String DimensoesComment(){
				
				    return "";
				
				}
				public String DimensoesPattern(){
				
					return "";
				
				}
				public String DimensoesOriginalDbColumnName(){
				
					return "Dimensoes";
				
				}

				
			    public String Em_Promocao;

				public String getEm_Promocao () {
					return this.Em_Promocao;
				}

				public Boolean Em_PromocaoIsNullable(){
				    return true;
				}
				public Boolean Em_PromocaoIsKey(){
				    return false;
				}
				public Integer Em_PromocaoLength(){
				    return null;
				}
				public Integer Em_PromocaoPrecision(){
				    return null;
				}
				public String Em_PromocaoDefault(){
				
					return null;
				
				}
				public String Em_PromocaoComment(){
				
				    return "";
				
				}
				public String Em_PromocaoPattern(){
				
					return "";
				
				}
				public String Em_PromocaoOriginalDbColumnName(){
				
					return "Em_Promocao";
				
				}

				
			    public String Percent_Qualidade;

				public String getPercent_Qualidade () {
					return this.Percent_Qualidade;
				}

				public Boolean Percent_QualidadeIsNullable(){
				    return true;
				}
				public Boolean Percent_QualidadeIsKey(){
				    return false;
				}
				public Integer Percent_QualidadeLength(){
				    return null;
				}
				public Integer Percent_QualidadePrecision(){
				    return null;
				}
				public String Percent_QualidadeDefault(){
				
					return null;
				
				}
				public String Percent_QualidadeComment(){
				
				    return "";
				
				}
				public String Percent_QualidadePattern(){
				
					return "";
				
				}
				public String Percent_QualidadeOriginalDbColumnName(){
				
					return "Percent_Qualidade";
				
				}

				
			    public String Vr_Receber;

				public String getVr_Receber () {
					return this.Vr_Receber;
				}

				public Boolean Vr_ReceberIsNullable(){
				    return true;
				}
				public Boolean Vr_ReceberIsKey(){
				    return false;
				}
				public Integer Vr_ReceberLength(){
				    return null;
				}
				public Integer Vr_ReceberPrecision(){
				    return null;
				}
				public String Vr_ReceberDefault(){
				
					return null;
				
				}
				public String Vr_ReceberComment(){
				
				    return "";
				
				}
				public String Vr_ReceberPattern(){
				
					return "";
				
				}
				public String Vr_ReceberOriginalDbColumnName(){
				
					return "Vr_Receber";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Data_Cadastro;

				public String getData_Cadastro () {
					return this.Data_Cadastro;
				}

				public Boolean Data_CadastroIsNullable(){
				    return true;
				}
				public Boolean Data_CadastroIsKey(){
				    return false;
				}
				public Integer Data_CadastroLength(){
				    return null;
				}
				public Integer Data_CadastroPrecision(){
				    return null;
				}
				public String Data_CadastroDefault(){
				
					return null;
				
				}
				public String Data_CadastroComment(){
				
				    return "";
				
				}
				public String Data_CadastroPattern(){
				
					return "";
				
				}
				public String Data_CadastroOriginalDbColumnName(){
				
					return "Data_Cadastro";
				
				}

				
			    public String Url;

				public String getUrl () {
					return this.Url;
				}

				public Boolean UrlIsNullable(){
				    return true;
				}
				public Boolean UrlIsKey(){
				    return false;
				}
				public Integer UrlLength(){
				    return null;
				}
				public Integer UrlPrecision(){
				    return null;
				}
				public String UrlDefault(){
				
					return null;
				
				}
				public String UrlComment(){
				
				    return "";
				
				}
				public String UrlPattern(){
				
					return "";
				
				}
				public String UrlOriginalDbColumnName(){
				
					return "Url";
				
				}

				
			    public String MLB_Origem_Catalogo;

				public String getMLB_Origem_Catalogo () {
					return this.MLB_Origem_Catalogo;
				}

				public Boolean MLB_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean MLB_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer MLB_Origem_CatalogoLength(){
				    return null;
				}
				public Integer MLB_Origem_CatalogoPrecision(){
				    return null;
				}
				public String MLB_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String MLB_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String MLB_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String MLB_Origem_CatalogoOriginalDbColumnName(){
				
					return "MLB_Origem_Catalogo";
				
				}

				
			    public String Variacao_Origem_Catalogo;

				public String getVariacao_Origem_Catalogo () {
					return this.Variacao_Origem_Catalogo;
				}

				public Boolean Variacao_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean Variacao_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer Variacao_Origem_CatalogoLength(){
				    return null;
				}
				public Integer Variacao_Origem_CatalogoPrecision(){
				    return null;
				}
				public String Variacao_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String Variacao_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String Variacao_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String Variacao_Origem_CatalogoOriginalDbColumnName(){
				
					return "Variacao_Origem_Catalogo";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row47Struct other = (row47Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row47Struct other) {

		other.MLB = this.MLB;
	            other.SKU = this.SKU;
	            other.Apelido = this.Apelido;
	            other.Loja_Oficial = this.Loja_Oficial;
	            other.Titulo = this.Titulo;
	            other.Status = this.Status;
	            other.Preco = this.Preco;
	            other.Vendas = this.Vendas;
	            other.Categoria = this.Categoria;
	            other.Porcentagem_cobrada_do_ML = this.Porcentagem_cobrada_do_ML;
	            other.Modo_Entrega = this.Modo_Entrega;
	            other.Frete_Gratis = this.Frete_Gratis;
	            other.Tarifa_Frete_Gratis = this.Tarifa_Frete_Gratis;
	            other.Estoque = this.Estoque;
	            other.Dimensoes = this.Dimensoes;
	            other.Em_Promocao = this.Em_Promocao;
	            other.Percent_Qualidade = this.Percent_Qualidade;
	            other.Vr_Receber = this.Vr_Receber;
	            other.CategoriaID = this.CategoriaID;
	            other.Data_Cadastro = this.Data_Cadastro;
	            other.Url = this.Url;
	            other.MLB_Origem_Catalogo = this.MLB_Origem_Catalogo;
	            other.Variacao_Origem_Catalogo = this.Variacao_Origem_Catalogo;
	            
	}

	public void copyKeysDataTo(row47Struct other) {

		other.SKU = this.SKU;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.MLB = readString(dis,ois);
					
						this.Apelido = readString(dis,ois);
					
						this.Loja_Oficial = readString(dis,ois);
					
						this.Titulo = readString(dis,ois);
					
						this.Status = readString(dis,ois);
					
						this.Preco = readString(dis,ois);
					
						this.Vendas = readString(dis,ois);
					
						this.Categoria = readString(dis,ois);
					
						this.Porcentagem_cobrada_do_ML = readString(dis,ois);
					
						this.Modo_Entrega = readString(dis,ois);
					
						this.Frete_Gratis = readString(dis,ois);
					
						this.Tarifa_Frete_Gratis = readString(dis,ois);
					
						this.Estoque = readString(dis,ois);
					
						this.Dimensoes = readString(dis,ois);
					
						this.Em_Promocao = readString(dis,ois);
					
						this.Percent_Qualidade = readString(dis,ois);
					
						this.Vr_Receber = readString(dis,ois);
					
						this.CategoriaID = readString(dis,ois);
					
						this.Data_Cadastro = readString(dis,ois);
					
						this.Url = readString(dis,ois);
					
						this.MLB_Origem_Catalogo = readString(dis,ois);
					
						this.Variacao_Origem_Catalogo = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.MLB = readString(dis,objectIn);
					
						this.Apelido = readString(dis,objectIn);
					
						this.Loja_Oficial = readString(dis,objectIn);
					
						this.Titulo = readString(dis,objectIn);
					
						this.Status = readString(dis,objectIn);
					
						this.Preco = readString(dis,objectIn);
					
						this.Vendas = readString(dis,objectIn);
					
						this.Categoria = readString(dis,objectIn);
					
						this.Porcentagem_cobrada_do_ML = readString(dis,objectIn);
					
						this.Modo_Entrega = readString(dis,objectIn);
					
						this.Frete_Gratis = readString(dis,objectIn);
					
						this.Tarifa_Frete_Gratis = readString(dis,objectIn);
					
						this.Estoque = readString(dis,objectIn);
					
						this.Dimensoes = readString(dis,objectIn);
					
						this.Em_Promocao = readString(dis,objectIn);
					
						this.Percent_Qualidade = readString(dis,objectIn);
					
						this.Vr_Receber = readString(dis,objectIn);
					
						this.CategoriaID = readString(dis,objectIn);
					
						this.Data_Cadastro = readString(dis,objectIn);
					
						this.Url = readString(dis,objectIn);
					
						this.MLB_Origem_Catalogo = readString(dis,objectIn);
					
						this.Variacao_Origem_Catalogo = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.MLB, dos, oos);
					
						writeString(this.Apelido, dos, oos);
					
						writeString(this.Loja_Oficial, dos, oos);
					
						writeString(this.Titulo, dos, oos);
					
						writeString(this.Status, dos, oos);
					
						writeString(this.Preco, dos, oos);
					
						writeString(this.Vendas, dos, oos);
					
						writeString(this.Categoria, dos, oos);
					
						writeString(this.Porcentagem_cobrada_do_ML, dos, oos);
					
						writeString(this.Modo_Entrega, dos, oos);
					
						writeString(this.Frete_Gratis, dos, oos);
					
						writeString(this.Tarifa_Frete_Gratis, dos, oos);
					
						writeString(this.Estoque, dos, oos);
					
						writeString(this.Dimensoes, dos, oos);
					
						writeString(this.Em_Promocao, dos, oos);
					
						writeString(this.Percent_Qualidade, dos, oos);
					
						writeString(this.Vr_Receber, dos, oos);
					
						writeString(this.CategoriaID, dos, oos);
					
						writeString(this.Data_Cadastro, dos, oos);
					
						writeString(this.Url, dos, oos);
					
						writeString(this.MLB_Origem_Catalogo, dos, oos);
					
						writeString(this.Variacao_Origem_Catalogo, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.MLB, dos, objectOut);
					
						writeString(this.Apelido, dos, objectOut);
					
						writeString(this.Loja_Oficial, dos, objectOut);
					
						writeString(this.Titulo, dos, objectOut);
					
						writeString(this.Status, dos, objectOut);
					
						writeString(this.Preco, dos, objectOut);
					
						writeString(this.Vendas, dos, objectOut);
					
						writeString(this.Categoria, dos, objectOut);
					
						writeString(this.Porcentagem_cobrada_do_ML, dos, objectOut);
					
						writeString(this.Modo_Entrega, dos, objectOut);
					
						writeString(this.Frete_Gratis, dos, objectOut);
					
						writeString(this.Tarifa_Frete_Gratis, dos, objectOut);
					
						writeString(this.Estoque, dos, objectOut);
					
						writeString(this.Dimensoes, dos, objectOut);
					
						writeString(this.Em_Promocao, dos, objectOut);
					
						writeString(this.Percent_Qualidade, dos, objectOut);
					
						writeString(this.Vr_Receber, dos, objectOut);
					
						writeString(this.CategoriaID, dos, objectOut);
					
						writeString(this.Data_Cadastro, dos, objectOut);
					
						writeString(this.Url, dos, objectOut);
					
						writeString(this.MLB_Origem_Catalogo, dos, objectOut);
					
						writeString(this.Variacao_Origem_Catalogo, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("MLB="+MLB);
		sb.append(",SKU="+SKU);
		sb.append(",Apelido="+Apelido);
		sb.append(",Loja_Oficial="+Loja_Oficial);
		sb.append(",Titulo="+Titulo);
		sb.append(",Status="+Status);
		sb.append(",Preco="+Preco);
		sb.append(",Vendas="+Vendas);
		sb.append(",Categoria="+Categoria);
		sb.append(",Porcentagem_cobrada_do_ML="+Porcentagem_cobrada_do_ML);
		sb.append(",Modo_Entrega="+Modo_Entrega);
		sb.append(",Frete_Gratis="+Frete_Gratis);
		sb.append(",Tarifa_Frete_Gratis="+Tarifa_Frete_Gratis);
		sb.append(",Estoque="+Estoque);
		sb.append(",Dimensoes="+Dimensoes);
		sb.append(",Em_Promocao="+Em_Promocao);
		sb.append(",Percent_Qualidade="+Percent_Qualidade);
		sb.append(",Vr_Receber="+Vr_Receber);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Data_Cadastro="+Data_Cadastro);
		sb.append(",Url="+Url);
		sb.append(",MLB_Origem_Catalogo="+MLB_Origem_Catalogo);
		sb.append(",Variacao_Origem_Catalogo="+Variacao_Origem_Catalogo);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row47Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row47Struct row47 = new row47Struct();




	
	/**
	 * [tAdvancedHash_row47 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row47", false);
		start_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row47";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row47");
					}
				
		int tos_count_tAdvancedHash_row47 = 0;
		

			   		// connection name:row47
			   		// source node:tHashInput_17 - inputs:(after_tHashInput_1) outputs:(row47,row47) | target node:tAdvancedHash_row47 - inputs:(row47) outputs:()
			   		// linked node: tMap_19 - inputs:(copyOfsaida1,row47) outputs:(row16)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row47 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row47Struct>getLookup(matchingModeEnum_row47);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row47", tHash_Lookup_row47);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row47 begin ] stop
 */



	
	/**
	 * [tHashInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_17", false);
		start_Hash.put("tHashInput_17", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_17";
	
	
		int tos_count_tHashInput_17 = 0;
		


int nb_line_tHashInput_17 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_17=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row210Struct> tHashFile_tHashInput_17 = mf_tHashInput_17.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_17==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row210Struct> iterator_tHashInput_17 = tHashFile_tHashInput_17.iterator();
while (iterator_tHashInput_17.hasNext()) {
    row210Struct next_tHashInput_17 = iterator_tHashInput_17.next();

	row47.MLB = next_tHashInput_17.MLB;
	row47.SKU = next_tHashInput_17.SKU;
	row47.Apelido = next_tHashInput_17.Apelido;
	row47.Loja_Oficial = next_tHashInput_17.Loja_Oficial;
	row47.Titulo = next_tHashInput_17.Titulo;
	row47.Status = next_tHashInput_17.Status;
	row47.Preco = next_tHashInput_17.Preco;
	row47.Vendas = next_tHashInput_17.Vendas;
	row47.Categoria = next_tHashInput_17.Categoria;
	row47.Porcentagem_cobrada_do_ML = next_tHashInput_17.Porcentagem_cobrada_do_ML;
	row47.Modo_Entrega = next_tHashInput_17.Modo_Entrega;
	row47.Frete_Gratis = next_tHashInput_17.Frete_Gratis;
	row47.Tarifa_Frete_Gratis = next_tHashInput_17.Tarifa_Frete_Gratis;
	row47.Estoque = next_tHashInput_17.Estoque;
	row47.Dimensoes = next_tHashInput_17.Dimensoes;
	row47.Em_Promocao = next_tHashInput_17.Em_Promocao;
	row47.Percent_Qualidade = next_tHashInput_17.Percent_Qualidade;
	row47.Vr_Receber = next_tHashInput_17.Vr_Receber;
	row47.CategoriaID = next_tHashInput_17.CategoriaID;
	row47.Data_Cadastro = next_tHashInput_17.Data_Cadastro;
	row47.Url = next_tHashInput_17.Url;
	row47.MLB_Origem_Catalogo = next_tHashInput_17.MLB_Origem_Catalogo;
	row47.Variacao_Origem_Catalogo = next_tHashInput_17.Variacao_Origem_Catalogo;

 



/**
 * [tHashInput_17 begin ] stop
 */
	
	/**
	 * [tHashInput_17 main ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 


	tos_count_tHashInput_17++;

/**
 * [tHashInput_17 main ] stop
 */
	
	/**
	 * [tHashInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row47"
						
						);
					}
					


			   
			   

					row47Struct row47_HashRow = new row47Struct();
		   	   	   
				
				row47_HashRow.MLB = row47.MLB;
				
				row47_HashRow.SKU = row47.SKU;
				
				row47_HashRow.Apelido = row47.Apelido;
				
				row47_HashRow.Loja_Oficial = row47.Loja_Oficial;
				
				row47_HashRow.Titulo = row47.Titulo;
				
				row47_HashRow.Status = row47.Status;
				
				row47_HashRow.Preco = row47.Preco;
				
				row47_HashRow.Vendas = row47.Vendas;
				
				row47_HashRow.Categoria = row47.Categoria;
				
				row47_HashRow.Porcentagem_cobrada_do_ML = row47.Porcentagem_cobrada_do_ML;
				
				row47_HashRow.Modo_Entrega = row47.Modo_Entrega;
				
				row47_HashRow.Frete_Gratis = row47.Frete_Gratis;
				
				row47_HashRow.Tarifa_Frete_Gratis = row47.Tarifa_Frete_Gratis;
				
				row47_HashRow.Estoque = row47.Estoque;
				
				row47_HashRow.Dimensoes = row47.Dimensoes;
				
				row47_HashRow.Em_Promocao = row47.Em_Promocao;
				
				row47_HashRow.Percent_Qualidade = row47.Percent_Qualidade;
				
				row47_HashRow.Vr_Receber = row47.Vr_Receber;
				
				row47_HashRow.CategoriaID = row47.CategoriaID;
				
				row47_HashRow.Data_Cadastro = row47.Data_Cadastro;
				
				row47_HashRow.Url = row47.Url;
				
				row47_HashRow.MLB_Origem_Catalogo = row47.MLB_Origem_Catalogo;
				
				row47_HashRow.Variacao_Origem_Catalogo = row47.Variacao_Origem_Catalogo;
				
			tHash_Lookup_row47.put(row47_HashRow);
			
            




 


	tos_count_tAdvancedHash_row47++;

/**
 * [tAdvancedHash_row47 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row47 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_17 end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	
    

		
			nb_line_tHashInput_17++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_17_NB_LINE", nb_line_tHashInput_17);       

 

ok_Hash.put("tHashInput_17", true);
end_Hash.put("tHashInput_17", System.currentTimeMillis());




/**
 * [tHashInput_17 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

tHash_Lookup_row47.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row47");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row47", true);
end_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());




/**
 * [tAdvancedHash_row47 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_17 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row47 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row47";
	
	

 



/**
 * [tAdvancedHash_row47 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row21Struct implements routines.system.IPersistableComparableLookupRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String concat;

				public String getConcat () {
					return this.concat;
				}

				public Boolean concatIsNullable(){
				    return true;
				}
				public Boolean concatIsKey(){
				    return false;
				}
				public Integer concatLength(){
				    return null;
				}
				public Integer concatPrecision(){
				    return null;
				}
				public String concatDefault(){
				
					return null;
				
				}
				public String concatComment(){
				
				    return "";
				
				}
				public String concatPattern(){
				
					return "";
				
				}
				public String concatOriginalDbColumnName(){
				
					return "concat";
				
				}

				
			    public String Conta;

				public String getConta () {
					return this.Conta;
				}

				public Boolean ContaIsNullable(){
				    return true;
				}
				public Boolean ContaIsKey(){
				    return false;
				}
				public Integer ContaLength(){
				    return null;
				}
				public Integer ContaPrecision(){
				    return null;
				}
				public String ContaDefault(){
				
					return null;
				
				}
				public String ContaComment(){
				
				    return "";
				
				}
				public String ContaPattern(){
				
					return "";
				
				}
				public String ContaOriginalDbColumnName(){
				
					return "Conta";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public Double Comissao_Liquida;

				public Double getComissao_Liquida () {
					return this.Comissao_Liquida;
				}

				public Boolean Comissao_LiquidaIsNullable(){
				    return true;
				}
				public Boolean Comissao_LiquidaIsKey(){
				    return false;
				}
				public Integer Comissao_LiquidaLength(){
				    return null;
				}
				public Integer Comissao_LiquidaPrecision(){
				    return 2;
				}
				public String Comissao_LiquidaDefault(){
				
					return null;
				
				}
				public String Comissao_LiquidaComment(){
				
				    return "";
				
				}
				public String Comissao_LiquidaPattern(){
				
					return "";
				
				}
				public String Comissao_LiquidaOriginalDbColumnName(){
				
					return "Comissao_Liquida";
				
				}

				
			    public Double desconto;

				public Double getDesconto () {
					return this.desconto;
				}

				public Boolean descontoIsNullable(){
				    return true;
				}
				public Boolean descontoIsKey(){
				    return false;
				}
				public Integer descontoLength(){
				    return null;
				}
				public Integer descontoPrecision(){
				    return 2;
				}
				public String descontoDefault(){
				
					return null;
				
				}
				public String descontoComment(){
				
				    return "";
				
				}
				public String descontoPattern(){
				
					return "";
				
				}
				public String descontoOriginalDbColumnName(){
				
					return "desconto";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.concat == null) ? 0 : this.concat.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row21Struct other = (row21Struct) obj;
		
						if (this.concat == null) {
							if (other.concat != null)
								return false;
						
						} else if (!this.concat.equals(other.concat))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row21Struct other) {

		other.concat = this.concat;
	            other.Conta = this.Conta;
	            other.CategoriaID = this.CategoriaID;
	            other.Categoria = this.Categoria;
	            other.Comissao_Liquida = this.Comissao_Liquida;
	            other.desconto = this.desconto;
	            
	}

	public void copyKeysDataTo(row21Struct other) {

		other.concat = this.concat;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.Conta = readString(dis,ois);
					
						this.CategoriaID = readString(dis,ois);
					
						this.Categoria = readString(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao_Liquida = null;
           				} else {
           			    	this.Comissao_Liquida = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.desconto = null;
           				} else {
           			    	this.desconto = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.Conta = readString(dis,objectIn);
					
						this.CategoriaID = readString(dis,objectIn);
					
						this.Categoria = readString(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.Comissao_Liquida = null;
           				} else {
           			    	this.Comissao_Liquida = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.desconto = null;
           				} else {
           			    	this.desconto = objectIn.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.Conta, dos, oos);
					
						writeString(this.CategoriaID, dos, oos);
					
						writeString(this.Categoria, dos, oos);
					
						if(this.Comissao_Liquida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao_Liquida);
		            	}
					
						if(this.desconto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.desconto);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.Conta, dos, objectOut);
					
						writeString(this.CategoriaID, dos, objectOut);
					
						writeString(this.Categoria, dos, objectOut);
					
						if(this.Comissao_Liquida == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.Comissao_Liquida);
		            	}
					
						if(this.desconto == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.desconto);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("concat="+concat);
		sb.append(",Conta="+Conta);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Categoria="+Categoria);
		sb.append(",Comissao_Liquida="+String.valueOf(Comissao_Liquida));
		sb.append(",desconto="+String.valueOf(desconto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.concat, other.concat);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();




	
	/**
	 * [tAdvancedHash_row21 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row21", false);
		start_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tAdvancedHash_row21 = 0;
		

			   		// connection name:row21
			   		// source node:tHashInput_4 - inputs:(after_tHashInput_1) outputs:(row21,row21) | target node:tAdvancedHash_row21 - inputs:(row21) outputs:()
			   		// linked node: tMap_6 - inputs:(row20,row21) outputs:(copyOfSaida2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row21 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row21Struct> tHash_Lookup_row21 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row21Struct>getLookup(matchingModeEnum_row21);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row21", tHash_Lookup_row21);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row21 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row24Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row24Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row21.concat = next_tHashInput_4.concat;
	row21.Conta = next_tHashInput_4.Conta;
	row21.CategoriaID = next_tHashInput_4.CategoriaID;
	row21.Categoria = next_tHashInput_4.Categoria;
	row21.Comissao_Liquida = next_tHashInput_4.Comissao_Liquida;
	row21.desconto = next_tHashInput_4.desconto;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					


			   
			   

					row21Struct row21_HashRow = new row21Struct();
		   	   	   
				
				row21_HashRow.concat = row21.concat;
				
				row21_HashRow.Conta = row21.Conta;
				
				row21_HashRow.CategoriaID = row21.CategoriaID;
				
				row21_HashRow.Categoria = row21.Categoria;
				
				row21_HashRow.Comissao_Liquida = row21.Comissao_Liquida;
				
				row21_HashRow.desconto = row21.desconto;
				
			tHash_Lookup_row21.put(row21_HashRow);
			
            




 


	tos_count_tAdvancedHash_row21++;

/**
 * [tAdvancedHash_row21 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row21 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

tHash_Lookup_row21.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row21", true);
end_Hash.put("tAdvancedHash_row21", System.currentTimeMillis());




/**
 * [tAdvancedHash_row21 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row21 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row21";
	
	

 



/**
 * [tAdvancedHash_row21 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String RELEASE_DATE;

				public String getRELEASE_DATE () {
					return this.RELEASE_DATE;
				}

				public Boolean RELEASE_DATEIsNullable(){
				    return true;
				}
				public Boolean RELEASE_DATEIsKey(){
				    return false;
				}
				public Integer RELEASE_DATELength(){
				    return null;
				}
				public Integer RELEASE_DATEPrecision(){
				    return null;
				}
				public String RELEASE_DATEDefault(){
				
					return null;
				
				}
				public String RELEASE_DATEComment(){
				
				    return "";
				
				}
				public String RELEASE_DATEPattern(){
				
					return "";
				
				}
				public String RELEASE_DATEOriginalDbColumnName(){
				
					return "RELEASE_DATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				
			    public String EXTERNAL_REFERENCE;

				public String getEXTERNAL_REFERENCE () {
					return this.EXTERNAL_REFERENCE;
				}

				public Boolean EXTERNAL_REFERENCEIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_REFERENCEIsKey(){
				    return false;
				}
				public Integer EXTERNAL_REFERENCELength(){
				    return null;
				}
				public Integer EXTERNAL_REFERENCEPrecision(){
				    return null;
				}
				public String EXTERNAL_REFERENCEDefault(){
				
					return null;
				
				}
				public String EXTERNAL_REFERENCEComment(){
				
				    return "";
				
				}
				public String EXTERNAL_REFERENCEPattern(){
				
					return "";
				
				}
				public String EXTERNAL_REFERENCEOriginalDbColumnName(){
				
					return "EXTERNAL_REFERENCE";
				
				}

				
			    public String RECORD_TYPE;

				public String getRECORD_TYPE () {
					return this.RECORD_TYPE;
				}

				public Boolean RECORD_TYPEIsNullable(){
				    return true;
				}
				public Boolean RECORD_TYPEIsKey(){
				    return false;
				}
				public Integer RECORD_TYPELength(){
				    return null;
				}
				public Integer RECORD_TYPEPrecision(){
				    return null;
				}
				public String RECORD_TYPEDefault(){
				
					return null;
				
				}
				public String RECORD_TYPEComment(){
				
				    return "";
				
				}
				public String RECORD_TYPEPattern(){
				
					return "";
				
				}
				public String RECORD_TYPEOriginalDbColumnName(){
				
					return "RECORD_TYPE";
				
				}

				
			    public String DESCRIPTION;

				public String getDESCRIPTION () {
					return this.DESCRIPTION;
				}

				public Boolean DESCRIPTIONIsNullable(){
				    return true;
				}
				public Boolean DESCRIPTIONIsKey(){
				    return false;
				}
				public Integer DESCRIPTIONLength(){
				    return null;
				}
				public Integer DESCRIPTIONPrecision(){
				    return null;
				}
				public String DESCRIPTIONDefault(){
				
					return null;
				
				}
				public String DESCRIPTIONComment(){
				
				    return "";
				
				}
				public String DESCRIPTIONPattern(){
				
					return "";
				
				}
				public String DESCRIPTIONOriginalDbColumnName(){
				
					return "DESCRIPTION";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				
			    public Double NET_DEBIT_AMOUNT;

				public Double getNET_DEBIT_AMOUNT () {
					return this.NET_DEBIT_AMOUNT;
				}

				public Boolean NET_DEBIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_DEBIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_DEBIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_DEBIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_DEBIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_DEBIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_DEBIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_DEBIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_DEBIT_AMOUNT";
				
				}

				
			    public Double GROSS_AMOUNT;

				public Double getGROSS_AMOUNT () {
					return this.GROSS_AMOUNT;
				}

				public Boolean GROSS_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean GROSS_AMOUNTIsKey(){
				    return false;
				}
				public Integer GROSS_AMOUNTLength(){
				    return null;
				}
				public Integer GROSS_AMOUNTPrecision(){
				    return null;
				}
				public String GROSS_AMOUNTDefault(){
				
					return null;
				
				}
				public String GROSS_AMOUNTComment(){
				
				    return "";
				
				}
				public String GROSS_AMOUNTPattern(){
				
					return "";
				
				}
				public String GROSS_AMOUNTOriginalDbColumnName(){
				
					return "GROSS_AMOUNT";
				
				}

				
			    public Double SELLER_AMOUNT;

				public Double getSELLER_AMOUNT () {
					return this.SELLER_AMOUNT;
				}

				public Boolean SELLER_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SELLER_AMOUNTIsKey(){
				    return false;
				}
				public Integer SELLER_AMOUNTLength(){
				    return null;
				}
				public Integer SELLER_AMOUNTPrecision(){
				    return null;
				}
				public String SELLER_AMOUNTDefault(){
				
					return null;
				
				}
				public String SELLER_AMOUNTComment(){
				
				    return "";
				
				}
				public String SELLER_AMOUNTPattern(){
				
					return "";
				
				}
				public String SELLER_AMOUNTOriginalDbColumnName(){
				
					return "SELLER_AMOUNT";
				
				}

				
			    public Double MP_FEE_AMOUNT;

				public Double getMP_FEE_AMOUNT () {
					return this.MP_FEE_AMOUNT;
				}

				public Boolean MP_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean MP_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer MP_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer MP_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String MP_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String MP_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String MP_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String MP_FEE_AMOUNTOriginalDbColumnName(){
				
					return "MP_FEE_AMOUNT";
				
				}

				
			    public Double FINANCING_FEE_AMOUNT;

				public Double getFINANCING_FEE_AMOUNT () {
					return this.FINANCING_FEE_AMOUNT;
				}

				public Boolean FINANCING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean FINANCING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer FINANCING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer FINANCING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String FINANCING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String FINANCING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String FINANCING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String FINANCING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "FINANCING_FEE_AMOUNT";
				
				}

				
			    public Double SHIPPING_FEE_AMOUNT;

				public Double getSHIPPING_FEE_AMOUNT () {
					return this.SHIPPING_FEE_AMOUNT;
				}

				public Boolean SHIPPING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer SHIPPING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer SHIPPING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String SHIPPING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String SHIPPING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String SHIPPING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String SHIPPING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "SHIPPING_FEE_AMOUNT";
				
				}

				
			    public Double TAXES_AMOUNT;

				public Double getTAXES_AMOUNT () {
					return this.TAXES_AMOUNT;
				}

				public Boolean TAXES_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean TAXES_AMOUNTIsKey(){
				    return false;
				}
				public Integer TAXES_AMOUNTLength(){
				    return null;
				}
				public Integer TAXES_AMOUNTPrecision(){
				    return null;
				}
				public String TAXES_AMOUNTDefault(){
				
					return null;
				
				}
				public String TAXES_AMOUNTComment(){
				
				    return "";
				
				}
				public String TAXES_AMOUNTPattern(){
				
					return "";
				
				}
				public String TAXES_AMOUNTOriginalDbColumnName(){
				
					return "TAXES_AMOUNT";
				
				}

				
			    public Double COUPON_AMOUNT;

				public Double getCOUPON_AMOUNT () {
					return this.COUPON_AMOUNT;
				}

				public Boolean COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String COUPON_AMOUNTOriginalDbColumnName(){
				
					return "COUPON_AMOUNT";
				
				}

				
			    public Integer INSTALLMENTS;

				public Integer getINSTALLMENTS () {
					return this.INSTALLMENTS;
				}

				public Boolean INSTALLMENTSIsNullable(){
				    return true;
				}
				public Boolean INSTALLMENTSIsKey(){
				    return false;
				}
				public Integer INSTALLMENTSLength(){
				    return null;
				}
				public Integer INSTALLMENTSPrecision(){
				    return null;
				}
				public String INSTALLMENTSDefault(){
				
					return null;
				
				}
				public String INSTALLMENTSComment(){
				
				    return "";
				
				}
				public String INSTALLMENTSPattern(){
				
					return "";
				
				}
				public String INSTALLMENTSOriginalDbColumnName(){
				
					return "INSTALLMENTS";
				
				}

				
			    public String PAYMENT_METHOD;

				public String getPAYMENT_METHOD () {
					return this.PAYMENT_METHOD;
				}

				public Boolean PAYMENT_METHODIsNullable(){
				    return true;
				}
				public Boolean PAYMENT_METHODIsKey(){
				    return false;
				}
				public Integer PAYMENT_METHODLength(){
				    return null;
				}
				public Integer PAYMENT_METHODPrecision(){
				    return null;
				}
				public String PAYMENT_METHODDefault(){
				
					return null;
				
				}
				public String PAYMENT_METHODComment(){
				
				    return "";
				
				}
				public String PAYMENT_METHODPattern(){
				
					return "";
				
				}
				public String PAYMENT_METHODOriginalDbColumnName(){
				
					return "PAYMENT_METHOD";
				
				}

				
			    public String TAX_DETAIL;

				public String getTAX_DETAIL () {
					return this.TAX_DETAIL;
				}

				public Boolean TAX_DETAILIsNullable(){
				    return true;
				}
				public Boolean TAX_DETAILIsKey(){
				    return false;
				}
				public Integer TAX_DETAILLength(){
				    return null;
				}
				public Integer TAX_DETAILPrecision(){
				    return null;
				}
				public String TAX_DETAILDefault(){
				
					return null;
				
				}
				public String TAX_DETAILComment(){
				
				    return "";
				
				}
				public String TAX_DETAILPattern(){
				
					return "";
				
				}
				public String TAX_DETAILOriginalDbColumnName(){
				
					return "TAX_DETAIL";
				
				}

				
			    public String TAX_AMOUNT_TELCO;

				public String getTAX_AMOUNT_TELCO () {
					return this.TAX_AMOUNT_TELCO;
				}

				public Boolean TAX_AMOUNT_TELCOIsNullable(){
				    return true;
				}
				public Boolean TAX_AMOUNT_TELCOIsKey(){
				    return false;
				}
				public Integer TAX_AMOUNT_TELCOLength(){
				    return null;
				}
				public Integer TAX_AMOUNT_TELCOPrecision(){
				    return null;
				}
				public String TAX_AMOUNT_TELCODefault(){
				
					return null;
				
				}
				public String TAX_AMOUNT_TELCOComment(){
				
				    return "";
				
				}
				public String TAX_AMOUNT_TELCOPattern(){
				
					return "";
				
				}
				public String TAX_AMOUNT_TELCOOriginalDbColumnName(){
				
					return "TAX_AMOUNT_TELCO";
				
				}

				
			    public String APPROVAL_DATE;

				public String getAPPROVAL_DATE () {
					return this.APPROVAL_DATE;
				}

				public Boolean APPROVAL_DATEIsNullable(){
				    return true;
				}
				public Boolean APPROVAL_DATEIsKey(){
				    return false;
				}
				public Integer APPROVAL_DATELength(){
				    return null;
				}
				public Integer APPROVAL_DATEPrecision(){
				    return null;
				}
				public String APPROVAL_DATEDefault(){
				
					return null;
				
				}
				public String APPROVAL_DATEComment(){
				
				    return "";
				
				}
				public String APPROVAL_DATEPattern(){
				
					return "";
				
				}
				public String APPROVAL_DATEOriginalDbColumnName(){
				
					return "APPROVAL_DATE";
				
				}

				
			    public String POS_ID;

				public String getPOS_ID () {
					return this.POS_ID;
				}

				public Boolean POS_IDIsNullable(){
				    return true;
				}
				public Boolean POS_IDIsKey(){
				    return false;
				}
				public Integer POS_IDLength(){
				    return null;
				}
				public Integer POS_IDPrecision(){
				    return null;
				}
				public String POS_IDDefault(){
				
					return null;
				
				}
				public String POS_IDComment(){
				
				    return "";
				
				}
				public String POS_IDPattern(){
				
					return "";
				
				}
				public String POS_IDOriginalDbColumnName(){
				
					return "POS_ID";
				
				}

				
			    public String POS_NAME;

				public String getPOS_NAME () {
					return this.POS_NAME;
				}

				public Boolean POS_NAMEIsNullable(){
				    return true;
				}
				public Boolean POS_NAMEIsKey(){
				    return false;
				}
				public Integer POS_NAMELength(){
				    return null;
				}
				public Integer POS_NAMEPrecision(){
				    return null;
				}
				public String POS_NAMEDefault(){
				
					return null;
				
				}
				public String POS_NAMEComment(){
				
				    return "";
				
				}
				public String POS_NAMEPattern(){
				
					return "";
				
				}
				public String POS_NAMEOriginalDbColumnName(){
				
					return "POS_NAME";
				
				}

				
			    public String EXTERNAL_POS_ID;

				public String getEXTERNAL_POS_ID () {
					return this.EXTERNAL_POS_ID;
				}

				public Boolean EXTERNAL_POS_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_POS_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_POS_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_POS_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_POS_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_POS_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_POS_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_POS_IDOriginalDbColumnName(){
				
					return "EXTERNAL_POS_ID";
				
				}

				
			    public String STORE_ID;

				public String getSTORE_ID () {
					return this.STORE_ID;
				}

				public Boolean STORE_IDIsNullable(){
				    return true;
				}
				public Boolean STORE_IDIsKey(){
				    return false;
				}
				public Integer STORE_IDLength(){
				    return null;
				}
				public Integer STORE_IDPrecision(){
				    return null;
				}
				public String STORE_IDDefault(){
				
					return null;
				
				}
				public String STORE_IDComment(){
				
				    return "";
				
				}
				public String STORE_IDPattern(){
				
					return "";
				
				}
				public String STORE_IDOriginalDbColumnName(){
				
					return "STORE_ID";
				
				}

				
			    public String STORE_NAME;

				public String getSTORE_NAME () {
					return this.STORE_NAME;
				}

				public Boolean STORE_NAMEIsNullable(){
				    return true;
				}
				public Boolean STORE_NAMEIsKey(){
				    return false;
				}
				public Integer STORE_NAMELength(){
				    return null;
				}
				public Integer STORE_NAMEPrecision(){
				    return null;
				}
				public String STORE_NAMEDefault(){
				
					return null;
				
				}
				public String STORE_NAMEComment(){
				
				    return "";
				
				}
				public String STORE_NAMEPattern(){
				
					return "";
				
				}
				public String STORE_NAMEOriginalDbColumnName(){
				
					return "STORE_NAME";
				
				}

				
			    public String EXTERNAL_STORE_ID;

				public String getEXTERNAL_STORE_ID () {
					return this.EXTERNAL_STORE_ID;
				}

				public Boolean EXTERNAL_STORE_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_STORE_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_STORE_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_STORE_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_STORE_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_STORE_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_STORE_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_STORE_IDOriginalDbColumnName(){
				
					return "EXTERNAL_STORE_ID";
				
				}

				
			    public String CURRENCY;

				public String getCURRENCY () {
					return this.CURRENCY;
				}

				public Boolean CURRENCYIsNullable(){
				    return true;
				}
				public Boolean CURRENCYIsKey(){
				    return false;
				}
				public Integer CURRENCYLength(){
				    return null;
				}
				public Integer CURRENCYPrecision(){
				    return null;
				}
				public String CURRENCYDefault(){
				
					return null;
				
				}
				public String CURRENCYComment(){
				
				    return "";
				
				}
				public String CURRENCYPattern(){
				
					return "";
				
				}
				public String CURRENCYOriginalDbColumnName(){
				
					return "CURRENCY";
				
				}

				
			    public String TAXES_DISAGGREGATED;

				public String getTAXES_DISAGGREGATED () {
					return this.TAXES_DISAGGREGATED;
				}

				public Boolean TAXES_DISAGGREGATEDIsNullable(){
				    return true;
				}
				public Boolean TAXES_DISAGGREGATEDIsKey(){
				    return false;
				}
				public Integer TAXES_DISAGGREGATEDLength(){
				    return null;
				}
				public Integer TAXES_DISAGGREGATEDPrecision(){
				    return null;
				}
				public String TAXES_DISAGGREGATEDDefault(){
				
					return null;
				
				}
				public String TAXES_DISAGGREGATEDComment(){
				
				    return "";
				
				}
				public String TAXES_DISAGGREGATEDPattern(){
				
					return "";
				
				}
				public String TAXES_DISAGGREGATEDOriginalDbColumnName(){
				
					return "TAXES_DISAGGREGATED";
				
				}

				
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public String SHIPMENT_MODE;

				public String getSHIPMENT_MODE () {
					return this.SHIPMENT_MODE;
				}

				public Boolean SHIPMENT_MODEIsNullable(){
				    return true;
				}
				public Boolean SHIPMENT_MODEIsKey(){
				    return false;
				}
				public Integer SHIPMENT_MODELength(){
				    return null;
				}
				public Integer SHIPMENT_MODEPrecision(){
				    return null;
				}
				public String SHIPMENT_MODEDefault(){
				
					return null;
				
				}
				public String SHIPMENT_MODEComment(){
				
				    return "";
				
				}
				public String SHIPMENT_MODEPattern(){
				
					return "";
				
				}
				public String SHIPMENT_MODEOriginalDbColumnName(){
				
					return "SHIPMENT_MODE";
				
				}

				
			    public String ORDER_ID;

				public String getORDER_ID () {
					return this.ORDER_ID;
				}

				public Boolean ORDER_IDIsNullable(){
				    return true;
				}
				public Boolean ORDER_IDIsKey(){
				    return false;
				}
				public Integer ORDER_IDLength(){
				    return null;
				}
				public Integer ORDER_IDPrecision(){
				    return null;
				}
				public String ORDER_IDDefault(){
				
					return null;
				
				}
				public String ORDER_IDComment(){
				
				    return "";
				
				}
				public String ORDER_IDPattern(){
				
					return "";
				
				}
				public String ORDER_IDOriginalDbColumnName(){
				
					return "ORDER_ID";
				
				}

				
			    public String PACK_ID;

				public String getPACK_ID () {
					return this.PACK_ID;
				}

				public Boolean PACK_IDIsNullable(){
				    return true;
				}
				public Boolean PACK_IDIsKey(){
				    return false;
				}
				public Integer PACK_IDLength(){
				    return null;
				}
				public Integer PACK_IDPrecision(){
				    return null;
				}
				public String PACK_IDDefault(){
				
					return null;
				
				}
				public String PACK_IDComment(){
				
				    return "";
				
				}
				public String PACK_IDPattern(){
				
					return "";
				
				}
				public String PACK_IDOriginalDbColumnName(){
				
					return "PACK_ID";
				
				}

				
			    public String METADATA;

				public String getMETADATA () {
					return this.METADATA;
				}

				public Boolean METADATAIsNullable(){
				    return true;
				}
				public Boolean METADATAIsKey(){
				    return false;
				}
				public Integer METADATALength(){
				    return null;
				}
				public Integer METADATAPrecision(){
				    return null;
				}
				public String METADATADefault(){
				
					return null;
				
				}
				public String METADATAComment(){
				
				    return "";
				
				}
				public String METADATAPattern(){
				
					return "";
				
				}
				public String METADATAOriginalDbColumnName(){
				
					return "METADATA";
				
				}

				
			    public String REFUND_ID;

				public String getREFUND_ID () {
					return this.REFUND_ID;
				}

				public Boolean REFUND_IDIsNullable(){
				    return true;
				}
				public Boolean REFUND_IDIsKey(){
				    return false;
				}
				public Integer REFUND_IDLength(){
				    return null;
				}
				public Integer REFUND_IDPrecision(){
				    return null;
				}
				public String REFUND_IDDefault(){
				
					return null;
				
				}
				public String REFUND_IDComment(){
				
				    return "";
				
				}
				public String REFUND_IDPattern(){
				
					return "";
				
				}
				public String REFUND_IDOriginalDbColumnName(){
				
					return "REFUND_ID";
				
				}

				
			    public String EFFECTIVE_COUPON_AMOUNT;

				public String getEFFECTIVE_COUPON_AMOUNT () {
					return this.EFFECTIVE_COUPON_AMOUNT;
				}

				public Boolean EFFECTIVE_COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean EFFECTIVE_COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String EFFECTIVE_COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String EFFECTIVE_COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTOriginalDbColumnName(){
				
					return "EFFECTIVE_COUPON_AMOUNT";
				
				}

				
			    public String POI_ID;

				public String getPOI_ID () {
					return this.POI_ID;
				}

				public Boolean POI_IDIsNullable(){
				    return true;
				}
				public Boolean POI_IDIsKey(){
				    return false;
				}
				public Integer POI_IDLength(){
				    return null;
				}
				public Integer POI_IDPrecision(){
				    return null;
				}
				public String POI_IDDefault(){
				
					return null;
				
				}
				public String POI_IDComment(){
				
				    return "";
				
				}
				public String POI_IDPattern(){
				
					return "";
				
				}
				public String POI_IDOriginalDbColumnName(){
				
					return "POI_ID";
				
				}

				
			    public String CONCAT_FRETE;

				public String getCONCAT_FRETE () {
					return this.CONCAT_FRETE;
				}

				public Boolean CONCAT_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCAT_FRETEIsKey(){
				    return false;
				}
				public Integer CONCAT_FRETELength(){
				    return null;
				}
				public Integer CONCAT_FRETEPrecision(){
				    return null;
				}
				public String CONCAT_FRETEDefault(){
				
					return null;
				
				}
				public String CONCAT_FRETEComment(){
				
				    return "";
				
				}
				public String CONCAT_FRETEPattern(){
				
					return "";
				
				}
				public String CONCAT_FRETEOriginalDbColumnName(){
				
					return "CONCAT_FRETE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = dis.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = dis.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.NET_DEBIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.GROSS_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.GROSS_AMOUNT);
		            	}
					
					// Double
				
						if(this.SELLER_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SELLER_AMOUNT);
		            	}
					
					// Double
				
						if(this.MP_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.FINANCING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.SHIPPING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.TAXES_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TAXES_AMOUNT);
		            	}
					
					// Double
				
						if(this.COUPON_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					// Integer
				
						writeInteger(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SHIPPING_ID);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.NET_DEBIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.GROSS_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.GROSS_AMOUNT);
		            	}
					
					// Double
				
						if(this.SELLER_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SELLER_AMOUNT);
		            	}
					
					// Double
				
						if(this.MP_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.FINANCING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.SHIPPING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.TAXES_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TAXES_AMOUNT);
		            	}
					
					// Double
				
						if(this.COUPON_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					// Integer
				
						writeInteger(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SHIPPING_ID);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("RELEASE_DATE="+RELEASE_DATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
		sb.append(",EXTERNAL_REFERENCE="+EXTERNAL_REFERENCE);
		sb.append(",RECORD_TYPE="+RECORD_TYPE);
		sb.append(",DESCRIPTION="+DESCRIPTION);
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
		sb.append(",NET_DEBIT_AMOUNT="+String.valueOf(NET_DEBIT_AMOUNT));
		sb.append(",GROSS_AMOUNT="+String.valueOf(GROSS_AMOUNT));
		sb.append(",SELLER_AMOUNT="+String.valueOf(SELLER_AMOUNT));
		sb.append(",MP_FEE_AMOUNT="+String.valueOf(MP_FEE_AMOUNT));
		sb.append(",FINANCING_FEE_AMOUNT="+String.valueOf(FINANCING_FEE_AMOUNT));
		sb.append(",SHIPPING_FEE_AMOUNT="+String.valueOf(SHIPPING_FEE_AMOUNT));
		sb.append(",TAXES_AMOUNT="+String.valueOf(TAXES_AMOUNT));
		sb.append(",COUPON_AMOUNT="+String.valueOf(COUPON_AMOUNT));
		sb.append(",INSTALLMENTS="+String.valueOf(INSTALLMENTS));
		sb.append(",PAYMENT_METHOD="+PAYMENT_METHOD);
		sb.append(",TAX_DETAIL="+TAX_DETAIL);
		sb.append(",TAX_AMOUNT_TELCO="+TAX_AMOUNT_TELCO);
		sb.append(",APPROVAL_DATE="+APPROVAL_DATE);
		sb.append(",POS_ID="+POS_ID);
		sb.append(",POS_NAME="+POS_NAME);
		sb.append(",EXTERNAL_POS_ID="+EXTERNAL_POS_ID);
		sb.append(",STORE_ID="+STORE_ID);
		sb.append(",STORE_NAME="+STORE_NAME);
		sb.append(",EXTERNAL_STORE_ID="+EXTERNAL_STORE_ID);
		sb.append(",CURRENCY="+CURRENCY);
		sb.append(",TAXES_DISAGGREGATED="+TAXES_DISAGGREGATED);
		sb.append(",SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",SHIPMENT_MODE="+SHIPMENT_MODE);
		sb.append(",ORDER_ID="+ORDER_ID);
		sb.append(",PACK_ID="+PACK_ID);
		sb.append(",METADATA="+METADATA);
		sb.append(",REFUND_ID="+REFUND_ID);
		sb.append(",EFFECTIVE_COUPON_AMOUNT="+EFFECTIVE_COUPON_AMOUNT);
		sb.append(",POI_ID="+POI_ID);
		sb.append(",CONCAT_FRETE="+CONCAT_FRETE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String RELEASE_DATE;

				public String getRELEASE_DATE () {
					return this.RELEASE_DATE;
				}

				public Boolean RELEASE_DATEIsNullable(){
				    return true;
				}
				public Boolean RELEASE_DATEIsKey(){
				    return false;
				}
				public Integer RELEASE_DATELength(){
				    return null;
				}
				public Integer RELEASE_DATEPrecision(){
				    return null;
				}
				public String RELEASE_DATEDefault(){
				
					return null;
				
				}
				public String RELEASE_DATEComment(){
				
				    return "";
				
				}
				public String RELEASE_DATEPattern(){
				
					return "";
				
				}
				public String RELEASE_DATEOriginalDbColumnName(){
				
					return "RELEASE_DATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				
			    public String EXTERNAL_REFERENCE;

				public String getEXTERNAL_REFERENCE () {
					return this.EXTERNAL_REFERENCE;
				}

				public Boolean EXTERNAL_REFERENCEIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_REFERENCEIsKey(){
				    return false;
				}
				public Integer EXTERNAL_REFERENCELength(){
				    return null;
				}
				public Integer EXTERNAL_REFERENCEPrecision(){
				    return null;
				}
				public String EXTERNAL_REFERENCEDefault(){
				
					return null;
				
				}
				public String EXTERNAL_REFERENCEComment(){
				
				    return "";
				
				}
				public String EXTERNAL_REFERENCEPattern(){
				
					return "";
				
				}
				public String EXTERNAL_REFERENCEOriginalDbColumnName(){
				
					return "EXTERNAL_REFERENCE";
				
				}

				
			    public String RECORD_TYPE;

				public String getRECORD_TYPE () {
					return this.RECORD_TYPE;
				}

				public Boolean RECORD_TYPEIsNullable(){
				    return true;
				}
				public Boolean RECORD_TYPEIsKey(){
				    return false;
				}
				public Integer RECORD_TYPELength(){
				    return null;
				}
				public Integer RECORD_TYPEPrecision(){
				    return null;
				}
				public String RECORD_TYPEDefault(){
				
					return null;
				
				}
				public String RECORD_TYPEComment(){
				
				    return "";
				
				}
				public String RECORD_TYPEPattern(){
				
					return "";
				
				}
				public String RECORD_TYPEOriginalDbColumnName(){
				
					return "RECORD_TYPE";
				
				}

				
			    public String DESCRIPTION;

				public String getDESCRIPTION () {
					return this.DESCRIPTION;
				}

				public Boolean DESCRIPTIONIsNullable(){
				    return true;
				}
				public Boolean DESCRIPTIONIsKey(){
				    return false;
				}
				public Integer DESCRIPTIONLength(){
				    return null;
				}
				public Integer DESCRIPTIONPrecision(){
				    return null;
				}
				public String DESCRIPTIONDefault(){
				
					return null;
				
				}
				public String DESCRIPTIONComment(){
				
				    return "";
				
				}
				public String DESCRIPTIONPattern(){
				
					return "";
				
				}
				public String DESCRIPTIONOriginalDbColumnName(){
				
					return "DESCRIPTION";
				
				}

				
			    public String NET_CREDIT_AMOUNT;

				public String getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				
			    public String NET_DEBIT_AMOUNT;

				public String getNET_DEBIT_AMOUNT () {
					return this.NET_DEBIT_AMOUNT;
				}

				public Boolean NET_DEBIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_DEBIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_DEBIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_DEBIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_DEBIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_DEBIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_DEBIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_DEBIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_DEBIT_AMOUNT";
				
				}

				
			    public String GROSS_AMOUNT;

				public String getGROSS_AMOUNT () {
					return this.GROSS_AMOUNT;
				}

				public Boolean GROSS_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean GROSS_AMOUNTIsKey(){
				    return false;
				}
				public Integer GROSS_AMOUNTLength(){
				    return null;
				}
				public Integer GROSS_AMOUNTPrecision(){
				    return null;
				}
				public String GROSS_AMOUNTDefault(){
				
					return null;
				
				}
				public String GROSS_AMOUNTComment(){
				
				    return "";
				
				}
				public String GROSS_AMOUNTPattern(){
				
					return "";
				
				}
				public String GROSS_AMOUNTOriginalDbColumnName(){
				
					return "GROSS_AMOUNT";
				
				}

				
			    public String SELLER_AMOUNT;

				public String getSELLER_AMOUNT () {
					return this.SELLER_AMOUNT;
				}

				public Boolean SELLER_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SELLER_AMOUNTIsKey(){
				    return false;
				}
				public Integer SELLER_AMOUNTLength(){
				    return null;
				}
				public Integer SELLER_AMOUNTPrecision(){
				    return null;
				}
				public String SELLER_AMOUNTDefault(){
				
					return null;
				
				}
				public String SELLER_AMOUNTComment(){
				
				    return "";
				
				}
				public String SELLER_AMOUNTPattern(){
				
					return "";
				
				}
				public String SELLER_AMOUNTOriginalDbColumnName(){
				
					return "SELLER_AMOUNT";
				
				}

				
			    public String MP_FEE_AMOUNT;

				public String getMP_FEE_AMOUNT () {
					return this.MP_FEE_AMOUNT;
				}

				public Boolean MP_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean MP_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer MP_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer MP_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String MP_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String MP_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String MP_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String MP_FEE_AMOUNTOriginalDbColumnName(){
				
					return "MP_FEE_AMOUNT";
				
				}

				
			    public String FINANCING_FEE_AMOUNT;

				public String getFINANCING_FEE_AMOUNT () {
					return this.FINANCING_FEE_AMOUNT;
				}

				public Boolean FINANCING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean FINANCING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer FINANCING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer FINANCING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String FINANCING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String FINANCING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String FINANCING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String FINANCING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "FINANCING_FEE_AMOUNT";
				
				}

				
			    public String SHIPPING_FEE_AMOUNT;

				public String getSHIPPING_FEE_AMOUNT () {
					return this.SHIPPING_FEE_AMOUNT;
				}

				public Boolean SHIPPING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer SHIPPING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer SHIPPING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String SHIPPING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String SHIPPING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String SHIPPING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String SHIPPING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "SHIPPING_FEE_AMOUNT";
				
				}

				
			    public String TAXES_AMOUNT;

				public String getTAXES_AMOUNT () {
					return this.TAXES_AMOUNT;
				}

				public Boolean TAXES_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean TAXES_AMOUNTIsKey(){
				    return false;
				}
				public Integer TAXES_AMOUNTLength(){
				    return null;
				}
				public Integer TAXES_AMOUNTPrecision(){
				    return null;
				}
				public String TAXES_AMOUNTDefault(){
				
					return null;
				
				}
				public String TAXES_AMOUNTComment(){
				
				    return "";
				
				}
				public String TAXES_AMOUNTPattern(){
				
					return "";
				
				}
				public String TAXES_AMOUNTOriginalDbColumnName(){
				
					return "TAXES_AMOUNT";
				
				}

				
			    public String COUPON_AMOUNT;

				public String getCOUPON_AMOUNT () {
					return this.COUPON_AMOUNT;
				}

				public Boolean COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String COUPON_AMOUNTOriginalDbColumnName(){
				
					return "COUPON_AMOUNT";
				
				}

				
			    public String INSTALLMENTS;

				public String getINSTALLMENTS () {
					return this.INSTALLMENTS;
				}

				public Boolean INSTALLMENTSIsNullable(){
				    return true;
				}
				public Boolean INSTALLMENTSIsKey(){
				    return false;
				}
				public Integer INSTALLMENTSLength(){
				    return null;
				}
				public Integer INSTALLMENTSPrecision(){
				    return null;
				}
				public String INSTALLMENTSDefault(){
				
					return null;
				
				}
				public String INSTALLMENTSComment(){
				
				    return "";
				
				}
				public String INSTALLMENTSPattern(){
				
					return "";
				
				}
				public String INSTALLMENTSOriginalDbColumnName(){
				
					return "INSTALLMENTS";
				
				}

				
			    public String PAYMENT_METHOD;

				public String getPAYMENT_METHOD () {
					return this.PAYMENT_METHOD;
				}

				public Boolean PAYMENT_METHODIsNullable(){
				    return true;
				}
				public Boolean PAYMENT_METHODIsKey(){
				    return false;
				}
				public Integer PAYMENT_METHODLength(){
				    return null;
				}
				public Integer PAYMENT_METHODPrecision(){
				    return null;
				}
				public String PAYMENT_METHODDefault(){
				
					return null;
				
				}
				public String PAYMENT_METHODComment(){
				
				    return "";
				
				}
				public String PAYMENT_METHODPattern(){
				
					return "";
				
				}
				public String PAYMENT_METHODOriginalDbColumnName(){
				
					return "PAYMENT_METHOD";
				
				}

				
			    public String TAX_DETAIL;

				public String getTAX_DETAIL () {
					return this.TAX_DETAIL;
				}

				public Boolean TAX_DETAILIsNullable(){
				    return true;
				}
				public Boolean TAX_DETAILIsKey(){
				    return false;
				}
				public Integer TAX_DETAILLength(){
				    return null;
				}
				public Integer TAX_DETAILPrecision(){
				    return null;
				}
				public String TAX_DETAILDefault(){
				
					return null;
				
				}
				public String TAX_DETAILComment(){
				
				    return "";
				
				}
				public String TAX_DETAILPattern(){
				
					return "";
				
				}
				public String TAX_DETAILOriginalDbColumnName(){
				
					return "TAX_DETAIL";
				
				}

				
			    public String TAX_AMOUNT_TELCO;

				public String getTAX_AMOUNT_TELCO () {
					return this.TAX_AMOUNT_TELCO;
				}

				public Boolean TAX_AMOUNT_TELCOIsNullable(){
				    return true;
				}
				public Boolean TAX_AMOUNT_TELCOIsKey(){
				    return false;
				}
				public Integer TAX_AMOUNT_TELCOLength(){
				    return null;
				}
				public Integer TAX_AMOUNT_TELCOPrecision(){
				    return null;
				}
				public String TAX_AMOUNT_TELCODefault(){
				
					return null;
				
				}
				public String TAX_AMOUNT_TELCOComment(){
				
				    return "";
				
				}
				public String TAX_AMOUNT_TELCOPattern(){
				
					return "";
				
				}
				public String TAX_AMOUNT_TELCOOriginalDbColumnName(){
				
					return "TAX_AMOUNT_TELCO";
				
				}

				
			    public String APPROVAL_DATE;

				public String getAPPROVAL_DATE () {
					return this.APPROVAL_DATE;
				}

				public Boolean APPROVAL_DATEIsNullable(){
				    return true;
				}
				public Boolean APPROVAL_DATEIsKey(){
				    return false;
				}
				public Integer APPROVAL_DATELength(){
				    return null;
				}
				public Integer APPROVAL_DATEPrecision(){
				    return null;
				}
				public String APPROVAL_DATEDefault(){
				
					return null;
				
				}
				public String APPROVAL_DATEComment(){
				
				    return "";
				
				}
				public String APPROVAL_DATEPattern(){
				
					return "";
				
				}
				public String APPROVAL_DATEOriginalDbColumnName(){
				
					return "APPROVAL_DATE";
				
				}

				
			    public String POS_ID;

				public String getPOS_ID () {
					return this.POS_ID;
				}

				public Boolean POS_IDIsNullable(){
				    return true;
				}
				public Boolean POS_IDIsKey(){
				    return false;
				}
				public Integer POS_IDLength(){
				    return null;
				}
				public Integer POS_IDPrecision(){
				    return null;
				}
				public String POS_IDDefault(){
				
					return null;
				
				}
				public String POS_IDComment(){
				
				    return "";
				
				}
				public String POS_IDPattern(){
				
					return "";
				
				}
				public String POS_IDOriginalDbColumnName(){
				
					return "POS_ID";
				
				}

				
			    public String POS_NAME;

				public String getPOS_NAME () {
					return this.POS_NAME;
				}

				public Boolean POS_NAMEIsNullable(){
				    return true;
				}
				public Boolean POS_NAMEIsKey(){
				    return false;
				}
				public Integer POS_NAMELength(){
				    return null;
				}
				public Integer POS_NAMEPrecision(){
				    return null;
				}
				public String POS_NAMEDefault(){
				
					return null;
				
				}
				public String POS_NAMEComment(){
				
				    return "";
				
				}
				public String POS_NAMEPattern(){
				
					return "";
				
				}
				public String POS_NAMEOriginalDbColumnName(){
				
					return "POS_NAME";
				
				}

				
			    public String EXTERNAL_POS_ID;

				public String getEXTERNAL_POS_ID () {
					return this.EXTERNAL_POS_ID;
				}

				public Boolean EXTERNAL_POS_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_POS_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_POS_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_POS_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_POS_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_POS_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_POS_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_POS_IDOriginalDbColumnName(){
				
					return "EXTERNAL_POS_ID";
				
				}

				
			    public String STORE_ID;

				public String getSTORE_ID () {
					return this.STORE_ID;
				}

				public Boolean STORE_IDIsNullable(){
				    return true;
				}
				public Boolean STORE_IDIsKey(){
				    return false;
				}
				public Integer STORE_IDLength(){
				    return null;
				}
				public Integer STORE_IDPrecision(){
				    return null;
				}
				public String STORE_IDDefault(){
				
					return null;
				
				}
				public String STORE_IDComment(){
				
				    return "";
				
				}
				public String STORE_IDPattern(){
				
					return "";
				
				}
				public String STORE_IDOriginalDbColumnName(){
				
					return "STORE_ID";
				
				}

				
			    public String STORE_NAME;

				public String getSTORE_NAME () {
					return this.STORE_NAME;
				}

				public Boolean STORE_NAMEIsNullable(){
				    return true;
				}
				public Boolean STORE_NAMEIsKey(){
				    return false;
				}
				public Integer STORE_NAMELength(){
				    return null;
				}
				public Integer STORE_NAMEPrecision(){
				    return null;
				}
				public String STORE_NAMEDefault(){
				
					return null;
				
				}
				public String STORE_NAMEComment(){
				
				    return "";
				
				}
				public String STORE_NAMEPattern(){
				
					return "";
				
				}
				public String STORE_NAMEOriginalDbColumnName(){
				
					return "STORE_NAME";
				
				}

				
			    public String EXTERNAL_STORE_ID;

				public String getEXTERNAL_STORE_ID () {
					return this.EXTERNAL_STORE_ID;
				}

				public Boolean EXTERNAL_STORE_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_STORE_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_STORE_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_STORE_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_STORE_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_STORE_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_STORE_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_STORE_IDOriginalDbColumnName(){
				
					return "EXTERNAL_STORE_ID";
				
				}

				
			    public String CURRENCY;

				public String getCURRENCY () {
					return this.CURRENCY;
				}

				public Boolean CURRENCYIsNullable(){
				    return true;
				}
				public Boolean CURRENCYIsKey(){
				    return false;
				}
				public Integer CURRENCYLength(){
				    return null;
				}
				public Integer CURRENCYPrecision(){
				    return null;
				}
				public String CURRENCYDefault(){
				
					return null;
				
				}
				public String CURRENCYComment(){
				
				    return "";
				
				}
				public String CURRENCYPattern(){
				
					return "";
				
				}
				public String CURRENCYOriginalDbColumnName(){
				
					return "CURRENCY";
				
				}

				
			    public String TAXES_DISAGGREGATED;

				public String getTAXES_DISAGGREGATED () {
					return this.TAXES_DISAGGREGATED;
				}

				public Boolean TAXES_DISAGGREGATEDIsNullable(){
				    return true;
				}
				public Boolean TAXES_DISAGGREGATEDIsKey(){
				    return false;
				}
				public Integer TAXES_DISAGGREGATEDLength(){
				    return null;
				}
				public Integer TAXES_DISAGGREGATEDPrecision(){
				    return null;
				}
				public String TAXES_DISAGGREGATEDDefault(){
				
					return null;
				
				}
				public String TAXES_DISAGGREGATEDComment(){
				
				    return "";
				
				}
				public String TAXES_DISAGGREGATEDPattern(){
				
					return "";
				
				}
				public String TAXES_DISAGGREGATEDOriginalDbColumnName(){
				
					return "TAXES_DISAGGREGATED";
				
				}

				
			    public String SHIPPING_ID;

				public String getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public String SHIPMENT_MODE;

				public String getSHIPMENT_MODE () {
					return this.SHIPMENT_MODE;
				}

				public Boolean SHIPMENT_MODEIsNullable(){
				    return true;
				}
				public Boolean SHIPMENT_MODEIsKey(){
				    return false;
				}
				public Integer SHIPMENT_MODELength(){
				    return null;
				}
				public Integer SHIPMENT_MODEPrecision(){
				    return null;
				}
				public String SHIPMENT_MODEDefault(){
				
					return null;
				
				}
				public String SHIPMENT_MODEComment(){
				
				    return "";
				
				}
				public String SHIPMENT_MODEPattern(){
				
					return "";
				
				}
				public String SHIPMENT_MODEOriginalDbColumnName(){
				
					return "SHIPMENT_MODE";
				
				}

				
			    public String ORDER_ID;

				public String getORDER_ID () {
					return this.ORDER_ID;
				}

				public Boolean ORDER_IDIsNullable(){
				    return true;
				}
				public Boolean ORDER_IDIsKey(){
				    return false;
				}
				public Integer ORDER_IDLength(){
				    return null;
				}
				public Integer ORDER_IDPrecision(){
				    return null;
				}
				public String ORDER_IDDefault(){
				
					return null;
				
				}
				public String ORDER_IDComment(){
				
				    return "";
				
				}
				public String ORDER_IDPattern(){
				
					return "";
				
				}
				public String ORDER_IDOriginalDbColumnName(){
				
					return "ORDER_ID";
				
				}

				
			    public String PACK_ID;

				public String getPACK_ID () {
					return this.PACK_ID;
				}

				public Boolean PACK_IDIsNullable(){
				    return true;
				}
				public Boolean PACK_IDIsKey(){
				    return false;
				}
				public Integer PACK_IDLength(){
				    return null;
				}
				public Integer PACK_IDPrecision(){
				    return null;
				}
				public String PACK_IDDefault(){
				
					return null;
				
				}
				public String PACK_IDComment(){
				
				    return "";
				
				}
				public String PACK_IDPattern(){
				
					return "";
				
				}
				public String PACK_IDOriginalDbColumnName(){
				
					return "PACK_ID";
				
				}

				
			    public String METADATA;

				public String getMETADATA () {
					return this.METADATA;
				}

				public Boolean METADATAIsNullable(){
				    return true;
				}
				public Boolean METADATAIsKey(){
				    return false;
				}
				public Integer METADATALength(){
				    return null;
				}
				public Integer METADATAPrecision(){
				    return null;
				}
				public String METADATADefault(){
				
					return null;
				
				}
				public String METADATAComment(){
				
				    return "";
				
				}
				public String METADATAPattern(){
				
					return "";
				
				}
				public String METADATAOriginalDbColumnName(){
				
					return "METADATA";
				
				}

				
			    public String REFUND_ID;

				public String getREFUND_ID () {
					return this.REFUND_ID;
				}

				public Boolean REFUND_IDIsNullable(){
				    return true;
				}
				public Boolean REFUND_IDIsKey(){
				    return false;
				}
				public Integer REFUND_IDLength(){
				    return null;
				}
				public Integer REFUND_IDPrecision(){
				    return null;
				}
				public String REFUND_IDDefault(){
				
					return null;
				
				}
				public String REFUND_IDComment(){
				
				    return "";
				
				}
				public String REFUND_IDPattern(){
				
					return "";
				
				}
				public String REFUND_IDOriginalDbColumnName(){
				
					return "REFUND_ID";
				
				}

				
			    public String EFFECTIVE_COUPON_AMOUNT;

				public String getEFFECTIVE_COUPON_AMOUNT () {
					return this.EFFECTIVE_COUPON_AMOUNT;
				}

				public Boolean EFFECTIVE_COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean EFFECTIVE_COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String EFFECTIVE_COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String EFFECTIVE_COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTOriginalDbColumnName(){
				
					return "EFFECTIVE_COUPON_AMOUNT";
				
				}

				
			    public String POI_ID;

				public String getPOI_ID () {
					return this.POI_ID;
				}

				public Boolean POI_IDIsNullable(){
				    return true;
				}
				public Boolean POI_IDIsKey(){
				    return false;
				}
				public Integer POI_IDLength(){
				    return null;
				}
				public Integer POI_IDPrecision(){
				    return null;
				}
				public String POI_IDDefault(){
				
					return null;
				
				}
				public String POI_IDComment(){
				
				    return "";
				
				}
				public String POI_IDPattern(){
				
					return "";
				
				}
				public String POI_IDOriginalDbColumnName(){
				
					return "POI_ID";
				
				}

				
			    public String CONCAT_FRETE;

				public String getCONCAT_FRETE () {
					return this.CONCAT_FRETE;
				}

				public Boolean CONCAT_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCAT_FRETEIsKey(){
				    return false;
				}
				public Integer CONCAT_FRETELength(){
				    return null;
				}
				public Integer CONCAT_FRETEPrecision(){
				    return null;
				}
				public String CONCAT_FRETEDefault(){
				
					return null;
				
				}
				public String CONCAT_FRETEComment(){
				
				    return "";
				
				}
				public String CONCAT_FRETEPattern(){
				
					return "";
				
				}
				public String CONCAT_FRETEOriginalDbColumnName(){
				
					return "CONCAT_FRETE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
					this.NET_CREDIT_AMOUNT = readString(dis);
					
					this.NET_DEBIT_AMOUNT = readString(dis);
					
					this.GROSS_AMOUNT = readString(dis);
					
					this.SELLER_AMOUNT = readString(dis);
					
					this.MP_FEE_AMOUNT = readString(dis);
					
					this.FINANCING_FEE_AMOUNT = readString(dis);
					
					this.SHIPPING_FEE_AMOUNT = readString(dis);
					
					this.TAXES_AMOUNT = readString(dis);
					
					this.COUPON_AMOUNT = readString(dis);
					
					this.INSTALLMENTS = readString(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
					this.SHIPPING_ID = readString(dis);
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
					this.NET_CREDIT_AMOUNT = readString(dis);
					
					this.NET_DEBIT_AMOUNT = readString(dis);
					
					this.GROSS_AMOUNT = readString(dis);
					
					this.SELLER_AMOUNT = readString(dis);
					
					this.MP_FEE_AMOUNT = readString(dis);
					
					this.FINANCING_FEE_AMOUNT = readString(dis);
					
					this.SHIPPING_FEE_AMOUNT = readString(dis);
					
					this.TAXES_AMOUNT = readString(dis);
					
					this.COUPON_AMOUNT = readString(dis);
					
					this.INSTALLMENTS = readString(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
					this.SHIPPING_ID = readString(dis);
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// String
				
						writeString(this.NET_CREDIT_AMOUNT,dos);
					
					// String
				
						writeString(this.NET_DEBIT_AMOUNT,dos);
					
					// String
				
						writeString(this.GROSS_AMOUNT,dos);
					
					// String
				
						writeString(this.SELLER_AMOUNT,dos);
					
					// String
				
						writeString(this.MP_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.FINANCING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.SHIPPING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.TAXES_AMOUNT,dos);
					
					// String
				
						writeString(this.COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// String
				
						writeString(this.SHIPPING_ID,dos);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// String
				
						writeString(this.NET_CREDIT_AMOUNT,dos);
					
					// String
				
						writeString(this.NET_DEBIT_AMOUNT,dos);
					
					// String
				
						writeString(this.GROSS_AMOUNT,dos);
					
					// String
				
						writeString(this.SELLER_AMOUNT,dos);
					
					// String
				
						writeString(this.MP_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.FINANCING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.SHIPPING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.TAXES_AMOUNT,dos);
					
					// String
				
						writeString(this.COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// String
				
						writeString(this.SHIPPING_ID,dos);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("RELEASE_DATE="+RELEASE_DATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
		sb.append(",EXTERNAL_REFERENCE="+EXTERNAL_REFERENCE);
		sb.append(",RECORD_TYPE="+RECORD_TYPE);
		sb.append(",DESCRIPTION="+DESCRIPTION);
		sb.append(",NET_CREDIT_AMOUNT="+NET_CREDIT_AMOUNT);
		sb.append(",NET_DEBIT_AMOUNT="+NET_DEBIT_AMOUNT);
		sb.append(",GROSS_AMOUNT="+GROSS_AMOUNT);
		sb.append(",SELLER_AMOUNT="+SELLER_AMOUNT);
		sb.append(",MP_FEE_AMOUNT="+MP_FEE_AMOUNT);
		sb.append(",FINANCING_FEE_AMOUNT="+FINANCING_FEE_AMOUNT);
		sb.append(",SHIPPING_FEE_AMOUNT="+SHIPPING_FEE_AMOUNT);
		sb.append(",TAXES_AMOUNT="+TAXES_AMOUNT);
		sb.append(",COUPON_AMOUNT="+COUPON_AMOUNT);
		sb.append(",INSTALLMENTS="+INSTALLMENTS);
		sb.append(",PAYMENT_METHOD="+PAYMENT_METHOD);
		sb.append(",TAX_DETAIL="+TAX_DETAIL);
		sb.append(",TAX_AMOUNT_TELCO="+TAX_AMOUNT_TELCO);
		sb.append(",APPROVAL_DATE="+APPROVAL_DATE);
		sb.append(",POS_ID="+POS_ID);
		sb.append(",POS_NAME="+POS_NAME);
		sb.append(",EXTERNAL_POS_ID="+EXTERNAL_POS_ID);
		sb.append(",STORE_ID="+STORE_ID);
		sb.append(",STORE_NAME="+STORE_NAME);
		sb.append(",EXTERNAL_STORE_ID="+EXTERNAL_STORE_ID);
		sb.append(",CURRENCY="+CURRENCY);
		sb.append(",TAXES_DISAGGREGATED="+TAXES_DISAGGREGATED);
		sb.append(",SHIPPING_ID="+SHIPPING_ID);
		sb.append(",SHIPMENT_MODE="+SHIPMENT_MODE);
		sb.append(",ORDER_ID="+ORDER_ID);
		sb.append(",PACK_ID="+PACK_ID);
		sb.append(",METADATA="+METADATA);
		sb.append(",REFUND_ID="+REFUND_ID);
		sb.append(",EFFECTIVE_COUPON_AMOUNT="+EFFECTIVE_COUPON_AMOUNT);
		sb.append(",POI_ID="+POI_ID);
		sb.append(",CONCAT_FRETE="+CONCAT_FRETE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida12Struct implements routines.system.IPersistableRow<saida12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String RELEASE_DATE;

				public String getRELEASE_DATE () {
					return this.RELEASE_DATE;
				}

				public Boolean RELEASE_DATEIsNullable(){
				    return true;
				}
				public Boolean RELEASE_DATEIsKey(){
				    return false;
				}
				public Integer RELEASE_DATELength(){
				    return null;
				}
				public Integer RELEASE_DATEPrecision(){
				    return null;
				}
				public String RELEASE_DATEDefault(){
				
					return null;
				
				}
				public String RELEASE_DATEComment(){
				
				    return "";
				
				}
				public String RELEASE_DATEPattern(){
				
					return "";
				
				}
				public String RELEASE_DATEOriginalDbColumnName(){
				
					return "RELEASE_DATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				
			    public String EXTERNAL_REFERENCE;

				public String getEXTERNAL_REFERENCE () {
					return this.EXTERNAL_REFERENCE;
				}

				public Boolean EXTERNAL_REFERENCEIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_REFERENCEIsKey(){
				    return false;
				}
				public Integer EXTERNAL_REFERENCELength(){
				    return null;
				}
				public Integer EXTERNAL_REFERENCEPrecision(){
				    return null;
				}
				public String EXTERNAL_REFERENCEDefault(){
				
					return null;
				
				}
				public String EXTERNAL_REFERENCEComment(){
				
				    return "";
				
				}
				public String EXTERNAL_REFERENCEPattern(){
				
					return "";
				
				}
				public String EXTERNAL_REFERENCEOriginalDbColumnName(){
				
					return "EXTERNAL_REFERENCE";
				
				}

				
			    public String RECORD_TYPE;

				public String getRECORD_TYPE () {
					return this.RECORD_TYPE;
				}

				public Boolean RECORD_TYPEIsNullable(){
				    return true;
				}
				public Boolean RECORD_TYPEIsKey(){
				    return false;
				}
				public Integer RECORD_TYPELength(){
				    return null;
				}
				public Integer RECORD_TYPEPrecision(){
				    return null;
				}
				public String RECORD_TYPEDefault(){
				
					return null;
				
				}
				public String RECORD_TYPEComment(){
				
				    return "";
				
				}
				public String RECORD_TYPEPattern(){
				
					return "";
				
				}
				public String RECORD_TYPEOriginalDbColumnName(){
				
					return "RECORD_TYPE";
				
				}

				
			    public String DESCRIPTION;

				public String getDESCRIPTION () {
					return this.DESCRIPTION;
				}

				public Boolean DESCRIPTIONIsNullable(){
				    return true;
				}
				public Boolean DESCRIPTIONIsKey(){
				    return false;
				}
				public Integer DESCRIPTIONLength(){
				    return null;
				}
				public Integer DESCRIPTIONPrecision(){
				    return null;
				}
				public String DESCRIPTIONDefault(){
				
					return null;
				
				}
				public String DESCRIPTIONComment(){
				
				    return "";
				
				}
				public String DESCRIPTIONPattern(){
				
					return "";
				
				}
				public String DESCRIPTIONOriginalDbColumnName(){
				
					return "DESCRIPTION";
				
				}

				
			    public String NET_CREDIT_AMOUNT;

				public String getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				
			    public String NET_DEBIT_AMOUNT;

				public String getNET_DEBIT_AMOUNT () {
					return this.NET_DEBIT_AMOUNT;
				}

				public Boolean NET_DEBIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_DEBIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_DEBIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_DEBIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_DEBIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_DEBIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_DEBIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_DEBIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_DEBIT_AMOUNT";
				
				}

				
			    public String GROSS_AMOUNT;

				public String getGROSS_AMOUNT () {
					return this.GROSS_AMOUNT;
				}

				public Boolean GROSS_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean GROSS_AMOUNTIsKey(){
				    return false;
				}
				public Integer GROSS_AMOUNTLength(){
				    return null;
				}
				public Integer GROSS_AMOUNTPrecision(){
				    return null;
				}
				public String GROSS_AMOUNTDefault(){
				
					return null;
				
				}
				public String GROSS_AMOUNTComment(){
				
				    return "";
				
				}
				public String GROSS_AMOUNTPattern(){
				
					return "";
				
				}
				public String GROSS_AMOUNTOriginalDbColumnName(){
				
					return "GROSS_AMOUNT";
				
				}

				
			    public String SELLER_AMOUNT;

				public String getSELLER_AMOUNT () {
					return this.SELLER_AMOUNT;
				}

				public Boolean SELLER_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SELLER_AMOUNTIsKey(){
				    return false;
				}
				public Integer SELLER_AMOUNTLength(){
				    return null;
				}
				public Integer SELLER_AMOUNTPrecision(){
				    return null;
				}
				public String SELLER_AMOUNTDefault(){
				
					return null;
				
				}
				public String SELLER_AMOUNTComment(){
				
				    return "";
				
				}
				public String SELLER_AMOUNTPattern(){
				
					return "";
				
				}
				public String SELLER_AMOUNTOriginalDbColumnName(){
				
					return "SELLER_AMOUNT";
				
				}

				
			    public String MP_FEE_AMOUNT;

				public String getMP_FEE_AMOUNT () {
					return this.MP_FEE_AMOUNT;
				}

				public Boolean MP_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean MP_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer MP_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer MP_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String MP_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String MP_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String MP_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String MP_FEE_AMOUNTOriginalDbColumnName(){
				
					return "MP_FEE_AMOUNT";
				
				}

				
			    public String FINANCING_FEE_AMOUNT;

				public String getFINANCING_FEE_AMOUNT () {
					return this.FINANCING_FEE_AMOUNT;
				}

				public Boolean FINANCING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean FINANCING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer FINANCING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer FINANCING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String FINANCING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String FINANCING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String FINANCING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String FINANCING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "FINANCING_FEE_AMOUNT";
				
				}

				
			    public String SHIPPING_FEE_AMOUNT;

				public String getSHIPPING_FEE_AMOUNT () {
					return this.SHIPPING_FEE_AMOUNT;
				}

				public Boolean SHIPPING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer SHIPPING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer SHIPPING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String SHIPPING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String SHIPPING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String SHIPPING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String SHIPPING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "SHIPPING_FEE_AMOUNT";
				
				}

				
			    public String TAXES_AMOUNT;

				public String getTAXES_AMOUNT () {
					return this.TAXES_AMOUNT;
				}

				public Boolean TAXES_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean TAXES_AMOUNTIsKey(){
				    return false;
				}
				public Integer TAXES_AMOUNTLength(){
				    return null;
				}
				public Integer TAXES_AMOUNTPrecision(){
				    return null;
				}
				public String TAXES_AMOUNTDefault(){
				
					return null;
				
				}
				public String TAXES_AMOUNTComment(){
				
				    return "";
				
				}
				public String TAXES_AMOUNTPattern(){
				
					return "";
				
				}
				public String TAXES_AMOUNTOriginalDbColumnName(){
				
					return "TAXES_AMOUNT";
				
				}

				
			    public String COUPON_AMOUNT;

				public String getCOUPON_AMOUNT () {
					return this.COUPON_AMOUNT;
				}

				public Boolean COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String COUPON_AMOUNTOriginalDbColumnName(){
				
					return "COUPON_AMOUNT";
				
				}

				
			    public String INSTALLMENTS;

				public String getINSTALLMENTS () {
					return this.INSTALLMENTS;
				}

				public Boolean INSTALLMENTSIsNullable(){
				    return true;
				}
				public Boolean INSTALLMENTSIsKey(){
				    return false;
				}
				public Integer INSTALLMENTSLength(){
				    return null;
				}
				public Integer INSTALLMENTSPrecision(){
				    return null;
				}
				public String INSTALLMENTSDefault(){
				
					return null;
				
				}
				public String INSTALLMENTSComment(){
				
				    return "";
				
				}
				public String INSTALLMENTSPattern(){
				
					return "";
				
				}
				public String INSTALLMENTSOriginalDbColumnName(){
				
					return "INSTALLMENTS";
				
				}

				
			    public String PAYMENT_METHOD;

				public String getPAYMENT_METHOD () {
					return this.PAYMENT_METHOD;
				}

				public Boolean PAYMENT_METHODIsNullable(){
				    return true;
				}
				public Boolean PAYMENT_METHODIsKey(){
				    return false;
				}
				public Integer PAYMENT_METHODLength(){
				    return null;
				}
				public Integer PAYMENT_METHODPrecision(){
				    return null;
				}
				public String PAYMENT_METHODDefault(){
				
					return null;
				
				}
				public String PAYMENT_METHODComment(){
				
				    return "";
				
				}
				public String PAYMENT_METHODPattern(){
				
					return "";
				
				}
				public String PAYMENT_METHODOriginalDbColumnName(){
				
					return "PAYMENT_METHOD";
				
				}

				
			    public String TAX_DETAIL;

				public String getTAX_DETAIL () {
					return this.TAX_DETAIL;
				}

				public Boolean TAX_DETAILIsNullable(){
				    return true;
				}
				public Boolean TAX_DETAILIsKey(){
				    return false;
				}
				public Integer TAX_DETAILLength(){
				    return null;
				}
				public Integer TAX_DETAILPrecision(){
				    return null;
				}
				public String TAX_DETAILDefault(){
				
					return null;
				
				}
				public String TAX_DETAILComment(){
				
				    return "";
				
				}
				public String TAX_DETAILPattern(){
				
					return "";
				
				}
				public String TAX_DETAILOriginalDbColumnName(){
				
					return "TAX_DETAIL";
				
				}

				
			    public String TAX_AMOUNT_TELCO;

				public String getTAX_AMOUNT_TELCO () {
					return this.TAX_AMOUNT_TELCO;
				}

				public Boolean TAX_AMOUNT_TELCOIsNullable(){
				    return true;
				}
				public Boolean TAX_AMOUNT_TELCOIsKey(){
				    return false;
				}
				public Integer TAX_AMOUNT_TELCOLength(){
				    return null;
				}
				public Integer TAX_AMOUNT_TELCOPrecision(){
				    return null;
				}
				public String TAX_AMOUNT_TELCODefault(){
				
					return null;
				
				}
				public String TAX_AMOUNT_TELCOComment(){
				
				    return "";
				
				}
				public String TAX_AMOUNT_TELCOPattern(){
				
					return "";
				
				}
				public String TAX_AMOUNT_TELCOOriginalDbColumnName(){
				
					return "TAX_AMOUNT_TELCO";
				
				}

				
			    public String APPROVAL_DATE;

				public String getAPPROVAL_DATE () {
					return this.APPROVAL_DATE;
				}

				public Boolean APPROVAL_DATEIsNullable(){
				    return true;
				}
				public Boolean APPROVAL_DATEIsKey(){
				    return false;
				}
				public Integer APPROVAL_DATELength(){
				    return null;
				}
				public Integer APPROVAL_DATEPrecision(){
				    return null;
				}
				public String APPROVAL_DATEDefault(){
				
					return null;
				
				}
				public String APPROVAL_DATEComment(){
				
				    return "";
				
				}
				public String APPROVAL_DATEPattern(){
				
					return "";
				
				}
				public String APPROVAL_DATEOriginalDbColumnName(){
				
					return "APPROVAL_DATE";
				
				}

				
			    public String POS_ID;

				public String getPOS_ID () {
					return this.POS_ID;
				}

				public Boolean POS_IDIsNullable(){
				    return true;
				}
				public Boolean POS_IDIsKey(){
				    return false;
				}
				public Integer POS_IDLength(){
				    return null;
				}
				public Integer POS_IDPrecision(){
				    return null;
				}
				public String POS_IDDefault(){
				
					return null;
				
				}
				public String POS_IDComment(){
				
				    return "";
				
				}
				public String POS_IDPattern(){
				
					return "";
				
				}
				public String POS_IDOriginalDbColumnName(){
				
					return "POS_ID";
				
				}

				
			    public String POS_NAME;

				public String getPOS_NAME () {
					return this.POS_NAME;
				}

				public Boolean POS_NAMEIsNullable(){
				    return true;
				}
				public Boolean POS_NAMEIsKey(){
				    return false;
				}
				public Integer POS_NAMELength(){
				    return null;
				}
				public Integer POS_NAMEPrecision(){
				    return null;
				}
				public String POS_NAMEDefault(){
				
					return null;
				
				}
				public String POS_NAMEComment(){
				
				    return "";
				
				}
				public String POS_NAMEPattern(){
				
					return "";
				
				}
				public String POS_NAMEOriginalDbColumnName(){
				
					return "POS_NAME";
				
				}

				
			    public String EXTERNAL_POS_ID;

				public String getEXTERNAL_POS_ID () {
					return this.EXTERNAL_POS_ID;
				}

				public Boolean EXTERNAL_POS_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_POS_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_POS_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_POS_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_POS_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_POS_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_POS_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_POS_IDOriginalDbColumnName(){
				
					return "EXTERNAL_POS_ID";
				
				}

				
			    public String STORE_ID;

				public String getSTORE_ID () {
					return this.STORE_ID;
				}

				public Boolean STORE_IDIsNullable(){
				    return true;
				}
				public Boolean STORE_IDIsKey(){
				    return false;
				}
				public Integer STORE_IDLength(){
				    return null;
				}
				public Integer STORE_IDPrecision(){
				    return null;
				}
				public String STORE_IDDefault(){
				
					return null;
				
				}
				public String STORE_IDComment(){
				
				    return "";
				
				}
				public String STORE_IDPattern(){
				
					return "";
				
				}
				public String STORE_IDOriginalDbColumnName(){
				
					return "STORE_ID";
				
				}

				
			    public String STORE_NAME;

				public String getSTORE_NAME () {
					return this.STORE_NAME;
				}

				public Boolean STORE_NAMEIsNullable(){
				    return true;
				}
				public Boolean STORE_NAMEIsKey(){
				    return false;
				}
				public Integer STORE_NAMELength(){
				    return null;
				}
				public Integer STORE_NAMEPrecision(){
				    return null;
				}
				public String STORE_NAMEDefault(){
				
					return null;
				
				}
				public String STORE_NAMEComment(){
				
				    return "";
				
				}
				public String STORE_NAMEPattern(){
				
					return "";
				
				}
				public String STORE_NAMEOriginalDbColumnName(){
				
					return "STORE_NAME";
				
				}

				
			    public String EXTERNAL_STORE_ID;

				public String getEXTERNAL_STORE_ID () {
					return this.EXTERNAL_STORE_ID;
				}

				public Boolean EXTERNAL_STORE_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_STORE_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_STORE_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_STORE_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_STORE_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_STORE_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_STORE_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_STORE_IDOriginalDbColumnName(){
				
					return "EXTERNAL_STORE_ID";
				
				}

				
			    public String CURRENCY;

				public String getCURRENCY () {
					return this.CURRENCY;
				}

				public Boolean CURRENCYIsNullable(){
				    return true;
				}
				public Boolean CURRENCYIsKey(){
				    return false;
				}
				public Integer CURRENCYLength(){
				    return null;
				}
				public Integer CURRENCYPrecision(){
				    return null;
				}
				public String CURRENCYDefault(){
				
					return null;
				
				}
				public String CURRENCYComment(){
				
				    return "";
				
				}
				public String CURRENCYPattern(){
				
					return "";
				
				}
				public String CURRENCYOriginalDbColumnName(){
				
					return "CURRENCY";
				
				}

				
			    public String TAXES_DISAGGREGATED;

				public String getTAXES_DISAGGREGATED () {
					return this.TAXES_DISAGGREGATED;
				}

				public Boolean TAXES_DISAGGREGATEDIsNullable(){
				    return true;
				}
				public Boolean TAXES_DISAGGREGATEDIsKey(){
				    return false;
				}
				public Integer TAXES_DISAGGREGATEDLength(){
				    return null;
				}
				public Integer TAXES_DISAGGREGATEDPrecision(){
				    return null;
				}
				public String TAXES_DISAGGREGATEDDefault(){
				
					return null;
				
				}
				public String TAXES_DISAGGREGATEDComment(){
				
				    return "";
				
				}
				public String TAXES_DISAGGREGATEDPattern(){
				
					return "";
				
				}
				public String TAXES_DISAGGREGATEDOriginalDbColumnName(){
				
					return "TAXES_DISAGGREGATED";
				
				}

				
			    public String SHIPPING_ID;

				public String getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public String SHIPMENT_MODE;

				public String getSHIPMENT_MODE () {
					return this.SHIPMENT_MODE;
				}

				public Boolean SHIPMENT_MODEIsNullable(){
				    return true;
				}
				public Boolean SHIPMENT_MODEIsKey(){
				    return false;
				}
				public Integer SHIPMENT_MODELength(){
				    return null;
				}
				public Integer SHIPMENT_MODEPrecision(){
				    return null;
				}
				public String SHIPMENT_MODEDefault(){
				
					return null;
				
				}
				public String SHIPMENT_MODEComment(){
				
				    return "";
				
				}
				public String SHIPMENT_MODEPattern(){
				
					return "";
				
				}
				public String SHIPMENT_MODEOriginalDbColumnName(){
				
					return "SHIPMENT_MODE";
				
				}

				
			    public String ORDER_ID;

				public String getORDER_ID () {
					return this.ORDER_ID;
				}

				public Boolean ORDER_IDIsNullable(){
				    return true;
				}
				public Boolean ORDER_IDIsKey(){
				    return false;
				}
				public Integer ORDER_IDLength(){
				    return null;
				}
				public Integer ORDER_IDPrecision(){
				    return null;
				}
				public String ORDER_IDDefault(){
				
					return null;
				
				}
				public String ORDER_IDComment(){
				
				    return "";
				
				}
				public String ORDER_IDPattern(){
				
					return "";
				
				}
				public String ORDER_IDOriginalDbColumnName(){
				
					return "ORDER_ID";
				
				}

				
			    public String PACK_ID;

				public String getPACK_ID () {
					return this.PACK_ID;
				}

				public Boolean PACK_IDIsNullable(){
				    return true;
				}
				public Boolean PACK_IDIsKey(){
				    return false;
				}
				public Integer PACK_IDLength(){
				    return null;
				}
				public Integer PACK_IDPrecision(){
				    return null;
				}
				public String PACK_IDDefault(){
				
					return null;
				
				}
				public String PACK_IDComment(){
				
				    return "";
				
				}
				public String PACK_IDPattern(){
				
					return "";
				
				}
				public String PACK_IDOriginalDbColumnName(){
				
					return "PACK_ID";
				
				}

				
			    public String METADATA;

				public String getMETADATA () {
					return this.METADATA;
				}

				public Boolean METADATAIsNullable(){
				    return true;
				}
				public Boolean METADATAIsKey(){
				    return false;
				}
				public Integer METADATALength(){
				    return null;
				}
				public Integer METADATAPrecision(){
				    return null;
				}
				public String METADATADefault(){
				
					return null;
				
				}
				public String METADATAComment(){
				
				    return "";
				
				}
				public String METADATAPattern(){
				
					return "";
				
				}
				public String METADATAOriginalDbColumnName(){
				
					return "METADATA";
				
				}

				
			    public String REFUND_ID;

				public String getREFUND_ID () {
					return this.REFUND_ID;
				}

				public Boolean REFUND_IDIsNullable(){
				    return true;
				}
				public Boolean REFUND_IDIsKey(){
				    return false;
				}
				public Integer REFUND_IDLength(){
				    return null;
				}
				public Integer REFUND_IDPrecision(){
				    return null;
				}
				public String REFUND_IDDefault(){
				
					return null;
				
				}
				public String REFUND_IDComment(){
				
				    return "";
				
				}
				public String REFUND_IDPattern(){
				
					return "";
				
				}
				public String REFUND_IDOriginalDbColumnName(){
				
					return "REFUND_ID";
				
				}

				
			    public String EFFECTIVE_COUPON_AMOUNT;

				public String getEFFECTIVE_COUPON_AMOUNT () {
					return this.EFFECTIVE_COUPON_AMOUNT;
				}

				public Boolean EFFECTIVE_COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean EFFECTIVE_COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String EFFECTIVE_COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String EFFECTIVE_COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTOriginalDbColumnName(){
				
					return "EFFECTIVE_COUPON_AMOUNT";
				
				}

				
			    public String POI_ID;

				public String getPOI_ID () {
					return this.POI_ID;
				}

				public Boolean POI_IDIsNullable(){
				    return true;
				}
				public Boolean POI_IDIsKey(){
				    return false;
				}
				public Integer POI_IDLength(){
				    return null;
				}
				public Integer POI_IDPrecision(){
				    return null;
				}
				public String POI_IDDefault(){
				
					return null;
				
				}
				public String POI_IDComment(){
				
				    return "";
				
				}
				public String POI_IDPattern(){
				
					return "";
				
				}
				public String POI_IDOriginalDbColumnName(){
				
					return "POI_ID";
				
				}

				
			    public String CONCAT_FRETE;

				public String getCONCAT_FRETE () {
					return this.CONCAT_FRETE;
				}

				public Boolean CONCAT_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCAT_FRETEIsKey(){
				    return false;
				}
				public Integer CONCAT_FRETELength(){
				    return null;
				}
				public Integer CONCAT_FRETEPrecision(){
				    return null;
				}
				public String CONCAT_FRETEDefault(){
				
					return null;
				
				}
				public String CONCAT_FRETEComment(){
				
				    return "";
				
				}
				public String CONCAT_FRETEPattern(){
				
					return "";
				
				}
				public String CONCAT_FRETEOriginalDbColumnName(){
				
					return "CONCAT_FRETE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
					this.NET_CREDIT_AMOUNT = readString(dis);
					
					this.NET_DEBIT_AMOUNT = readString(dis);
					
					this.GROSS_AMOUNT = readString(dis);
					
					this.SELLER_AMOUNT = readString(dis);
					
					this.MP_FEE_AMOUNT = readString(dis);
					
					this.FINANCING_FEE_AMOUNT = readString(dis);
					
					this.SHIPPING_FEE_AMOUNT = readString(dis);
					
					this.TAXES_AMOUNT = readString(dis);
					
					this.COUPON_AMOUNT = readString(dis);
					
					this.INSTALLMENTS = readString(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
					this.SHIPPING_ID = readString(dis);
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
					this.NET_CREDIT_AMOUNT = readString(dis);
					
					this.NET_DEBIT_AMOUNT = readString(dis);
					
					this.GROSS_AMOUNT = readString(dis);
					
					this.SELLER_AMOUNT = readString(dis);
					
					this.MP_FEE_AMOUNT = readString(dis);
					
					this.FINANCING_FEE_AMOUNT = readString(dis);
					
					this.SHIPPING_FEE_AMOUNT = readString(dis);
					
					this.TAXES_AMOUNT = readString(dis);
					
					this.COUPON_AMOUNT = readString(dis);
					
					this.INSTALLMENTS = readString(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
					this.SHIPPING_ID = readString(dis);
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// String
				
						writeString(this.NET_CREDIT_AMOUNT,dos);
					
					// String
				
						writeString(this.NET_DEBIT_AMOUNT,dos);
					
					// String
				
						writeString(this.GROSS_AMOUNT,dos);
					
					// String
				
						writeString(this.SELLER_AMOUNT,dos);
					
					// String
				
						writeString(this.MP_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.FINANCING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.SHIPPING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.TAXES_AMOUNT,dos);
					
					// String
				
						writeString(this.COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// String
				
						writeString(this.SHIPPING_ID,dos);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// String
				
						writeString(this.NET_CREDIT_AMOUNT,dos);
					
					// String
				
						writeString(this.NET_DEBIT_AMOUNT,dos);
					
					// String
				
						writeString(this.GROSS_AMOUNT,dos);
					
					// String
				
						writeString(this.SELLER_AMOUNT,dos);
					
					// String
				
						writeString(this.MP_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.FINANCING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.SHIPPING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.TAXES_AMOUNT,dos);
					
					// String
				
						writeString(this.COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// String
				
						writeString(this.SHIPPING_ID,dos);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("RELEASE_DATE="+RELEASE_DATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
		sb.append(",EXTERNAL_REFERENCE="+EXTERNAL_REFERENCE);
		sb.append(",RECORD_TYPE="+RECORD_TYPE);
		sb.append(",DESCRIPTION="+DESCRIPTION);
		sb.append(",NET_CREDIT_AMOUNT="+NET_CREDIT_AMOUNT);
		sb.append(",NET_DEBIT_AMOUNT="+NET_DEBIT_AMOUNT);
		sb.append(",GROSS_AMOUNT="+GROSS_AMOUNT);
		sb.append(",SELLER_AMOUNT="+SELLER_AMOUNT);
		sb.append(",MP_FEE_AMOUNT="+MP_FEE_AMOUNT);
		sb.append(",FINANCING_FEE_AMOUNT="+FINANCING_FEE_AMOUNT);
		sb.append(",SHIPPING_FEE_AMOUNT="+SHIPPING_FEE_AMOUNT);
		sb.append(",TAXES_AMOUNT="+TAXES_AMOUNT);
		sb.append(",COUPON_AMOUNT="+COUPON_AMOUNT);
		sb.append(",INSTALLMENTS="+INSTALLMENTS);
		sb.append(",PAYMENT_METHOD="+PAYMENT_METHOD);
		sb.append(",TAX_DETAIL="+TAX_DETAIL);
		sb.append(",TAX_AMOUNT_TELCO="+TAX_AMOUNT_TELCO);
		sb.append(",APPROVAL_DATE="+APPROVAL_DATE);
		sb.append(",POS_ID="+POS_ID);
		sb.append(",POS_NAME="+POS_NAME);
		sb.append(",EXTERNAL_POS_ID="+EXTERNAL_POS_ID);
		sb.append(",STORE_ID="+STORE_ID);
		sb.append(",STORE_NAME="+STORE_NAME);
		sb.append(",EXTERNAL_STORE_ID="+EXTERNAL_STORE_ID);
		sb.append(",CURRENCY="+CURRENCY);
		sb.append(",TAXES_DISAGGREGATED="+TAXES_DISAGGREGATED);
		sb.append(",SHIPPING_ID="+SHIPPING_ID);
		sb.append(",SHIPMENT_MODE="+SHIPMENT_MODE);
		sb.append(",ORDER_ID="+ORDER_ID);
		sb.append(",PACK_ID="+PACK_ID);
		sb.append(",METADATA="+METADATA);
		sb.append(",REFUND_ID="+REFUND_ID);
		sb.append(",EFFECTIVE_COUPON_AMOUNT="+EFFECTIVE_COUPON_AMOUNT);
		sb.append(",POI_ID="+POI_ID);
		sb.append(",CONCAT_FRETE="+CONCAT_FRETE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String RELEASE_DATE;

				public String getRELEASE_DATE () {
					return this.RELEASE_DATE;
				}

				public Boolean RELEASE_DATEIsNullable(){
				    return true;
				}
				public Boolean RELEASE_DATEIsKey(){
				    return false;
				}
				public Integer RELEASE_DATELength(){
				    return null;
				}
				public Integer RELEASE_DATEPrecision(){
				    return null;
				}
				public String RELEASE_DATEDefault(){
				
					return null;
				
				}
				public String RELEASE_DATEComment(){
				
				    return "";
				
				}
				public String RELEASE_DATEPattern(){
				
					return "";
				
				}
				public String RELEASE_DATEOriginalDbColumnName(){
				
					return "RELEASE_DATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				
			    public String EXTERNAL_REFERENCE;

				public String getEXTERNAL_REFERENCE () {
					return this.EXTERNAL_REFERENCE;
				}

				public Boolean EXTERNAL_REFERENCEIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_REFERENCEIsKey(){
				    return false;
				}
				public Integer EXTERNAL_REFERENCELength(){
				    return null;
				}
				public Integer EXTERNAL_REFERENCEPrecision(){
				    return null;
				}
				public String EXTERNAL_REFERENCEDefault(){
				
					return null;
				
				}
				public String EXTERNAL_REFERENCEComment(){
				
				    return "";
				
				}
				public String EXTERNAL_REFERENCEPattern(){
				
					return "";
				
				}
				public String EXTERNAL_REFERENCEOriginalDbColumnName(){
				
					return "EXTERNAL_REFERENCE";
				
				}

				
			    public String RECORD_TYPE;

				public String getRECORD_TYPE () {
					return this.RECORD_TYPE;
				}

				public Boolean RECORD_TYPEIsNullable(){
				    return true;
				}
				public Boolean RECORD_TYPEIsKey(){
				    return false;
				}
				public Integer RECORD_TYPELength(){
				    return null;
				}
				public Integer RECORD_TYPEPrecision(){
				    return null;
				}
				public String RECORD_TYPEDefault(){
				
					return null;
				
				}
				public String RECORD_TYPEComment(){
				
				    return "";
				
				}
				public String RECORD_TYPEPattern(){
				
					return "";
				
				}
				public String RECORD_TYPEOriginalDbColumnName(){
				
					return "RECORD_TYPE";
				
				}

				
			    public String DESCRIPTION;

				public String getDESCRIPTION () {
					return this.DESCRIPTION;
				}

				public Boolean DESCRIPTIONIsNullable(){
				    return true;
				}
				public Boolean DESCRIPTIONIsKey(){
				    return false;
				}
				public Integer DESCRIPTIONLength(){
				    return null;
				}
				public Integer DESCRIPTIONPrecision(){
				    return null;
				}
				public String DESCRIPTIONDefault(){
				
					return null;
				
				}
				public String DESCRIPTIONComment(){
				
				    return "";
				
				}
				public String DESCRIPTIONPattern(){
				
					return "";
				
				}
				public String DESCRIPTIONOriginalDbColumnName(){
				
					return "DESCRIPTION";
				
				}

				
			    public String NET_CREDIT_AMOUNT;

				public String getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				
			    public String NET_DEBIT_AMOUNT;

				public String getNET_DEBIT_AMOUNT () {
					return this.NET_DEBIT_AMOUNT;
				}

				public Boolean NET_DEBIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_DEBIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_DEBIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_DEBIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_DEBIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_DEBIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_DEBIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_DEBIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_DEBIT_AMOUNT";
				
				}

				
			    public String GROSS_AMOUNT;

				public String getGROSS_AMOUNT () {
					return this.GROSS_AMOUNT;
				}

				public Boolean GROSS_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean GROSS_AMOUNTIsKey(){
				    return false;
				}
				public Integer GROSS_AMOUNTLength(){
				    return null;
				}
				public Integer GROSS_AMOUNTPrecision(){
				    return null;
				}
				public String GROSS_AMOUNTDefault(){
				
					return null;
				
				}
				public String GROSS_AMOUNTComment(){
				
				    return "";
				
				}
				public String GROSS_AMOUNTPattern(){
				
					return "";
				
				}
				public String GROSS_AMOUNTOriginalDbColumnName(){
				
					return "GROSS_AMOUNT";
				
				}

				
			    public String SELLER_AMOUNT;

				public String getSELLER_AMOUNT () {
					return this.SELLER_AMOUNT;
				}

				public Boolean SELLER_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SELLER_AMOUNTIsKey(){
				    return false;
				}
				public Integer SELLER_AMOUNTLength(){
				    return null;
				}
				public Integer SELLER_AMOUNTPrecision(){
				    return null;
				}
				public String SELLER_AMOUNTDefault(){
				
					return null;
				
				}
				public String SELLER_AMOUNTComment(){
				
				    return "";
				
				}
				public String SELLER_AMOUNTPattern(){
				
					return "";
				
				}
				public String SELLER_AMOUNTOriginalDbColumnName(){
				
					return "SELLER_AMOUNT";
				
				}

				
			    public String MP_FEE_AMOUNT;

				public String getMP_FEE_AMOUNT () {
					return this.MP_FEE_AMOUNT;
				}

				public Boolean MP_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean MP_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer MP_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer MP_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String MP_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String MP_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String MP_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String MP_FEE_AMOUNTOriginalDbColumnName(){
				
					return "MP_FEE_AMOUNT";
				
				}

				
			    public String FINANCING_FEE_AMOUNT;

				public String getFINANCING_FEE_AMOUNT () {
					return this.FINANCING_FEE_AMOUNT;
				}

				public Boolean FINANCING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean FINANCING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer FINANCING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer FINANCING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String FINANCING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String FINANCING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String FINANCING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String FINANCING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "FINANCING_FEE_AMOUNT";
				
				}

				
			    public String SHIPPING_FEE_AMOUNT;

				public String getSHIPPING_FEE_AMOUNT () {
					return this.SHIPPING_FEE_AMOUNT;
				}

				public Boolean SHIPPING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer SHIPPING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer SHIPPING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String SHIPPING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String SHIPPING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String SHIPPING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String SHIPPING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "SHIPPING_FEE_AMOUNT";
				
				}

				
			    public String TAXES_AMOUNT;

				public String getTAXES_AMOUNT () {
					return this.TAXES_AMOUNT;
				}

				public Boolean TAXES_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean TAXES_AMOUNTIsKey(){
				    return false;
				}
				public Integer TAXES_AMOUNTLength(){
				    return null;
				}
				public Integer TAXES_AMOUNTPrecision(){
				    return null;
				}
				public String TAXES_AMOUNTDefault(){
				
					return null;
				
				}
				public String TAXES_AMOUNTComment(){
				
				    return "";
				
				}
				public String TAXES_AMOUNTPattern(){
				
					return "";
				
				}
				public String TAXES_AMOUNTOriginalDbColumnName(){
				
					return "TAXES_AMOUNT";
				
				}

				
			    public String COUPON_AMOUNT;

				public String getCOUPON_AMOUNT () {
					return this.COUPON_AMOUNT;
				}

				public Boolean COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String COUPON_AMOUNTOriginalDbColumnName(){
				
					return "COUPON_AMOUNT";
				
				}

				
			    public String INSTALLMENTS;

				public String getINSTALLMENTS () {
					return this.INSTALLMENTS;
				}

				public Boolean INSTALLMENTSIsNullable(){
				    return true;
				}
				public Boolean INSTALLMENTSIsKey(){
				    return false;
				}
				public Integer INSTALLMENTSLength(){
				    return null;
				}
				public Integer INSTALLMENTSPrecision(){
				    return null;
				}
				public String INSTALLMENTSDefault(){
				
					return null;
				
				}
				public String INSTALLMENTSComment(){
				
				    return "";
				
				}
				public String INSTALLMENTSPattern(){
				
					return "";
				
				}
				public String INSTALLMENTSOriginalDbColumnName(){
				
					return "INSTALLMENTS";
				
				}

				
			    public String PAYMENT_METHOD;

				public String getPAYMENT_METHOD () {
					return this.PAYMENT_METHOD;
				}

				public Boolean PAYMENT_METHODIsNullable(){
				    return true;
				}
				public Boolean PAYMENT_METHODIsKey(){
				    return false;
				}
				public Integer PAYMENT_METHODLength(){
				    return null;
				}
				public Integer PAYMENT_METHODPrecision(){
				    return null;
				}
				public String PAYMENT_METHODDefault(){
				
					return null;
				
				}
				public String PAYMENT_METHODComment(){
				
				    return "";
				
				}
				public String PAYMENT_METHODPattern(){
				
					return "";
				
				}
				public String PAYMENT_METHODOriginalDbColumnName(){
				
					return "PAYMENT_METHOD";
				
				}

				
			    public String TAX_DETAIL;

				public String getTAX_DETAIL () {
					return this.TAX_DETAIL;
				}

				public Boolean TAX_DETAILIsNullable(){
				    return true;
				}
				public Boolean TAX_DETAILIsKey(){
				    return false;
				}
				public Integer TAX_DETAILLength(){
				    return null;
				}
				public Integer TAX_DETAILPrecision(){
				    return null;
				}
				public String TAX_DETAILDefault(){
				
					return null;
				
				}
				public String TAX_DETAILComment(){
				
				    return "";
				
				}
				public String TAX_DETAILPattern(){
				
					return "";
				
				}
				public String TAX_DETAILOriginalDbColumnName(){
				
					return "TAX_DETAIL";
				
				}

				
			    public String TAX_AMOUNT_TELCO;

				public String getTAX_AMOUNT_TELCO () {
					return this.TAX_AMOUNT_TELCO;
				}

				public Boolean TAX_AMOUNT_TELCOIsNullable(){
				    return true;
				}
				public Boolean TAX_AMOUNT_TELCOIsKey(){
				    return false;
				}
				public Integer TAX_AMOUNT_TELCOLength(){
				    return null;
				}
				public Integer TAX_AMOUNT_TELCOPrecision(){
				    return null;
				}
				public String TAX_AMOUNT_TELCODefault(){
				
					return null;
				
				}
				public String TAX_AMOUNT_TELCOComment(){
				
				    return "";
				
				}
				public String TAX_AMOUNT_TELCOPattern(){
				
					return "";
				
				}
				public String TAX_AMOUNT_TELCOOriginalDbColumnName(){
				
					return "TAX_AMOUNT_TELCO";
				
				}

				
			    public String APPROVAL_DATE;

				public String getAPPROVAL_DATE () {
					return this.APPROVAL_DATE;
				}

				public Boolean APPROVAL_DATEIsNullable(){
				    return true;
				}
				public Boolean APPROVAL_DATEIsKey(){
				    return false;
				}
				public Integer APPROVAL_DATELength(){
				    return null;
				}
				public Integer APPROVAL_DATEPrecision(){
				    return null;
				}
				public String APPROVAL_DATEDefault(){
				
					return null;
				
				}
				public String APPROVAL_DATEComment(){
				
				    return "";
				
				}
				public String APPROVAL_DATEPattern(){
				
					return "";
				
				}
				public String APPROVAL_DATEOriginalDbColumnName(){
				
					return "APPROVAL_DATE";
				
				}

				
			    public String POS_ID;

				public String getPOS_ID () {
					return this.POS_ID;
				}

				public Boolean POS_IDIsNullable(){
				    return true;
				}
				public Boolean POS_IDIsKey(){
				    return false;
				}
				public Integer POS_IDLength(){
				    return null;
				}
				public Integer POS_IDPrecision(){
				    return null;
				}
				public String POS_IDDefault(){
				
					return null;
				
				}
				public String POS_IDComment(){
				
				    return "";
				
				}
				public String POS_IDPattern(){
				
					return "";
				
				}
				public String POS_IDOriginalDbColumnName(){
				
					return "POS_ID";
				
				}

				
			    public String POS_NAME;

				public String getPOS_NAME () {
					return this.POS_NAME;
				}

				public Boolean POS_NAMEIsNullable(){
				    return true;
				}
				public Boolean POS_NAMEIsKey(){
				    return false;
				}
				public Integer POS_NAMELength(){
				    return null;
				}
				public Integer POS_NAMEPrecision(){
				    return null;
				}
				public String POS_NAMEDefault(){
				
					return null;
				
				}
				public String POS_NAMEComment(){
				
				    return "";
				
				}
				public String POS_NAMEPattern(){
				
					return "";
				
				}
				public String POS_NAMEOriginalDbColumnName(){
				
					return "POS_NAME";
				
				}

				
			    public String EXTERNAL_POS_ID;

				public String getEXTERNAL_POS_ID () {
					return this.EXTERNAL_POS_ID;
				}

				public Boolean EXTERNAL_POS_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_POS_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_POS_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_POS_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_POS_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_POS_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_POS_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_POS_IDOriginalDbColumnName(){
				
					return "EXTERNAL_POS_ID";
				
				}

				
			    public String STORE_ID;

				public String getSTORE_ID () {
					return this.STORE_ID;
				}

				public Boolean STORE_IDIsNullable(){
				    return true;
				}
				public Boolean STORE_IDIsKey(){
				    return false;
				}
				public Integer STORE_IDLength(){
				    return null;
				}
				public Integer STORE_IDPrecision(){
				    return null;
				}
				public String STORE_IDDefault(){
				
					return null;
				
				}
				public String STORE_IDComment(){
				
				    return "";
				
				}
				public String STORE_IDPattern(){
				
					return "";
				
				}
				public String STORE_IDOriginalDbColumnName(){
				
					return "STORE_ID";
				
				}

				
			    public String STORE_NAME;

				public String getSTORE_NAME () {
					return this.STORE_NAME;
				}

				public Boolean STORE_NAMEIsNullable(){
				    return true;
				}
				public Boolean STORE_NAMEIsKey(){
				    return false;
				}
				public Integer STORE_NAMELength(){
				    return null;
				}
				public Integer STORE_NAMEPrecision(){
				    return null;
				}
				public String STORE_NAMEDefault(){
				
					return null;
				
				}
				public String STORE_NAMEComment(){
				
				    return "";
				
				}
				public String STORE_NAMEPattern(){
				
					return "";
				
				}
				public String STORE_NAMEOriginalDbColumnName(){
				
					return "STORE_NAME";
				
				}

				
			    public String EXTERNAL_STORE_ID;

				public String getEXTERNAL_STORE_ID () {
					return this.EXTERNAL_STORE_ID;
				}

				public Boolean EXTERNAL_STORE_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_STORE_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_STORE_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_STORE_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_STORE_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_STORE_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_STORE_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_STORE_IDOriginalDbColumnName(){
				
					return "EXTERNAL_STORE_ID";
				
				}

				
			    public String CURRENCY;

				public String getCURRENCY () {
					return this.CURRENCY;
				}

				public Boolean CURRENCYIsNullable(){
				    return true;
				}
				public Boolean CURRENCYIsKey(){
				    return false;
				}
				public Integer CURRENCYLength(){
				    return null;
				}
				public Integer CURRENCYPrecision(){
				    return null;
				}
				public String CURRENCYDefault(){
				
					return null;
				
				}
				public String CURRENCYComment(){
				
				    return "";
				
				}
				public String CURRENCYPattern(){
				
					return "";
				
				}
				public String CURRENCYOriginalDbColumnName(){
				
					return "CURRENCY";
				
				}

				
			    public String TAXES_DISAGGREGATED;

				public String getTAXES_DISAGGREGATED () {
					return this.TAXES_DISAGGREGATED;
				}

				public Boolean TAXES_DISAGGREGATEDIsNullable(){
				    return true;
				}
				public Boolean TAXES_DISAGGREGATEDIsKey(){
				    return false;
				}
				public Integer TAXES_DISAGGREGATEDLength(){
				    return null;
				}
				public Integer TAXES_DISAGGREGATEDPrecision(){
				    return null;
				}
				public String TAXES_DISAGGREGATEDDefault(){
				
					return null;
				
				}
				public String TAXES_DISAGGREGATEDComment(){
				
				    return "";
				
				}
				public String TAXES_DISAGGREGATEDPattern(){
				
					return "";
				
				}
				public String TAXES_DISAGGREGATEDOriginalDbColumnName(){
				
					return "TAXES_DISAGGREGATED";
				
				}

				
			    public String SHIPPING_ID;

				public String getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public String SHIPMENT_MODE;

				public String getSHIPMENT_MODE () {
					return this.SHIPMENT_MODE;
				}

				public Boolean SHIPMENT_MODEIsNullable(){
				    return true;
				}
				public Boolean SHIPMENT_MODEIsKey(){
				    return false;
				}
				public Integer SHIPMENT_MODELength(){
				    return null;
				}
				public Integer SHIPMENT_MODEPrecision(){
				    return null;
				}
				public String SHIPMENT_MODEDefault(){
				
					return null;
				
				}
				public String SHIPMENT_MODEComment(){
				
				    return "";
				
				}
				public String SHIPMENT_MODEPattern(){
				
					return "";
				
				}
				public String SHIPMENT_MODEOriginalDbColumnName(){
				
					return "SHIPMENT_MODE";
				
				}

				
			    public String ORDER_ID;

				public String getORDER_ID () {
					return this.ORDER_ID;
				}

				public Boolean ORDER_IDIsNullable(){
				    return true;
				}
				public Boolean ORDER_IDIsKey(){
				    return false;
				}
				public Integer ORDER_IDLength(){
				    return null;
				}
				public Integer ORDER_IDPrecision(){
				    return null;
				}
				public String ORDER_IDDefault(){
				
					return null;
				
				}
				public String ORDER_IDComment(){
				
				    return "";
				
				}
				public String ORDER_IDPattern(){
				
					return "";
				
				}
				public String ORDER_IDOriginalDbColumnName(){
				
					return "ORDER_ID";
				
				}

				
			    public String PACK_ID;

				public String getPACK_ID () {
					return this.PACK_ID;
				}

				public Boolean PACK_IDIsNullable(){
				    return true;
				}
				public Boolean PACK_IDIsKey(){
				    return false;
				}
				public Integer PACK_IDLength(){
				    return null;
				}
				public Integer PACK_IDPrecision(){
				    return null;
				}
				public String PACK_IDDefault(){
				
					return null;
				
				}
				public String PACK_IDComment(){
				
				    return "";
				
				}
				public String PACK_IDPattern(){
				
					return "";
				
				}
				public String PACK_IDOriginalDbColumnName(){
				
					return "PACK_ID";
				
				}

				
			    public String METADATA;

				public String getMETADATA () {
					return this.METADATA;
				}

				public Boolean METADATAIsNullable(){
				    return true;
				}
				public Boolean METADATAIsKey(){
				    return false;
				}
				public Integer METADATALength(){
				    return null;
				}
				public Integer METADATAPrecision(){
				    return null;
				}
				public String METADATADefault(){
				
					return null;
				
				}
				public String METADATAComment(){
				
				    return "";
				
				}
				public String METADATAPattern(){
				
					return "";
				
				}
				public String METADATAOriginalDbColumnName(){
				
					return "METADATA";
				
				}

				
			    public String REFUND_ID;

				public String getREFUND_ID () {
					return this.REFUND_ID;
				}

				public Boolean REFUND_IDIsNullable(){
				    return true;
				}
				public Boolean REFUND_IDIsKey(){
				    return false;
				}
				public Integer REFUND_IDLength(){
				    return null;
				}
				public Integer REFUND_IDPrecision(){
				    return null;
				}
				public String REFUND_IDDefault(){
				
					return null;
				
				}
				public String REFUND_IDComment(){
				
				    return "";
				
				}
				public String REFUND_IDPattern(){
				
					return "";
				
				}
				public String REFUND_IDOriginalDbColumnName(){
				
					return "REFUND_ID";
				
				}

				
			    public String EFFECTIVE_COUPON_AMOUNT;

				public String getEFFECTIVE_COUPON_AMOUNT () {
					return this.EFFECTIVE_COUPON_AMOUNT;
				}

				public Boolean EFFECTIVE_COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean EFFECTIVE_COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String EFFECTIVE_COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String EFFECTIVE_COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTOriginalDbColumnName(){
				
					return "EFFECTIVE_COUPON_AMOUNT";
				
				}

				
			    public String POI_ID;

				public String getPOI_ID () {
					return this.POI_ID;
				}

				public Boolean POI_IDIsNullable(){
				    return true;
				}
				public Boolean POI_IDIsKey(){
				    return false;
				}
				public Integer POI_IDLength(){
				    return null;
				}
				public Integer POI_IDPrecision(){
				    return null;
				}
				public String POI_IDDefault(){
				
					return null;
				
				}
				public String POI_IDComment(){
				
				    return "";
				
				}
				public String POI_IDPattern(){
				
					return "";
				
				}
				public String POI_IDOriginalDbColumnName(){
				
					return "POI_ID";
				
				}

				
			    public String CONCAT_FRETE;

				public String getCONCAT_FRETE () {
					return this.CONCAT_FRETE;
				}

				public Boolean CONCAT_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCAT_FRETEIsKey(){
				    return false;
				}
				public Integer CONCAT_FRETELength(){
				    return null;
				}
				public Integer CONCAT_FRETEPrecision(){
				    return null;
				}
				public String CONCAT_FRETEDefault(){
				
					return null;
				
				}
				public String CONCAT_FRETEComment(){
				
				    return "";
				
				}
				public String CONCAT_FRETEPattern(){
				
					return "";
				
				}
				public String CONCAT_FRETEOriginalDbColumnName(){
				
					return "CONCAT_FRETE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
					this.NET_CREDIT_AMOUNT = readString(dis);
					
					this.NET_DEBIT_AMOUNT = readString(dis);
					
					this.GROSS_AMOUNT = readString(dis);
					
					this.SELLER_AMOUNT = readString(dis);
					
					this.MP_FEE_AMOUNT = readString(dis);
					
					this.FINANCING_FEE_AMOUNT = readString(dis);
					
					this.SHIPPING_FEE_AMOUNT = readString(dis);
					
					this.TAXES_AMOUNT = readString(dis);
					
					this.COUPON_AMOUNT = readString(dis);
					
					this.INSTALLMENTS = readString(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
					this.SHIPPING_ID = readString(dis);
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
					this.NET_CREDIT_AMOUNT = readString(dis);
					
					this.NET_DEBIT_AMOUNT = readString(dis);
					
					this.GROSS_AMOUNT = readString(dis);
					
					this.SELLER_AMOUNT = readString(dis);
					
					this.MP_FEE_AMOUNT = readString(dis);
					
					this.FINANCING_FEE_AMOUNT = readString(dis);
					
					this.SHIPPING_FEE_AMOUNT = readString(dis);
					
					this.TAXES_AMOUNT = readString(dis);
					
					this.COUPON_AMOUNT = readString(dis);
					
					this.INSTALLMENTS = readString(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
					this.SHIPPING_ID = readString(dis);
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// String
				
						writeString(this.NET_CREDIT_AMOUNT,dos);
					
					// String
				
						writeString(this.NET_DEBIT_AMOUNT,dos);
					
					// String
				
						writeString(this.GROSS_AMOUNT,dos);
					
					// String
				
						writeString(this.SELLER_AMOUNT,dos);
					
					// String
				
						writeString(this.MP_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.FINANCING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.SHIPPING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.TAXES_AMOUNT,dos);
					
					// String
				
						writeString(this.COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// String
				
						writeString(this.SHIPPING_ID,dos);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// String
				
						writeString(this.NET_CREDIT_AMOUNT,dos);
					
					// String
				
						writeString(this.NET_DEBIT_AMOUNT,dos);
					
					// String
				
						writeString(this.GROSS_AMOUNT,dos);
					
					// String
				
						writeString(this.SELLER_AMOUNT,dos);
					
					// String
				
						writeString(this.MP_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.FINANCING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.SHIPPING_FEE_AMOUNT,dos);
					
					// String
				
						writeString(this.TAXES_AMOUNT,dos);
					
					// String
				
						writeString(this.COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// String
				
						writeString(this.SHIPPING_ID,dos);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("RELEASE_DATE="+RELEASE_DATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
		sb.append(",EXTERNAL_REFERENCE="+EXTERNAL_REFERENCE);
		sb.append(",RECORD_TYPE="+RECORD_TYPE);
		sb.append(",DESCRIPTION="+DESCRIPTION);
		sb.append(",NET_CREDIT_AMOUNT="+NET_CREDIT_AMOUNT);
		sb.append(",NET_DEBIT_AMOUNT="+NET_DEBIT_AMOUNT);
		sb.append(",GROSS_AMOUNT="+GROSS_AMOUNT);
		sb.append(",SELLER_AMOUNT="+SELLER_AMOUNT);
		sb.append(",MP_FEE_AMOUNT="+MP_FEE_AMOUNT);
		sb.append(",FINANCING_FEE_AMOUNT="+FINANCING_FEE_AMOUNT);
		sb.append(",SHIPPING_FEE_AMOUNT="+SHIPPING_FEE_AMOUNT);
		sb.append(",TAXES_AMOUNT="+TAXES_AMOUNT);
		sb.append(",COUPON_AMOUNT="+COUPON_AMOUNT);
		sb.append(",INSTALLMENTS="+INSTALLMENTS);
		sb.append(",PAYMENT_METHOD="+PAYMENT_METHOD);
		sb.append(",TAX_DETAIL="+TAX_DETAIL);
		sb.append(",TAX_AMOUNT_TELCO="+TAX_AMOUNT_TELCO);
		sb.append(",APPROVAL_DATE="+APPROVAL_DATE);
		sb.append(",POS_ID="+POS_ID);
		sb.append(",POS_NAME="+POS_NAME);
		sb.append(",EXTERNAL_POS_ID="+EXTERNAL_POS_ID);
		sb.append(",STORE_ID="+STORE_ID);
		sb.append(",STORE_NAME="+STORE_NAME);
		sb.append(",EXTERNAL_STORE_ID="+EXTERNAL_STORE_ID);
		sb.append(",CURRENCY="+CURRENCY);
		sb.append(",TAXES_DISAGGREGATED="+TAXES_DISAGGREGATED);
		sb.append(",SHIPPING_ID="+SHIPPING_ID);
		sb.append(",SHIPMENT_MODE="+SHIPMENT_MODE);
		sb.append(",ORDER_ID="+ORDER_ID);
		sb.append(",PACK_ID="+PACK_ID);
		sb.append(",METADATA="+METADATA);
		sb.append(",REFUND_ID="+REFUND_ID);
		sb.append(",EFFECTIVE_COUPON_AMOUNT="+EFFECTIVE_COUPON_AMOUNT);
		sb.append(",POI_ID="+POI_ID);
		sb.append(",CONCAT_FRETE="+CONCAT_FRETE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();
saida12Struct saida12 = new saida12Struct();
row40Struct row40 = new row40Struct();
row15Struct row15 = new row15Struct();







	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row15Struct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row15Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tConvertType_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_2", false);
		start_Hash.put("tConvertType_2", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tConvertType_2 = 0;
		
	int nb_line_tConvertType_2 = 0;  
 



/**
 * [tConvertType_2 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida12");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida12Struct saida12_tmp = new saida12Struct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_1", false);
		start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_1";
	
	
		int tos_count_tFileInputExcel_1 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:WefJhbb5MKPyIjRDJQj6QCeFD469T/8Cd6UCMw==");
        String password_tFileInputExcel_1 = decryptedPassword_tFileInputExcel_1;
        if (password_tFileInputExcel_1.isEmpty()){
            password_tFileInputExcel_1 = null;
        }
			class RegexUtil_tFileInputExcel_1 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_1 regexUtil_tFileInputExcel_1 = new RegexUtil_tFileInputExcel_1();

		Object source_tFileInputExcel_1 = "//storage/Setores/Power BI/Dados/Conciliacao/Planilhas/Mercado Livre Palacio.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_1 = null;
		
		if(source_tFileInputExcel_1 instanceof String){
			workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_1), password_tFileInputExcel_1, true);
		} else if(source_tFileInputExcel_1 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_1, password_tFileInputExcel_1);
		} else{
			workbook_tFileInputExcel_1 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
        sheetList_tFileInputExcel_1.addAll(regexUtil_tFileInputExcel_1.getSheets(workbook_tFileInputExcel_1, "Repasse Liberação", false));
    	if(sheetList_tFileInputExcel_1.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
			if(sheet_FilterNull_tFileInputExcel_1!=null && sheetList_FilterNull_tFileInputExcel_1.iterator()!=null && sheet_FilterNull_tFileInputExcel_1.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_1.add(sheet_FilterNull_tFileInputExcel_1);
			}
		}
		sheetList_tFileInputExcel_1 = sheetList_FilterNull_tFileInputExcel_1;
	if(sheetList_tFileInputExcel_1.size()>0){
		int nb_line_tFileInputExcel_1 = 0;

        int begin_line_tFileInputExcel_1 = 1;

        int footer_input_tFileInputExcel_1 = 0;

        int end_line_tFileInputExcel_1=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1:sheetList_tFileInputExcel_1){
			end_line_tFileInputExcel_1+=(sheet_tFileInputExcel_1.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_1 -= footer_input_tFileInputExcel_1;
        int limit_tFileInputExcel_1 = -1;
        int start_column_tFileInputExcel_1 = 1-1;
        int end_column_tFileInputExcel_1 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_1 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(0);
        int rowCount_tFileInputExcel_1 = 0;
        int sheetIndex_tFileInputExcel_1 = 0;
        int currentRows_tFileInputExcel_1 = (sheetList_tFileInputExcel_1.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_1 = begin_line_tFileInputExcel_1; i_tFileInputExcel_1 < end_line_tFileInputExcel_1; i_tFileInputExcel_1++){

        	int emptyColumnCount_tFileInputExcel_1 = 0;

        	if (limit_tFileInputExcel_1 != -1 && nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
        		break;
        	}

            while (i_tFileInputExcel_1 >= rowCount_tFileInputExcel_1 + currentRows_tFileInputExcel_1) {
                rowCount_tFileInputExcel_1 += currentRows_tFileInputExcel_1;
                sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1.get(++sheetIndex_tFileInputExcel_1);
                currentRows_tFileInputExcel_1 = (sheet_tFileInputExcel_1.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_1_CURRENT_SHEET",sheet_tFileInputExcel_1.getSheetName());
            if (rowCount_tFileInputExcel_1 <= i_tFileInputExcel_1) {
                row_tFileInputExcel_1 = sheet_tFileInputExcel_1.getRow(i_tFileInputExcel_1 - rowCount_tFileInputExcel_1);
            }
		    row13 = null;
					int tempRowLength_tFileInputExcel_1 = 36;
				
				int columnIndex_tFileInputExcel_1 = 0;
			
			String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
			int excel_end_column_tFileInputExcel_1;
			if(row_tFileInputExcel_1==null){
				excel_end_column_tFileInputExcel_1=0;
			}else{
				excel_end_column_tFileInputExcel_1=row_tFileInputExcel_1.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_1;
			if(end_column_tFileInputExcel_1 == -1){
				actual_end_column_tFileInputExcel_1 = excel_end_column_tFileInputExcel_1;
			}
			else{
				actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 >	excel_end_column_tFileInputExcel_1 ? excel_end_column_tFileInputExcel_1 : end_column_tFileInputExcel_1;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_1 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_1;i++){
				if(i + start_column_tFileInputExcel_1 < actual_end_column_tFileInputExcel_1){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_1 = row_tFileInputExcel_1.getCell(i + start_column_tFileInputExcel_1);
					if(cell_tFileInputExcel_1!=null){
					switch (cell_tFileInputExcel_1.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
									temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_1[i] = df_tFileInputExcel_1.format(cell_tFileInputExcel_1.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_1.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_1)) {
											temp_row_tFileInputExcel_1[i] =cell_tFileInputExcel_1.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_1 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_1.getNumericCellValue());
										temp_row_tFileInputExcel_1[i] = ne_tFileInputExcel_1.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_1[i] =String.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_1[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_1[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_1[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_1[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_1 = false;
			row13 = new row13Struct();
			int curColNum_tFileInputExcel_1 = -1;
			String curColName_tFileInputExcel_1 = "";
			try{
							columnIndex_tFileInputExcel_1 = 0;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "RELEASE_DATE";

				row13.RELEASE_DATE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.RELEASE_DATE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 1;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "SOURCE_ID";

				row13.SOURCE_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.SOURCE_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 2;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "EXTERNAL_REFERENCE";

				row13.EXTERNAL_REFERENCE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.EXTERNAL_REFERENCE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 3;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "RECORD_TYPE";

				row13.RECORD_TYPE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.RECORD_TYPE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 4;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "DESCRIPTION";

				row13.DESCRIPTION = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.DESCRIPTION = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 5;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "NET_CREDIT_AMOUNT";

				row13.NET_CREDIT_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.NET_CREDIT_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 6;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "NET_DEBIT_AMOUNT";

				row13.NET_DEBIT_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.NET_DEBIT_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 7;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "GROSS_AMOUNT";

				row13.GROSS_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.GROSS_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 8;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "SELLER_AMOUNT";

				row13.SELLER_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.SELLER_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 9;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "MP_FEE_AMOUNT";

				row13.MP_FEE_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.MP_FEE_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 10;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "FINANCING_FEE_AMOUNT";

				row13.FINANCING_FEE_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.FINANCING_FEE_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 11;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "SHIPPING_FEE_AMOUNT";

				row13.SHIPPING_FEE_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.SHIPPING_FEE_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 12;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "TAXES_AMOUNT";

				row13.TAXES_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.TAXES_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 13;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "COUPON_AMOUNT";

				row13.COUPON_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.COUPON_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 14;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "INSTALLMENTS";

				row13.INSTALLMENTS = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.INSTALLMENTS = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 15;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "PAYMENT_METHOD";

				row13.PAYMENT_METHOD = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.PAYMENT_METHOD = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 16;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "TAX_DETAIL";

				row13.TAX_DETAIL = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.TAX_DETAIL = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 17;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "TAX_AMOUNT_TELCO";

				row13.TAX_AMOUNT_TELCO = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.TAX_AMOUNT_TELCO = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 18;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "APPROVAL_DATE";

				row13.APPROVAL_DATE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.APPROVAL_DATE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 19;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "POS_ID";

				row13.POS_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.POS_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 20;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "POS_NAME";

				row13.POS_NAME = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.POS_NAME = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 21;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "EXTERNAL_POS_ID";

				row13.EXTERNAL_POS_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.EXTERNAL_POS_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 22;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "STORE_ID";

				row13.STORE_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.STORE_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 23;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "STORE_NAME";

				row13.STORE_NAME = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.STORE_NAME = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 24;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "EXTERNAL_STORE_ID";

				row13.EXTERNAL_STORE_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.EXTERNAL_STORE_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 25;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "CURRENCY";

				row13.CURRENCY = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.CURRENCY = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 26;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "TAXES_DISAGGREGATED";

				row13.TAXES_DISAGGREGATED = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.TAXES_DISAGGREGATED = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 27;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "SHIPPING_ID";

				row13.SHIPPING_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.SHIPPING_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 28;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "SHIPMENT_MODE";

				row13.SHIPMENT_MODE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.SHIPMENT_MODE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 29;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "ORDER_ID";

				row13.ORDER_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.ORDER_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 30;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "PACK_ID";

				row13.PACK_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.PACK_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 31;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "METADATA";

				row13.METADATA = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.METADATA = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 32;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "REFUND_ID";

				row13.REFUND_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.REFUND_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 33;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "EFFECTIVE_COUPON_AMOUNT";

				row13.EFFECTIVE_COUPON_AMOUNT = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.EFFECTIVE_COUPON_AMOUNT = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 34;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "POI_ID";

				row13.POI_ID = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.POI_ID = null;
				emptyColumnCount_tFileInputExcel_1++;
			}
							columnIndex_tFileInputExcel_1 = 35;
						
			if( temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
				curColNum_tFileInputExcel_1=columnIndex_tFileInputExcel_1 + start_column_tFileInputExcel_1 + 1;
				curColName_tFileInputExcel_1 = "CONCAT_FRETE";

				row13.CONCAT_FRETE = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
			}else{
				row13.CONCAT_FRETE = null;
				emptyColumnCount_tFileInputExcel_1++;
			}

				nb_line_tFileInputExcel_1++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_1_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_1 = true;
					 System.err.println(e.getMessage());
					 row13 = null;
			}


		



 



/**
 * [tFileInputExcel_1 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 


	tos_count_tFileInputExcel_1++;

/**
 * [tFileInputExcel_1 main ] stop
 */
	
	/**
	 * [tFileInputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_begin ] stop
 */
// Start of branch "row13"
if(row13 != null) { 



	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

saida12 = null;


// # Output table : 'saida12'
saida12_tmp.RELEASE_DATE = row13.RELEASE_DATE;
saida12_tmp.SOURCE_ID = row13.SOURCE_ID;
saida12_tmp.EXTERNAL_REFERENCE = row13.EXTERNAL_REFERENCE;
saida12_tmp.RECORD_TYPE = row13.RECORD_TYPE;
saida12_tmp.DESCRIPTION = row13.DESCRIPTION;
saida12_tmp.NET_CREDIT_AMOUNT = row13.NET_CREDIT_AMOUNT != null ? row13.NET_CREDIT_AMOUNT : "0,00";
saida12_tmp.NET_DEBIT_AMOUNT = row13.NET_DEBIT_AMOUNT != null ? row13.NET_DEBIT_AMOUNT : "0,00";
saida12_tmp.GROSS_AMOUNT = row13.GROSS_AMOUNT != null ? row13.GROSS_AMOUNT : "0,00";
saida12_tmp.SELLER_AMOUNT = row13.SELLER_AMOUNT != null ? row13.SELLER_AMOUNT : "0,00";
saida12_tmp.MP_FEE_AMOUNT = row13.MP_FEE_AMOUNT != null ? row13.MP_FEE_AMOUNT : "0,00";
saida12_tmp.FINANCING_FEE_AMOUNT = row13.FINANCING_FEE_AMOUNT != null ? row13.FINANCING_FEE_AMOUNT : "0,00";
saida12_tmp.SHIPPING_FEE_AMOUNT = row13.SHIPPING_FEE_AMOUNT != null ? row13.SHIPPING_FEE_AMOUNT : "0,00";
saida12_tmp.TAXES_AMOUNT = row13.TAXES_AMOUNT != null ? row13.TAXES_AMOUNT : "0,00";
saida12_tmp.COUPON_AMOUNT = row13.COUPON_AMOUNT != null ? row13.COUPON_AMOUNT : "0,00";
saida12_tmp.INSTALLMENTS = row13.INSTALLMENTS;
saida12_tmp.PAYMENT_METHOD = row13.PAYMENT_METHOD;
saida12_tmp.TAX_DETAIL = row13.TAX_DETAIL;
saida12_tmp.TAX_AMOUNT_TELCO = row13.TAX_AMOUNT_TELCO;
saida12_tmp.APPROVAL_DATE = row13.APPROVAL_DATE;
saida12_tmp.POS_ID = row13.POS_ID;
saida12_tmp.POS_NAME = row13.POS_NAME;
saida12_tmp.EXTERNAL_POS_ID = row13.EXTERNAL_POS_ID;
saida12_tmp.STORE_ID = row13.STORE_ID;
saida12_tmp.STORE_NAME = row13.STORE_NAME;
saida12_tmp.EXTERNAL_STORE_ID = row13.EXTERNAL_STORE_ID;
saida12_tmp.CURRENCY = row13.CURRENCY;
saida12_tmp.TAXES_DISAGGREGATED = row13.TAXES_DISAGGREGATED;
saida12_tmp.SHIPPING_ID = row13.SHIPPING_ID;
saida12_tmp.SHIPMENT_MODE = row13.SHIPMENT_MODE;
saida12_tmp.ORDER_ID = row13.ORDER_ID;
saida12_tmp.PACK_ID = row13.PACK_ID;
saida12_tmp.METADATA = row13.METADATA;
saida12_tmp.REFUND_ID = row13.REFUND_ID;
saida12_tmp.EFFECTIVE_COUPON_AMOUNT = row13.EFFECTIVE_COUPON_AMOUNT;
saida12_tmp.POI_ID = row13.POI_ID;
saida12_tmp.CONCAT_FRETE = row13.CONCAT_FRETE;
saida12 = saida12_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "saida12"
if(saida12 != null) { 



	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida12"
						
						);
					}
					

    //Code generate according to input schema and output schema
row40.RELEASE_DATE = saida12.RELEASE_DATE;
row40.SOURCE_ID = saida12.SOURCE_ID;
row40.EXTERNAL_REFERENCE = saida12.EXTERNAL_REFERENCE;
row40.RECORD_TYPE = saida12.RECORD_TYPE;
row40.DESCRIPTION = saida12.DESCRIPTION;
row40.NET_CREDIT_AMOUNT = saida12.NET_CREDIT_AMOUNT.replaceAll(",", ".");
row40.NET_DEBIT_AMOUNT = saida12.NET_DEBIT_AMOUNT.replaceAll(",", ".");
row40.GROSS_AMOUNT = saida12.GROSS_AMOUNT.replaceAll(",", ".");
row40.SELLER_AMOUNT = saida12.SELLER_AMOUNT.replaceAll(",", ".");
row40.MP_FEE_AMOUNT = saida12.MP_FEE_AMOUNT.replaceAll(",", ".");
row40.FINANCING_FEE_AMOUNT = saida12.FINANCING_FEE_AMOUNT.replaceAll(",", ".");
row40.SHIPPING_FEE_AMOUNT = saida12.SHIPPING_FEE_AMOUNT.replaceAll(",", ".");
row40.TAXES_AMOUNT = saida12.TAXES_AMOUNT.replaceAll(",", ".");
row40.COUPON_AMOUNT = saida12.COUPON_AMOUNT.replaceAll(",", ".");
row40.INSTALLMENTS = saida12.INSTALLMENTS;
row40.PAYMENT_METHOD = saida12.PAYMENT_METHOD;
row40.TAX_DETAIL = saida12.TAX_DETAIL;
row40.TAX_AMOUNT_TELCO = saida12.TAX_AMOUNT_TELCO;
row40.APPROVAL_DATE = saida12.APPROVAL_DATE;
row40.POS_ID = saida12.POS_ID;
row40.POS_NAME = saida12.POS_NAME;
row40.EXTERNAL_POS_ID = saida12.EXTERNAL_POS_ID;
row40.STORE_ID = saida12.STORE_ID;
row40.STORE_NAME = saida12.STORE_NAME;
row40.EXTERNAL_STORE_ID = saida12.EXTERNAL_STORE_ID;
row40.CURRENCY = saida12.CURRENCY;
row40.TAXES_DISAGGREGATED = saida12.TAXES_DISAGGREGATED;
row40.SHIPPING_ID = saida12.SHIPPING_ID;
row40.SHIPMENT_MODE = saida12.SHIPMENT_MODE;
row40.ORDER_ID = saida12.ORDER_ID;
row40.PACK_ID = saida12.PACK_ID;
row40.METADATA = saida12.METADATA;
row40.REFUND_ID = saida12.REFUND_ID;
row40.EFFECTIVE_COUPON_AMOUNT = saida12.EFFECTIVE_COUPON_AMOUNT;
row40.POI_ID = saida12.POI_ID;
row40.CONCAT_FRETE = saida12.CONCAT_FRETE;
    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_2 main ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					


  row15 = new row15Struct();
  boolean bHasError_tConvertType_2 = false;       
      try {
          row15.RELEASE_DATE = TypeConvert.String2String(row40.RELEASE_DATE);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.SOURCE_ID = TypeConvert.String2String(row40.SOURCE_ID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.EXTERNAL_REFERENCE = TypeConvert.String2String(row40.EXTERNAL_REFERENCE);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.RECORD_TYPE = TypeConvert.String2String(row40.RECORD_TYPE);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.DESCRIPTION = TypeConvert.String2String(row40.DESCRIPTION);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.NET_CREDIT_AMOUNT = TypeConvert.String2Double(row40.NET_CREDIT_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.NET_DEBIT_AMOUNT = TypeConvert.String2Double(row40.NET_DEBIT_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.GROSS_AMOUNT = TypeConvert.String2Double(row40.GROSS_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.SELLER_AMOUNT = TypeConvert.String2Double(row40.SELLER_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.MP_FEE_AMOUNT = TypeConvert.String2Double(row40.MP_FEE_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.FINANCING_FEE_AMOUNT = TypeConvert.String2Double(row40.FINANCING_FEE_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.SHIPPING_FEE_AMOUNT = TypeConvert.String2Double(row40.SHIPPING_FEE_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.TAXES_AMOUNT = TypeConvert.String2Double(row40.TAXES_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.COUPON_AMOUNT = TypeConvert.String2Double(row40.COUPON_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.INSTALLMENTS = TypeConvert.String2Integer(row40.INSTALLMENTS);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.PAYMENT_METHOD = TypeConvert.String2String(row40.PAYMENT_METHOD);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.TAX_DETAIL = TypeConvert.String2String(row40.TAX_DETAIL);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.SHIPPING_ID = TypeConvert.String2BigDecimal(row40.SHIPPING_ID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.SHIPMENT_MODE = TypeConvert.String2String(row40.SHIPMENT_MODE);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.ORDER_ID = TypeConvert.String2String(row40.ORDER_ID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.PACK_ID = TypeConvert.String2String(row40.PACK_ID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.METADATA = TypeConvert.String2String(row40.METADATA);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.REFUND_ID = TypeConvert.String2String(row40.REFUND_ID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.EFFECTIVE_COUPON_AMOUNT = TypeConvert.String2String(row40.EFFECTIVE_COUPON_AMOUNT);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.POI_ID = TypeConvert.String2String(row40.POI_ID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.TAX_AMOUNT_TELCO = TypeConvert.String2String(row40.TAX_AMOUNT_TELCO);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.APPROVAL_DATE = TypeConvert.String2String(row40.APPROVAL_DATE);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.POS_ID = TypeConvert.String2String(row40.POS_ID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row15.CONCAT_FRETE = TypeConvert.String2String(row40.CONCAT_FRETE);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_2_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_2 = true;        
          System.err.println(e.getMessage());          
      }
      if (bHasError_tConvertType_2) { row15 = null;}

  nb_line_tConvertType_2 ++ ;

 


	tos_count_tConvertType_2++;

/**
 * [tConvertType_2 main ] stop
 */
	
	/**
	 * [tConvertType_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_begin ] stop
 */
// Start of branch "row15"
if(row15 != null) { 



	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					



    
		row15Struct oneRow_tHashOutput_9 = new row15Struct();
				
					oneRow_tHashOutput_9.RELEASE_DATE = row15.RELEASE_DATE;
					oneRow_tHashOutput_9.SOURCE_ID = row15.SOURCE_ID;
					oneRow_tHashOutput_9.EXTERNAL_REFERENCE = row15.EXTERNAL_REFERENCE;
					oneRow_tHashOutput_9.RECORD_TYPE = row15.RECORD_TYPE;
					oneRow_tHashOutput_9.DESCRIPTION = row15.DESCRIPTION;
					oneRow_tHashOutput_9.NET_CREDIT_AMOUNT = row15.NET_CREDIT_AMOUNT;
					oneRow_tHashOutput_9.NET_DEBIT_AMOUNT = row15.NET_DEBIT_AMOUNT;
					oneRow_tHashOutput_9.GROSS_AMOUNT = row15.GROSS_AMOUNT;
					oneRow_tHashOutput_9.SELLER_AMOUNT = row15.SELLER_AMOUNT;
					oneRow_tHashOutput_9.MP_FEE_AMOUNT = row15.MP_FEE_AMOUNT;
					oneRow_tHashOutput_9.FINANCING_FEE_AMOUNT = row15.FINANCING_FEE_AMOUNT;
					oneRow_tHashOutput_9.SHIPPING_FEE_AMOUNT = row15.SHIPPING_FEE_AMOUNT;
					oneRow_tHashOutput_9.TAXES_AMOUNT = row15.TAXES_AMOUNT;
					oneRow_tHashOutput_9.COUPON_AMOUNT = row15.COUPON_AMOUNT;
					oneRow_tHashOutput_9.INSTALLMENTS = row15.INSTALLMENTS;
					oneRow_tHashOutput_9.PAYMENT_METHOD = row15.PAYMENT_METHOD;
					oneRow_tHashOutput_9.TAX_DETAIL = row15.TAX_DETAIL;
					oneRow_tHashOutput_9.TAX_AMOUNT_TELCO = row15.TAX_AMOUNT_TELCO;
					oneRow_tHashOutput_9.APPROVAL_DATE = row15.APPROVAL_DATE;
					oneRow_tHashOutput_9.POS_ID = row15.POS_ID;
					oneRow_tHashOutput_9.POS_NAME = row15.POS_NAME;
					oneRow_tHashOutput_9.EXTERNAL_POS_ID = row15.EXTERNAL_POS_ID;
					oneRow_tHashOutput_9.STORE_ID = row15.STORE_ID;
					oneRow_tHashOutput_9.STORE_NAME = row15.STORE_NAME;
					oneRow_tHashOutput_9.EXTERNAL_STORE_ID = row15.EXTERNAL_STORE_ID;
					oneRow_tHashOutput_9.CURRENCY = row15.CURRENCY;
					oneRow_tHashOutput_9.TAXES_DISAGGREGATED = row15.TAXES_DISAGGREGATED;
					oneRow_tHashOutput_9.SHIPPING_ID = row15.SHIPPING_ID;
					oneRow_tHashOutput_9.SHIPMENT_MODE = row15.SHIPMENT_MODE;
					oneRow_tHashOutput_9.ORDER_ID = row15.ORDER_ID;
					oneRow_tHashOutput_9.PACK_ID = row15.PACK_ID;
					oneRow_tHashOutput_9.METADATA = row15.METADATA;
					oneRow_tHashOutput_9.REFUND_ID = row15.REFUND_ID;
					oneRow_tHashOutput_9.EFFECTIVE_COUPON_AMOUNT = row15.EFFECTIVE_COUPON_AMOUNT;
					oneRow_tHashOutput_9.POI_ID = row15.POI_ID;
					oneRow_tHashOutput_9.CONCAT_FRETE = row15.CONCAT_FRETE;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */

} // End of branch "row15"




	
	/**
	 * [tConvertType_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */

} // End of branch "saida12"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */

} // End of branch "row13"




	
	/**
	 * [tFileInputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_1_NB_LINE",nb_line_tFileInputExcel_1);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_1 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_1.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_1", true);
end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());




/**
 * [tFileInputExcel_1 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida12");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tConvertType_2 end ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	
      globalMap.put("tConvertType_2_NB_LINE", nb_line_tConvertType_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tConvertType_2", true);
end_Hash.put("tConvertType_2", System.currentTimeMillis());




/**
 * [tConvertType_2 end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */












				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileInputExcel_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_1";
	
	

 



/**
 * [tFileInputExcel_1 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tConvertType_2 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_2";
	
	

 



/**
 * [tConvertType_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}
	


public static class row52Struct implements routines.system.IPersistableRow<row52Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.SHIPPING_ID);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SHIPPING_ID);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row52Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class OnRowsEndStructtAggregateRow_3 implements routines.system.IPersistableRow<OnRowsEndStructtAggregateRow_3> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.SHIPPING_ID);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SHIPPING_ID);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(OnRowsEndStructtAggregateRow_3 other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class saida10Struct implements routines.system.IPersistableRow<saida10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				



    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.SHIPPING_ID);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SHIPPING_ID);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String RELEASE_DATE;

				public String getRELEASE_DATE () {
					return this.RELEASE_DATE;
				}

				public Boolean RELEASE_DATEIsNullable(){
				    return true;
				}
				public Boolean RELEASE_DATEIsKey(){
				    return false;
				}
				public Integer RELEASE_DATELength(){
				    return null;
				}
				public Integer RELEASE_DATEPrecision(){
				    return null;
				}
				public String RELEASE_DATEDefault(){
				
					return null;
				
				}
				public String RELEASE_DATEComment(){
				
				    return "";
				
				}
				public String RELEASE_DATEPattern(){
				
					return "";
				
				}
				public String RELEASE_DATEOriginalDbColumnName(){
				
					return "RELEASE_DATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				
			    public String EXTERNAL_REFERENCE;

				public String getEXTERNAL_REFERENCE () {
					return this.EXTERNAL_REFERENCE;
				}

				public Boolean EXTERNAL_REFERENCEIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_REFERENCEIsKey(){
				    return false;
				}
				public Integer EXTERNAL_REFERENCELength(){
				    return null;
				}
				public Integer EXTERNAL_REFERENCEPrecision(){
				    return null;
				}
				public String EXTERNAL_REFERENCEDefault(){
				
					return null;
				
				}
				public String EXTERNAL_REFERENCEComment(){
				
				    return "";
				
				}
				public String EXTERNAL_REFERENCEPattern(){
				
					return "";
				
				}
				public String EXTERNAL_REFERENCEOriginalDbColumnName(){
				
					return "EXTERNAL_REFERENCE";
				
				}

				
			    public String RECORD_TYPE;

				public String getRECORD_TYPE () {
					return this.RECORD_TYPE;
				}

				public Boolean RECORD_TYPEIsNullable(){
				    return true;
				}
				public Boolean RECORD_TYPEIsKey(){
				    return false;
				}
				public Integer RECORD_TYPELength(){
				    return null;
				}
				public Integer RECORD_TYPEPrecision(){
				    return null;
				}
				public String RECORD_TYPEDefault(){
				
					return null;
				
				}
				public String RECORD_TYPEComment(){
				
				    return "";
				
				}
				public String RECORD_TYPEPattern(){
				
					return "";
				
				}
				public String RECORD_TYPEOriginalDbColumnName(){
				
					return "RECORD_TYPE";
				
				}

				
			    public String DESCRIPTION;

				public String getDESCRIPTION () {
					return this.DESCRIPTION;
				}

				public Boolean DESCRIPTIONIsNullable(){
				    return true;
				}
				public Boolean DESCRIPTIONIsKey(){
				    return false;
				}
				public Integer DESCRIPTIONLength(){
				    return null;
				}
				public Integer DESCRIPTIONPrecision(){
				    return null;
				}
				public String DESCRIPTIONDefault(){
				
					return null;
				
				}
				public String DESCRIPTIONComment(){
				
				    return "";
				
				}
				public String DESCRIPTIONPattern(){
				
					return "";
				
				}
				public String DESCRIPTIONOriginalDbColumnName(){
				
					return "DESCRIPTION";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				
			    public Double NET_DEBIT_AMOUNT;

				public Double getNET_DEBIT_AMOUNT () {
					return this.NET_DEBIT_AMOUNT;
				}

				public Boolean NET_DEBIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_DEBIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_DEBIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_DEBIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_DEBIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_DEBIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_DEBIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_DEBIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_DEBIT_AMOUNT";
				
				}

				
			    public Double GROSS_AMOUNT;

				public Double getGROSS_AMOUNT () {
					return this.GROSS_AMOUNT;
				}

				public Boolean GROSS_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean GROSS_AMOUNTIsKey(){
				    return false;
				}
				public Integer GROSS_AMOUNTLength(){
				    return null;
				}
				public Integer GROSS_AMOUNTPrecision(){
				    return null;
				}
				public String GROSS_AMOUNTDefault(){
				
					return null;
				
				}
				public String GROSS_AMOUNTComment(){
				
				    return "";
				
				}
				public String GROSS_AMOUNTPattern(){
				
					return "";
				
				}
				public String GROSS_AMOUNTOriginalDbColumnName(){
				
					return "GROSS_AMOUNT";
				
				}

				
			    public Double SELLER_AMOUNT;

				public Double getSELLER_AMOUNT () {
					return this.SELLER_AMOUNT;
				}

				public Boolean SELLER_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SELLER_AMOUNTIsKey(){
				    return false;
				}
				public Integer SELLER_AMOUNTLength(){
				    return null;
				}
				public Integer SELLER_AMOUNTPrecision(){
				    return null;
				}
				public String SELLER_AMOUNTDefault(){
				
					return null;
				
				}
				public String SELLER_AMOUNTComment(){
				
				    return "";
				
				}
				public String SELLER_AMOUNTPattern(){
				
					return "";
				
				}
				public String SELLER_AMOUNTOriginalDbColumnName(){
				
					return "SELLER_AMOUNT";
				
				}

				
			    public Double MP_FEE_AMOUNT;

				public Double getMP_FEE_AMOUNT () {
					return this.MP_FEE_AMOUNT;
				}

				public Boolean MP_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean MP_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer MP_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer MP_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String MP_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String MP_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String MP_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String MP_FEE_AMOUNTOriginalDbColumnName(){
				
					return "MP_FEE_AMOUNT";
				
				}

				
			    public Double FINANCING_FEE_AMOUNT;

				public Double getFINANCING_FEE_AMOUNT () {
					return this.FINANCING_FEE_AMOUNT;
				}

				public Boolean FINANCING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean FINANCING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer FINANCING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer FINANCING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String FINANCING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String FINANCING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String FINANCING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String FINANCING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "FINANCING_FEE_AMOUNT";
				
				}

				
			    public Double SHIPPING_FEE_AMOUNT;

				public Double getSHIPPING_FEE_AMOUNT () {
					return this.SHIPPING_FEE_AMOUNT;
				}

				public Boolean SHIPPING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer SHIPPING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer SHIPPING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String SHIPPING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String SHIPPING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String SHIPPING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String SHIPPING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "SHIPPING_FEE_AMOUNT";
				
				}

				
			    public Double TAXES_AMOUNT;

				public Double getTAXES_AMOUNT () {
					return this.TAXES_AMOUNT;
				}

				public Boolean TAXES_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean TAXES_AMOUNTIsKey(){
				    return false;
				}
				public Integer TAXES_AMOUNTLength(){
				    return null;
				}
				public Integer TAXES_AMOUNTPrecision(){
				    return null;
				}
				public String TAXES_AMOUNTDefault(){
				
					return null;
				
				}
				public String TAXES_AMOUNTComment(){
				
				    return "";
				
				}
				public String TAXES_AMOUNTPattern(){
				
					return "";
				
				}
				public String TAXES_AMOUNTOriginalDbColumnName(){
				
					return "TAXES_AMOUNT";
				
				}

				
			    public Double COUPON_AMOUNT;

				public Double getCOUPON_AMOUNT () {
					return this.COUPON_AMOUNT;
				}

				public Boolean COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String COUPON_AMOUNTOriginalDbColumnName(){
				
					return "COUPON_AMOUNT";
				
				}

				
			    public Integer INSTALLMENTS;

				public Integer getINSTALLMENTS () {
					return this.INSTALLMENTS;
				}

				public Boolean INSTALLMENTSIsNullable(){
				    return true;
				}
				public Boolean INSTALLMENTSIsKey(){
				    return false;
				}
				public Integer INSTALLMENTSLength(){
				    return null;
				}
				public Integer INSTALLMENTSPrecision(){
				    return null;
				}
				public String INSTALLMENTSDefault(){
				
					return null;
				
				}
				public String INSTALLMENTSComment(){
				
				    return "";
				
				}
				public String INSTALLMENTSPattern(){
				
					return "";
				
				}
				public String INSTALLMENTSOriginalDbColumnName(){
				
					return "INSTALLMENTS";
				
				}

				
			    public String PAYMENT_METHOD;

				public String getPAYMENT_METHOD () {
					return this.PAYMENT_METHOD;
				}

				public Boolean PAYMENT_METHODIsNullable(){
				    return true;
				}
				public Boolean PAYMENT_METHODIsKey(){
				    return false;
				}
				public Integer PAYMENT_METHODLength(){
				    return null;
				}
				public Integer PAYMENT_METHODPrecision(){
				    return null;
				}
				public String PAYMENT_METHODDefault(){
				
					return null;
				
				}
				public String PAYMENT_METHODComment(){
				
				    return "";
				
				}
				public String PAYMENT_METHODPattern(){
				
					return "";
				
				}
				public String PAYMENT_METHODOriginalDbColumnName(){
				
					return "PAYMENT_METHOD";
				
				}

				
			    public String TAX_DETAIL;

				public String getTAX_DETAIL () {
					return this.TAX_DETAIL;
				}

				public Boolean TAX_DETAILIsNullable(){
				    return true;
				}
				public Boolean TAX_DETAILIsKey(){
				    return false;
				}
				public Integer TAX_DETAILLength(){
				    return null;
				}
				public Integer TAX_DETAILPrecision(){
				    return null;
				}
				public String TAX_DETAILDefault(){
				
					return null;
				
				}
				public String TAX_DETAILComment(){
				
				    return "";
				
				}
				public String TAX_DETAILPattern(){
				
					return "";
				
				}
				public String TAX_DETAILOriginalDbColumnName(){
				
					return "TAX_DETAIL";
				
				}

				
			    public String TAX_AMOUNT_TELCO;

				public String getTAX_AMOUNT_TELCO () {
					return this.TAX_AMOUNT_TELCO;
				}

				public Boolean TAX_AMOUNT_TELCOIsNullable(){
				    return true;
				}
				public Boolean TAX_AMOUNT_TELCOIsKey(){
				    return false;
				}
				public Integer TAX_AMOUNT_TELCOLength(){
				    return null;
				}
				public Integer TAX_AMOUNT_TELCOPrecision(){
				    return null;
				}
				public String TAX_AMOUNT_TELCODefault(){
				
					return null;
				
				}
				public String TAX_AMOUNT_TELCOComment(){
				
				    return "";
				
				}
				public String TAX_AMOUNT_TELCOPattern(){
				
					return "";
				
				}
				public String TAX_AMOUNT_TELCOOriginalDbColumnName(){
				
					return "TAX_AMOUNT_TELCO";
				
				}

				
			    public String APPROVAL_DATE;

				public String getAPPROVAL_DATE () {
					return this.APPROVAL_DATE;
				}

				public Boolean APPROVAL_DATEIsNullable(){
				    return true;
				}
				public Boolean APPROVAL_DATEIsKey(){
				    return false;
				}
				public Integer APPROVAL_DATELength(){
				    return null;
				}
				public Integer APPROVAL_DATEPrecision(){
				    return null;
				}
				public String APPROVAL_DATEDefault(){
				
					return null;
				
				}
				public String APPROVAL_DATEComment(){
				
				    return "";
				
				}
				public String APPROVAL_DATEPattern(){
				
					return "";
				
				}
				public String APPROVAL_DATEOriginalDbColumnName(){
				
					return "APPROVAL_DATE";
				
				}

				
			    public String POS_ID;

				public String getPOS_ID () {
					return this.POS_ID;
				}

				public Boolean POS_IDIsNullable(){
				    return true;
				}
				public Boolean POS_IDIsKey(){
				    return false;
				}
				public Integer POS_IDLength(){
				    return null;
				}
				public Integer POS_IDPrecision(){
				    return null;
				}
				public String POS_IDDefault(){
				
					return null;
				
				}
				public String POS_IDComment(){
				
				    return "";
				
				}
				public String POS_IDPattern(){
				
					return "";
				
				}
				public String POS_IDOriginalDbColumnName(){
				
					return "POS_ID";
				
				}

				
			    public String POS_NAME;

				public String getPOS_NAME () {
					return this.POS_NAME;
				}

				public Boolean POS_NAMEIsNullable(){
				    return true;
				}
				public Boolean POS_NAMEIsKey(){
				    return false;
				}
				public Integer POS_NAMELength(){
				    return null;
				}
				public Integer POS_NAMEPrecision(){
				    return null;
				}
				public String POS_NAMEDefault(){
				
					return null;
				
				}
				public String POS_NAMEComment(){
				
				    return "";
				
				}
				public String POS_NAMEPattern(){
				
					return "";
				
				}
				public String POS_NAMEOriginalDbColumnName(){
				
					return "POS_NAME";
				
				}

				
			    public String EXTERNAL_POS_ID;

				public String getEXTERNAL_POS_ID () {
					return this.EXTERNAL_POS_ID;
				}

				public Boolean EXTERNAL_POS_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_POS_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_POS_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_POS_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_POS_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_POS_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_POS_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_POS_IDOriginalDbColumnName(){
				
					return "EXTERNAL_POS_ID";
				
				}

				
			    public String STORE_ID;

				public String getSTORE_ID () {
					return this.STORE_ID;
				}

				public Boolean STORE_IDIsNullable(){
				    return true;
				}
				public Boolean STORE_IDIsKey(){
				    return false;
				}
				public Integer STORE_IDLength(){
				    return null;
				}
				public Integer STORE_IDPrecision(){
				    return null;
				}
				public String STORE_IDDefault(){
				
					return null;
				
				}
				public String STORE_IDComment(){
				
				    return "";
				
				}
				public String STORE_IDPattern(){
				
					return "";
				
				}
				public String STORE_IDOriginalDbColumnName(){
				
					return "STORE_ID";
				
				}

				
			    public String STORE_NAME;

				public String getSTORE_NAME () {
					return this.STORE_NAME;
				}

				public Boolean STORE_NAMEIsNullable(){
				    return true;
				}
				public Boolean STORE_NAMEIsKey(){
				    return false;
				}
				public Integer STORE_NAMELength(){
				    return null;
				}
				public Integer STORE_NAMEPrecision(){
				    return null;
				}
				public String STORE_NAMEDefault(){
				
					return null;
				
				}
				public String STORE_NAMEComment(){
				
				    return "";
				
				}
				public String STORE_NAMEPattern(){
				
					return "";
				
				}
				public String STORE_NAMEOriginalDbColumnName(){
				
					return "STORE_NAME";
				
				}

				
			    public String EXTERNAL_STORE_ID;

				public String getEXTERNAL_STORE_ID () {
					return this.EXTERNAL_STORE_ID;
				}

				public Boolean EXTERNAL_STORE_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_STORE_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_STORE_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_STORE_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_STORE_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_STORE_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_STORE_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_STORE_IDOriginalDbColumnName(){
				
					return "EXTERNAL_STORE_ID";
				
				}

				
			    public String CURRENCY;

				public String getCURRENCY () {
					return this.CURRENCY;
				}

				public Boolean CURRENCYIsNullable(){
				    return true;
				}
				public Boolean CURRENCYIsKey(){
				    return false;
				}
				public Integer CURRENCYLength(){
				    return null;
				}
				public Integer CURRENCYPrecision(){
				    return null;
				}
				public String CURRENCYDefault(){
				
					return null;
				
				}
				public String CURRENCYComment(){
				
				    return "";
				
				}
				public String CURRENCYPattern(){
				
					return "";
				
				}
				public String CURRENCYOriginalDbColumnName(){
				
					return "CURRENCY";
				
				}

				
			    public String TAXES_DISAGGREGATED;

				public String getTAXES_DISAGGREGATED () {
					return this.TAXES_DISAGGREGATED;
				}

				public Boolean TAXES_DISAGGREGATEDIsNullable(){
				    return true;
				}
				public Boolean TAXES_DISAGGREGATEDIsKey(){
				    return false;
				}
				public Integer TAXES_DISAGGREGATEDLength(){
				    return null;
				}
				public Integer TAXES_DISAGGREGATEDPrecision(){
				    return null;
				}
				public String TAXES_DISAGGREGATEDDefault(){
				
					return null;
				
				}
				public String TAXES_DISAGGREGATEDComment(){
				
				    return "";
				
				}
				public String TAXES_DISAGGREGATEDPattern(){
				
					return "";
				
				}
				public String TAXES_DISAGGREGATEDOriginalDbColumnName(){
				
					return "TAXES_DISAGGREGATED";
				
				}

				
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public String SHIPMENT_MODE;

				public String getSHIPMENT_MODE () {
					return this.SHIPMENT_MODE;
				}

				public Boolean SHIPMENT_MODEIsNullable(){
				    return true;
				}
				public Boolean SHIPMENT_MODEIsKey(){
				    return false;
				}
				public Integer SHIPMENT_MODELength(){
				    return null;
				}
				public Integer SHIPMENT_MODEPrecision(){
				    return null;
				}
				public String SHIPMENT_MODEDefault(){
				
					return null;
				
				}
				public String SHIPMENT_MODEComment(){
				
				    return "";
				
				}
				public String SHIPMENT_MODEPattern(){
				
					return "";
				
				}
				public String SHIPMENT_MODEOriginalDbColumnName(){
				
					return "SHIPMENT_MODE";
				
				}

				
			    public String ORDER_ID;

				public String getORDER_ID () {
					return this.ORDER_ID;
				}

				public Boolean ORDER_IDIsNullable(){
				    return true;
				}
				public Boolean ORDER_IDIsKey(){
				    return false;
				}
				public Integer ORDER_IDLength(){
				    return null;
				}
				public Integer ORDER_IDPrecision(){
				    return null;
				}
				public String ORDER_IDDefault(){
				
					return null;
				
				}
				public String ORDER_IDComment(){
				
				    return "";
				
				}
				public String ORDER_IDPattern(){
				
					return "";
				
				}
				public String ORDER_IDOriginalDbColumnName(){
				
					return "ORDER_ID";
				
				}

				
			    public String PACK_ID;

				public String getPACK_ID () {
					return this.PACK_ID;
				}

				public Boolean PACK_IDIsNullable(){
				    return true;
				}
				public Boolean PACK_IDIsKey(){
				    return false;
				}
				public Integer PACK_IDLength(){
				    return null;
				}
				public Integer PACK_IDPrecision(){
				    return null;
				}
				public String PACK_IDDefault(){
				
					return null;
				
				}
				public String PACK_IDComment(){
				
				    return "";
				
				}
				public String PACK_IDPattern(){
				
					return "";
				
				}
				public String PACK_IDOriginalDbColumnName(){
				
					return "PACK_ID";
				
				}

				
			    public String METADATA;

				public String getMETADATA () {
					return this.METADATA;
				}

				public Boolean METADATAIsNullable(){
				    return true;
				}
				public Boolean METADATAIsKey(){
				    return false;
				}
				public Integer METADATALength(){
				    return null;
				}
				public Integer METADATAPrecision(){
				    return null;
				}
				public String METADATADefault(){
				
					return null;
				
				}
				public String METADATAComment(){
				
				    return "";
				
				}
				public String METADATAPattern(){
				
					return "";
				
				}
				public String METADATAOriginalDbColumnName(){
				
					return "METADATA";
				
				}

				
			    public String REFUND_ID;

				public String getREFUND_ID () {
					return this.REFUND_ID;
				}

				public Boolean REFUND_IDIsNullable(){
				    return true;
				}
				public Boolean REFUND_IDIsKey(){
				    return false;
				}
				public Integer REFUND_IDLength(){
				    return null;
				}
				public Integer REFUND_IDPrecision(){
				    return null;
				}
				public String REFUND_IDDefault(){
				
					return null;
				
				}
				public String REFUND_IDComment(){
				
				    return "";
				
				}
				public String REFUND_IDPattern(){
				
					return "";
				
				}
				public String REFUND_IDOriginalDbColumnName(){
				
					return "REFUND_ID";
				
				}

				
			    public String EFFECTIVE_COUPON_AMOUNT;

				public String getEFFECTIVE_COUPON_AMOUNT () {
					return this.EFFECTIVE_COUPON_AMOUNT;
				}

				public Boolean EFFECTIVE_COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean EFFECTIVE_COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String EFFECTIVE_COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String EFFECTIVE_COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTOriginalDbColumnName(){
				
					return "EFFECTIVE_COUPON_AMOUNT";
				
				}

				
			    public String POI_ID;

				public String getPOI_ID () {
					return this.POI_ID;
				}

				public Boolean POI_IDIsNullable(){
				    return true;
				}
				public Boolean POI_IDIsKey(){
				    return false;
				}
				public Integer POI_IDLength(){
				    return null;
				}
				public Integer POI_IDPrecision(){
				    return null;
				}
				public String POI_IDDefault(){
				
					return null;
				
				}
				public String POI_IDComment(){
				
				    return "";
				
				}
				public String POI_IDPattern(){
				
					return "";
				
				}
				public String POI_IDOriginalDbColumnName(){
				
					return "POI_ID";
				
				}

				
			    public String CONCAT_FRETE;

				public String getCONCAT_FRETE () {
					return this.CONCAT_FRETE;
				}

				public Boolean CONCAT_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCAT_FRETEIsKey(){
				    return false;
				}
				public Integer CONCAT_FRETELength(){
				    return null;
				}
				public Integer CONCAT_FRETEPrecision(){
				    return null;
				}
				public String CONCAT_FRETEDefault(){
				
					return null;
				
				}
				public String CONCAT_FRETEComment(){
				
				    return "";
				
				}
				public String CONCAT_FRETEPattern(){
				
					return "";
				
				}
				public String CONCAT_FRETEOriginalDbColumnName(){
				
					return "CONCAT_FRETE";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = dis.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.RELEASE_DATE = readString(dis);
					
					this.SOURCE_ID = readString(dis);
					
					this.EXTERNAL_REFERENCE = readString(dis);
					
					this.RECORD_TYPE = readString(dis);
					
					this.DESCRIPTION = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = dis.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis);
					
					this.PAYMENT_METHOD = readString(dis);
					
					this.TAX_DETAIL = readString(dis);
					
					this.TAX_AMOUNT_TELCO = readString(dis);
					
					this.APPROVAL_DATE = readString(dis);
					
					this.POS_ID = readString(dis);
					
					this.POS_NAME = readString(dis);
					
					this.EXTERNAL_POS_ID = readString(dis);
					
					this.STORE_ID = readString(dis);
					
					this.STORE_NAME = readString(dis);
					
					this.EXTERNAL_STORE_ID = readString(dis);
					
					this.CURRENCY = readString(dis);
					
					this.TAXES_DISAGGREGATED = readString(dis);
					
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
					this.SHIPMENT_MODE = readString(dis);
					
					this.ORDER_ID = readString(dis);
					
					this.PACK_ID = readString(dis);
					
					this.METADATA = readString(dis);
					
					this.REFUND_ID = readString(dis);
					
					this.EFFECTIVE_COUPON_AMOUNT = readString(dis);
					
					this.POI_ID = readString(dis);
					
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.NET_DEBIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.GROSS_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.GROSS_AMOUNT);
		            	}
					
					// Double
				
						if(this.SELLER_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SELLER_AMOUNT);
		            	}
					
					// Double
				
						if(this.MP_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.FINANCING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.SHIPPING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.TAXES_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TAXES_AMOUNT);
		            	}
					
					// Double
				
						if(this.COUPON_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					// Integer
				
						writeInteger(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SHIPPING_ID);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.RELEASE_DATE,dos);
					
					// String
				
						writeString(this.SOURCE_ID,dos);
					
					// String
				
						writeString(this.EXTERNAL_REFERENCE,dos);
					
					// String
				
						writeString(this.RECORD_TYPE,dos);
					
					// String
				
						writeString(this.DESCRIPTION,dos);
					
					// Double
				
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.NET_DEBIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
					// Double
				
						if(this.GROSS_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.GROSS_AMOUNT);
		            	}
					
					// Double
				
						if(this.SELLER_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SELLER_AMOUNT);
		            	}
					
					// Double
				
						if(this.MP_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.FINANCING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.SHIPPING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
					// Double
				
						if(this.TAXES_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TAXES_AMOUNT);
		            	}
					
					// Double
				
						if(this.COUPON_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					// Integer
				
						writeInteger(this.INSTALLMENTS,dos);
					
					// String
				
						writeString(this.PAYMENT_METHOD,dos);
					
					// String
				
						writeString(this.TAX_DETAIL,dos);
					
					// String
				
						writeString(this.TAX_AMOUNT_TELCO,dos);
					
					// String
				
						writeString(this.APPROVAL_DATE,dos);
					
					// String
				
						writeString(this.POS_ID,dos);
					
					// String
				
						writeString(this.POS_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_POS_ID,dos);
					
					// String
				
						writeString(this.STORE_ID,dos);
					
					// String
				
						writeString(this.STORE_NAME,dos);
					
					// String
				
						writeString(this.EXTERNAL_STORE_ID,dos);
					
					// String
				
						writeString(this.CURRENCY,dos);
					
					// String
				
						writeString(this.TAXES_DISAGGREGATED,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SHIPPING_ID);
					
					// String
				
						writeString(this.SHIPMENT_MODE,dos);
					
					// String
				
						writeString(this.ORDER_ID,dos);
					
					// String
				
						writeString(this.PACK_ID,dos);
					
					// String
				
						writeString(this.METADATA,dos);
					
					// String
				
						writeString(this.REFUND_ID,dos);
					
					// String
				
						writeString(this.EFFECTIVE_COUPON_AMOUNT,dos);
					
					// String
				
						writeString(this.POI_ID,dos);
					
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("RELEASE_DATE="+RELEASE_DATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
		sb.append(",EXTERNAL_REFERENCE="+EXTERNAL_REFERENCE);
		sb.append(",RECORD_TYPE="+RECORD_TYPE);
		sb.append(",DESCRIPTION="+DESCRIPTION);
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
		sb.append(",NET_DEBIT_AMOUNT="+String.valueOf(NET_DEBIT_AMOUNT));
		sb.append(",GROSS_AMOUNT="+String.valueOf(GROSS_AMOUNT));
		sb.append(",SELLER_AMOUNT="+String.valueOf(SELLER_AMOUNT));
		sb.append(",MP_FEE_AMOUNT="+String.valueOf(MP_FEE_AMOUNT));
		sb.append(",FINANCING_FEE_AMOUNT="+String.valueOf(FINANCING_FEE_AMOUNT));
		sb.append(",SHIPPING_FEE_AMOUNT="+String.valueOf(SHIPPING_FEE_AMOUNT));
		sb.append(",TAXES_AMOUNT="+String.valueOf(TAXES_AMOUNT));
		sb.append(",COUPON_AMOUNT="+String.valueOf(COUPON_AMOUNT));
		sb.append(",INSTALLMENTS="+String.valueOf(INSTALLMENTS));
		sb.append(",PAYMENT_METHOD="+PAYMENT_METHOD);
		sb.append(",TAX_DETAIL="+TAX_DETAIL);
		sb.append(",TAX_AMOUNT_TELCO="+TAX_AMOUNT_TELCO);
		sb.append(",APPROVAL_DATE="+APPROVAL_DATE);
		sb.append(",POS_ID="+POS_ID);
		sb.append(",POS_NAME="+POS_NAME);
		sb.append(",EXTERNAL_POS_ID="+EXTERNAL_POS_ID);
		sb.append(",STORE_ID="+STORE_ID);
		sb.append(",STORE_NAME="+STORE_NAME);
		sb.append(",EXTERNAL_STORE_ID="+EXTERNAL_STORE_ID);
		sb.append(",CURRENCY="+CURRENCY);
		sb.append(",TAXES_DISAGGREGATED="+TAXES_DISAGGREGATED);
		sb.append(",SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",SHIPMENT_MODE="+SHIPMENT_MODE);
		sb.append(",ORDER_ID="+ORDER_ID);
		sb.append(",PACK_ID="+PACK_ID);
		sb.append(",METADATA="+METADATA);
		sb.append(",REFUND_ID="+REFUND_ID);
		sb.append(",EFFECTIVE_COUPON_AMOUNT="+EFFECTIVE_COUPON_AMOUNT);
		sb.append(",POI_ID="+POI_ID);
		sb.append(",CONCAT_FRETE="+CONCAT_FRETE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

		String currentVirtualComponent = null;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();
saida10Struct saida10 = new saida10Struct();
row52Struct row52 = new row52Struct();





	
	/**
	 * [tAggregateRow_3_AGGOUT begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGOUT", false);
		start_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida10");
					}
				
		int tos_count_tAggregateRow_3_AGGOUT = 0;
		

// ------------ Seems it is not used

java.util.Map hashAggreg_tAggregateRow_3 = new java.util.HashMap(); 

// ------------

	class UtilClass_tAggregateRow_3 { // G_OutBegin_AggR_144

		public double sd(Double[] data) {
	        final int n = data.length;
        	if (n < 2) {
	            return Double.NaN;
        	}
        	double d1 = 0d;
        	double d2 =0d;
	        
	        for (int i = 0; i < data.length; i++) {
            	d1 += (data[i]*data[i]);
            	d2 += data[i];
        	}
        
	        return Math.sqrt((n*d1 - d2*d2)/n/(n-1));
	    }
	    
		public void checkedIADD(byte a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		    byte r = (byte) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'short/Short'", "'byte/Byte'"));
		    }
		}
		
		public void checkedIADD(short a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		    short r = (short) (a + b);
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'int/Integer'", "'short/Short'"));
		    }
		}
		
		public void checkedIADD(int a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		    int r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'long/Long'", "'int/Integer'"));
		    }
		}
		
		public void checkedIADD(long a, long b, boolean checkTypeOverFlow, boolean checkUlp) {
		    long r = a + b;
		    if (checkTypeOverFlow && ((a ^ r) & (b ^ r)) < 0) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'long/Long'"));
		    }
		}
		
		public void checkedIADD(float a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    float minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
			    }
			}
			
		    if (checkTypeOverFlow && ((double) a + (double) b > (double) Float.MAX_VALUE) || ((double) a + (double) b < (double) -Float.MAX_VALUE)) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'double' or 'BigDecimal'", "'float/Float'"));
		    }
		}
		
		public void checkedIADD(double a, double b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, byte b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, short b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, int b, boolean checkTypeOverFlow, boolean checkUlp) {
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		public void checkedIADD(double a, float b, boolean checkTypeOverFlow, boolean checkUlp) {
		
			if(checkUlp) {
			    double minAddedValue = Math.ulp(a);
			    if (minAddedValue > Math.abs(b)) {
			        throw new RuntimeException(buildPrecisionMessage(String.valueOf(a), String.valueOf(a), "'BigDecimal'", "'double/Double'"));
			    }
			}
		
		    if (checkTypeOverFlow && (a + b > (double) Double.MAX_VALUE) || (a + b < -Double.MAX_VALUE )) {
		        throw new RuntimeException(buildOverflowMessage(String.valueOf(a), String.valueOf(b), "'BigDecimal'", "'double/Double'"));
		    }
		}
		
		private String buildOverflowMessage(String a, String b, String advicedTypes, String originalType) {
		    return "Type overflow when adding " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}
		
		private String buildPrecisionMessage(String a, String b, String advicedTypes, String originalType) {
		    return "The double precision is unsufficient to add the value " + b + " to " + a
		    + ", to resolve this problem, increase the precision by using "+ advicedTypes +" type in place of "+ originalType +".";
		}

	} // G_OutBegin_AggR_144

	UtilClass_tAggregateRow_3 utilClass_tAggregateRow_3 = new UtilClass_tAggregateRow_3();

	

	class AggOperationStruct_tAggregateRow_3 { // G_OutBegin_AggR_100

		private static final int DEFAULT_HASHCODE = 1;
	    private static final int PRIME = 31;
	    private int hashCode = DEFAULT_HASHCODE;
	    public boolean hashCodeDirty = true;

    				BigDecimal SHIPPING_ID;BigDecimal NET_CREDIT_AMOUNT_sum;
           			
        
	    @Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;
		
							result = prime * result + ((this.SHIPPING_ID == null) ? 0 : this.SHIPPING_ID.hashCode());
							
	    		this.hashCode = result;
	    		this.hashCodeDirty = false;		
			}
			return this.hashCode;
		}
		
		@Override
		public boolean equals(Object obj) {
			if (this == obj) return true;
			if (obj == null) return false;
			if (getClass() != obj.getClass()) return false;
			final AggOperationStruct_tAggregateRow_3 other = (AggOperationStruct_tAggregateRow_3) obj;
			
							if (this.SHIPPING_ID == null) {
								if (other.SHIPPING_ID != null) 
									return false;
							} else if (!this.SHIPPING_ID.equals(other.SHIPPING_ID)) 
								return false;
						
			
			return true;
		}
  
        
	} // G_OutBegin_AggR_100

	AggOperationStruct_tAggregateRow_3 operation_result_tAggregateRow_3 = null;
	AggOperationStruct_tAggregateRow_3 operation_finder_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();
	java.util.Map<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3> hash_tAggregateRow_3 = new java.util.HashMap<AggOperationStruct_tAggregateRow_3,AggOperationStruct_tAggregateRow_3>();
	

 



/**
 * [tAggregateRow_3_AGGOUT begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida10Struct saida10_tmp = new saida10Struct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row15Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row15Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row15Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row25.RELEASE_DATE = next_tHashInput_5.RELEASE_DATE;
	row25.SOURCE_ID = next_tHashInput_5.SOURCE_ID;
	row25.EXTERNAL_REFERENCE = next_tHashInput_5.EXTERNAL_REFERENCE;
	row25.RECORD_TYPE = next_tHashInput_5.RECORD_TYPE;
	row25.DESCRIPTION = next_tHashInput_5.DESCRIPTION;
	row25.NET_CREDIT_AMOUNT = next_tHashInput_5.NET_CREDIT_AMOUNT;
	row25.NET_DEBIT_AMOUNT = next_tHashInput_5.NET_DEBIT_AMOUNT;
	row25.GROSS_AMOUNT = next_tHashInput_5.GROSS_AMOUNT;
	row25.SELLER_AMOUNT = next_tHashInput_5.SELLER_AMOUNT;
	row25.MP_FEE_AMOUNT = next_tHashInput_5.MP_FEE_AMOUNT;
	row25.FINANCING_FEE_AMOUNT = next_tHashInput_5.FINANCING_FEE_AMOUNT;
	row25.SHIPPING_FEE_AMOUNT = next_tHashInput_5.SHIPPING_FEE_AMOUNT;
	row25.TAXES_AMOUNT = next_tHashInput_5.TAXES_AMOUNT;
	row25.COUPON_AMOUNT = next_tHashInput_5.COUPON_AMOUNT;
	row25.INSTALLMENTS = next_tHashInput_5.INSTALLMENTS;
	row25.PAYMENT_METHOD = next_tHashInput_5.PAYMENT_METHOD;
	row25.TAX_DETAIL = next_tHashInput_5.TAX_DETAIL;
	row25.TAX_AMOUNT_TELCO = next_tHashInput_5.TAX_AMOUNT_TELCO;
	row25.APPROVAL_DATE = next_tHashInput_5.APPROVAL_DATE;
	row25.POS_ID = next_tHashInput_5.POS_ID;
	row25.POS_NAME = next_tHashInput_5.POS_NAME;
	row25.EXTERNAL_POS_ID = next_tHashInput_5.EXTERNAL_POS_ID;
	row25.STORE_ID = next_tHashInput_5.STORE_ID;
	row25.STORE_NAME = next_tHashInput_5.STORE_NAME;
	row25.EXTERNAL_STORE_ID = next_tHashInput_5.EXTERNAL_STORE_ID;
	row25.CURRENCY = next_tHashInput_5.CURRENCY;
	row25.TAXES_DISAGGREGATED = next_tHashInput_5.TAXES_DISAGGREGATED;
	row25.SHIPPING_ID = next_tHashInput_5.SHIPPING_ID;
	row25.SHIPMENT_MODE = next_tHashInput_5.SHIPMENT_MODE;
	row25.ORDER_ID = next_tHashInput_5.ORDER_ID;
	row25.PACK_ID = next_tHashInput_5.PACK_ID;
	row25.METADATA = next_tHashInput_5.METADATA;
	row25.REFUND_ID = next_tHashInput_5.REFUND_ID;
	row25.EFFECTIVE_COUPON_AMOUNT = next_tHashInput_5.EFFECTIVE_COUPON_AMOUNT;
	row25.POI_ID = next_tHashInput_5.POI_ID;
	row25.CONCAT_FRETE = next_tHashInput_5.CONCAT_FRETE;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

saida10 = null;


// # Output table : 'saida10'
saida10_tmp.SHIPPING_ID = row25.SHIPPING_ID;
saida10_tmp.NET_CREDIT_AMOUNT = row25.NET_CREDIT_AMOUNT;
saida10 = saida10_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "saida10"
if(saida10 != null) { 



	
	/**
	 * [tAggregateRow_3_AGGOUT main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida10"
						
						);
					}
					
	
operation_finder_tAggregateRow_3.SHIPPING_ID = saida10.SHIPPING_ID;
			

	operation_finder_tAggregateRow_3.hashCodeDirty = true;
	
	operation_result_tAggregateRow_3 = hash_tAggregateRow_3.get(operation_finder_tAggregateRow_3);

	

	if(operation_result_tAggregateRow_3 == null) { // G_OutMain_AggR_001

		operation_result_tAggregateRow_3 = new AggOperationStruct_tAggregateRow_3();

		operation_result_tAggregateRow_3.SHIPPING_ID = operation_finder_tAggregateRow_3.SHIPPING_ID;
				
		
		

		hash_tAggregateRow_3.put(operation_result_tAggregateRow_3, operation_result_tAggregateRow_3);
	
	} // G_OutMain_AggR_001


	
					if(operation_result_tAggregateRow_3.NET_CREDIT_AMOUNT_sum == null) {
						operation_result_tAggregateRow_3.NET_CREDIT_AMOUNT_sum = new BigDecimal(0);
					}
					operation_result_tAggregateRow_3.NET_CREDIT_AMOUNT_sum = operation_result_tAggregateRow_3.NET_CREDIT_AMOUNT_sum.add(
						new BigDecimal(
							String.valueOf(
								saida10.NET_CREDIT_AMOUNT
							)
						)
					);
					


 


	tos_count_tAggregateRow_3_AGGOUT++;

/**
 * [tAggregateRow_3_AGGOUT main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGOUT process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT process_data_end ] stop
 */

} // End of branch "saida10"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGOUT end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida10");
			  	}
			  	
 

ok_Hash.put("tAggregateRow_3_AGGOUT", true);
end_Hash.put("tAggregateRow_3_AGGOUT", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGOUT end ] stop
 */


	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row52");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row52Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row52Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN begin ] start
	 */

	

	
		
		ok_Hash.put("tAggregateRow_3_AGGIN", false);
		start_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());
		
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	
		int tos_count_tAggregateRow_3_AGGIN = 0;
		

java.util.Collection<AggOperationStruct_tAggregateRow_3> values_tAggregateRow_3 = hash_tAggregateRow_3.values();

globalMap.put("tAggregateRow_3_NB_LINE", values_tAggregateRow_3.size());

for(AggOperationStruct_tAggregateRow_3 aggregated_row_tAggregateRow_3 : values_tAggregateRow_3) { // G_AggR_600



 



/**
 * [tAggregateRow_3_AGGIN begin ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN main ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

            				    row52.SHIPPING_ID = aggregated_row_tAggregateRow_3.SHIPPING_ID;
            				    
    								if(aggregated_row_tAggregateRow_3.NET_CREDIT_AMOUNT_sum != null) {
    								row52.NET_CREDIT_AMOUNT = aggregated_row_tAggregateRow_3.NET_CREDIT_AMOUNT_sum.doubleValue();
										
    								}else{
    								
    									row52.NET_CREDIT_AMOUNT = null;
    									
    								}
    								

 


	tos_count_tAggregateRow_3_AGGIN++;

/**
 * [tAggregateRow_3_AGGIN main ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN process_data_begin ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row52"
						
						);
					}
					



    
		row52Struct oneRow_tHashOutput_10 = new row52Struct();
				
					oneRow_tHashOutput_10.SHIPPING_ID = row52.SHIPPING_ID;
					oneRow_tHashOutput_10.NET_CREDIT_AMOUNT = row52.NET_CREDIT_AMOUNT;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tAggregateRow_3_AGGIN process_data_end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN process_data_end ] stop
 */
	
	/**
	 * [tAggregateRow_3_AGGIN end ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

} // G_AggR_600

 

ok_Hash.put("tAggregateRow_3_AGGIN", true);
end_Hash.put("tAggregateRow_3_AGGIN", System.currentTimeMillis());




/**
 * [tAggregateRow_3_AGGIN end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row52");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */












				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
					te.setVirtualComponentName(currentVirtualComponent);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
							//free memory for "tAggregateRow_3_AGGIN"
							globalMap.remove("tAggregateRow_3");
						
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGOUT finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGOUT";
	
	

 



/**
 * [tAggregateRow_3_AGGOUT finally ] stop
 */

	
	/**
	 * [tAggregateRow_3_AGGIN finally ] start
	 */

	

	
	
		currentVirtualComponent = "tAggregateRow_3";
	
	currentComponent="tAggregateRow_3_AGGIN";
	
	

 



/**
 * [tAggregateRow_3_AGGIN finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class saida11Struct implements routines.system.IPersistableRow<saida11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double tb3_vl_venda;

				public Double getTb3_vl_venda () {
					return this.tb3_vl_venda;
				}

				public Boolean tb3_vl_vendaIsNullable(){
				    return true;
				}
				public Boolean tb3_vl_vendaIsKey(){
				    return false;
				}
				public Integer tb3_vl_vendaLength(){
				    return null;
				}
				public Integer tb3_vl_vendaPrecision(){
				    return null;
				}
				public String tb3_vl_vendaDefault(){
				
					return null;
				
				}
				public String tb3_vl_vendaComment(){
				
				    return "";
				
				}
				public String tb3_vl_vendaPattern(){
				
					return "";
				
				}
				public String tb3_vl_vendaOriginalDbColumnName(){
				
					return "tb3_vl_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tb3_vl_venda = null;
           				} else {
           			    	this.tb3_vl_venda = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tb3_vl_venda = null;
           				} else {
           			    	this.tb3_vl_venda = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.tb3_vl_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tb3_vl_venda);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.tb3_vl_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tb3_vl_venda);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",tb3_vl_venda="+String.valueOf(tb3_vl_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(saida11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double tb3_vl_venda;

				public Double getTb3_vl_venda () {
					return this.tb3_vl_venda;
				}

				public Boolean tb3_vl_vendaIsNullable(){
				    return true;
				}
				public Boolean tb3_vl_vendaIsKey(){
				    return false;
				}
				public Integer tb3_vl_vendaLength(){
				    return null;
				}
				public Integer tb3_vl_vendaPrecision(){
				    return null;
				}
				public String tb3_vl_vendaDefault(){
				
					return null;
				
				}
				public String tb3_vl_vendaComment(){
				
				    return "";
				
				}
				public String tb3_vl_vendaPattern(){
				
					return "";
				
				}
				public String tb3_vl_vendaOriginalDbColumnName(){
				
					return "tb3_vl_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tb3_vl_venda = null;
           				} else {
           			    	this.tb3_vl_venda = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tb3_vl_venda = null;
           				} else {
           			    	this.tb3_vl_venda = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.tb3_vl_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tb3_vl_venda);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// Double
				
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
					// Double
				
						if(this.tb3_vl_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tb3_vl_venda);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",tb3_vl_venda="+String.valueOf(tb3_vl_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();
saida11Struct saida11 = new saida11Struct();





	
	/**
	 * [tHashOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_11", false);
		start_Hash.put("tHashOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"saida11");
					}
				
		int tos_count_tHashOutput_11 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida11Struct> tHashFile_tHashOutput_11 = null;
		String hashKey_tHashOutput_11 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_11";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_11)){
			    if(mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11) == null){
	      		    mf_tHashOutput_11.getResourceMap().put(hashKey_tHashOutput_11, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida11Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }else{
			    	tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }
			}
        int nb_line_tHashOutput_11 = 0;

 



/**
 * [tHashOutput_11 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
saida11Struct saida11_tmp = new saida11Struct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "select distinct CD_PRODUTO,\n       VL_CUSTO,\n       TABELA3_PRECO_VENDA as tb3_vl_venda\n  from dw_t_produto_empresa"
+"\n  where cd_empresa = '001'";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row17.CD_PRODUTO = null;
							} else {
	                         		
        	row17.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row17.VL_CUSTO = null;
							} else {
	                         		
            row17.VL_CUSTO = rs_tDBInput_4.getDouble(2);
            if(rs_tDBInput_4.wasNull()){
                    row17.VL_CUSTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row17.tb3_vl_venda = null;
							} else {
	                         		
            row17.tb3_vl_venda = rs_tDBInput_4.getDouble(3);
            if(rs_tDBInput_4.wasNull()){
                    row17.tb3_vl_venda = null;
            }
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

saida11 = null;


// # Output table : 'saida11'
saida11_tmp.CD_PRODUTO = row17.CD_PRODUTO;
saida11_tmp.VL_CUSTO = row17.VL_CUSTO;
saida11_tmp.tb3_vl_venda = row17.tb3_vl_venda;
saida11 = saida11_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "saida11"
if(saida11 != null) { 



	
	/**
	 * [tHashOutput_11 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"saida11"
						
						);
					}
					



    
		saida11Struct oneRow_tHashOutput_11 = new saida11Struct();
				
					oneRow_tHashOutput_11.CD_PRODUTO = saida11.CD_PRODUTO;
					oneRow_tHashOutput_11.VL_CUSTO = saida11.VL_CUSTO;
					oneRow_tHashOutput_11.tb3_vl_venda = saida11.tb3_vl_venda;
		
        tHashFile_tHashOutput_11.put(oneRow_tHashOutput_11);
        nb_line_tHashOutput_11 ++;

 


	tos_count_tHashOutput_11++;

/**
 * [tHashOutput_11 main ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_end ] stop
 */

} // End of branch "saida11"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tHashOutput_11 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
globalMap.put("tHashOutput_11_NB_LINE", nb_line_tHashOutput_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"saida11");
			  	}
			  	
 

ok_Hash.put("tHashOutput_11", true);
end_Hash.put("tHashOutput_11", System.currentTimeMillis());




/**
 * [tHashOutput_11 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tHashOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String concat;

				public String getConcat () {
					return this.concat;
				}

				public Boolean concatIsNullable(){
				    return true;
				}
				public Boolean concatIsKey(){
				    return false;
				}
				public Integer concatLength(){
				    return null;
				}
				public Integer concatPrecision(){
				    return null;
				}
				public String concatDefault(){
				
					return null;
				
				}
				public String concatComment(){
				
				    return "";
				
				}
				public String concatPattern(){
				
					return "";
				
				}
				public String concatOriginalDbColumnName(){
				
					return "concat";
				
				}

				
			    public String Conta;

				public String getConta () {
					return this.Conta;
				}

				public Boolean ContaIsNullable(){
				    return true;
				}
				public Boolean ContaIsKey(){
				    return false;
				}
				public Integer ContaLength(){
				    return null;
				}
				public Integer ContaPrecision(){
				    return null;
				}
				public String ContaDefault(){
				
					return null;
				
				}
				public String ContaComment(){
				
				    return "";
				
				}
				public String ContaPattern(){
				
					return "";
				
				}
				public String ContaOriginalDbColumnName(){
				
					return "Conta";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public Double Comissao_Liquida;

				public Double getComissao_Liquida () {
					return this.Comissao_Liquida;
				}

				public Boolean Comissao_LiquidaIsNullable(){
				    return true;
				}
				public Boolean Comissao_LiquidaIsKey(){
				    return false;
				}
				public Integer Comissao_LiquidaLength(){
				    return null;
				}
				public Integer Comissao_LiquidaPrecision(){
				    return null;
				}
				public String Comissao_LiquidaDefault(){
				
					return null;
				
				}
				public String Comissao_LiquidaComment(){
				
				    return "";
				
				}
				public String Comissao_LiquidaPattern(){
				
					return "";
				
				}
				public String Comissao_LiquidaOriginalDbColumnName(){
				
					return "Comissao_Liquida";
				
				}

				
			    public Double desconto;

				public Double getDesconto () {
					return this.desconto;
				}

				public Boolean descontoIsNullable(){
				    return true;
				}
				public Boolean descontoIsKey(){
				    return false;
				}
				public Integer descontoLength(){
				    return null;
				}
				public Integer descontoPrecision(){
				    return null;
				}
				public String descontoDefault(){
				
					return null;
				
				}
				public String descontoComment(){
				
				    return "";
				
				}
				public String descontoPattern(){
				
					return "";
				
				}
				public String descontoOriginalDbColumnName(){
				
					return "desconto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
					this.Conta = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Categoria = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao_Liquida = null;
           				} else {
           			    	this.Comissao_Liquida = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.desconto = null;
           				} else {
           			    	this.desconto = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
					this.Conta = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Categoria = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao_Liquida = null;
           				} else {
           			    	this.Comissao_Liquida = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.desconto = null;
           				} else {
           			    	this.desconto = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
					// String
				
						writeString(this.Conta,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// Double
				
						if(this.Comissao_Liquida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao_Liquida);
		            	}
					
					// Double
				
						if(this.desconto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.desconto);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
					// String
				
						writeString(this.Conta,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// Double
				
						if(this.Comissao_Liquida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao_Liquida);
		            	}
					
					// Double
				
						if(this.desconto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.desconto);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("concat="+concat);
		sb.append(",Conta="+Conta);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Categoria="+Categoria);
		sb.append(",Comissao_Liquida="+String.valueOf(Comissao_Liquida));
		sb.append(",desconto="+String.valueOf(desconto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row38Struct implements routines.system.IPersistableRow<row38Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String concat;

				public String getConcat () {
					return this.concat;
				}

				public Boolean concatIsNullable(){
				    return true;
				}
				public Boolean concatIsKey(){
				    return false;
				}
				public Integer concatLength(){
				    return null;
				}
				public Integer concatPrecision(){
				    return null;
				}
				public String concatDefault(){
				
					return null;
				
				}
				public String concatComment(){
				
				    return "";
				
				}
				public String concatPattern(){
				
					return "";
				
				}
				public String concatOriginalDbColumnName(){
				
					return "concat";
				
				}

				
			    public String Conta;

				public String getConta () {
					return this.Conta;
				}

				public Boolean ContaIsNullable(){
				    return true;
				}
				public Boolean ContaIsKey(){
				    return false;
				}
				public Integer ContaLength(){
				    return null;
				}
				public Integer ContaPrecision(){
				    return null;
				}
				public String ContaDefault(){
				
					return null;
				
				}
				public String ContaComment(){
				
				    return "";
				
				}
				public String ContaPattern(){
				
					return "";
				
				}
				public String ContaOriginalDbColumnName(){
				
					return "Conta";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public String Comissao_Liquida;

				public String getComissao_Liquida () {
					return this.Comissao_Liquida;
				}

				public Boolean Comissao_LiquidaIsNullable(){
				    return true;
				}
				public Boolean Comissao_LiquidaIsKey(){
				    return false;
				}
				public Integer Comissao_LiquidaLength(){
				    return null;
				}
				public Integer Comissao_LiquidaPrecision(){
				    return null;
				}
				public String Comissao_LiquidaDefault(){
				
					return null;
				
				}
				public String Comissao_LiquidaComment(){
				
				    return "";
				
				}
				public String Comissao_LiquidaPattern(){
				
					return "";
				
				}
				public String Comissao_LiquidaOriginalDbColumnName(){
				
					return "Comissao_Liquida";
				
				}

				
			    public String desconto;

				public String getDesconto () {
					return this.desconto;
				}

				public Boolean descontoIsNullable(){
				    return true;
				}
				public Boolean descontoIsKey(){
				    return false;
				}
				public Integer descontoLength(){
				    return null;
				}
				public Integer descontoPrecision(){
				    return null;
				}
				public String descontoDefault(){
				
					return null;
				
				}
				public String descontoComment(){
				
				    return "";
				
				}
				public String descontoPattern(){
				
					return "";
				
				}
				public String descontoOriginalDbColumnName(){
				
					return "desconto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
					this.Conta = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Comissao_Liquida = readString(dis);
					
					this.desconto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
					this.Conta = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Comissao_Liquida = readString(dis);
					
					this.desconto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
					// String
				
						writeString(this.Conta,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Comissao_Liquida,dos);
					
					// String
				
						writeString(this.desconto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
					// String
				
						writeString(this.Conta,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Comissao_Liquida,dos);
					
					// String
				
						writeString(this.desconto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("concat="+concat);
		sb.append(",Conta="+Conta);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Categoria="+Categoria);
		sb.append(",Comissao_Liquida="+Comissao_Liquida);
		sb.append(",desconto="+desconto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String concat;

				public String getConcat () {
					return this.concat;
				}

				public Boolean concatIsNullable(){
				    return true;
				}
				public Boolean concatIsKey(){
				    return false;
				}
				public Integer concatLength(){
				    return null;
				}
				public Integer concatPrecision(){
				    return null;
				}
				public String concatDefault(){
				
					return null;
				
				}
				public String concatComment(){
				
				    return "";
				
				}
				public String concatPattern(){
				
					return "";
				
				}
				public String concatOriginalDbColumnName(){
				
					return "concat";
				
				}

				
			    public String Conta;

				public String getConta () {
					return this.Conta;
				}

				public Boolean ContaIsNullable(){
				    return true;
				}
				public Boolean ContaIsKey(){
				    return false;
				}
				public Integer ContaLength(){
				    return null;
				}
				public Integer ContaPrecision(){
				    return null;
				}
				public String ContaDefault(){
				
					return null;
				
				}
				public String ContaComment(){
				
				    return "";
				
				}
				public String ContaPattern(){
				
					return "";
				
				}
				public String ContaOriginalDbColumnName(){
				
					return "Conta";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public String Comissao_Liquida;

				public String getComissao_Liquida () {
					return this.Comissao_Liquida;
				}

				public Boolean Comissao_LiquidaIsNullable(){
				    return true;
				}
				public Boolean Comissao_LiquidaIsKey(){
				    return false;
				}
				public Integer Comissao_LiquidaLength(){
				    return null;
				}
				public Integer Comissao_LiquidaPrecision(){
				    return null;
				}
				public String Comissao_LiquidaDefault(){
				
					return null;
				
				}
				public String Comissao_LiquidaComment(){
				
				    return "";
				
				}
				public String Comissao_LiquidaPattern(){
				
					return "";
				
				}
				public String Comissao_LiquidaOriginalDbColumnName(){
				
					return "Comissao_Liquida";
				
				}

				
			    public String desconto;

				public String getDesconto () {
					return this.desconto;
				}

				public Boolean descontoIsNullable(){
				    return true;
				}
				public Boolean descontoIsKey(){
				    return false;
				}
				public Integer descontoLength(){
				    return null;
				}
				public Integer descontoPrecision(){
				    return null;
				}
				public String descontoDefault(){
				
					return null;
				
				}
				public String descontoComment(){
				
				    return "";
				
				}
				public String descontoPattern(){
				
					return "";
				
				}
				public String descontoOriginalDbColumnName(){
				
					return "desconto";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
					this.Conta = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Comissao_Liquida = readString(dis);
					
					this.desconto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
					this.Conta = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Comissao_Liquida = readString(dis);
					
					this.desconto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
					// String
				
						writeString(this.Conta,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Comissao_Liquida,dos);
					
					// String
				
						writeString(this.desconto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
					// String
				
						writeString(this.Conta,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Comissao_Liquida,dos);
					
					// String
				
						writeString(this.desconto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("concat="+concat);
		sb.append(",Conta="+Conta);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Categoria="+Categoria);
		sb.append(",Comissao_Liquida="+Comissao_Liquida);
		sb.append(",desconto="+desconto);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();
row38Struct row38 = new row38Struct();
row24Struct row24 = new row24Struct();






	
	/**
	 * [tHashOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_12", false);
		start_Hash.put("tHashOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tHashOutput_12 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct> tHashFile_tHashOutput_12 = null;
		String hashKey_tHashOutput_12 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_12";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_12)){
			    if(mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12) == null){
	      		    mf_tHashOutput_12.getResourceMap().put(hashKey_tHashOutput_12, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }else{
			    	tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }
			}
        int nb_line_tHashOutput_12 = 0;

 



/**
 * [tHashOutput_12 begin ] stop
 */



	
	/**
	 * [tConvertType_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tConvertType_3", false);
		start_Hash.put("tConvertType_3", System.currentTimeMillis());
		
	
	currentComponent="tConvertType_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tConvertType_3 = 0;
		
	int nb_line_tConvertType_3 = 0;  
 



/**
 * [tConvertType_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_7", false);
		start_Hash.put("tJavaRow_7", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tJavaRow_7 = 0;
		

int nb_line_tJavaRow_7 = 0;

 



/**
 * [tJavaRow_7 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_2", false);
		start_Hash.put("tFileInputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_2";
	
	
		int tos_count_tFileInputExcel_2 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_2 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:MChFpW8N0AR7nn9fxB83m2ftqMZWt7LqFH6Sxw==");
        String password_tFileInputExcel_2 = decryptedPassword_tFileInputExcel_2;
        if (password_tFileInputExcel_2.isEmpty()){
            password_tFileInputExcel_2 = null;
        }
			class RegexUtil_tFileInputExcel_2 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_2 regexUtil_tFileInputExcel_2 = new RegexUtil_tFileInputExcel_2();

		Object source_tFileInputExcel_2 = "//storage/Setores/Power BI/Dados/Conciliacao/Planilhas/Mercado Livre Palacio.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_2 = null;
		
		if(source_tFileInputExcel_2 instanceof String){
			workbook_tFileInputExcel_2 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_2), password_tFileInputExcel_2, true);
		} else if(source_tFileInputExcel_2 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_2 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_2, password_tFileInputExcel_2);
		} else{
			workbook_tFileInputExcel_2 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_2 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
        sheetList_tFileInputExcel_2.addAll(regexUtil_tFileInputExcel_2.getSheets(workbook_tFileInputExcel_2, "Alíquotas", false));
    	if(sheetList_tFileInputExcel_2.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_2 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_2 : sheetList_tFileInputExcel_2) {
			if(sheet_FilterNull_tFileInputExcel_2!=null && sheetList_FilterNull_tFileInputExcel_2.iterator()!=null && sheet_FilterNull_tFileInputExcel_2.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_2.add(sheet_FilterNull_tFileInputExcel_2);
			}
		}
		sheetList_tFileInputExcel_2 = sheetList_FilterNull_tFileInputExcel_2;
	if(sheetList_tFileInputExcel_2.size()>0){
		int nb_line_tFileInputExcel_2 = 0;

        int begin_line_tFileInputExcel_2 = 1;

        int footer_input_tFileInputExcel_2 = 0;

        int end_line_tFileInputExcel_2=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_2:sheetList_tFileInputExcel_2){
			end_line_tFileInputExcel_2+=(sheet_tFileInputExcel_2.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_2 -= footer_input_tFileInputExcel_2;
        int limit_tFileInputExcel_2 = -1;
        int start_column_tFileInputExcel_2 = 1-1;
        int end_column_tFileInputExcel_2 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_2 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_2 = sheetList_tFileInputExcel_2.get(0);
        int rowCount_tFileInputExcel_2 = 0;
        int sheetIndex_tFileInputExcel_2 = 0;
        int currentRows_tFileInputExcel_2 = (sheetList_tFileInputExcel_2.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_2 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_2 = df_tFileInputExcel_2.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_2 = begin_line_tFileInputExcel_2; i_tFileInputExcel_2 < end_line_tFileInputExcel_2; i_tFileInputExcel_2++){

        	int emptyColumnCount_tFileInputExcel_2 = 0;

        	if (limit_tFileInputExcel_2 != -1 && nb_line_tFileInputExcel_2 >= limit_tFileInputExcel_2) {
        		break;
        	}

            while (i_tFileInputExcel_2 >= rowCount_tFileInputExcel_2 + currentRows_tFileInputExcel_2) {
                rowCount_tFileInputExcel_2 += currentRows_tFileInputExcel_2;
                sheet_tFileInputExcel_2 = sheetList_tFileInputExcel_2.get(++sheetIndex_tFileInputExcel_2);
                currentRows_tFileInputExcel_2 = (sheet_tFileInputExcel_2.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_2_CURRENT_SHEET",sheet_tFileInputExcel_2.getSheetName());
            if (rowCount_tFileInputExcel_2 <= i_tFileInputExcel_2) {
                row_tFileInputExcel_2 = sheet_tFileInputExcel_2.getRow(i_tFileInputExcel_2 - rowCount_tFileInputExcel_2);
            }
		    row23 = null;
					int tempRowLength_tFileInputExcel_2 = 6;
				
				int columnIndex_tFileInputExcel_2 = 0;
			
			String[] temp_row_tFileInputExcel_2 = new String[tempRowLength_tFileInputExcel_2];
			int excel_end_column_tFileInputExcel_2;
			if(row_tFileInputExcel_2==null){
				excel_end_column_tFileInputExcel_2=0;
			}else{
				excel_end_column_tFileInputExcel_2=row_tFileInputExcel_2.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_2;
			if(end_column_tFileInputExcel_2 == -1){
				actual_end_column_tFileInputExcel_2 = excel_end_column_tFileInputExcel_2;
			}
			else{
				actual_end_column_tFileInputExcel_2 = end_column_tFileInputExcel_2 >	excel_end_column_tFileInputExcel_2 ? excel_end_column_tFileInputExcel_2 : end_column_tFileInputExcel_2;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_2 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_2;i++){
				if(i + start_column_tFileInputExcel_2 < actual_end_column_tFileInputExcel_2){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_2 = row_tFileInputExcel_2.getCell(i + start_column_tFileInputExcel_2);
					if(cell_tFileInputExcel_2!=null){
					switch (cell_tFileInputExcel_2.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_2)) {
									temp_row_tFileInputExcel_2[i] =cell_tFileInputExcel_2.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_2[i] = df_tFileInputExcel_2.format(cell_tFileInputExcel_2.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_2[i] =String.valueOf(cell_tFileInputExcel_2.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_2.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_2)) {
											temp_row_tFileInputExcel_2[i] =cell_tFileInputExcel_2.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_2 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_2.getNumericCellValue());
										temp_row_tFileInputExcel_2[i] = ne_tFileInputExcel_2.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_2[i] =String.valueOf(cell_tFileInputExcel_2.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_2[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_2[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_2[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_2[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_2 = false;
			row23 = new row23Struct();
			int curColNum_tFileInputExcel_2 = -1;
			String curColName_tFileInputExcel_2 = "";
			try{
							columnIndex_tFileInputExcel_2 = 0;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "concat";

				row23.concat = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row23.concat = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 1;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "Conta";

				row23.Conta = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row23.Conta = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 2;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "CategoriaID";

				row23.CategoriaID = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row23.CategoriaID = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 3;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "Categoria";

				row23.Categoria = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row23.Categoria = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 4;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "Comissao_Liquida";

				row23.Comissao_Liquida = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row23.Comissao_Liquida = null;
				emptyColumnCount_tFileInputExcel_2++;
			}
							columnIndex_tFileInputExcel_2 = 5;
						
			if( temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
				curColNum_tFileInputExcel_2=columnIndex_tFileInputExcel_2 + start_column_tFileInputExcel_2 + 1;
				curColName_tFileInputExcel_2 = "desconto";

				row23.desconto = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
			}else{
				row23.desconto = null;
				emptyColumnCount_tFileInputExcel_2++;
			}

				nb_line_tFileInputExcel_2++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_2_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_2 = true;
					 System.err.println(e.getMessage());
					 row23 = null;
			}


		



 



/**
 * [tFileInputExcel_2 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 


	tos_count_tFileInputExcel_2++;

/**
 * [tFileInputExcel_2 main ] stop
 */
	
	/**
	 * [tFileInputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 



/**
 * [tFileInputExcel_2 process_data_begin ] stop
 */
// Start of branch "row23"
if(row23 != null) { 



	
	/**
	 * [tJavaRow_7 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					

    //Code generate according to input schema and output schema
row38.concat = row23.concat;
row38.Conta = row23.Conta;
row38.CategoriaID = row23.CategoriaID;
row38.Categoria = row23.Categoria;
//row38.Comissao_Liquida = row23.Comissao_Liquida;
//row38.desconto = row23.desconto;

row38.Comissao_Liquida = row23.Comissao_Liquida.replaceAll(",", ".");
row38.desconto = row23.desconto.replaceAll(",", ".");
    nb_line_tJavaRow_7++;   

 


	tos_count_tJavaRow_7++;

/**
 * [tJavaRow_7 main ] stop
 */
	
	/**
	 * [tJavaRow_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_begin ] stop
 */

	
	/**
	 * [tConvertType_3 main ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					


  row24 = new row24Struct();
  boolean bHasError_tConvertType_3 = false;       
      try {
          row24.concat = TypeConvert.String2String(row38.concat);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_3 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row24.Conta = TypeConvert.String2String(row38.Conta);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_3 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row24.CategoriaID = TypeConvert.String2String(row38.CategoriaID);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_3 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row24.Categoria = TypeConvert.String2String(row38.Categoria);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_3 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row24.Comissao_Liquida = TypeConvert.String2Double(row38.Comissao_Liquida);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_3 = true;        
          System.err.println(e.getMessage());          
      }     
      try {
          row24.desconto = TypeConvert.String2Double(row38.desconto);
      } catch (java.lang.Exception e){
globalMap.put("tConvertType_3_ERROR_MESSAGE",e.getMessage());
        bHasError_tConvertType_3 = true;        
          System.err.println(e.getMessage());          
      }
      if (bHasError_tConvertType_3) { row24 = null;}

  nb_line_tConvertType_3 ++ ;

 


	tos_count_tConvertType_3++;

/**
 * [tConvertType_3 main ] stop
 */
	
	/**
	 * [tConvertType_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tHashOutput_12 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					



    
		row24Struct oneRow_tHashOutput_12 = new row24Struct();
				
					oneRow_tHashOutput_12.concat = row24.concat;
					oneRow_tHashOutput_12.Conta = row24.Conta;
					oneRow_tHashOutput_12.CategoriaID = row24.CategoriaID;
					oneRow_tHashOutput_12.Categoria = row24.Categoria;
					oneRow_tHashOutput_12.Comissao_Liquida = row24.Comissao_Liquida;
					oneRow_tHashOutput_12.desconto = row24.desconto;
		
        tHashFile_tHashOutput_12.put(oneRow_tHashOutput_12);
        nb_line_tHashOutput_12 ++;

 


	tos_count_tHashOutput_12++;

/**
 * [tHashOutput_12 main ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tConvertType_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 process_data_end ] stop
 */

} // End of branch "row23"




	
	/**
	 * [tFileInputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 



/**
 * [tFileInputExcel_2 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_2_NB_LINE",nb_line_tFileInputExcel_2);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_2 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_2.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_2", true);
end_Hash.put("tFileInputExcel_2", System.currentTimeMillis());




/**
 * [tFileInputExcel_2 end ] stop
 */

	
	/**
	 * [tJavaRow_7 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

globalMap.put("tJavaRow_7_NB_LINE",nb_line_tJavaRow_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tJavaRow_7", true);
end_Hash.put("tJavaRow_7", System.currentTimeMillis());




/**
 * [tJavaRow_7 end ] stop
 */

	
	/**
	 * [tConvertType_3 end ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	
      globalMap.put("tConvertType_3_NB_LINE", nb_line_tConvertType_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tConvertType_3", true);
end_Hash.put("tConvertType_3", System.currentTimeMillis());




/**
 * [tConvertType_3 end ] stop
 */

	
	/**
	 * [tHashOutput_12 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
globalMap.put("tHashOutput_12_NB_LINE", nb_line_tHashOutput_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tHashOutput_12", true);
end_Hash.put("tHashOutput_12", System.currentTimeMillis());




/**
 * [tHashOutput_12 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_2";
	
	

 



/**
 * [tFileInputExcel_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_7 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_7";
	
	

 



/**
 * [tJavaRow_7 finally ] stop
 */

	
	/**
	 * [tConvertType_3 finally ] start
	 */

	

	
	
	currentComponent="tConvertType_3";
	
	

 



/**
 * [tConvertType_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", 1);
	}
	


public static class row210Struct implements routines.system.IPersistableRow<row210Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String MLB;

				public String getMLB () {
					return this.MLB;
				}

				public Boolean MLBIsNullable(){
				    return true;
				}
				public Boolean MLBIsKey(){
				    return false;
				}
				public Integer MLBLength(){
				    return null;
				}
				public Integer MLBPrecision(){
				    return null;
				}
				public String MLBDefault(){
				
					return null;
				
				}
				public String MLBComment(){
				
				    return "";
				
				}
				public String MLBPattern(){
				
					return "";
				
				}
				public String MLBOriginalDbColumnName(){
				
					return "MLB";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Apelido;

				public String getApelido () {
					return this.Apelido;
				}

				public Boolean ApelidoIsNullable(){
				    return true;
				}
				public Boolean ApelidoIsKey(){
				    return false;
				}
				public Integer ApelidoLength(){
				    return null;
				}
				public Integer ApelidoPrecision(){
				    return null;
				}
				public String ApelidoDefault(){
				
					return null;
				
				}
				public String ApelidoComment(){
				
				    return "";
				
				}
				public String ApelidoPattern(){
				
					return "";
				
				}
				public String ApelidoOriginalDbColumnName(){
				
					return "Apelido";
				
				}

				
			    public String Loja_Oficial;

				public String getLoja_Oficial () {
					return this.Loja_Oficial;
				}

				public Boolean Loja_OficialIsNullable(){
				    return true;
				}
				public Boolean Loja_OficialIsKey(){
				    return false;
				}
				public Integer Loja_OficialLength(){
				    return null;
				}
				public Integer Loja_OficialPrecision(){
				    return null;
				}
				public String Loja_OficialDefault(){
				
					return null;
				
				}
				public String Loja_OficialComment(){
				
				    return "";
				
				}
				public String Loja_OficialPattern(){
				
					return "";
				
				}
				public String Loja_OficialOriginalDbColumnName(){
				
					return "Loja_Oficial";
				
				}

				
			    public String Titulo;

				public String getTitulo () {
					return this.Titulo;
				}

				public Boolean TituloIsNullable(){
				    return true;
				}
				public Boolean TituloIsKey(){
				    return false;
				}
				public Integer TituloLength(){
				    return null;
				}
				public Integer TituloPrecision(){
				    return null;
				}
				public String TituloDefault(){
				
					return null;
				
				}
				public String TituloComment(){
				
				    return "";
				
				}
				public String TituloPattern(){
				
					return "";
				
				}
				public String TituloOriginalDbColumnName(){
				
					return "Titulo";
				
				}

				
			    public String Status;

				public String getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String Preco;

				public String getPreco () {
					return this.Preco;
				}

				public Boolean PrecoIsNullable(){
				    return true;
				}
				public Boolean PrecoIsKey(){
				    return false;
				}
				public Integer PrecoLength(){
				    return null;
				}
				public Integer PrecoPrecision(){
				    return null;
				}
				public String PrecoDefault(){
				
					return null;
				
				}
				public String PrecoComment(){
				
				    return "";
				
				}
				public String PrecoPattern(){
				
					return "";
				
				}
				public String PrecoOriginalDbColumnName(){
				
					return "Preco";
				
				}

				
			    public String Vendas;

				public String getVendas () {
					return this.Vendas;
				}

				public Boolean VendasIsNullable(){
				    return true;
				}
				public Boolean VendasIsKey(){
				    return false;
				}
				public Integer VendasLength(){
				    return null;
				}
				public Integer VendasPrecision(){
				    return null;
				}
				public String VendasDefault(){
				
					return null;
				
				}
				public String VendasComment(){
				
				    return "";
				
				}
				public String VendasPattern(){
				
					return "";
				
				}
				public String VendasOriginalDbColumnName(){
				
					return "Vendas";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public String Porcentagem_cobrada_do_ML;

				public String getPorcentagem_cobrada_do_ML () {
					return this.Porcentagem_cobrada_do_ML;
				}

				public Boolean Porcentagem_cobrada_do_MLIsNullable(){
				    return true;
				}
				public Boolean Porcentagem_cobrada_do_MLIsKey(){
				    return false;
				}
				public Integer Porcentagem_cobrada_do_MLLength(){
				    return null;
				}
				public Integer Porcentagem_cobrada_do_MLPrecision(){
				    return null;
				}
				public String Porcentagem_cobrada_do_MLDefault(){
				
					return null;
				
				}
				public String Porcentagem_cobrada_do_MLComment(){
				
				    return "";
				
				}
				public String Porcentagem_cobrada_do_MLPattern(){
				
					return "";
				
				}
				public String Porcentagem_cobrada_do_MLOriginalDbColumnName(){
				
					return "Porcentagem_cobrada_do_ML";
				
				}

				
			    public String Modo_Entrega;

				public String getModo_Entrega () {
					return this.Modo_Entrega;
				}

				public Boolean Modo_EntregaIsNullable(){
				    return true;
				}
				public Boolean Modo_EntregaIsKey(){
				    return false;
				}
				public Integer Modo_EntregaLength(){
				    return null;
				}
				public Integer Modo_EntregaPrecision(){
				    return null;
				}
				public String Modo_EntregaDefault(){
				
					return null;
				
				}
				public String Modo_EntregaComment(){
				
				    return "";
				
				}
				public String Modo_EntregaPattern(){
				
					return "";
				
				}
				public String Modo_EntregaOriginalDbColumnName(){
				
					return "Modo_Entrega";
				
				}

				
			    public String Frete_Gratis;

				public String getFrete_Gratis () {
					return this.Frete_Gratis;
				}

				public Boolean Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Frete_GratisIsKey(){
				    return false;
				}
				public Integer Frete_GratisLength(){
				    return null;
				}
				public Integer Frete_GratisPrecision(){
				    return null;
				}
				public String Frete_GratisDefault(){
				
					return null;
				
				}
				public String Frete_GratisComment(){
				
				    return "";
				
				}
				public String Frete_GratisPattern(){
				
					return "";
				
				}
				public String Frete_GratisOriginalDbColumnName(){
				
					return "Frete_Gratis";
				
				}

				
			    public String Tarifa_Frete_Gratis;

				public String getTarifa_Frete_Gratis () {
					return this.Tarifa_Frete_Gratis;
				}

				public Boolean Tarifa_Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Tarifa_Frete_GratisIsKey(){
				    return false;
				}
				public Integer Tarifa_Frete_GratisLength(){
				    return null;
				}
				public Integer Tarifa_Frete_GratisPrecision(){
				    return null;
				}
				public String Tarifa_Frete_GratisDefault(){
				
					return null;
				
				}
				public String Tarifa_Frete_GratisComment(){
				
				    return "";
				
				}
				public String Tarifa_Frete_GratisPattern(){
				
					return "";
				
				}
				public String Tarifa_Frete_GratisOriginalDbColumnName(){
				
					return "Tarifa_Frete_Gratis";
				
				}

				
			    public String Estoque;

				public String getEstoque () {
					return this.Estoque;
				}

				public Boolean EstoqueIsNullable(){
				    return true;
				}
				public Boolean EstoqueIsKey(){
				    return false;
				}
				public Integer EstoqueLength(){
				    return null;
				}
				public Integer EstoquePrecision(){
				    return null;
				}
				public String EstoqueDefault(){
				
					return null;
				
				}
				public String EstoqueComment(){
				
				    return "";
				
				}
				public String EstoquePattern(){
				
					return "";
				
				}
				public String EstoqueOriginalDbColumnName(){
				
					return "Estoque";
				
				}

				
			    public String Dimensoes;

				public String getDimensoes () {
					return this.Dimensoes;
				}

				public Boolean DimensoesIsNullable(){
				    return true;
				}
				public Boolean DimensoesIsKey(){
				    return false;
				}
				public Integer DimensoesLength(){
				    return null;
				}
				public Integer DimensoesPrecision(){
				    return null;
				}
				public String DimensoesDefault(){
				
					return null;
				
				}
				public String DimensoesComment(){
				
				    return "";
				
				}
				public String DimensoesPattern(){
				
					return "";
				
				}
				public String DimensoesOriginalDbColumnName(){
				
					return "Dimensoes";
				
				}

				
			    public String Em_Promocao;

				public String getEm_Promocao () {
					return this.Em_Promocao;
				}

				public Boolean Em_PromocaoIsNullable(){
				    return true;
				}
				public Boolean Em_PromocaoIsKey(){
				    return false;
				}
				public Integer Em_PromocaoLength(){
				    return null;
				}
				public Integer Em_PromocaoPrecision(){
				    return null;
				}
				public String Em_PromocaoDefault(){
				
					return null;
				
				}
				public String Em_PromocaoComment(){
				
				    return "";
				
				}
				public String Em_PromocaoPattern(){
				
					return "";
				
				}
				public String Em_PromocaoOriginalDbColumnName(){
				
					return "Em_Promocao";
				
				}

				
			    public String Percent_Qualidade;

				public String getPercent_Qualidade () {
					return this.Percent_Qualidade;
				}

				public Boolean Percent_QualidadeIsNullable(){
				    return true;
				}
				public Boolean Percent_QualidadeIsKey(){
				    return false;
				}
				public Integer Percent_QualidadeLength(){
				    return null;
				}
				public Integer Percent_QualidadePrecision(){
				    return null;
				}
				public String Percent_QualidadeDefault(){
				
					return null;
				
				}
				public String Percent_QualidadeComment(){
				
				    return "";
				
				}
				public String Percent_QualidadePattern(){
				
					return "";
				
				}
				public String Percent_QualidadeOriginalDbColumnName(){
				
					return "Percent_Qualidade";
				
				}

				
			    public String Vr_Receber;

				public String getVr_Receber () {
					return this.Vr_Receber;
				}

				public Boolean Vr_ReceberIsNullable(){
				    return true;
				}
				public Boolean Vr_ReceberIsKey(){
				    return false;
				}
				public Integer Vr_ReceberLength(){
				    return null;
				}
				public Integer Vr_ReceberPrecision(){
				    return null;
				}
				public String Vr_ReceberDefault(){
				
					return null;
				
				}
				public String Vr_ReceberComment(){
				
				    return "";
				
				}
				public String Vr_ReceberPattern(){
				
					return "";
				
				}
				public String Vr_ReceberOriginalDbColumnName(){
				
					return "Vr_Receber";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Data_Cadastro;

				public String getData_Cadastro () {
					return this.Data_Cadastro;
				}

				public Boolean Data_CadastroIsNullable(){
				    return true;
				}
				public Boolean Data_CadastroIsKey(){
				    return false;
				}
				public Integer Data_CadastroLength(){
				    return null;
				}
				public Integer Data_CadastroPrecision(){
				    return null;
				}
				public String Data_CadastroDefault(){
				
					return null;
				
				}
				public String Data_CadastroComment(){
				
				    return "";
				
				}
				public String Data_CadastroPattern(){
				
					return "";
				
				}
				public String Data_CadastroOriginalDbColumnName(){
				
					return "Data_Cadastro";
				
				}

				
			    public String Url;

				public String getUrl () {
					return this.Url;
				}

				public Boolean UrlIsNullable(){
				    return true;
				}
				public Boolean UrlIsKey(){
				    return false;
				}
				public Integer UrlLength(){
				    return null;
				}
				public Integer UrlPrecision(){
				    return null;
				}
				public String UrlDefault(){
				
					return null;
				
				}
				public String UrlComment(){
				
				    return "";
				
				}
				public String UrlPattern(){
				
					return "";
				
				}
				public String UrlOriginalDbColumnName(){
				
					return "Url";
				
				}

				
			    public String MLB_Origem_Catalogo;

				public String getMLB_Origem_Catalogo () {
					return this.MLB_Origem_Catalogo;
				}

				public Boolean MLB_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean MLB_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer MLB_Origem_CatalogoLength(){
				    return null;
				}
				public Integer MLB_Origem_CatalogoPrecision(){
				    return null;
				}
				public String MLB_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String MLB_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String MLB_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String MLB_Origem_CatalogoOriginalDbColumnName(){
				
					return "MLB_Origem_Catalogo";
				
				}

				
			    public String Variacao_Origem_Catalogo;

				public String getVariacao_Origem_Catalogo () {
					return this.Variacao_Origem_Catalogo;
				}

				public Boolean Variacao_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean Variacao_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer Variacao_Origem_CatalogoLength(){
				    return null;
				}
				public Integer Variacao_Origem_CatalogoPrecision(){
				    return null;
				}
				public String Variacao_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String Variacao_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String Variacao_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String Variacao_Origem_CatalogoOriginalDbColumnName(){
				
					return "Variacao_Origem_Catalogo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.MLB = readString(dis);
					
					this.SKU = readString(dis);
					
					this.Apelido = readString(dis);
					
					this.Loja_Oficial = readString(dis);
					
					this.Titulo = readString(dis);
					
					this.Status = readString(dis);
					
					this.Preco = readString(dis);
					
					this.Vendas = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Porcentagem_cobrada_do_ML = readString(dis);
					
					this.Modo_Entrega = readString(dis);
					
					this.Frete_Gratis = readString(dis);
					
					this.Tarifa_Frete_Gratis = readString(dis);
					
					this.Estoque = readString(dis);
					
					this.Dimensoes = readString(dis);
					
					this.Em_Promocao = readString(dis);
					
					this.Percent_Qualidade = readString(dis);
					
					this.Vr_Receber = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Data_Cadastro = readString(dis);
					
					this.Url = readString(dis);
					
					this.MLB_Origem_Catalogo = readString(dis);
					
					this.Variacao_Origem_Catalogo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.MLB = readString(dis);
					
					this.SKU = readString(dis);
					
					this.Apelido = readString(dis);
					
					this.Loja_Oficial = readString(dis);
					
					this.Titulo = readString(dis);
					
					this.Status = readString(dis);
					
					this.Preco = readString(dis);
					
					this.Vendas = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Porcentagem_cobrada_do_ML = readString(dis);
					
					this.Modo_Entrega = readString(dis);
					
					this.Frete_Gratis = readString(dis);
					
					this.Tarifa_Frete_Gratis = readString(dis);
					
					this.Estoque = readString(dis);
					
					this.Dimensoes = readString(dis);
					
					this.Em_Promocao = readString(dis);
					
					this.Percent_Qualidade = readString(dis);
					
					this.Vr_Receber = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Data_Cadastro = readString(dis);
					
					this.Url = readString(dis);
					
					this.MLB_Origem_Catalogo = readString(dis);
					
					this.Variacao_Origem_Catalogo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.MLB,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Apelido,dos);
					
					// String
				
						writeString(this.Loja_Oficial,dos);
					
					// String
				
						writeString(this.Titulo,dos);
					
					// String
				
						writeString(this.Status,dos);
					
					// String
				
						writeString(this.Preco,dos);
					
					// String
				
						writeString(this.Vendas,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Porcentagem_cobrada_do_ML,dos);
					
					// String
				
						writeString(this.Modo_Entrega,dos);
					
					// String
				
						writeString(this.Frete_Gratis,dos);
					
					// String
				
						writeString(this.Tarifa_Frete_Gratis,dos);
					
					// String
				
						writeString(this.Estoque,dos);
					
					// String
				
						writeString(this.Dimensoes,dos);
					
					// String
				
						writeString(this.Em_Promocao,dos);
					
					// String
				
						writeString(this.Percent_Qualidade,dos);
					
					// String
				
						writeString(this.Vr_Receber,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Data_Cadastro,dos);
					
					// String
				
						writeString(this.Url,dos);
					
					// String
				
						writeString(this.MLB_Origem_Catalogo,dos);
					
					// String
				
						writeString(this.Variacao_Origem_Catalogo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.MLB,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Apelido,dos);
					
					// String
				
						writeString(this.Loja_Oficial,dos);
					
					// String
				
						writeString(this.Titulo,dos);
					
					// String
				
						writeString(this.Status,dos);
					
					// String
				
						writeString(this.Preco,dos);
					
					// String
				
						writeString(this.Vendas,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Porcentagem_cobrada_do_ML,dos);
					
					// String
				
						writeString(this.Modo_Entrega,dos);
					
					// String
				
						writeString(this.Frete_Gratis,dos);
					
					// String
				
						writeString(this.Tarifa_Frete_Gratis,dos);
					
					// String
				
						writeString(this.Estoque,dos);
					
					// String
				
						writeString(this.Dimensoes,dos);
					
					// String
				
						writeString(this.Em_Promocao,dos);
					
					// String
				
						writeString(this.Percent_Qualidade,dos);
					
					// String
				
						writeString(this.Vr_Receber,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Data_Cadastro,dos);
					
					// String
				
						writeString(this.Url,dos);
					
					// String
				
						writeString(this.MLB_Origem_Catalogo,dos);
					
					// String
				
						writeString(this.Variacao_Origem_Catalogo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("MLB="+MLB);
		sb.append(",SKU="+SKU);
		sb.append(",Apelido="+Apelido);
		sb.append(",Loja_Oficial="+Loja_Oficial);
		sb.append(",Titulo="+Titulo);
		sb.append(",Status="+Status);
		sb.append(",Preco="+Preco);
		sb.append(",Vendas="+Vendas);
		sb.append(",Categoria="+Categoria);
		sb.append(",Porcentagem_cobrada_do_ML="+Porcentagem_cobrada_do_ML);
		sb.append(",Modo_Entrega="+Modo_Entrega);
		sb.append(",Frete_Gratis="+Frete_Gratis);
		sb.append(",Tarifa_Frete_Gratis="+Tarifa_Frete_Gratis);
		sb.append(",Estoque="+Estoque);
		sb.append(",Dimensoes="+Dimensoes);
		sb.append(",Em_Promocao="+Em_Promocao);
		sb.append(",Percent_Qualidade="+Percent_Qualidade);
		sb.append(",Vr_Receber="+Vr_Receber);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Data_Cadastro="+Data_Cadastro);
		sb.append(",Url="+Url);
		sb.append(",MLB_Origem_Catalogo="+MLB_Origem_Catalogo);
		sb.append(",Variacao_Origem_Catalogo="+Variacao_Origem_Catalogo);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row210Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];

	
			    public String MLB;

				public String getMLB () {
					return this.MLB;
				}

				public Boolean MLBIsNullable(){
				    return true;
				}
				public Boolean MLBIsKey(){
				    return false;
				}
				public Integer MLBLength(){
				    return null;
				}
				public Integer MLBPrecision(){
				    return null;
				}
				public String MLBDefault(){
				
					return null;
				
				}
				public String MLBComment(){
				
				    return "";
				
				}
				public String MLBPattern(){
				
					return "";
				
				}
				public String MLBOriginalDbColumnName(){
				
					return "MLB";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Apelido;

				public String getApelido () {
					return this.Apelido;
				}

				public Boolean ApelidoIsNullable(){
				    return true;
				}
				public Boolean ApelidoIsKey(){
				    return false;
				}
				public Integer ApelidoLength(){
				    return null;
				}
				public Integer ApelidoPrecision(){
				    return null;
				}
				public String ApelidoDefault(){
				
					return null;
				
				}
				public String ApelidoComment(){
				
				    return "";
				
				}
				public String ApelidoPattern(){
				
					return "";
				
				}
				public String ApelidoOriginalDbColumnName(){
				
					return "Apelido";
				
				}

				
			    public String Loja_Oficial;

				public String getLoja_Oficial () {
					return this.Loja_Oficial;
				}

				public Boolean Loja_OficialIsNullable(){
				    return true;
				}
				public Boolean Loja_OficialIsKey(){
				    return false;
				}
				public Integer Loja_OficialLength(){
				    return null;
				}
				public Integer Loja_OficialPrecision(){
				    return null;
				}
				public String Loja_OficialDefault(){
				
					return null;
				
				}
				public String Loja_OficialComment(){
				
				    return "";
				
				}
				public String Loja_OficialPattern(){
				
					return "";
				
				}
				public String Loja_OficialOriginalDbColumnName(){
				
					return "Loja_Oficial";
				
				}

				
			    public String Titulo;

				public String getTitulo () {
					return this.Titulo;
				}

				public Boolean TituloIsNullable(){
				    return true;
				}
				public Boolean TituloIsKey(){
				    return false;
				}
				public Integer TituloLength(){
				    return null;
				}
				public Integer TituloPrecision(){
				    return null;
				}
				public String TituloDefault(){
				
					return null;
				
				}
				public String TituloComment(){
				
				    return "";
				
				}
				public String TituloPattern(){
				
					return "";
				
				}
				public String TituloOriginalDbColumnName(){
				
					return "Titulo";
				
				}

				
			    public String Status;

				public String getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String Preco;

				public String getPreco () {
					return this.Preco;
				}

				public Boolean PrecoIsNullable(){
				    return true;
				}
				public Boolean PrecoIsKey(){
				    return false;
				}
				public Integer PrecoLength(){
				    return null;
				}
				public Integer PrecoPrecision(){
				    return null;
				}
				public String PrecoDefault(){
				
					return null;
				
				}
				public String PrecoComment(){
				
				    return "";
				
				}
				public String PrecoPattern(){
				
					return "";
				
				}
				public String PrecoOriginalDbColumnName(){
				
					return "Preco";
				
				}

				
			    public String Vendas;

				public String getVendas () {
					return this.Vendas;
				}

				public Boolean VendasIsNullable(){
				    return true;
				}
				public Boolean VendasIsKey(){
				    return false;
				}
				public Integer VendasLength(){
				    return null;
				}
				public Integer VendasPrecision(){
				    return null;
				}
				public String VendasDefault(){
				
					return null;
				
				}
				public String VendasComment(){
				
				    return "";
				
				}
				public String VendasPattern(){
				
					return "";
				
				}
				public String VendasOriginalDbColumnName(){
				
					return "Vendas";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public String Porcentagem_cobrada_do_ML;

				public String getPorcentagem_cobrada_do_ML () {
					return this.Porcentagem_cobrada_do_ML;
				}

				public Boolean Porcentagem_cobrada_do_MLIsNullable(){
				    return true;
				}
				public Boolean Porcentagem_cobrada_do_MLIsKey(){
				    return false;
				}
				public Integer Porcentagem_cobrada_do_MLLength(){
				    return null;
				}
				public Integer Porcentagem_cobrada_do_MLPrecision(){
				    return null;
				}
				public String Porcentagem_cobrada_do_MLDefault(){
				
					return null;
				
				}
				public String Porcentagem_cobrada_do_MLComment(){
				
				    return "";
				
				}
				public String Porcentagem_cobrada_do_MLPattern(){
				
					return "";
				
				}
				public String Porcentagem_cobrada_do_MLOriginalDbColumnName(){
				
					return "Porcentagem_cobrada_do_ML";
				
				}

				
			    public String Modo_Entrega;

				public String getModo_Entrega () {
					return this.Modo_Entrega;
				}

				public Boolean Modo_EntregaIsNullable(){
				    return true;
				}
				public Boolean Modo_EntregaIsKey(){
				    return false;
				}
				public Integer Modo_EntregaLength(){
				    return null;
				}
				public Integer Modo_EntregaPrecision(){
				    return null;
				}
				public String Modo_EntregaDefault(){
				
					return null;
				
				}
				public String Modo_EntregaComment(){
				
				    return "";
				
				}
				public String Modo_EntregaPattern(){
				
					return "";
				
				}
				public String Modo_EntregaOriginalDbColumnName(){
				
					return "Modo_Entrega";
				
				}

				
			    public String Frete_Gratis;

				public String getFrete_Gratis () {
					return this.Frete_Gratis;
				}

				public Boolean Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Frete_GratisIsKey(){
				    return false;
				}
				public Integer Frete_GratisLength(){
				    return null;
				}
				public Integer Frete_GratisPrecision(){
				    return null;
				}
				public String Frete_GratisDefault(){
				
					return null;
				
				}
				public String Frete_GratisComment(){
				
				    return "";
				
				}
				public String Frete_GratisPattern(){
				
					return "";
				
				}
				public String Frete_GratisOriginalDbColumnName(){
				
					return "Frete_Gratis";
				
				}

				
			    public String Tarifa_Frete_Gratis;

				public String getTarifa_Frete_Gratis () {
					return this.Tarifa_Frete_Gratis;
				}

				public Boolean Tarifa_Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Tarifa_Frete_GratisIsKey(){
				    return false;
				}
				public Integer Tarifa_Frete_GratisLength(){
				    return null;
				}
				public Integer Tarifa_Frete_GratisPrecision(){
				    return null;
				}
				public String Tarifa_Frete_GratisDefault(){
				
					return null;
				
				}
				public String Tarifa_Frete_GratisComment(){
				
				    return "";
				
				}
				public String Tarifa_Frete_GratisPattern(){
				
					return "";
				
				}
				public String Tarifa_Frete_GratisOriginalDbColumnName(){
				
					return "Tarifa_Frete_Gratis";
				
				}

				
			    public String Estoque;

				public String getEstoque () {
					return this.Estoque;
				}

				public Boolean EstoqueIsNullable(){
				    return true;
				}
				public Boolean EstoqueIsKey(){
				    return false;
				}
				public Integer EstoqueLength(){
				    return null;
				}
				public Integer EstoquePrecision(){
				    return null;
				}
				public String EstoqueDefault(){
				
					return null;
				
				}
				public String EstoqueComment(){
				
				    return "";
				
				}
				public String EstoquePattern(){
				
					return "";
				
				}
				public String EstoqueOriginalDbColumnName(){
				
					return "Estoque";
				
				}

				
			    public String Dimensoes;

				public String getDimensoes () {
					return this.Dimensoes;
				}

				public Boolean DimensoesIsNullable(){
				    return true;
				}
				public Boolean DimensoesIsKey(){
				    return false;
				}
				public Integer DimensoesLength(){
				    return null;
				}
				public Integer DimensoesPrecision(){
				    return null;
				}
				public String DimensoesDefault(){
				
					return null;
				
				}
				public String DimensoesComment(){
				
				    return "";
				
				}
				public String DimensoesPattern(){
				
					return "";
				
				}
				public String DimensoesOriginalDbColumnName(){
				
					return "Dimensoes";
				
				}

				
			    public String Em_Promocao;

				public String getEm_Promocao () {
					return this.Em_Promocao;
				}

				public Boolean Em_PromocaoIsNullable(){
				    return true;
				}
				public Boolean Em_PromocaoIsKey(){
				    return false;
				}
				public Integer Em_PromocaoLength(){
				    return null;
				}
				public Integer Em_PromocaoPrecision(){
				    return null;
				}
				public String Em_PromocaoDefault(){
				
					return null;
				
				}
				public String Em_PromocaoComment(){
				
				    return "";
				
				}
				public String Em_PromocaoPattern(){
				
					return "";
				
				}
				public String Em_PromocaoOriginalDbColumnName(){
				
					return "Em_Promocao";
				
				}

				
			    public String Percent_Qualidade;

				public String getPercent_Qualidade () {
					return this.Percent_Qualidade;
				}

				public Boolean Percent_QualidadeIsNullable(){
				    return true;
				}
				public Boolean Percent_QualidadeIsKey(){
				    return false;
				}
				public Integer Percent_QualidadeLength(){
				    return null;
				}
				public Integer Percent_QualidadePrecision(){
				    return null;
				}
				public String Percent_QualidadeDefault(){
				
					return null;
				
				}
				public String Percent_QualidadeComment(){
				
				    return "";
				
				}
				public String Percent_QualidadePattern(){
				
					return "";
				
				}
				public String Percent_QualidadeOriginalDbColumnName(){
				
					return "Percent_Qualidade";
				
				}

				
			    public String Vr_Receber;

				public String getVr_Receber () {
					return this.Vr_Receber;
				}

				public Boolean Vr_ReceberIsNullable(){
				    return true;
				}
				public Boolean Vr_ReceberIsKey(){
				    return false;
				}
				public Integer Vr_ReceberLength(){
				    return null;
				}
				public Integer Vr_ReceberPrecision(){
				    return null;
				}
				public String Vr_ReceberDefault(){
				
					return null;
				
				}
				public String Vr_ReceberComment(){
				
				    return "";
				
				}
				public String Vr_ReceberPattern(){
				
					return "";
				
				}
				public String Vr_ReceberOriginalDbColumnName(){
				
					return "Vr_Receber";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Data_Cadastro;

				public String getData_Cadastro () {
					return this.Data_Cadastro;
				}

				public Boolean Data_CadastroIsNullable(){
				    return true;
				}
				public Boolean Data_CadastroIsKey(){
				    return false;
				}
				public Integer Data_CadastroLength(){
				    return null;
				}
				public Integer Data_CadastroPrecision(){
				    return null;
				}
				public String Data_CadastroDefault(){
				
					return null;
				
				}
				public String Data_CadastroComment(){
				
				    return "";
				
				}
				public String Data_CadastroPattern(){
				
					return "";
				
				}
				public String Data_CadastroOriginalDbColumnName(){
				
					return "Data_Cadastro";
				
				}

				
			    public String Url;

				public String getUrl () {
					return this.Url;
				}

				public Boolean UrlIsNullable(){
				    return true;
				}
				public Boolean UrlIsKey(){
				    return false;
				}
				public Integer UrlLength(){
				    return null;
				}
				public Integer UrlPrecision(){
				    return null;
				}
				public String UrlDefault(){
				
					return null;
				
				}
				public String UrlComment(){
				
				    return "";
				
				}
				public String UrlPattern(){
				
					return "";
				
				}
				public String UrlOriginalDbColumnName(){
				
					return "Url";
				
				}

				
			    public String MLB_Origem_Catalogo;

				public String getMLB_Origem_Catalogo () {
					return this.MLB_Origem_Catalogo;
				}

				public Boolean MLB_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean MLB_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer MLB_Origem_CatalogoLength(){
				    return null;
				}
				public Integer MLB_Origem_CatalogoPrecision(){
				    return null;
				}
				public String MLB_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String MLB_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String MLB_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String MLB_Origem_CatalogoOriginalDbColumnName(){
				
					return "MLB_Origem_Catalogo";
				
				}

				
			    public String Variacao_Origem_Catalogo;

				public String getVariacao_Origem_Catalogo () {
					return this.Variacao_Origem_Catalogo;
				}

				public Boolean Variacao_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean Variacao_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer Variacao_Origem_CatalogoLength(){
				    return null;
				}
				public Integer Variacao_Origem_CatalogoPrecision(){
				    return null;
				}
				public String Variacao_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String Variacao_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String Variacao_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String Variacao_Origem_CatalogoOriginalDbColumnName(){
				
					return "Variacao_Origem_Catalogo";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.MLB = readString(dis);
					
					this.SKU = readString(dis);
					
					this.Apelido = readString(dis);
					
					this.Loja_Oficial = readString(dis);
					
					this.Titulo = readString(dis);
					
					this.Status = readString(dis);
					
					this.Preco = readString(dis);
					
					this.Vendas = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Porcentagem_cobrada_do_ML = readString(dis);
					
					this.Modo_Entrega = readString(dis);
					
					this.Frete_Gratis = readString(dis);
					
					this.Tarifa_Frete_Gratis = readString(dis);
					
					this.Estoque = readString(dis);
					
					this.Dimensoes = readString(dis);
					
					this.Em_Promocao = readString(dis);
					
					this.Percent_Qualidade = readString(dis);
					
					this.Vr_Receber = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Data_Cadastro = readString(dis);
					
					this.Url = readString(dis);
					
					this.MLB_Origem_Catalogo = readString(dis);
					
					this.Variacao_Origem_Catalogo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.MLB = readString(dis);
					
					this.SKU = readString(dis);
					
					this.Apelido = readString(dis);
					
					this.Loja_Oficial = readString(dis);
					
					this.Titulo = readString(dis);
					
					this.Status = readString(dis);
					
					this.Preco = readString(dis);
					
					this.Vendas = readString(dis);
					
					this.Categoria = readString(dis);
					
					this.Porcentagem_cobrada_do_ML = readString(dis);
					
					this.Modo_Entrega = readString(dis);
					
					this.Frete_Gratis = readString(dis);
					
					this.Tarifa_Frete_Gratis = readString(dis);
					
					this.Estoque = readString(dis);
					
					this.Dimensoes = readString(dis);
					
					this.Em_Promocao = readString(dis);
					
					this.Percent_Qualidade = readString(dis);
					
					this.Vr_Receber = readString(dis);
					
					this.CategoriaID = readString(dis);
					
					this.Data_Cadastro = readString(dis);
					
					this.Url = readString(dis);
					
					this.MLB_Origem_Catalogo = readString(dis);
					
					this.Variacao_Origem_Catalogo = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.MLB,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Apelido,dos);
					
					// String
				
						writeString(this.Loja_Oficial,dos);
					
					// String
				
						writeString(this.Titulo,dos);
					
					// String
				
						writeString(this.Status,dos);
					
					// String
				
						writeString(this.Preco,dos);
					
					// String
				
						writeString(this.Vendas,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Porcentagem_cobrada_do_ML,dos);
					
					// String
				
						writeString(this.Modo_Entrega,dos);
					
					// String
				
						writeString(this.Frete_Gratis,dos);
					
					// String
				
						writeString(this.Tarifa_Frete_Gratis,dos);
					
					// String
				
						writeString(this.Estoque,dos);
					
					// String
				
						writeString(this.Dimensoes,dos);
					
					// String
				
						writeString(this.Em_Promocao,dos);
					
					// String
				
						writeString(this.Percent_Qualidade,dos);
					
					// String
				
						writeString(this.Vr_Receber,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Data_Cadastro,dos);
					
					// String
				
						writeString(this.Url,dos);
					
					// String
				
						writeString(this.MLB_Origem_Catalogo,dos);
					
					// String
				
						writeString(this.Variacao_Origem_Catalogo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.MLB,dos);
					
					// String
				
						writeString(this.SKU,dos);
					
					// String
				
						writeString(this.Apelido,dos);
					
					// String
				
						writeString(this.Loja_Oficial,dos);
					
					// String
				
						writeString(this.Titulo,dos);
					
					// String
				
						writeString(this.Status,dos);
					
					// String
				
						writeString(this.Preco,dos);
					
					// String
				
						writeString(this.Vendas,dos);
					
					// String
				
						writeString(this.Categoria,dos);
					
					// String
				
						writeString(this.Porcentagem_cobrada_do_ML,dos);
					
					// String
				
						writeString(this.Modo_Entrega,dos);
					
					// String
				
						writeString(this.Frete_Gratis,dos);
					
					// String
				
						writeString(this.Tarifa_Frete_Gratis,dos);
					
					// String
				
						writeString(this.Estoque,dos);
					
					// String
				
						writeString(this.Dimensoes,dos);
					
					// String
				
						writeString(this.Em_Promocao,dos);
					
					// String
				
						writeString(this.Percent_Qualidade,dos);
					
					// String
				
						writeString(this.Vr_Receber,dos);
					
					// String
				
						writeString(this.CategoriaID,dos);
					
					// String
				
						writeString(this.Data_Cadastro,dos);
					
					// String
				
						writeString(this.Url,dos);
					
					// String
				
						writeString(this.MLB_Origem_Catalogo,dos);
					
					// String
				
						writeString(this.Variacao_Origem_Catalogo,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("MLB="+MLB);
		sb.append(",SKU="+SKU);
		sb.append(",Apelido="+Apelido);
		sb.append(",Loja_Oficial="+Loja_Oficial);
		sb.append(",Titulo="+Titulo);
		sb.append(",Status="+Status);
		sb.append(",Preco="+Preco);
		sb.append(",Vendas="+Vendas);
		sb.append(",Categoria="+Categoria);
		sb.append(",Porcentagem_cobrada_do_ML="+Porcentagem_cobrada_do_ML);
		sb.append(",Modo_Entrega="+Modo_Entrega);
		sb.append(",Frete_Gratis="+Frete_Gratis);
		sb.append(",Tarifa_Frete_Gratis="+Tarifa_Frete_Gratis);
		sb.append(",Estoque="+Estoque);
		sb.append(",Dimensoes="+Dimensoes);
		sb.append(",Em_Promocao="+Em_Promocao);
		sb.append(",Percent_Qualidade="+Percent_Qualidade);
		sb.append(",Vr_Receber="+Vr_Receber);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Data_Cadastro="+Data_Cadastro);
		sb.append(",Url="+Url);
		sb.append(",MLB_Origem_Catalogo="+MLB_Origem_Catalogo);
		sb.append(",Variacao_Origem_Catalogo="+Variacao_Origem_Catalogo);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row44Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tFileInputExcel_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileInputExcel_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row44Struct row44 = new row44Struct();
row44Struct row210 = row44;





	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row210");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row210Struct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_relatorio_conciliacao_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row210Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tLogRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_2", false);
		start_Hash.put("tLogRow_2", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row44");
					}
				
		int tos_count_tLogRow_2 = 0;
		

 



/**
 * [tLogRow_2 begin ] stop
 */



	
	/**
	 * [tFileInputExcel_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileInputExcel_3", false);
		start_Hash.put("tFileInputExcel_3", System.currentTimeMillis());
		
	
	currentComponent="tFileInputExcel_3";
	
	
		int tos_count_tFileInputExcel_3 = 0;
		

 
	final String decryptedPassword_tFileInputExcel_3 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:Lj7zEZXAg9vEw+OA/VvrhFGxoZ3uc65lOB1JZg==");
        String password_tFileInputExcel_3 = decryptedPassword_tFileInputExcel_3;
        if (password_tFileInputExcel_3.isEmpty()){
            password_tFileInputExcel_3 = null;
        }
			class RegexUtil_tFileInputExcel_3 {

		    	public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName, boolean useRegex) {

			        java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

			        if(useRegex){//this part process the regex issue

				        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
				        for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
				            String sheetName = sheet.getSheetName();
				            java.util.regex.Matcher matcher = pattern.matcher(sheetName);
				            if (matcher.matches()) {
				            	if(sheet != null){
				                	list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
				                }
				            }
				        }

			        }else{
			        	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheet(oneSheetName);
		            	if(sheet != null){
		                	list.add(sheet);
		                }

			        }

			        return list;
			    }

			    public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
			    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list =  new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
			    	org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook.getSheetAt(index);
	            	if(sheet != null){
	                	list.add(sheet);
	                }
			    	return list;
			    }

			}
		RegexUtil_tFileInputExcel_3 regexUtil_tFileInputExcel_3 = new RegexUtil_tFileInputExcel_3();

		Object source_tFileInputExcel_3 = "//storage/Setores/Power BI/Dados/Conciliacao/Planilhas/Planilha_Shopping_Precos.xlsx";
		org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_3 = null;
		
		if(source_tFileInputExcel_3 instanceof String){
			workbook_tFileInputExcel_3 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create(new java.io.File((String)source_tFileInputExcel_3), password_tFileInputExcel_3, true);
		} else if(source_tFileInputExcel_3 instanceof java.io.InputStream) {
     		workbook_tFileInputExcel_3 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory.create((java.io.InputStream)source_tFileInputExcel_3, password_tFileInputExcel_3);
		} else{
			workbook_tFileInputExcel_3 = null;
			throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
		}
		try {

    	java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_3 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
    	for(org.apache.poi.ss.usermodel.Sheet sheet_tFileInputExcel_3 : workbook_tFileInputExcel_3){
   			sheetList_tFileInputExcel_3.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet_tFileInputExcel_3);
    	}
    	if(sheetList_tFileInputExcel_3.size() <= 0){
            throw new RuntimeException("Special sheets not exist!");
        }

		java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_3 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
		for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_3 : sheetList_tFileInputExcel_3) {
			if(sheet_FilterNull_tFileInputExcel_3!=null && sheetList_FilterNull_tFileInputExcel_3.iterator()!=null && sheet_FilterNull_tFileInputExcel_3.iterator().hasNext()){
				sheetList_FilterNull_tFileInputExcel_3.add(sheet_FilterNull_tFileInputExcel_3);
			}
		}
		sheetList_tFileInputExcel_3 = sheetList_FilterNull_tFileInputExcel_3;
	if(sheetList_tFileInputExcel_3.size()>0){
		int nb_line_tFileInputExcel_3 = 0;

        int begin_line_tFileInputExcel_3 = 1;

        int footer_input_tFileInputExcel_3 = 0;

        int end_line_tFileInputExcel_3=0;
        for(org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_3:sheetList_tFileInputExcel_3){
			end_line_tFileInputExcel_3+=(sheet_tFileInputExcel_3.getLastRowNum()+1);
        }
        end_line_tFileInputExcel_3 -= footer_input_tFileInputExcel_3;
        int limit_tFileInputExcel_3 = -1;
        int start_column_tFileInputExcel_3 = 1-1;
        int end_column_tFileInputExcel_3 = -1;

        org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_3 = null;
        org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_3 = sheetList_tFileInputExcel_3.get(0);
        int rowCount_tFileInputExcel_3 = 0;
        int sheetIndex_tFileInputExcel_3 = 0;
        int currentRows_tFileInputExcel_3 = (sheetList_tFileInputExcel_3.get(0).getLastRowNum()+1);

		//for the number format
        java.text.DecimalFormat df_tFileInputExcel_3 = new java.text.DecimalFormat("#.####################################");
        char decimalChar_tFileInputExcel_3 = df_tFileInputExcel_3.getDecimalFormatSymbols().getDecimalSeparator();
		
        for(int i_tFileInputExcel_3 = begin_line_tFileInputExcel_3; i_tFileInputExcel_3 < end_line_tFileInputExcel_3; i_tFileInputExcel_3++){

        	int emptyColumnCount_tFileInputExcel_3 = 0;

        	if (limit_tFileInputExcel_3 != -1 && nb_line_tFileInputExcel_3 >= limit_tFileInputExcel_3) {
        		break;
        	}

            while (i_tFileInputExcel_3 >= rowCount_tFileInputExcel_3 + currentRows_tFileInputExcel_3) {
                rowCount_tFileInputExcel_3 += currentRows_tFileInputExcel_3;
                sheet_tFileInputExcel_3 = sheetList_tFileInputExcel_3.get(++sheetIndex_tFileInputExcel_3);
                currentRows_tFileInputExcel_3 = (sheet_tFileInputExcel_3.getLastRowNum()+1);
            }
            globalMap.put("tFileInputExcel_3_CURRENT_SHEET",sheet_tFileInputExcel_3.getSheetName());
            if (rowCount_tFileInputExcel_3 <= i_tFileInputExcel_3) {
                row_tFileInputExcel_3 = sheet_tFileInputExcel_3.getRow(i_tFileInputExcel_3 - rowCount_tFileInputExcel_3);
            }
		    row44 = null;
					int tempRowLength_tFileInputExcel_3 = 23;
				
				int columnIndex_tFileInputExcel_3 = 0;
			
			String[] temp_row_tFileInputExcel_3 = new String[tempRowLength_tFileInputExcel_3];
			int excel_end_column_tFileInputExcel_3;
			if(row_tFileInputExcel_3==null){
				excel_end_column_tFileInputExcel_3=0;
			}else{
				excel_end_column_tFileInputExcel_3=row_tFileInputExcel_3.getLastCellNum();
			}
			int actual_end_column_tFileInputExcel_3;
			if(end_column_tFileInputExcel_3 == -1){
				actual_end_column_tFileInputExcel_3 = excel_end_column_tFileInputExcel_3;
			}
			else{
				actual_end_column_tFileInputExcel_3 = end_column_tFileInputExcel_3 >	excel_end_column_tFileInputExcel_3 ? excel_end_column_tFileInputExcel_3 : end_column_tFileInputExcel_3;
			}
			org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_3 = null;
			for(int i=0;i<tempRowLength_tFileInputExcel_3;i++){
				if(i + start_column_tFileInputExcel_3 < actual_end_column_tFileInputExcel_3){
					org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_3 = row_tFileInputExcel_3.getCell(i + start_column_tFileInputExcel_3);
					if(cell_tFileInputExcel_3!=null){
					switch (cell_tFileInputExcel_3.getCellType()) {
                        case STRING:
                            temp_row_tFileInputExcel_3[i] = cell_tFileInputExcel_3.getRichStringCellValue().getString();
                            break;
                        case NUMERIC:
                            if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_3)) {
									temp_row_tFileInputExcel_3[i] =cell_tFileInputExcel_3.getDateCellValue().toString();
                            } else {
                                temp_row_tFileInputExcel_3[i] = df_tFileInputExcel_3.format(cell_tFileInputExcel_3.getNumericCellValue());
                            }
                            break;
                        case BOOLEAN:
                            temp_row_tFileInputExcel_3[i] =String.valueOf(cell_tFileInputExcel_3.getBooleanCellValue());
                            break;
                        case FORMULA:
        					switch (cell_tFileInputExcel_3.getCachedFormulaResultType()) {
                                case STRING:
                                    temp_row_tFileInputExcel_3[i] = cell_tFileInputExcel_3.getRichStringCellValue().getString();
                                    break;
                                case NUMERIC:
                                    if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell_tFileInputExcel_3)) {
											temp_row_tFileInputExcel_3[i] =cell_tFileInputExcel_3.getDateCellValue().toString();
                                    } else {
	                                    ne_tFileInputExcel_3 = new org.apache.poi.ss.formula.eval.NumberEval(cell_tFileInputExcel_3.getNumericCellValue());
										temp_row_tFileInputExcel_3[i] = ne_tFileInputExcel_3.getStringValue();
                                    }
                                    break;
                                case BOOLEAN:
                                    temp_row_tFileInputExcel_3[i] =String.valueOf(cell_tFileInputExcel_3.getBooleanCellValue());
                                    break;
                                default:
                            		temp_row_tFileInputExcel_3[i] = "";
                            }
                            break;
                        default:
                            temp_row_tFileInputExcel_3[i] = "";
                        }
                	}
                	else{
                		temp_row_tFileInputExcel_3[i]="";
                	}

				}else{
					temp_row_tFileInputExcel_3[i]="";
				}
			}
			boolean whetherReject_tFileInputExcel_3 = false;
			row44 = new row44Struct();
			int curColNum_tFileInputExcel_3 = -1;
			String curColName_tFileInputExcel_3 = "";
			try{
							columnIndex_tFileInputExcel_3 = 0;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "MLB";

				row44.MLB = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.MLB = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 1;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "SKU";

				row44.SKU = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.SKU = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 2;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Apelido";

				row44.Apelido = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Apelido = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 3;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Loja_Oficial";

				row44.Loja_Oficial = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Loja_Oficial = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 4;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Titulo";

				row44.Titulo = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Titulo = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 5;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Status";

				row44.Status = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Status = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 6;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Preco";

				row44.Preco = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Preco = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 7;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Vendas";

				row44.Vendas = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Vendas = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 8;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Categoria";

				row44.Categoria = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Categoria = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 9;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Porcentagem_cobrada_do_ML";

				row44.Porcentagem_cobrada_do_ML = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Porcentagem_cobrada_do_ML = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 10;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Modo_Entrega";

				row44.Modo_Entrega = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Modo_Entrega = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 11;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Frete_Gratis";

				row44.Frete_Gratis = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Frete_Gratis = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 12;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Tarifa_Frete_Gratis";

				row44.Tarifa_Frete_Gratis = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Tarifa_Frete_Gratis = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 13;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Estoque";

				row44.Estoque = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Estoque = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 14;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Dimensoes";

				row44.Dimensoes = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Dimensoes = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 15;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Em_Promocao";

				row44.Em_Promocao = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Em_Promocao = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 16;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Percent_Qualidade";

				row44.Percent_Qualidade = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Percent_Qualidade = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 17;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Vr_Receber";

				row44.Vr_Receber = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Vr_Receber = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 18;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "CategoriaID";

				row44.CategoriaID = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.CategoriaID = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 19;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Data_Cadastro";

				row44.Data_Cadastro = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Data_Cadastro = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 20;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Url";

				row44.Url = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Url = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 21;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "MLB_Origem_Catalogo";

				row44.MLB_Origem_Catalogo = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.MLB_Origem_Catalogo = null;
				emptyColumnCount_tFileInputExcel_3++;
			}
							columnIndex_tFileInputExcel_3 = 22;
						
			if( temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
				curColNum_tFileInputExcel_3=columnIndex_tFileInputExcel_3 + start_column_tFileInputExcel_3 + 1;
				curColName_tFileInputExcel_3 = "Variacao_Origem_Catalogo";

				row44.Variacao_Origem_Catalogo = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
			}else{
				row44.Variacao_Origem_Catalogo = null;
				emptyColumnCount_tFileInputExcel_3++;
			}

				nb_line_tFileInputExcel_3++;
				
			}catch(java.lang.Exception e){
globalMap.put("tFileInputExcel_3_ERROR_MESSAGE",e.getMessage());
			whetherReject_tFileInputExcel_3 = true;
					 System.err.println(e.getMessage());
					 row44 = null;
			}


		



 



/**
 * [tFileInputExcel_3 begin ] stop
 */
	
	/**
	 * [tFileInputExcel_3 main ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 


	tos_count_tFileInputExcel_3++;

/**
 * [tFileInputExcel_3 main ] stop
 */
	
	/**
	 * [tFileInputExcel_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 



/**
 * [tFileInputExcel_3 process_data_begin ] stop
 */
// Start of branch "row44"
if(row44 != null) { 



	
	/**
	 * [tLogRow_2 main ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row44"
						
						);
					}
					

 
     row210 = row44;


	tos_count_tLogRow_2++;

/**
 * [tLogRow_2 main ] stop
 */
	
	/**
	 * [tLogRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row210"
						
						);
					}
					



    
		row210Struct oneRow_tHashOutput_13 = new row210Struct();
				
					oneRow_tHashOutput_13.MLB = row210.MLB;
					oneRow_tHashOutput_13.SKU = row210.SKU;
					oneRow_tHashOutput_13.Apelido = row210.Apelido;
					oneRow_tHashOutput_13.Loja_Oficial = row210.Loja_Oficial;
					oneRow_tHashOutput_13.Titulo = row210.Titulo;
					oneRow_tHashOutput_13.Status = row210.Status;
					oneRow_tHashOutput_13.Preco = row210.Preco;
					oneRow_tHashOutput_13.Vendas = row210.Vendas;
					oneRow_tHashOutput_13.Categoria = row210.Categoria;
					oneRow_tHashOutput_13.Porcentagem_cobrada_do_ML = row210.Porcentagem_cobrada_do_ML;
					oneRow_tHashOutput_13.Modo_Entrega = row210.Modo_Entrega;
					oneRow_tHashOutput_13.Frete_Gratis = row210.Frete_Gratis;
					oneRow_tHashOutput_13.Tarifa_Frete_Gratis = row210.Tarifa_Frete_Gratis;
					oneRow_tHashOutput_13.Estoque = row210.Estoque;
					oneRow_tHashOutput_13.Dimensoes = row210.Dimensoes;
					oneRow_tHashOutput_13.Em_Promocao = row210.Em_Promocao;
					oneRow_tHashOutput_13.Percent_Qualidade = row210.Percent_Qualidade;
					oneRow_tHashOutput_13.Vr_Receber = row210.Vr_Receber;
					oneRow_tHashOutput_13.CategoriaID = row210.CategoriaID;
					oneRow_tHashOutput_13.Data_Cadastro = row210.Data_Cadastro;
					oneRow_tHashOutput_13.Url = row210.Url;
					oneRow_tHashOutput_13.MLB_Origem_Catalogo = row210.MLB_Origem_Catalogo;
					oneRow_tHashOutput_13.Variacao_Origem_Catalogo = row210.Variacao_Origem_Catalogo;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */



	
	/**
	 * [tLogRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 process_data_end ] stop
 */

} // End of branch "row44"




	
	/**
	 * [tFileInputExcel_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 



/**
 * [tFileInputExcel_3 process_data_end ] stop
 */
	
	/**
	 * [tFileInputExcel_3 end ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

			}
			
			
			
			globalMap.put("tFileInputExcel_3_NB_LINE",nb_line_tFileInputExcel_3);
			
				}
			
		} finally { 
				
  				if(!(source_tFileInputExcel_3 instanceof java.io.InputStream)){
  					workbook_tFileInputExcel_3.getPackage().revert();
  				}
				
		}	
		

 

ok_Hash.put("tFileInputExcel_3", true);
end_Hash.put("tFileInputExcel_3", System.currentTimeMillis());




/**
 * [tFileInputExcel_3 end ] stop
 */

	
	/**
	 * [tLogRow_2 end ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row44");
			  	}
			  	
 

ok_Hash.put("tLogRow_2", true);
end_Hash.put("tLogRow_2", System.currentTimeMillis());




/**
 * [tLogRow_2 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row210");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());




/**
 * [tHashOutput_13 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileInputExcel_3 finally ] start
	 */

	

	
	
	currentComponent="tFileInputExcel_3";
	
	

 



/**
 * [tFileInputExcel_3 finally ] stop
 */

	
	/**
	 * [tLogRow_2 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_2";
	
	

 



/**
 * [tLogRow_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileInputExcel_3_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableComparableLookupRow<row36Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_valor_final;

				public Double getSum_valor_final () {
					return this.sum_valor_final;
				}

				public Boolean sum_valor_finalIsNullable(){
				    return true;
				}
				public Boolean sum_valor_finalIsKey(){
				    return false;
				}
				public Integer sum_valor_finalLength(){
				    return null;
				}
				public Integer sum_valor_finalPrecision(){
				    return null;
				}
				public String sum_valor_finalDefault(){
				
					return null;
				
				}
				public String sum_valor_finalComment(){
				
				    return "";
				
				}
				public String sum_valor_finalPattern(){
				
					return "";
				
				}
				public String sum_valor_finalOriginalDbColumnName(){
				
					return "sum_valor_final";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ENTREGA == null) ? 0 : new Double(this.COD_ENTREGA.doubleValue()).hashCode());
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row36Struct other = (row36Struct) obj;
		
						if (this.COD_ENTREGA == null) {
							if (other.COD_ENTREGA != null)
								return false;
						
						} else if ((other.COD_ENTREGA == null) || (this.COD_ENTREGA.compareTo(other.COD_ENTREGA)!=0))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row36Struct other) {

		other.COD_ENTREGA = this.COD_ENTREGA;
	            other.sum_valor_final = this.sum_valor_final;
	            
	}

	public void copyKeysDataTo(row36Struct other) {

		other.COD_ENTREGA = this.COD_ENTREGA;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.sum_valor_final = null;
           				} else {
           			    	this.sum_valor_final = objectIn.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						if(this.sum_valor_final == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						if(this.sum_valor_final == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.sum_valor_final);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_valor_final="+String.valueOf(sum_valor_final));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ENTREGA, other.COD_ENTREGA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();




	
	/**
	 * [tAdvancedHash_row36 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row36", false);
		start_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row36";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tAdvancedHash_row36 = 0;
		

			   		// connection name:row36
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_6) outputs:(row36,row36) | target node:tAdvancedHash_row36 - inputs:(row36) outputs:()
			   		// linked node: tMap_11 - inputs:(row26,row36) outputs:(duplicado_vf)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row36 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row36Struct>getLookup(matchingModeEnum_row36);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row36", tHash_Lookup_row36);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row36 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row37Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row37Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row37Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row36.COD_ENTREGA = next_tHashInput_7.COD_ENTREGA;
	row36.sum_valor_final = next_tHashInput_7.sum_valor_final;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					


			   
			   

					row36Struct row36_HashRow = new row36Struct();
		   	   	   
				
				row36_HashRow.COD_ENTREGA = row36.COD_ENTREGA;
				
				row36_HashRow.sum_valor_final = row36.sum_valor_final;
				
			tHash_Lookup_row36.put(row36_HashRow);
			
            




 


	tos_count_tAdvancedHash_row36++;

/**
 * [tAdvancedHash_row36 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

tHash_Lookup_row36.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row36", true);
end_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());




/**
 * [tAdvancedHash_row36 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableComparableLookupRow<row32Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String concat;

				public String getConcat () {
					return this.concat;
				}

				public Boolean concatIsNullable(){
				    return true;
				}
				public Boolean concatIsKey(){
				    return false;
				}
				public Integer concatLength(){
				    return null;
				}
				public Integer concatPrecision(){
				    return null;
				}
				public String concatDefault(){
				
					return null;
				
				}
				public String concatComment(){
				
				    return "";
				
				}
				public String concatPattern(){
				
					return "";
				
				}
				public String concatOriginalDbColumnName(){
				
					return "concat";
				
				}

				
			    public String Conta;

				public String getConta () {
					return this.Conta;
				}

				public Boolean ContaIsNullable(){
				    return true;
				}
				public Boolean ContaIsKey(){
				    return false;
				}
				public Integer ContaLength(){
				    return null;
				}
				public Integer ContaPrecision(){
				    return null;
				}
				public String ContaDefault(){
				
					return null;
				
				}
				public String ContaComment(){
				
				    return "";
				
				}
				public String ContaPattern(){
				
					return "";
				
				}
				public String ContaOriginalDbColumnName(){
				
					return "Conta";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public Double Comissao_Liquida;

				public Double getComissao_Liquida () {
					return this.Comissao_Liquida;
				}

				public Boolean Comissao_LiquidaIsNullable(){
				    return true;
				}
				public Boolean Comissao_LiquidaIsKey(){
				    return false;
				}
				public Integer Comissao_LiquidaLength(){
				    return null;
				}
				public Integer Comissao_LiquidaPrecision(){
				    return 2;
				}
				public String Comissao_LiquidaDefault(){
				
					return null;
				
				}
				public String Comissao_LiquidaComment(){
				
				    return "";
				
				}
				public String Comissao_LiquidaPattern(){
				
					return "";
				
				}
				public String Comissao_LiquidaOriginalDbColumnName(){
				
					return "Comissao_Liquida";
				
				}

				
			    public Double desconto;

				public Double getDesconto () {
					return this.desconto;
				}

				public Boolean descontoIsNullable(){
				    return true;
				}
				public Boolean descontoIsKey(){
				    return false;
				}
				public Integer descontoLength(){
				    return null;
				}
				public Integer descontoPrecision(){
				    return 2;
				}
				public String descontoDefault(){
				
					return null;
				
				}
				public String descontoComment(){
				
				    return "";
				
				}
				public String descontoPattern(){
				
					return "";
				
				}
				public String descontoOriginalDbColumnName(){
				
					return "desconto";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.concat == null) ? 0 : this.concat.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row32Struct other = (row32Struct) obj;
		
						if (this.concat == null) {
							if (other.concat != null)
								return false;
						
						} else if (!this.concat.equals(other.concat))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row32Struct other) {

		other.concat = this.concat;
	            other.Conta = this.Conta;
	            other.CategoriaID = this.CategoriaID;
	            other.Categoria = this.Categoria;
	            other.Comissao_Liquida = this.Comissao_Liquida;
	            other.desconto = this.desconto;
	            
	}

	public void copyKeysDataTo(row32Struct other) {

		other.concat = this.concat;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.concat = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.concat,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.Conta = readString(dis,ois);
					
						this.CategoriaID = readString(dis,ois);
					
						this.Categoria = readString(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Comissao_Liquida = null;
           				} else {
           			    	this.Comissao_Liquida = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.desconto = null;
           				} else {
           			    	this.desconto = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.Conta = readString(dis,objectIn);
					
						this.CategoriaID = readString(dis,objectIn);
					
						this.Categoria = readString(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.Comissao_Liquida = null;
           				} else {
           			    	this.Comissao_Liquida = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.desconto = null;
           				} else {
           			    	this.desconto = objectIn.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.Conta, dos, oos);
					
						writeString(this.CategoriaID, dos, oos);
					
						writeString(this.Categoria, dos, oos);
					
						if(this.Comissao_Liquida == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Comissao_Liquida);
		            	}
					
						if(this.desconto == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.desconto);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.Conta, dos, objectOut);
					
						writeString(this.CategoriaID, dos, objectOut);
					
						writeString(this.Categoria, dos, objectOut);
					
						if(this.Comissao_Liquida == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.Comissao_Liquida);
		            	}
					
						if(this.desconto == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.desconto);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("concat="+concat);
		sb.append(",Conta="+Conta);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Categoria="+Categoria);
		sb.append(",Comissao_Liquida="+String.valueOf(Comissao_Liquida));
		sb.append(",desconto="+String.valueOf(desconto));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.concat, other.concat);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row32Struct row32 = new row32Struct();




	
	/**
	 * [tAdvancedHash_row32 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row32", false);
		start_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row32";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tAdvancedHash_row32 = 0;
		

			   		// connection name:row32
			   		// source node:tHashInput_8 - inputs:(after_tHashInput_6) outputs:(row32,row32) | target node:tAdvancedHash_row32 - inputs:(row32) outputs:()
			   		// linked node: tMap_12 - inputs:(row42,row32) outputs:(Saida3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row32 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row32Struct>getLookup(matchingModeEnum_row32);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row32", tHash_Lookup_row32);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row32 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row24Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row24Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    row24Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row32.concat = next_tHashInput_8.concat;
	row32.Conta = next_tHashInput_8.Conta;
	row32.CategoriaID = next_tHashInput_8.CategoriaID;
	row32.Categoria = next_tHashInput_8.Categoria;
	row32.Comissao_Liquida = next_tHashInput_8.Comissao_Liquida;
	row32.desconto = next_tHashInput_8.desconto;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					


			   
			   

					row32Struct row32_HashRow = new row32Struct();
		   	   	   
				
				row32_HashRow.concat = row32.concat;
				
				row32_HashRow.Conta = row32.Conta;
				
				row32_HashRow.CategoriaID = row32.CategoriaID;
				
				row32_HashRow.Categoria = row32.Categoria;
				
				row32_HashRow.Comissao_Liquida = row32.Comissao_Liquida;
				
				row32_HashRow.desconto = row32.desconto;
				
			tHash_Lookup_row32.put(row32_HashRow);
			
            




 


	tos_count_tAdvancedHash_row32++;

/**
 * [tAdvancedHash_row32 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

tHash_Lookup_row32.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row32", true);
end_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());




/**
 * [tAdvancedHash_row32 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row33Struct implements routines.system.IPersistableComparableLookupRow<row33Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Integer QTDE_COD_ENTREGA;

				public Integer getQTDE_COD_ENTREGA () {
					return this.QTDE_COD_ENTREGA;
				}

				public Boolean QTDE_COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean QTDE_COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer QTDE_COD_ENTREGALength(){
				    return null;
				}
				public Integer QTDE_COD_ENTREGAPrecision(){
				    return null;
				}
				public String QTDE_COD_ENTREGADefault(){
				
					return null;
				
				}
				public String QTDE_COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String QTDE_COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String QTDE_COD_ENTREGAOriginalDbColumnName(){
				
					return "QTDE_COD_ENTREGA";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ENTREGA == null) ? 0 : new Double(this.COD_ENTREGA.doubleValue()).hashCode());
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row33Struct other = (row33Struct) obj;
		
						if (this.COD_ENTREGA == null) {
							if (other.COD_ENTREGA != null)
								return false;
						
						} else if ((other.COD_ENTREGA == null) || (this.COD_ENTREGA.compareTo(other.COD_ENTREGA)!=0))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row33Struct other) {

		other.COD_ENTREGA = this.COD_ENTREGA;
	            other.QTDE_COD_ENTREGA = this.QTDE_COD_ENTREGA;
	            
	}

	public void copyKeysDataTo(row33Struct other) {

		other.COD_ENTREGA = this.COD_ENTREGA;
	            	
	}



	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.QTDE_COD_ENTREGA = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.QTDE_COD_ENTREGA = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.QTDE_COD_ENTREGA, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.QTDE_COD_ENTREGA, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",QTDE_COD_ENTREGA="+String.valueOf(QTDE_COD_ENTREGA));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ENTREGA, other.COD_ENTREGA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row33Struct row33 = new row33Struct();




	
	/**
	 * [tAdvancedHash_row33 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row33", false);
		start_Hash.put("tAdvancedHash_row33", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row33";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tAdvancedHash_row33 = 0;
		

			   		// connection name:row33
			   		// source node:tHashInput_9 - inputs:(after_tHashInput_6) outputs:(row33,row33) | target node:tAdvancedHash_row33 - inputs:(row33) outputs:()
			   		// linked node: tMap_13 - inputs:(Saida3,row33) outputs:(saida)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row33 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row33Struct> tHash_Lookup_row33 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row33Struct>getLookup(matchingModeEnum_row33);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row33", tHash_Lookup_row33);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row33 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row12Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row12Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row33.COD_ENTREGA = next_tHashInput_9.COD_ENTREGA;
	row33.QTDE_COD_ENTREGA = next_tHashInput_9.QUANTIDADE;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					


			   
			   

					row33Struct row33_HashRow = new row33Struct();
		   	   	   
				
				row33_HashRow.COD_ENTREGA = row33.COD_ENTREGA;
				
				row33_HashRow.QTDE_COD_ENTREGA = row33.QTDE_COD_ENTREGA;
				
			tHash_Lookup_row33.put(row33_HashRow);
			
            




 


	tos_count_tAdvancedHash_row33++;

/**
 * [tAdvancedHash_row33 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row33 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

 



/**
 * [tAdvancedHash_row33 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row33 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

 



/**
 * [tAdvancedHash_row33 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

tHash_Lookup_row33.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row33", true);
end_Hash.put("tAdvancedHash_row33", System.currentTimeMillis());




/**
 * [tAdvancedHash_row33 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row33 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row33";
	
	

 



/**
 * [tAdvancedHash_row33 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row45Struct implements routines.system.IPersistableComparableLookupRow<row45Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return false;
				}
				public Integer CD_PRODUTOLength(){
				    return null;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public Double VL_CUSTO;

				public Double getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return null;
				}
				public Integer VL_CUSTOPrecision(){
				    return null;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public Double tb3_vl_venda;

				public Double getTb3_vl_venda () {
					return this.tb3_vl_venda;
				}

				public Boolean tb3_vl_vendaIsNullable(){
				    return true;
				}
				public Boolean tb3_vl_vendaIsKey(){
				    return false;
				}
				public Integer tb3_vl_vendaLength(){
				    return null;
				}
				public Integer tb3_vl_vendaPrecision(){
				    return null;
				}
				public String tb3_vl_vendaDefault(){
				
					return null;
				
				}
				public String tb3_vl_vendaComment(){
				
				    return "";
				
				}
				public String tb3_vl_vendaPattern(){
				
					return "";
				
				}
				public String tb3_vl_vendaOriginalDbColumnName(){
				
					return "tb3_vl_venda";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row45Struct other = (row45Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row45Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.tb3_vl_venda = this.tb3_vl_venda;
	            
	}

	public void copyKeysDataTo(row45Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.tb3_vl_venda = null;
           				} else {
           			    	this.tb3_vl_venda = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.VL_CUSTO = null;
           				} else {
           			    	this.VL_CUSTO = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.tb3_vl_venda = null;
           				} else {
           			    	this.tb3_vl_venda = objectIn.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						if(this.VL_CUSTO == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.VL_CUSTO);
		            	}
					
						if(this.tb3_vl_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.tb3_vl_venda);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						if(this.VL_CUSTO == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.VL_CUSTO);
		            	}
					
						if(this.tb3_vl_venda == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.tb3_vl_venda);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",tb3_vl_venda="+String.valueOf(tb3_vl_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row45Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row45Struct row45 = new row45Struct();




	
	/**
	 * [tAdvancedHash_row45 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row45", false);
		start_Hash.put("tAdvancedHash_row45", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row45";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row45");
					}
				
		int tos_count_tAdvancedHash_row45 = 0;
		

			   		// connection name:row45
			   		// source node:tHashInput_11 - inputs:(after_tHashInput_6) outputs:(row45,row45) | target node:tAdvancedHash_row45 - inputs:(row45) outputs:()
			   		// linked node: tMap_15 - inputs:(saida5,row45) outputs:(saida7)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row45 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row45Struct> tHash_Lookup_row45 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row45Struct>getLookup(matchingModeEnum_row45);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row45", tHash_Lookup_row45);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row45 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<saida11Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_11");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<saida11Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    saida11Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row45.CD_PRODUTO = next_tHashInput_11.CD_PRODUTO;
	row45.VL_CUSTO = next_tHashInput_11.VL_CUSTO;
	row45.tb3_vl_venda = next_tHashInput_11.tb3_vl_venda;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row45"
						
						);
					}
					


			   
			   

					row45Struct row45_HashRow = new row45Struct();
		   	   	   
				
				row45_HashRow.CD_PRODUTO = row45.CD_PRODUTO;
				
				row45_HashRow.VL_CUSTO = row45.VL_CUSTO;
				
				row45_HashRow.tb3_vl_venda = row45.tb3_vl_venda;
				
			tHash_Lookup_row45.put(row45_HashRow);
			
            




 


	tos_count_tAdvancedHash_row45++;

/**
 * [tAdvancedHash_row45 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row45 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

 



/**
 * [tAdvancedHash_row45 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row45 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

 



/**
 * [tAdvancedHash_row45 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_11");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

tHash_Lookup_row45.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row45");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row45", true);
end_Hash.put("tAdvancedHash_row45", System.currentTimeMillis());




/**
 * [tAdvancedHash_row45 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row45 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row45";
	
	

 



/**
 * [tAdvancedHash_row45 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row54Struct implements routines.system.IPersistableComparableLookupRow<row54Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SHIPPING_ID == null) ? 0 : new Double(this.SHIPPING_ID.doubleValue()).hashCode());
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row54Struct other = (row54Struct) obj;
		
						if (this.SHIPPING_ID == null) {
							if (other.SHIPPING_ID != null)
								return false;
						
						} else if ((other.SHIPPING_ID == null) || (this.SHIPPING_ID.compareTo(other.SHIPPING_ID)!=0))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row54Struct other) {

		other.SHIPPING_ID = this.SHIPPING_ID;
	            other.NET_CREDIT_AMOUNT = this.NET_CREDIT_AMOUNT;
	            
	}

	public void copyKeysDataTo(row54Struct other) {

		other.SHIPPING_ID = this.SHIPPING_ID;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.SHIPPING_ID = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.SHIPPING_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SHIPPING_ID);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = objectIn.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						if(this.NET_CREDIT_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row54Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SHIPPING_ID, other.SHIPPING_ID);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row54Struct row54 = new row54Struct();




	
	/**
	 * [tAdvancedHash_row54 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row54", false);
		start_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row54");
					}
				
		int tos_count_tAdvancedHash_row54 = 0;
		

			   		// connection name:row54
			   		// source node:tHashInput_12 - inputs:(after_tHashInput_6) outputs:(row54,row54) | target node:tAdvancedHash_row54 - inputs:(row54) outputs:()
			   		// linked node: tMap_16 - inputs:(saida7,row54) outputs:(saida8,Agregate_custo)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row54 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row54Struct> tHash_Lookup_row54 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row54Struct>getLookup(matchingModeEnum_row54);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row54", tHash_Lookup_row54);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row54 begin ] stop
 */



	
	/**
	 * [tHashInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_12", false);
		start_Hash.put("tHashInput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_12";
	
	
		int tos_count_tHashInput_12 = 0;
		


int nb_line_tHashInput_12 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row52Struct> tHashFile_tHashInput_12 = mf_tHashInput_12.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_12==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row52Struct> iterator_tHashInput_12 = tHashFile_tHashInput_12.iterator();
while (iterator_tHashInput_12.hasNext()) {
    row52Struct next_tHashInput_12 = iterator_tHashInput_12.next();

	row54.SHIPPING_ID = next_tHashInput_12.SHIPPING_ID;
	row54.NET_CREDIT_AMOUNT = next_tHashInput_12.NET_CREDIT_AMOUNT;

 



/**
 * [tHashInput_12 begin ] stop
 */
	
	/**
	 * [tHashInput_12 main ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 


	tos_count_tHashInput_12++;

/**
 * [tHashInput_12 main ] stop
 */
	
	/**
	 * [tHashInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row54"
						
						);
					}
					


			   
			   

					row54Struct row54_HashRow = new row54Struct();
		   	   	   
				
				row54_HashRow.SHIPPING_ID = row54.SHIPPING_ID;
				
				row54_HashRow.NET_CREDIT_AMOUNT = row54.NET_CREDIT_AMOUNT;
				
			tHash_Lookup_row54.put(row54_HashRow);
			
            




 


	tos_count_tAdvancedHash_row54++;

/**
 * [tAdvancedHash_row54 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row54 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_12 end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	
    

		
			nb_line_tHashInput_12++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_12_NB_LINE", nb_line_tHashInput_12);       

 

ok_Hash.put("tHashInput_12", true);
end_Hash.put("tHashInput_12", System.currentTimeMillis());




/**
 * [tHashInput_12 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

tHash_Lookup_row54.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row54");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row54", true);
end_Hash.put("tAdvancedHash_row54", System.currentTimeMillis());




/**
 * [tAdvancedHash_row54 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row54 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row54";
	
	

 



/**
 * [tAdvancedHash_row54 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row30Struct implements routines.system.IPersistableComparableLookupRow<row30Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public BigDecimal COD_ENTREGA;

				public BigDecimal getCOD_ENTREGA () {
					return this.COD_ENTREGA;
				}

				public Boolean COD_ENTREGAIsNullable(){
				    return true;
				}
				public Boolean COD_ENTREGAIsKey(){
				    return false;
				}
				public Integer COD_ENTREGALength(){
				    return null;
				}
				public Integer COD_ENTREGAPrecision(){
				    return null;
				}
				public String COD_ENTREGADefault(){
				
					return null;
				
				}
				public String COD_ENTREGAComment(){
				
				    return "";
				
				}
				public String COD_ENTREGAPattern(){
				
					return "";
				
				}
				public String COD_ENTREGAOriginalDbColumnName(){
				
					return "COD_ENTREGA";
				
				}

				
			    public Double sum_Custo;

				public Double getSum_Custo () {
					return this.sum_Custo;
				}

				public Boolean sum_CustoIsNullable(){
				    return true;
				}
				public Boolean sum_CustoIsKey(){
				    return false;
				}
				public Integer sum_CustoLength(){
				    return null;
				}
				public Integer sum_CustoPrecision(){
				    return null;
				}
				public String sum_CustoDefault(){
				
					return null;
				
				}
				public String sum_CustoComment(){
				
				    return "";
				
				}
				public String sum_CustoPattern(){
				
					return "";
				
				}
				public String sum_CustoOriginalDbColumnName(){
				
					return "sum_Custo";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ENTREGA == null) ? 0 : new Double(this.COD_ENTREGA.doubleValue()).hashCode());
						
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row30Struct other = (row30Struct) obj;
		
						if (this.COD_ENTREGA == null) {
							if (other.COD_ENTREGA != null)
								return false;
						
						} else if ((other.COD_ENTREGA == null) || (this.COD_ENTREGA.compareTo(other.COD_ENTREGA)!=0))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row30Struct other) {

		other.COD_ENTREGA = this.COD_ENTREGA;
	            other.sum_Custo = this.sum_Custo;
	            
	}

	public void copyKeysDataTo(row30Struct other) {

		other.COD_ENTREGA = this.COD_ENTREGA;
	            	
	}




    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
						this.COD_ENTREGA = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// BigDecimal
				
       			    	dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.COD_ENTREGA);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.sum_Custo = null;
           				} else {
           			    	this.sum_Custo = objectIn.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						if(this.sum_Custo == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						if(this.sum_Custo == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.sum_Custo);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ENTREGA="+String.valueOf(COD_ENTREGA));
		sb.append(",sum_Custo="+String.valueOf(sum_Custo));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ENTREGA, other.COD_ENTREGA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row30Struct row30 = new row30Struct();




	
	/**
	 * [tAdvancedHash_row30 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row30", false);
		start_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tAdvancedHash_row30 = 0;
		

			   		// connection name:row30
			   		// source node:tHashInput_14 - inputs:(after_tHashInput_13) outputs:(row30,row30) | target node:tAdvancedHash_row30 - inputs:(row30) outputs:()
			   		// linked node: tMap_17 - inputs:(row34,row30) outputs:(Saida9)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row30 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row30Struct>getLookup(matchingModeEnum_row30);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row30", tHash_Lookup_row30);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row30 begin ] stop
 */



	
	/**
	 * [tHashInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_14", false);
		start_Hash.put("tHashInput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_14";
	
	
		int tos_count_tHashInput_14 = 0;
		


int nb_line_tHashInput_14 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_14 = mf_tHashInput_14.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_14==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_14 = tHashFile_tHashInput_14.iterator();
while (iterator_tHashInput_14.hasNext()) {
    row10Struct next_tHashInput_14 = iterator_tHashInput_14.next();

	row30.COD_ENTREGA = next_tHashInput_14.COD_ENTREGA;
	row30.sum_Custo = next_tHashInput_14.sum_Custo;

 



/**
 * [tHashInput_14 begin ] stop
 */
	
	/**
	 * [tHashInput_14 main ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 


	tos_count_tHashInput_14++;

/**
 * [tHashInput_14 main ] stop
 */
	
	/**
	 * [tHashInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					


			   
			   

					row30Struct row30_HashRow = new row30Struct();
		   	   	   
				
				row30_HashRow.COD_ENTREGA = row30.COD_ENTREGA;
				
				row30_HashRow.sum_Custo = row30.sum_Custo;
				
			tHash_Lookup_row30.put(row30_HashRow);
			
            




 


	tos_count_tAdvancedHash_row30++;

/**
 * [tAdvancedHash_row30 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_14 end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	
    

		
			nb_line_tHashInput_14++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_14_NB_LINE", nb_line_tHashInput_14);       

 

ok_Hash.put("tHashInput_14", true);
end_Hash.put("tHashInput_14", System.currentTimeMillis());




/**
 * [tHashInput_14 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

tHash_Lookup_row30.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row30", true);
end_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());




/**
 * [tAdvancedHash_row30 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row39Struct implements routines.system.IPersistableComparableLookupRow<row39Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String MLB;

				public String getMLB () {
					return this.MLB;
				}

				public Boolean MLBIsNullable(){
				    return true;
				}
				public Boolean MLBIsKey(){
				    return false;
				}
				public Integer MLBLength(){
				    return null;
				}
				public Integer MLBPrecision(){
				    return null;
				}
				public String MLBDefault(){
				
					return null;
				
				}
				public String MLBComment(){
				
				    return "";
				
				}
				public String MLBPattern(){
				
					return "";
				
				}
				public String MLBOriginalDbColumnName(){
				
					return "MLB";
				
				}

				
			    public String SKU;

				public String getSKU () {
					return this.SKU;
				}

				public Boolean SKUIsNullable(){
				    return true;
				}
				public Boolean SKUIsKey(){
				    return false;
				}
				public Integer SKULength(){
				    return null;
				}
				public Integer SKUPrecision(){
				    return null;
				}
				public String SKUDefault(){
				
					return null;
				
				}
				public String SKUComment(){
				
				    return "";
				
				}
				public String SKUPattern(){
				
					return "";
				
				}
				public String SKUOriginalDbColumnName(){
				
					return "SKU";
				
				}

				
			    public String Apelido;

				public String getApelido () {
					return this.Apelido;
				}

				public Boolean ApelidoIsNullable(){
				    return true;
				}
				public Boolean ApelidoIsKey(){
				    return false;
				}
				public Integer ApelidoLength(){
				    return null;
				}
				public Integer ApelidoPrecision(){
				    return null;
				}
				public String ApelidoDefault(){
				
					return null;
				
				}
				public String ApelidoComment(){
				
				    return "";
				
				}
				public String ApelidoPattern(){
				
					return "";
				
				}
				public String ApelidoOriginalDbColumnName(){
				
					return "Apelido";
				
				}

				
			    public String Loja_Oficial;

				public String getLoja_Oficial () {
					return this.Loja_Oficial;
				}

				public Boolean Loja_OficialIsNullable(){
				    return true;
				}
				public Boolean Loja_OficialIsKey(){
				    return false;
				}
				public Integer Loja_OficialLength(){
				    return null;
				}
				public Integer Loja_OficialPrecision(){
				    return null;
				}
				public String Loja_OficialDefault(){
				
					return null;
				
				}
				public String Loja_OficialComment(){
				
				    return "";
				
				}
				public String Loja_OficialPattern(){
				
					return "";
				
				}
				public String Loja_OficialOriginalDbColumnName(){
				
					return "Loja_Oficial";
				
				}

				
			    public String Titulo;

				public String getTitulo () {
					return this.Titulo;
				}

				public Boolean TituloIsNullable(){
				    return true;
				}
				public Boolean TituloIsKey(){
				    return false;
				}
				public Integer TituloLength(){
				    return null;
				}
				public Integer TituloPrecision(){
				    return null;
				}
				public String TituloDefault(){
				
					return null;
				
				}
				public String TituloComment(){
				
				    return "";
				
				}
				public String TituloPattern(){
				
					return "";
				
				}
				public String TituloOriginalDbColumnName(){
				
					return "Titulo";
				
				}

				
			    public String Status;

				public String getStatus () {
					return this.Status;
				}

				public Boolean StatusIsNullable(){
				    return true;
				}
				public Boolean StatusIsKey(){
				    return false;
				}
				public Integer StatusLength(){
				    return null;
				}
				public Integer StatusPrecision(){
				    return null;
				}
				public String StatusDefault(){
				
					return null;
				
				}
				public String StatusComment(){
				
				    return "";
				
				}
				public String StatusPattern(){
				
					return "";
				
				}
				public String StatusOriginalDbColumnName(){
				
					return "Status";
				
				}

				
			    public String Preco;

				public String getPreco () {
					return this.Preco;
				}

				public Boolean PrecoIsNullable(){
				    return true;
				}
				public Boolean PrecoIsKey(){
				    return false;
				}
				public Integer PrecoLength(){
				    return null;
				}
				public Integer PrecoPrecision(){
				    return null;
				}
				public String PrecoDefault(){
				
					return null;
				
				}
				public String PrecoComment(){
				
				    return "";
				
				}
				public String PrecoPattern(){
				
					return "";
				
				}
				public String PrecoOriginalDbColumnName(){
				
					return "Preco";
				
				}

				
			    public String Vendas;

				public String getVendas () {
					return this.Vendas;
				}

				public Boolean VendasIsNullable(){
				    return true;
				}
				public Boolean VendasIsKey(){
				    return false;
				}
				public Integer VendasLength(){
				    return null;
				}
				public Integer VendasPrecision(){
				    return null;
				}
				public String VendasDefault(){
				
					return null;
				
				}
				public String VendasComment(){
				
				    return "";
				
				}
				public String VendasPattern(){
				
					return "";
				
				}
				public String VendasOriginalDbColumnName(){
				
					return "Vendas";
				
				}

				
			    public String Categoria;

				public String getCategoria () {
					return this.Categoria;
				}

				public Boolean CategoriaIsNullable(){
				    return true;
				}
				public Boolean CategoriaIsKey(){
				    return false;
				}
				public Integer CategoriaLength(){
				    return null;
				}
				public Integer CategoriaPrecision(){
				    return null;
				}
				public String CategoriaDefault(){
				
					return null;
				
				}
				public String CategoriaComment(){
				
				    return "";
				
				}
				public String CategoriaPattern(){
				
					return "";
				
				}
				public String CategoriaOriginalDbColumnName(){
				
					return "Categoria";
				
				}

				
			    public String Porcentagem_cobrada_do_ML;

				public String getPorcentagem_cobrada_do_ML () {
					return this.Porcentagem_cobrada_do_ML;
				}

				public Boolean Porcentagem_cobrada_do_MLIsNullable(){
				    return true;
				}
				public Boolean Porcentagem_cobrada_do_MLIsKey(){
				    return false;
				}
				public Integer Porcentagem_cobrada_do_MLLength(){
				    return null;
				}
				public Integer Porcentagem_cobrada_do_MLPrecision(){
				    return null;
				}
				public String Porcentagem_cobrada_do_MLDefault(){
				
					return null;
				
				}
				public String Porcentagem_cobrada_do_MLComment(){
				
				    return "";
				
				}
				public String Porcentagem_cobrada_do_MLPattern(){
				
					return "";
				
				}
				public String Porcentagem_cobrada_do_MLOriginalDbColumnName(){
				
					return "Porcentagem_cobrada_do_ML";
				
				}

				
			    public String Modo_Entrega;

				public String getModo_Entrega () {
					return this.Modo_Entrega;
				}

				public Boolean Modo_EntregaIsNullable(){
				    return true;
				}
				public Boolean Modo_EntregaIsKey(){
				    return false;
				}
				public Integer Modo_EntregaLength(){
				    return null;
				}
				public Integer Modo_EntregaPrecision(){
				    return null;
				}
				public String Modo_EntregaDefault(){
				
					return null;
				
				}
				public String Modo_EntregaComment(){
				
				    return "";
				
				}
				public String Modo_EntregaPattern(){
				
					return "";
				
				}
				public String Modo_EntregaOriginalDbColumnName(){
				
					return "Modo_Entrega";
				
				}

				
			    public String Frete_Gratis;

				public String getFrete_Gratis () {
					return this.Frete_Gratis;
				}

				public Boolean Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Frete_GratisIsKey(){
				    return false;
				}
				public Integer Frete_GratisLength(){
				    return null;
				}
				public Integer Frete_GratisPrecision(){
				    return null;
				}
				public String Frete_GratisDefault(){
				
					return null;
				
				}
				public String Frete_GratisComment(){
				
				    return "";
				
				}
				public String Frete_GratisPattern(){
				
					return "";
				
				}
				public String Frete_GratisOriginalDbColumnName(){
				
					return "Frete_Gratis";
				
				}

				
			    public String Tarifa_Frete_Gratis;

				public String getTarifa_Frete_Gratis () {
					return this.Tarifa_Frete_Gratis;
				}

				public Boolean Tarifa_Frete_GratisIsNullable(){
				    return true;
				}
				public Boolean Tarifa_Frete_GratisIsKey(){
				    return false;
				}
				public Integer Tarifa_Frete_GratisLength(){
				    return null;
				}
				public Integer Tarifa_Frete_GratisPrecision(){
				    return null;
				}
				public String Tarifa_Frete_GratisDefault(){
				
					return null;
				
				}
				public String Tarifa_Frete_GratisComment(){
				
				    return "";
				
				}
				public String Tarifa_Frete_GratisPattern(){
				
					return "";
				
				}
				public String Tarifa_Frete_GratisOriginalDbColumnName(){
				
					return "Tarifa_Frete_Gratis";
				
				}

				
			    public String Estoque;

				public String getEstoque () {
					return this.Estoque;
				}

				public Boolean EstoqueIsNullable(){
				    return true;
				}
				public Boolean EstoqueIsKey(){
				    return false;
				}
				public Integer EstoqueLength(){
				    return null;
				}
				public Integer EstoquePrecision(){
				    return null;
				}
				public String EstoqueDefault(){
				
					return null;
				
				}
				public String EstoqueComment(){
				
				    return "";
				
				}
				public String EstoquePattern(){
				
					return "";
				
				}
				public String EstoqueOriginalDbColumnName(){
				
					return "Estoque";
				
				}

				
			    public String Dimensoes;

				public String getDimensoes () {
					return this.Dimensoes;
				}

				public Boolean DimensoesIsNullable(){
				    return true;
				}
				public Boolean DimensoesIsKey(){
				    return false;
				}
				public Integer DimensoesLength(){
				    return null;
				}
				public Integer DimensoesPrecision(){
				    return null;
				}
				public String DimensoesDefault(){
				
					return null;
				
				}
				public String DimensoesComment(){
				
				    return "";
				
				}
				public String DimensoesPattern(){
				
					return "";
				
				}
				public String DimensoesOriginalDbColumnName(){
				
					return "Dimensoes";
				
				}

				
			    public String Em_Promocao;

				public String getEm_Promocao () {
					return this.Em_Promocao;
				}

				public Boolean Em_PromocaoIsNullable(){
				    return true;
				}
				public Boolean Em_PromocaoIsKey(){
				    return false;
				}
				public Integer Em_PromocaoLength(){
				    return null;
				}
				public Integer Em_PromocaoPrecision(){
				    return null;
				}
				public String Em_PromocaoDefault(){
				
					return null;
				
				}
				public String Em_PromocaoComment(){
				
				    return "";
				
				}
				public String Em_PromocaoPattern(){
				
					return "";
				
				}
				public String Em_PromocaoOriginalDbColumnName(){
				
					return "Em_Promocao";
				
				}

				
			    public String Percent_Qualidade;

				public String getPercent_Qualidade () {
					return this.Percent_Qualidade;
				}

				public Boolean Percent_QualidadeIsNullable(){
				    return true;
				}
				public Boolean Percent_QualidadeIsKey(){
				    return false;
				}
				public Integer Percent_QualidadeLength(){
				    return null;
				}
				public Integer Percent_QualidadePrecision(){
				    return null;
				}
				public String Percent_QualidadeDefault(){
				
					return null;
				
				}
				public String Percent_QualidadeComment(){
				
				    return "";
				
				}
				public String Percent_QualidadePattern(){
				
					return "";
				
				}
				public String Percent_QualidadeOriginalDbColumnName(){
				
					return "Percent_Qualidade";
				
				}

				
			    public String Vr_Receber;

				public String getVr_Receber () {
					return this.Vr_Receber;
				}

				public Boolean Vr_ReceberIsNullable(){
				    return true;
				}
				public Boolean Vr_ReceberIsKey(){
				    return false;
				}
				public Integer Vr_ReceberLength(){
				    return null;
				}
				public Integer Vr_ReceberPrecision(){
				    return null;
				}
				public String Vr_ReceberDefault(){
				
					return null;
				
				}
				public String Vr_ReceberComment(){
				
				    return "";
				
				}
				public String Vr_ReceberPattern(){
				
					return "";
				
				}
				public String Vr_ReceberOriginalDbColumnName(){
				
					return "Vr_Receber";
				
				}

				
			    public String CategoriaID;

				public String getCategoriaID () {
					return this.CategoriaID;
				}

				public Boolean CategoriaIDIsNullable(){
				    return true;
				}
				public Boolean CategoriaIDIsKey(){
				    return false;
				}
				public Integer CategoriaIDLength(){
				    return null;
				}
				public Integer CategoriaIDPrecision(){
				    return null;
				}
				public String CategoriaIDDefault(){
				
					return null;
				
				}
				public String CategoriaIDComment(){
				
				    return "";
				
				}
				public String CategoriaIDPattern(){
				
					return "";
				
				}
				public String CategoriaIDOriginalDbColumnName(){
				
					return "CategoriaID";
				
				}

				
			    public String Data_Cadastro;

				public String getData_Cadastro () {
					return this.Data_Cadastro;
				}

				public Boolean Data_CadastroIsNullable(){
				    return true;
				}
				public Boolean Data_CadastroIsKey(){
				    return false;
				}
				public Integer Data_CadastroLength(){
				    return null;
				}
				public Integer Data_CadastroPrecision(){
				    return null;
				}
				public String Data_CadastroDefault(){
				
					return null;
				
				}
				public String Data_CadastroComment(){
				
				    return "";
				
				}
				public String Data_CadastroPattern(){
				
					return "";
				
				}
				public String Data_CadastroOriginalDbColumnName(){
				
					return "Data_Cadastro";
				
				}

				
			    public String Url;

				public String getUrl () {
					return this.Url;
				}

				public Boolean UrlIsNullable(){
				    return true;
				}
				public Boolean UrlIsKey(){
				    return false;
				}
				public Integer UrlLength(){
				    return null;
				}
				public Integer UrlPrecision(){
				    return null;
				}
				public String UrlDefault(){
				
					return null;
				
				}
				public String UrlComment(){
				
				    return "";
				
				}
				public String UrlPattern(){
				
					return "";
				
				}
				public String UrlOriginalDbColumnName(){
				
					return "Url";
				
				}

				
			    public String MLB_Origem_Catalogo;

				public String getMLB_Origem_Catalogo () {
					return this.MLB_Origem_Catalogo;
				}

				public Boolean MLB_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean MLB_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer MLB_Origem_CatalogoLength(){
				    return null;
				}
				public Integer MLB_Origem_CatalogoPrecision(){
				    return null;
				}
				public String MLB_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String MLB_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String MLB_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String MLB_Origem_CatalogoOriginalDbColumnName(){
				
					return "MLB_Origem_Catalogo";
				
				}

				
			    public String Variacao_Origem_Catalogo;

				public String getVariacao_Origem_Catalogo () {
					return this.Variacao_Origem_Catalogo;
				}

				public Boolean Variacao_Origem_CatalogoIsNullable(){
				    return true;
				}
				public Boolean Variacao_Origem_CatalogoIsKey(){
				    return false;
				}
				public Integer Variacao_Origem_CatalogoLength(){
				    return null;
				}
				public Integer Variacao_Origem_CatalogoPrecision(){
				    return null;
				}
				public String Variacao_Origem_CatalogoDefault(){
				
					return null;
				
				}
				public String Variacao_Origem_CatalogoComment(){
				
				    return "";
				
				}
				public String Variacao_Origem_CatalogoPattern(){
				
					return "";
				
				}
				public String Variacao_Origem_CatalogoOriginalDbColumnName(){
				
					return "Variacao_Origem_Catalogo";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.SKU == null) ? 0 : this.SKU.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row39Struct other = (row39Struct) obj;
		
						if (this.SKU == null) {
							if (other.SKU != null)
								return false;
						
						} else if (!this.SKU.equals(other.SKU))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row39Struct other) {

		other.MLB = this.MLB;
	            other.SKU = this.SKU;
	            other.Apelido = this.Apelido;
	            other.Loja_Oficial = this.Loja_Oficial;
	            other.Titulo = this.Titulo;
	            other.Status = this.Status;
	            other.Preco = this.Preco;
	            other.Vendas = this.Vendas;
	            other.Categoria = this.Categoria;
	            other.Porcentagem_cobrada_do_ML = this.Porcentagem_cobrada_do_ML;
	            other.Modo_Entrega = this.Modo_Entrega;
	            other.Frete_Gratis = this.Frete_Gratis;
	            other.Tarifa_Frete_Gratis = this.Tarifa_Frete_Gratis;
	            other.Estoque = this.Estoque;
	            other.Dimensoes = this.Dimensoes;
	            other.Em_Promocao = this.Em_Promocao;
	            other.Percent_Qualidade = this.Percent_Qualidade;
	            other.Vr_Receber = this.Vr_Receber;
	            other.CategoriaID = this.CategoriaID;
	            other.Data_Cadastro = this.Data_Cadastro;
	            other.Url = this.Url;
	            other.MLB_Origem_Catalogo = this.MLB_Origem_Catalogo;
	            other.Variacao_Origem_Catalogo = this.Variacao_Origem_Catalogo;
	            
	}

	public void copyKeysDataTo(row39Struct other) {

		other.SKU = this.SKU;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.SKU = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.SKU,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.MLB = readString(dis,ois);
					
						this.Apelido = readString(dis,ois);
					
						this.Loja_Oficial = readString(dis,ois);
					
						this.Titulo = readString(dis,ois);
					
						this.Status = readString(dis,ois);
					
						this.Preco = readString(dis,ois);
					
						this.Vendas = readString(dis,ois);
					
						this.Categoria = readString(dis,ois);
					
						this.Porcentagem_cobrada_do_ML = readString(dis,ois);
					
						this.Modo_Entrega = readString(dis,ois);
					
						this.Frete_Gratis = readString(dis,ois);
					
						this.Tarifa_Frete_Gratis = readString(dis,ois);
					
						this.Estoque = readString(dis,ois);
					
						this.Dimensoes = readString(dis,ois);
					
						this.Em_Promocao = readString(dis,ois);
					
						this.Percent_Qualidade = readString(dis,ois);
					
						this.Vr_Receber = readString(dis,ois);
					
						this.CategoriaID = readString(dis,ois);
					
						this.Data_Cadastro = readString(dis,ois);
					
						this.Url = readString(dis,ois);
					
						this.MLB_Origem_Catalogo = readString(dis,ois);
					
						this.Variacao_Origem_Catalogo = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.MLB = readString(dis,objectIn);
					
						this.Apelido = readString(dis,objectIn);
					
						this.Loja_Oficial = readString(dis,objectIn);
					
						this.Titulo = readString(dis,objectIn);
					
						this.Status = readString(dis,objectIn);
					
						this.Preco = readString(dis,objectIn);
					
						this.Vendas = readString(dis,objectIn);
					
						this.Categoria = readString(dis,objectIn);
					
						this.Porcentagem_cobrada_do_ML = readString(dis,objectIn);
					
						this.Modo_Entrega = readString(dis,objectIn);
					
						this.Frete_Gratis = readString(dis,objectIn);
					
						this.Tarifa_Frete_Gratis = readString(dis,objectIn);
					
						this.Estoque = readString(dis,objectIn);
					
						this.Dimensoes = readString(dis,objectIn);
					
						this.Em_Promocao = readString(dis,objectIn);
					
						this.Percent_Qualidade = readString(dis,objectIn);
					
						this.Vr_Receber = readString(dis,objectIn);
					
						this.CategoriaID = readString(dis,objectIn);
					
						this.Data_Cadastro = readString(dis,objectIn);
					
						this.Url = readString(dis,objectIn);
					
						this.MLB_Origem_Catalogo = readString(dis,objectIn);
					
						this.Variacao_Origem_Catalogo = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.MLB, dos, oos);
					
						writeString(this.Apelido, dos, oos);
					
						writeString(this.Loja_Oficial, dos, oos);
					
						writeString(this.Titulo, dos, oos);
					
						writeString(this.Status, dos, oos);
					
						writeString(this.Preco, dos, oos);
					
						writeString(this.Vendas, dos, oos);
					
						writeString(this.Categoria, dos, oos);
					
						writeString(this.Porcentagem_cobrada_do_ML, dos, oos);
					
						writeString(this.Modo_Entrega, dos, oos);
					
						writeString(this.Frete_Gratis, dos, oos);
					
						writeString(this.Tarifa_Frete_Gratis, dos, oos);
					
						writeString(this.Estoque, dos, oos);
					
						writeString(this.Dimensoes, dos, oos);
					
						writeString(this.Em_Promocao, dos, oos);
					
						writeString(this.Percent_Qualidade, dos, oos);
					
						writeString(this.Vr_Receber, dos, oos);
					
						writeString(this.CategoriaID, dos, oos);
					
						writeString(this.Data_Cadastro, dos, oos);
					
						writeString(this.Url, dos, oos);
					
						writeString(this.MLB_Origem_Catalogo, dos, oos);
					
						writeString(this.Variacao_Origem_Catalogo, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.MLB, dos, objectOut);
					
						writeString(this.Apelido, dos, objectOut);
					
						writeString(this.Loja_Oficial, dos, objectOut);
					
						writeString(this.Titulo, dos, objectOut);
					
						writeString(this.Status, dos, objectOut);
					
						writeString(this.Preco, dos, objectOut);
					
						writeString(this.Vendas, dos, objectOut);
					
						writeString(this.Categoria, dos, objectOut);
					
						writeString(this.Porcentagem_cobrada_do_ML, dos, objectOut);
					
						writeString(this.Modo_Entrega, dos, objectOut);
					
						writeString(this.Frete_Gratis, dos, objectOut);
					
						writeString(this.Tarifa_Frete_Gratis, dos, objectOut);
					
						writeString(this.Estoque, dos, objectOut);
					
						writeString(this.Dimensoes, dos, objectOut);
					
						writeString(this.Em_Promocao, dos, objectOut);
					
						writeString(this.Percent_Qualidade, dos, objectOut);
					
						writeString(this.Vr_Receber, dos, objectOut);
					
						writeString(this.CategoriaID, dos, objectOut);
					
						writeString(this.Data_Cadastro, dos, objectOut);
					
						writeString(this.Url, dos, objectOut);
					
						writeString(this.MLB_Origem_Catalogo, dos, objectOut);
					
						writeString(this.Variacao_Origem_Catalogo, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("MLB="+MLB);
		sb.append(",SKU="+SKU);
		sb.append(",Apelido="+Apelido);
		sb.append(",Loja_Oficial="+Loja_Oficial);
		sb.append(",Titulo="+Titulo);
		sb.append(",Status="+Status);
		sb.append(",Preco="+Preco);
		sb.append(",Vendas="+Vendas);
		sb.append(",Categoria="+Categoria);
		sb.append(",Porcentagem_cobrada_do_ML="+Porcentagem_cobrada_do_ML);
		sb.append(",Modo_Entrega="+Modo_Entrega);
		sb.append(",Frete_Gratis="+Frete_Gratis);
		sb.append(",Tarifa_Frete_Gratis="+Tarifa_Frete_Gratis);
		sb.append(",Estoque="+Estoque);
		sb.append(",Dimensoes="+Dimensoes);
		sb.append(",Em_Promocao="+Em_Promocao);
		sb.append(",Percent_Qualidade="+Percent_Qualidade);
		sb.append(",Vr_Receber="+Vr_Receber);
		sb.append(",CategoriaID="+CategoriaID);
		sb.append(",Data_Cadastro="+Data_Cadastro);
		sb.append(",Url="+Url);
		sb.append(",MLB_Origem_Catalogo="+MLB_Origem_Catalogo);
		sb.append(",Variacao_Origem_Catalogo="+Variacao_Origem_Catalogo);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.SKU, other.SKU);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();




	
	/**
	 * [tAdvancedHash_row39 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row39", false);
		start_Hash.put("tAdvancedHash_row39", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row39";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tAdvancedHash_row39 = 0;
		

			   		// connection name:row39
			   		// source node:tHashInput_15 - inputs:(after_tHashInput_13) outputs:(row39,row39) | target node:tAdvancedHash_row39 - inputs:(row39) outputs:()
			   		// linked node: tMap_18 - inputs:(row51,row39) outputs:(saida15)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row39 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row39Struct> tHash_Lookup_row39 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row39Struct>getLookup(matchingModeEnum_row39);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row39", tHash_Lookup_row39);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row39 begin ] stop
 */



	
	/**
	 * [tHashInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_15", false);
		start_Hash.put("tHashInput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_15";
	
	
		int tos_count_tHashInput_15 = 0;
		


int nb_line_tHashInput_15 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row210Struct> tHashFile_tHashInput_15 = mf_tHashInput_15.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_15==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row210Struct> iterator_tHashInput_15 = tHashFile_tHashInput_15.iterator();
while (iterator_tHashInput_15.hasNext()) {
    row210Struct next_tHashInput_15 = iterator_tHashInput_15.next();

	row39.MLB = next_tHashInput_15.MLB;
	row39.SKU = next_tHashInput_15.SKU;
	row39.Apelido = next_tHashInput_15.Apelido;
	row39.Loja_Oficial = next_tHashInput_15.Loja_Oficial;
	row39.Titulo = next_tHashInput_15.Titulo;
	row39.Status = next_tHashInput_15.Status;
	row39.Preco = next_tHashInput_15.Preco;
	row39.Vendas = next_tHashInput_15.Vendas;
	row39.Categoria = next_tHashInput_15.Categoria;
	row39.Porcentagem_cobrada_do_ML = next_tHashInput_15.Porcentagem_cobrada_do_ML;
	row39.Modo_Entrega = next_tHashInput_15.Modo_Entrega;
	row39.Frete_Gratis = next_tHashInput_15.Frete_Gratis;
	row39.Tarifa_Frete_Gratis = next_tHashInput_15.Tarifa_Frete_Gratis;
	row39.Estoque = next_tHashInput_15.Estoque;
	row39.Dimensoes = next_tHashInput_15.Dimensoes;
	row39.Em_Promocao = next_tHashInput_15.Em_Promocao;
	row39.Percent_Qualidade = next_tHashInput_15.Percent_Qualidade;
	row39.Vr_Receber = next_tHashInput_15.Vr_Receber;
	row39.CategoriaID = next_tHashInput_15.CategoriaID;
	row39.Data_Cadastro = next_tHashInput_15.Data_Cadastro;
	row39.Url = next_tHashInput_15.Url;
	row39.MLB_Origem_Catalogo = next_tHashInput_15.MLB_Origem_Catalogo;
	row39.Variacao_Origem_Catalogo = next_tHashInput_15.Variacao_Origem_Catalogo;

 



/**
 * [tHashInput_15 begin ] stop
 */
	
	/**
	 * [tHashInput_15 main ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 


	tos_count_tHashInput_15++;

/**
 * [tHashInput_15 main ] stop
 */
	
	/**
	 * [tHashInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					


			   
			   

					row39Struct row39_HashRow = new row39Struct();
		   	   	   
				
				row39_HashRow.MLB = row39.MLB;
				
				row39_HashRow.SKU = row39.SKU;
				
				row39_HashRow.Apelido = row39.Apelido;
				
				row39_HashRow.Loja_Oficial = row39.Loja_Oficial;
				
				row39_HashRow.Titulo = row39.Titulo;
				
				row39_HashRow.Status = row39.Status;
				
				row39_HashRow.Preco = row39.Preco;
				
				row39_HashRow.Vendas = row39.Vendas;
				
				row39_HashRow.Categoria = row39.Categoria;
				
				row39_HashRow.Porcentagem_cobrada_do_ML = row39.Porcentagem_cobrada_do_ML;
				
				row39_HashRow.Modo_Entrega = row39.Modo_Entrega;
				
				row39_HashRow.Frete_Gratis = row39.Frete_Gratis;
				
				row39_HashRow.Tarifa_Frete_Gratis = row39.Tarifa_Frete_Gratis;
				
				row39_HashRow.Estoque = row39.Estoque;
				
				row39_HashRow.Dimensoes = row39.Dimensoes;
				
				row39_HashRow.Em_Promocao = row39.Em_Promocao;
				
				row39_HashRow.Percent_Qualidade = row39.Percent_Qualidade;
				
				row39_HashRow.Vr_Receber = row39.Vr_Receber;
				
				row39_HashRow.CategoriaID = row39.CategoriaID;
				
				row39_HashRow.Data_Cadastro = row39.Data_Cadastro;
				
				row39_HashRow.Url = row39.Url;
				
				row39_HashRow.MLB_Origem_Catalogo = row39.MLB_Origem_Catalogo;
				
				row39_HashRow.Variacao_Origem_Catalogo = row39.Variacao_Origem_Catalogo;
				
			tHash_Lookup_row39.put(row39_HashRow);
			
            




 


	tos_count_tAdvancedHash_row39++;

/**
 * [tAdvancedHash_row39 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row39 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

 



/**
 * [tAdvancedHash_row39 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row39 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

 



/**
 * [tAdvancedHash_row39 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_15 end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	
    

		
			nb_line_tHashInput_15++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_15_NB_LINE", nb_line_tHashInput_15);       

 

ok_Hash.put("tHashInput_15", true);
end_Hash.put("tHashInput_15", System.currentTimeMillis());




/**
 * [tHashInput_15 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

tHash_Lookup_row39.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row39", true);
end_Hash.put("tAdvancedHash_row39", System.currentTimeMillis());




/**
 * [tAdvancedHash_row39 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row39 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row39";
	
	

 



/**
 * [tAdvancedHash_row39 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row49Struct implements routines.system.IPersistableComparableLookupRow<row49Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String RELEASE_DATE;

				public String getRELEASE_DATE () {
					return this.RELEASE_DATE;
				}

				public Boolean RELEASE_DATEIsNullable(){
				    return true;
				}
				public Boolean RELEASE_DATEIsKey(){
				    return false;
				}
				public Integer RELEASE_DATELength(){
				    return null;
				}
				public Integer RELEASE_DATEPrecision(){
				    return null;
				}
				public String RELEASE_DATEDefault(){
				
					return null;
				
				}
				public String RELEASE_DATEComment(){
				
				    return "";
				
				}
				public String RELEASE_DATEPattern(){
				
					return "";
				
				}
				public String RELEASE_DATEOriginalDbColumnName(){
				
					return "RELEASE_DATE";
				
				}

				
			    public String SOURCE_ID;

				public String getSOURCE_ID () {
					return this.SOURCE_ID;
				}

				public Boolean SOURCE_IDIsNullable(){
				    return true;
				}
				public Boolean SOURCE_IDIsKey(){
				    return false;
				}
				public Integer SOURCE_IDLength(){
				    return null;
				}
				public Integer SOURCE_IDPrecision(){
				    return null;
				}
				public String SOURCE_IDDefault(){
				
					return null;
				
				}
				public String SOURCE_IDComment(){
				
				    return "";
				
				}
				public String SOURCE_IDPattern(){
				
					return "";
				
				}
				public String SOURCE_IDOriginalDbColumnName(){
				
					return "SOURCE_ID";
				
				}

				
			    public String EXTERNAL_REFERENCE;

				public String getEXTERNAL_REFERENCE () {
					return this.EXTERNAL_REFERENCE;
				}

				public Boolean EXTERNAL_REFERENCEIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_REFERENCEIsKey(){
				    return false;
				}
				public Integer EXTERNAL_REFERENCELength(){
				    return null;
				}
				public Integer EXTERNAL_REFERENCEPrecision(){
				    return null;
				}
				public String EXTERNAL_REFERENCEDefault(){
				
					return null;
				
				}
				public String EXTERNAL_REFERENCEComment(){
				
				    return "";
				
				}
				public String EXTERNAL_REFERENCEPattern(){
				
					return "";
				
				}
				public String EXTERNAL_REFERENCEOriginalDbColumnName(){
				
					return "EXTERNAL_REFERENCE";
				
				}

				
			    public String RECORD_TYPE;

				public String getRECORD_TYPE () {
					return this.RECORD_TYPE;
				}

				public Boolean RECORD_TYPEIsNullable(){
				    return true;
				}
				public Boolean RECORD_TYPEIsKey(){
				    return false;
				}
				public Integer RECORD_TYPELength(){
				    return null;
				}
				public Integer RECORD_TYPEPrecision(){
				    return null;
				}
				public String RECORD_TYPEDefault(){
				
					return null;
				
				}
				public String RECORD_TYPEComment(){
				
				    return "";
				
				}
				public String RECORD_TYPEPattern(){
				
					return "";
				
				}
				public String RECORD_TYPEOriginalDbColumnName(){
				
					return "RECORD_TYPE";
				
				}

				
			    public String DESCRIPTION;

				public String getDESCRIPTION () {
					return this.DESCRIPTION;
				}

				public Boolean DESCRIPTIONIsNullable(){
				    return true;
				}
				public Boolean DESCRIPTIONIsKey(){
				    return false;
				}
				public Integer DESCRIPTIONLength(){
				    return null;
				}
				public Integer DESCRIPTIONPrecision(){
				    return null;
				}
				public String DESCRIPTIONDefault(){
				
					return null;
				
				}
				public String DESCRIPTIONComment(){
				
				    return "";
				
				}
				public String DESCRIPTIONPattern(){
				
					return "";
				
				}
				public String DESCRIPTIONOriginalDbColumnName(){
				
					return "DESCRIPTION";
				
				}

				
			    public Double NET_CREDIT_AMOUNT;

				public Double getNET_CREDIT_AMOUNT () {
					return this.NET_CREDIT_AMOUNT;
				}

				public Boolean NET_CREDIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_CREDIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_CREDIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_CREDIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_CREDIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_CREDIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_CREDIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_CREDIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_CREDIT_AMOUNT";
				
				}

				
			    public Double NET_DEBIT_AMOUNT;

				public Double getNET_DEBIT_AMOUNT () {
					return this.NET_DEBIT_AMOUNT;
				}

				public Boolean NET_DEBIT_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean NET_DEBIT_AMOUNTIsKey(){
				    return false;
				}
				public Integer NET_DEBIT_AMOUNTLength(){
				    return null;
				}
				public Integer NET_DEBIT_AMOUNTPrecision(){
				    return null;
				}
				public String NET_DEBIT_AMOUNTDefault(){
				
					return null;
				
				}
				public String NET_DEBIT_AMOUNTComment(){
				
				    return "";
				
				}
				public String NET_DEBIT_AMOUNTPattern(){
				
					return "";
				
				}
				public String NET_DEBIT_AMOUNTOriginalDbColumnName(){
				
					return "NET_DEBIT_AMOUNT";
				
				}

				
			    public Double GROSS_AMOUNT;

				public Double getGROSS_AMOUNT () {
					return this.GROSS_AMOUNT;
				}

				public Boolean GROSS_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean GROSS_AMOUNTIsKey(){
				    return false;
				}
				public Integer GROSS_AMOUNTLength(){
				    return null;
				}
				public Integer GROSS_AMOUNTPrecision(){
				    return null;
				}
				public String GROSS_AMOUNTDefault(){
				
					return null;
				
				}
				public String GROSS_AMOUNTComment(){
				
				    return "";
				
				}
				public String GROSS_AMOUNTPattern(){
				
					return "";
				
				}
				public String GROSS_AMOUNTOriginalDbColumnName(){
				
					return "GROSS_AMOUNT";
				
				}

				
			    public Double SELLER_AMOUNT;

				public Double getSELLER_AMOUNT () {
					return this.SELLER_AMOUNT;
				}

				public Boolean SELLER_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SELLER_AMOUNTIsKey(){
				    return false;
				}
				public Integer SELLER_AMOUNTLength(){
				    return null;
				}
				public Integer SELLER_AMOUNTPrecision(){
				    return null;
				}
				public String SELLER_AMOUNTDefault(){
				
					return null;
				
				}
				public String SELLER_AMOUNTComment(){
				
				    return "";
				
				}
				public String SELLER_AMOUNTPattern(){
				
					return "";
				
				}
				public String SELLER_AMOUNTOriginalDbColumnName(){
				
					return "SELLER_AMOUNT";
				
				}

				
			    public Double MP_FEE_AMOUNT;

				public Double getMP_FEE_AMOUNT () {
					return this.MP_FEE_AMOUNT;
				}

				public Boolean MP_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean MP_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer MP_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer MP_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String MP_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String MP_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String MP_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String MP_FEE_AMOUNTOriginalDbColumnName(){
				
					return "MP_FEE_AMOUNT";
				
				}

				
			    public Double FINANCING_FEE_AMOUNT;

				public Double getFINANCING_FEE_AMOUNT () {
					return this.FINANCING_FEE_AMOUNT;
				}

				public Boolean FINANCING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean FINANCING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer FINANCING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer FINANCING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String FINANCING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String FINANCING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String FINANCING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String FINANCING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "FINANCING_FEE_AMOUNT";
				
				}

				
			    public Double SHIPPING_FEE_AMOUNT;

				public Double getSHIPPING_FEE_AMOUNT () {
					return this.SHIPPING_FEE_AMOUNT;
				}

				public Boolean SHIPPING_FEE_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_FEE_AMOUNTIsKey(){
				    return false;
				}
				public Integer SHIPPING_FEE_AMOUNTLength(){
				    return null;
				}
				public Integer SHIPPING_FEE_AMOUNTPrecision(){
				    return null;
				}
				public String SHIPPING_FEE_AMOUNTDefault(){
				
					return null;
				
				}
				public String SHIPPING_FEE_AMOUNTComment(){
				
				    return "";
				
				}
				public String SHIPPING_FEE_AMOUNTPattern(){
				
					return "";
				
				}
				public String SHIPPING_FEE_AMOUNTOriginalDbColumnName(){
				
					return "SHIPPING_FEE_AMOUNT";
				
				}

				
			    public Double TAXES_AMOUNT;

				public Double getTAXES_AMOUNT () {
					return this.TAXES_AMOUNT;
				}

				public Boolean TAXES_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean TAXES_AMOUNTIsKey(){
				    return false;
				}
				public Integer TAXES_AMOUNTLength(){
				    return null;
				}
				public Integer TAXES_AMOUNTPrecision(){
				    return null;
				}
				public String TAXES_AMOUNTDefault(){
				
					return null;
				
				}
				public String TAXES_AMOUNTComment(){
				
				    return "";
				
				}
				public String TAXES_AMOUNTPattern(){
				
					return "";
				
				}
				public String TAXES_AMOUNTOriginalDbColumnName(){
				
					return "TAXES_AMOUNT";
				
				}

				
			    public Double COUPON_AMOUNT;

				public Double getCOUPON_AMOUNT () {
					return this.COUPON_AMOUNT;
				}

				public Boolean COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String COUPON_AMOUNTOriginalDbColumnName(){
				
					return "COUPON_AMOUNT";
				
				}

				
			    public Integer INSTALLMENTS;

				public Integer getINSTALLMENTS () {
					return this.INSTALLMENTS;
				}

				public Boolean INSTALLMENTSIsNullable(){
				    return true;
				}
				public Boolean INSTALLMENTSIsKey(){
				    return false;
				}
				public Integer INSTALLMENTSLength(){
				    return null;
				}
				public Integer INSTALLMENTSPrecision(){
				    return null;
				}
				public String INSTALLMENTSDefault(){
				
					return null;
				
				}
				public String INSTALLMENTSComment(){
				
				    return "";
				
				}
				public String INSTALLMENTSPattern(){
				
					return "";
				
				}
				public String INSTALLMENTSOriginalDbColumnName(){
				
					return "INSTALLMENTS";
				
				}

				
			    public String PAYMENT_METHOD;

				public String getPAYMENT_METHOD () {
					return this.PAYMENT_METHOD;
				}

				public Boolean PAYMENT_METHODIsNullable(){
				    return true;
				}
				public Boolean PAYMENT_METHODIsKey(){
				    return false;
				}
				public Integer PAYMENT_METHODLength(){
				    return null;
				}
				public Integer PAYMENT_METHODPrecision(){
				    return null;
				}
				public String PAYMENT_METHODDefault(){
				
					return null;
				
				}
				public String PAYMENT_METHODComment(){
				
				    return "";
				
				}
				public String PAYMENT_METHODPattern(){
				
					return "";
				
				}
				public String PAYMENT_METHODOriginalDbColumnName(){
				
					return "PAYMENT_METHOD";
				
				}

				
			    public String TAX_DETAIL;

				public String getTAX_DETAIL () {
					return this.TAX_DETAIL;
				}

				public Boolean TAX_DETAILIsNullable(){
				    return true;
				}
				public Boolean TAX_DETAILIsKey(){
				    return false;
				}
				public Integer TAX_DETAILLength(){
				    return null;
				}
				public Integer TAX_DETAILPrecision(){
				    return null;
				}
				public String TAX_DETAILDefault(){
				
					return null;
				
				}
				public String TAX_DETAILComment(){
				
				    return "";
				
				}
				public String TAX_DETAILPattern(){
				
					return "";
				
				}
				public String TAX_DETAILOriginalDbColumnName(){
				
					return "TAX_DETAIL";
				
				}

				
			    public String TAX_AMOUNT_TELCO;

				public String getTAX_AMOUNT_TELCO () {
					return this.TAX_AMOUNT_TELCO;
				}

				public Boolean TAX_AMOUNT_TELCOIsNullable(){
				    return true;
				}
				public Boolean TAX_AMOUNT_TELCOIsKey(){
				    return false;
				}
				public Integer TAX_AMOUNT_TELCOLength(){
				    return null;
				}
				public Integer TAX_AMOUNT_TELCOPrecision(){
				    return null;
				}
				public String TAX_AMOUNT_TELCODefault(){
				
					return null;
				
				}
				public String TAX_AMOUNT_TELCOComment(){
				
				    return "";
				
				}
				public String TAX_AMOUNT_TELCOPattern(){
				
					return "";
				
				}
				public String TAX_AMOUNT_TELCOOriginalDbColumnName(){
				
					return "TAX_AMOUNT_TELCO";
				
				}

				
			    public String APPROVAL_DATE;

				public String getAPPROVAL_DATE () {
					return this.APPROVAL_DATE;
				}

				public Boolean APPROVAL_DATEIsNullable(){
				    return true;
				}
				public Boolean APPROVAL_DATEIsKey(){
				    return false;
				}
				public Integer APPROVAL_DATELength(){
				    return null;
				}
				public Integer APPROVAL_DATEPrecision(){
				    return null;
				}
				public String APPROVAL_DATEDefault(){
				
					return null;
				
				}
				public String APPROVAL_DATEComment(){
				
				    return "";
				
				}
				public String APPROVAL_DATEPattern(){
				
					return "";
				
				}
				public String APPROVAL_DATEOriginalDbColumnName(){
				
					return "APPROVAL_DATE";
				
				}

				
			    public String POS_ID;

				public String getPOS_ID () {
					return this.POS_ID;
				}

				public Boolean POS_IDIsNullable(){
				    return true;
				}
				public Boolean POS_IDIsKey(){
				    return false;
				}
				public Integer POS_IDLength(){
				    return null;
				}
				public Integer POS_IDPrecision(){
				    return null;
				}
				public String POS_IDDefault(){
				
					return null;
				
				}
				public String POS_IDComment(){
				
				    return "";
				
				}
				public String POS_IDPattern(){
				
					return "";
				
				}
				public String POS_IDOriginalDbColumnName(){
				
					return "POS_ID";
				
				}

				
			    public String POS_NAME;

				public String getPOS_NAME () {
					return this.POS_NAME;
				}

				public Boolean POS_NAMEIsNullable(){
				    return true;
				}
				public Boolean POS_NAMEIsKey(){
				    return false;
				}
				public Integer POS_NAMELength(){
				    return null;
				}
				public Integer POS_NAMEPrecision(){
				    return null;
				}
				public String POS_NAMEDefault(){
				
					return null;
				
				}
				public String POS_NAMEComment(){
				
				    return "";
				
				}
				public String POS_NAMEPattern(){
				
					return "";
				
				}
				public String POS_NAMEOriginalDbColumnName(){
				
					return "POS_NAME";
				
				}

				
			    public String EXTERNAL_POS_ID;

				public String getEXTERNAL_POS_ID () {
					return this.EXTERNAL_POS_ID;
				}

				public Boolean EXTERNAL_POS_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_POS_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_POS_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_POS_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_POS_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_POS_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_POS_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_POS_IDOriginalDbColumnName(){
				
					return "EXTERNAL_POS_ID";
				
				}

				
			    public String STORE_ID;

				public String getSTORE_ID () {
					return this.STORE_ID;
				}

				public Boolean STORE_IDIsNullable(){
				    return true;
				}
				public Boolean STORE_IDIsKey(){
				    return false;
				}
				public Integer STORE_IDLength(){
				    return null;
				}
				public Integer STORE_IDPrecision(){
				    return null;
				}
				public String STORE_IDDefault(){
				
					return null;
				
				}
				public String STORE_IDComment(){
				
				    return "";
				
				}
				public String STORE_IDPattern(){
				
					return "";
				
				}
				public String STORE_IDOriginalDbColumnName(){
				
					return "STORE_ID";
				
				}

				
			    public String STORE_NAME;

				public String getSTORE_NAME () {
					return this.STORE_NAME;
				}

				public Boolean STORE_NAMEIsNullable(){
				    return true;
				}
				public Boolean STORE_NAMEIsKey(){
				    return false;
				}
				public Integer STORE_NAMELength(){
				    return null;
				}
				public Integer STORE_NAMEPrecision(){
				    return null;
				}
				public String STORE_NAMEDefault(){
				
					return null;
				
				}
				public String STORE_NAMEComment(){
				
				    return "";
				
				}
				public String STORE_NAMEPattern(){
				
					return "";
				
				}
				public String STORE_NAMEOriginalDbColumnName(){
				
					return "STORE_NAME";
				
				}

				
			    public String EXTERNAL_STORE_ID;

				public String getEXTERNAL_STORE_ID () {
					return this.EXTERNAL_STORE_ID;
				}

				public Boolean EXTERNAL_STORE_IDIsNullable(){
				    return true;
				}
				public Boolean EXTERNAL_STORE_IDIsKey(){
				    return false;
				}
				public Integer EXTERNAL_STORE_IDLength(){
				    return null;
				}
				public Integer EXTERNAL_STORE_IDPrecision(){
				    return null;
				}
				public String EXTERNAL_STORE_IDDefault(){
				
					return null;
				
				}
				public String EXTERNAL_STORE_IDComment(){
				
				    return "";
				
				}
				public String EXTERNAL_STORE_IDPattern(){
				
					return "";
				
				}
				public String EXTERNAL_STORE_IDOriginalDbColumnName(){
				
					return "EXTERNAL_STORE_ID";
				
				}

				
			    public String CURRENCY;

				public String getCURRENCY () {
					return this.CURRENCY;
				}

				public Boolean CURRENCYIsNullable(){
				    return true;
				}
				public Boolean CURRENCYIsKey(){
				    return false;
				}
				public Integer CURRENCYLength(){
				    return null;
				}
				public Integer CURRENCYPrecision(){
				    return null;
				}
				public String CURRENCYDefault(){
				
					return null;
				
				}
				public String CURRENCYComment(){
				
				    return "";
				
				}
				public String CURRENCYPattern(){
				
					return "";
				
				}
				public String CURRENCYOriginalDbColumnName(){
				
					return "CURRENCY";
				
				}

				
			    public String TAXES_DISAGGREGATED;

				public String getTAXES_DISAGGREGATED () {
					return this.TAXES_DISAGGREGATED;
				}

				public Boolean TAXES_DISAGGREGATEDIsNullable(){
				    return true;
				}
				public Boolean TAXES_DISAGGREGATEDIsKey(){
				    return false;
				}
				public Integer TAXES_DISAGGREGATEDLength(){
				    return null;
				}
				public Integer TAXES_DISAGGREGATEDPrecision(){
				    return null;
				}
				public String TAXES_DISAGGREGATEDDefault(){
				
					return null;
				
				}
				public String TAXES_DISAGGREGATEDComment(){
				
				    return "";
				
				}
				public String TAXES_DISAGGREGATEDPattern(){
				
					return "";
				
				}
				public String TAXES_DISAGGREGATEDOriginalDbColumnName(){
				
					return "TAXES_DISAGGREGATED";
				
				}

				
			    public BigDecimal SHIPPING_ID;

				public BigDecimal getSHIPPING_ID () {
					return this.SHIPPING_ID;
				}

				public Boolean SHIPPING_IDIsNullable(){
				    return true;
				}
				public Boolean SHIPPING_IDIsKey(){
				    return false;
				}
				public Integer SHIPPING_IDLength(){
				    return null;
				}
				public Integer SHIPPING_IDPrecision(){
				    return null;
				}
				public String SHIPPING_IDDefault(){
				
					return null;
				
				}
				public String SHIPPING_IDComment(){
				
				    return "";
				
				}
				public String SHIPPING_IDPattern(){
				
					return "";
				
				}
				public String SHIPPING_IDOriginalDbColumnName(){
				
					return "SHIPPING_ID";
				
				}

				
			    public String SHIPMENT_MODE;

				public String getSHIPMENT_MODE () {
					return this.SHIPMENT_MODE;
				}

				public Boolean SHIPMENT_MODEIsNullable(){
				    return true;
				}
				public Boolean SHIPMENT_MODEIsKey(){
				    return false;
				}
				public Integer SHIPMENT_MODELength(){
				    return null;
				}
				public Integer SHIPMENT_MODEPrecision(){
				    return null;
				}
				public String SHIPMENT_MODEDefault(){
				
					return null;
				
				}
				public String SHIPMENT_MODEComment(){
				
				    return "";
				
				}
				public String SHIPMENT_MODEPattern(){
				
					return "";
				
				}
				public String SHIPMENT_MODEOriginalDbColumnName(){
				
					return "SHIPMENT_MODE";
				
				}

				
			    public String ORDER_ID;

				public String getORDER_ID () {
					return this.ORDER_ID;
				}

				public Boolean ORDER_IDIsNullable(){
				    return true;
				}
				public Boolean ORDER_IDIsKey(){
				    return false;
				}
				public Integer ORDER_IDLength(){
				    return null;
				}
				public Integer ORDER_IDPrecision(){
				    return null;
				}
				public String ORDER_IDDefault(){
				
					return null;
				
				}
				public String ORDER_IDComment(){
				
				    return "";
				
				}
				public String ORDER_IDPattern(){
				
					return "";
				
				}
				public String ORDER_IDOriginalDbColumnName(){
				
					return "ORDER_ID";
				
				}

				
			    public String PACK_ID;

				public String getPACK_ID () {
					return this.PACK_ID;
				}

				public Boolean PACK_IDIsNullable(){
				    return true;
				}
				public Boolean PACK_IDIsKey(){
				    return false;
				}
				public Integer PACK_IDLength(){
				    return null;
				}
				public Integer PACK_IDPrecision(){
				    return null;
				}
				public String PACK_IDDefault(){
				
					return null;
				
				}
				public String PACK_IDComment(){
				
				    return "";
				
				}
				public String PACK_IDPattern(){
				
					return "";
				
				}
				public String PACK_IDOriginalDbColumnName(){
				
					return "PACK_ID";
				
				}

				
			    public String METADATA;

				public String getMETADATA () {
					return this.METADATA;
				}

				public Boolean METADATAIsNullable(){
				    return true;
				}
				public Boolean METADATAIsKey(){
				    return false;
				}
				public Integer METADATALength(){
				    return null;
				}
				public Integer METADATAPrecision(){
				    return null;
				}
				public String METADATADefault(){
				
					return null;
				
				}
				public String METADATAComment(){
				
				    return "";
				
				}
				public String METADATAPattern(){
				
					return "";
				
				}
				public String METADATAOriginalDbColumnName(){
				
					return "METADATA";
				
				}

				
			    public String REFUND_ID;

				public String getREFUND_ID () {
					return this.REFUND_ID;
				}

				public Boolean REFUND_IDIsNullable(){
				    return true;
				}
				public Boolean REFUND_IDIsKey(){
				    return false;
				}
				public Integer REFUND_IDLength(){
				    return null;
				}
				public Integer REFUND_IDPrecision(){
				    return null;
				}
				public String REFUND_IDDefault(){
				
					return null;
				
				}
				public String REFUND_IDComment(){
				
				    return "";
				
				}
				public String REFUND_IDPattern(){
				
					return "";
				
				}
				public String REFUND_IDOriginalDbColumnName(){
				
					return "REFUND_ID";
				
				}

				
			    public String EFFECTIVE_COUPON_AMOUNT;

				public String getEFFECTIVE_COUPON_AMOUNT () {
					return this.EFFECTIVE_COUPON_AMOUNT;
				}

				public Boolean EFFECTIVE_COUPON_AMOUNTIsNullable(){
				    return true;
				}
				public Boolean EFFECTIVE_COUPON_AMOUNTIsKey(){
				    return false;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTLength(){
				    return null;
				}
				public Integer EFFECTIVE_COUPON_AMOUNTPrecision(){
				    return null;
				}
				public String EFFECTIVE_COUPON_AMOUNTDefault(){
				
					return null;
				
				}
				public String EFFECTIVE_COUPON_AMOUNTComment(){
				
				    return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTPattern(){
				
					return "";
				
				}
				public String EFFECTIVE_COUPON_AMOUNTOriginalDbColumnName(){
				
					return "EFFECTIVE_COUPON_AMOUNT";
				
				}

				
			    public String POI_ID;

				public String getPOI_ID () {
					return this.POI_ID;
				}

				public Boolean POI_IDIsNullable(){
				    return true;
				}
				public Boolean POI_IDIsKey(){
				    return false;
				}
				public Integer POI_IDLength(){
				    return null;
				}
				public Integer POI_IDPrecision(){
				    return null;
				}
				public String POI_IDDefault(){
				
					return null;
				
				}
				public String POI_IDComment(){
				
				    return "";
				
				}
				public String POI_IDPattern(){
				
					return "";
				
				}
				public String POI_IDOriginalDbColumnName(){
				
					return "POI_ID";
				
				}

				
			    public String CONCAT_FRETE;

				public String getCONCAT_FRETE () {
					return this.CONCAT_FRETE;
				}

				public Boolean CONCAT_FRETEIsNullable(){
				    return true;
				}
				public Boolean CONCAT_FRETEIsKey(){
				    return false;
				}
				public Integer CONCAT_FRETELength(){
				    return null;
				}
				public Integer CONCAT_FRETEPrecision(){
				    return null;
				}
				public String CONCAT_FRETEDefault(){
				
					return null;
				
				}
				public String CONCAT_FRETEComment(){
				
				    return "";
				
				}
				public String CONCAT_FRETEPattern(){
				
					return "";
				
				}
				public String CONCAT_FRETEOriginalDbColumnName(){
				
					return "CONCAT_FRETE";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CONCAT_FRETE == null) ? 0 : this.CONCAT_FRETE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row49Struct other = (row49Struct) obj;
		
						if (this.CONCAT_FRETE == null) {
							if (other.CONCAT_FRETE != null)
								return false;
						
						} else if (!this.CONCAT_FRETE.equals(other.CONCAT_FRETE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row49Struct other) {

		other.RELEASE_DATE = this.RELEASE_DATE;
	            other.SOURCE_ID = this.SOURCE_ID;
	            other.EXTERNAL_REFERENCE = this.EXTERNAL_REFERENCE;
	            other.RECORD_TYPE = this.RECORD_TYPE;
	            other.DESCRIPTION = this.DESCRIPTION;
	            other.NET_CREDIT_AMOUNT = this.NET_CREDIT_AMOUNT;
	            other.NET_DEBIT_AMOUNT = this.NET_DEBIT_AMOUNT;
	            other.GROSS_AMOUNT = this.GROSS_AMOUNT;
	            other.SELLER_AMOUNT = this.SELLER_AMOUNT;
	            other.MP_FEE_AMOUNT = this.MP_FEE_AMOUNT;
	            other.FINANCING_FEE_AMOUNT = this.FINANCING_FEE_AMOUNT;
	            other.SHIPPING_FEE_AMOUNT = this.SHIPPING_FEE_AMOUNT;
	            other.TAXES_AMOUNT = this.TAXES_AMOUNT;
	            other.COUPON_AMOUNT = this.COUPON_AMOUNT;
	            other.INSTALLMENTS = this.INSTALLMENTS;
	            other.PAYMENT_METHOD = this.PAYMENT_METHOD;
	            other.TAX_DETAIL = this.TAX_DETAIL;
	            other.TAX_AMOUNT_TELCO = this.TAX_AMOUNT_TELCO;
	            other.APPROVAL_DATE = this.APPROVAL_DATE;
	            other.POS_ID = this.POS_ID;
	            other.POS_NAME = this.POS_NAME;
	            other.EXTERNAL_POS_ID = this.EXTERNAL_POS_ID;
	            other.STORE_ID = this.STORE_ID;
	            other.STORE_NAME = this.STORE_NAME;
	            other.EXTERNAL_STORE_ID = this.EXTERNAL_STORE_ID;
	            other.CURRENCY = this.CURRENCY;
	            other.TAXES_DISAGGREGATED = this.TAXES_DISAGGREGATED;
	            other.SHIPPING_ID = this.SHIPPING_ID;
	            other.SHIPMENT_MODE = this.SHIPMENT_MODE;
	            other.ORDER_ID = this.ORDER_ID;
	            other.PACK_ID = this.PACK_ID;
	            other.METADATA = this.METADATA;
	            other.REFUND_ID = this.REFUND_ID;
	            other.EFFECTIVE_COUPON_AMOUNT = this.EFFECTIVE_COUPON_AMOUNT;
	            other.POI_ID = this.POI_ID;
	            other.CONCAT_FRETE = this.CONCAT_FRETE;
	            
	}

	public void copyKeysDataTo(row49Struct other) {

		other.CONCAT_FRETE = this.CONCAT_FRETE;
	            	
	}



	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_conciliacao, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_conciliacao) {

        	try {

        		int length = 0;
		
					this.CONCAT_FRETE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CONCAT_FRETE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.RELEASE_DATE = readString(dis,ois);
					
						this.SOURCE_ID = readString(dis,ois);
					
						this.EXTERNAL_REFERENCE = readString(dis,ois);
					
						this.RECORD_TYPE = readString(dis,ois);
					
						this.DESCRIPTION = readString(dis,ois);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = dis.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis,ois);
					
						this.PAYMENT_METHOD = readString(dis,ois);
					
						this.TAX_DETAIL = readString(dis,ois);
					
						this.TAX_AMOUNT_TELCO = readString(dis,ois);
					
						this.APPROVAL_DATE = readString(dis,ois);
					
						this.POS_ID = readString(dis,ois);
					
						this.POS_NAME = readString(dis,ois);
					
						this.EXTERNAL_POS_ID = readString(dis,ois);
					
						this.STORE_ID = readString(dis,ois);
					
						this.STORE_NAME = readString(dis,ois);
					
						this.EXTERNAL_STORE_ID = readString(dis,ois);
					
						this.CURRENCY = readString(dis,ois);
					
						this.TAXES_DISAGGREGATED = readString(dis,ois);
					
       			    	this.SHIPPING_ID = (BigDecimal) ois.readObject();
					
						this.SHIPMENT_MODE = readString(dis,ois);
					
						this.ORDER_ID = readString(dis,ois);
					
						this.PACK_ID = readString(dis,ois);
					
						this.METADATA = readString(dis,ois);
					
						this.REFUND_ID = readString(dis,ois);
					
						this.EFFECTIVE_COUPON_AMOUNT = readString(dis,ois);
					
						this.POI_ID = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.RELEASE_DATE = readString(dis,objectIn);
					
						this.SOURCE_ID = readString(dis,objectIn);
					
						this.EXTERNAL_REFERENCE = readString(dis,objectIn);
					
						this.RECORD_TYPE = readString(dis,objectIn);
					
						this.DESCRIPTION = readString(dis,objectIn);
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.NET_CREDIT_AMOUNT = null;
           				} else {
           			    	this.NET_CREDIT_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.NET_DEBIT_AMOUNT = null;
           				} else {
           			    	this.NET_DEBIT_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.GROSS_AMOUNT = null;
           				} else {
           			    	this.GROSS_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.SELLER_AMOUNT = null;
           				} else {
           			    	this.SELLER_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.MP_FEE_AMOUNT = null;
           				} else {
           			    	this.MP_FEE_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.FINANCING_FEE_AMOUNT = null;
           				} else {
           			    	this.FINANCING_FEE_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.SHIPPING_FEE_AMOUNT = null;
           				} else {
           			    	this.SHIPPING_FEE_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.TAXES_AMOUNT = null;
           				} else {
           			    	this.TAXES_AMOUNT = objectIn.readDouble();
           				}
					
			            length = objectIn.readByte();
           				if (length == -1) {
           	    			this.COUPON_AMOUNT = null;
           				} else {
           			    	this.COUPON_AMOUNT = objectIn.readDouble();
           				}
					
						this.INSTALLMENTS = readInteger(dis,objectIn);
					
						this.PAYMENT_METHOD = readString(dis,objectIn);
					
						this.TAX_DETAIL = readString(dis,objectIn);
					
						this.TAX_AMOUNT_TELCO = readString(dis,objectIn);
					
						this.APPROVAL_DATE = readString(dis,objectIn);
					
						this.POS_ID = readString(dis,objectIn);
					
						this.POS_NAME = readString(dis,objectIn);
					
						this.EXTERNAL_POS_ID = readString(dis,objectIn);
					
						this.STORE_ID = readString(dis,objectIn);
					
						this.STORE_NAME = readString(dis,objectIn);
					
						this.EXTERNAL_STORE_ID = readString(dis,objectIn);
					
						this.CURRENCY = readString(dis,objectIn);
					
						this.TAXES_DISAGGREGATED = readString(dis,objectIn);
					
       			    	this.SHIPPING_ID = (BigDecimal) objectIn.readObject();
					
						this.SHIPMENT_MODE = readString(dis,objectIn);
					
						this.ORDER_ID = readString(dis,objectIn);
					
						this.PACK_ID = readString(dis,objectIn);
					
						this.METADATA = readString(dis,objectIn);
					
						this.REFUND_ID = readString(dis,objectIn);
					
						this.EFFECTIVE_COUPON_AMOUNT = readString(dis,objectIn);
					
						this.POI_ID = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.RELEASE_DATE, dos, oos);
					
						writeString(this.SOURCE_ID, dos, oos);
					
						writeString(this.EXTERNAL_REFERENCE, dos, oos);
					
						writeString(this.RECORD_TYPE, dos, oos);
					
						writeString(this.DESCRIPTION, dos, oos);
					
						if(this.NET_CREDIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
						if(this.NET_DEBIT_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
						if(this.GROSS_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.GROSS_AMOUNT);
		            	}
					
						if(this.SELLER_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SELLER_AMOUNT);
		            	}
					
						if(this.MP_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
						if(this.FINANCING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
						if(this.SHIPPING_FEE_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
						if(this.TAXES_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.TAXES_AMOUNT);
		            	}
					
						if(this.COUPON_AMOUNT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					writeInteger(this.INSTALLMENTS, dos, oos);
					
						writeString(this.PAYMENT_METHOD, dos, oos);
					
						writeString(this.TAX_DETAIL, dos, oos);
					
						writeString(this.TAX_AMOUNT_TELCO, dos, oos);
					
						writeString(this.APPROVAL_DATE, dos, oos);
					
						writeString(this.POS_ID, dos, oos);
					
						writeString(this.POS_NAME, dos, oos);
					
						writeString(this.EXTERNAL_POS_ID, dos, oos);
					
						writeString(this.STORE_ID, dos, oos);
					
						writeString(this.STORE_NAME, dos, oos);
					
						writeString(this.EXTERNAL_STORE_ID, dos, oos);
					
						writeString(this.CURRENCY, dos, oos);
					
						writeString(this.TAXES_DISAGGREGATED, dos, oos);
					
       			    	oos.writeObject(this.SHIPPING_ID);
					
						writeString(this.SHIPMENT_MODE, dos, oos);
					
						writeString(this.ORDER_ID, dos, oos);
					
						writeString(this.PACK_ID, dos, oos);
					
						writeString(this.METADATA, dos, oos);
					
						writeString(this.REFUND_ID, dos, oos);
					
						writeString(this.EFFECTIVE_COUPON_AMOUNT, dos, oos);
					
						writeString(this.POI_ID, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.RELEASE_DATE, dos, objectOut);
					
						writeString(this.SOURCE_ID, dos, objectOut);
					
						writeString(this.EXTERNAL_REFERENCE, dos, objectOut);
					
						writeString(this.RECORD_TYPE, dos, objectOut);
					
						writeString(this.DESCRIPTION, dos, objectOut);
					
						if(this.NET_CREDIT_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.NET_CREDIT_AMOUNT);
		            	}
					
						if(this.NET_DEBIT_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.NET_DEBIT_AMOUNT);
		            	}
					
						if(this.GROSS_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.GROSS_AMOUNT);
		            	}
					
						if(this.SELLER_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.SELLER_AMOUNT);
		            	}
					
						if(this.MP_FEE_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.MP_FEE_AMOUNT);
		            	}
					
						if(this.FINANCING_FEE_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.FINANCING_FEE_AMOUNT);
		            	}
					
						if(this.SHIPPING_FEE_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.SHIPPING_FEE_AMOUNT);
		            	}
					
						if(this.TAXES_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.TAXES_AMOUNT);
		            	}
					
						if(this.COUPON_AMOUNT == null) {
							objectOut.writeByte(-1);
						} else {
							objectOut.writeByte(0);
							objectOut.writeDouble(this.COUPON_AMOUNT);
		            	}
					
					writeInteger(this.INSTALLMENTS, dos, objectOut);
					
						writeString(this.PAYMENT_METHOD, dos, objectOut);
					
						writeString(this.TAX_DETAIL, dos, objectOut);
					
						writeString(this.TAX_AMOUNT_TELCO, dos, objectOut);
					
						writeString(this.APPROVAL_DATE, dos, objectOut);
					
						writeString(this.POS_ID, dos, objectOut);
					
						writeString(this.POS_NAME, dos, objectOut);
					
						writeString(this.EXTERNAL_POS_ID, dos, objectOut);
					
						writeString(this.STORE_ID, dos, objectOut);
					
						writeString(this.STORE_NAME, dos, objectOut);
					
						writeString(this.EXTERNAL_STORE_ID, dos, objectOut);
					
						writeString(this.CURRENCY, dos, objectOut);
					
						writeString(this.TAXES_DISAGGREGATED, dos, objectOut);
					
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.SHIPPING_ID);
					
						writeString(this.SHIPMENT_MODE, dos, objectOut);
					
						writeString(this.ORDER_ID, dos, objectOut);
					
						writeString(this.PACK_ID, dos, objectOut);
					
						writeString(this.METADATA, dos, objectOut);
					
						writeString(this.REFUND_ID, dos, objectOut);
					
						writeString(this.EFFECTIVE_COUPON_AMOUNT, dos, objectOut);
					
						writeString(this.POI_ID, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("RELEASE_DATE="+RELEASE_DATE);
		sb.append(",SOURCE_ID="+SOURCE_ID);
		sb.append(",EXTERNAL_REFERENCE="+EXTERNAL_REFERENCE);
		sb.append(",RECORD_TYPE="+RECORD_TYPE);
		sb.append(",DESCRIPTION="+DESCRIPTION);
		sb.append(",NET_CREDIT_AMOUNT="+String.valueOf(NET_CREDIT_AMOUNT));
		sb.append(",NET_DEBIT_AMOUNT="+String.valueOf(NET_DEBIT_AMOUNT));
		sb.append(",GROSS_AMOUNT="+String.valueOf(GROSS_AMOUNT));
		sb.append(",SELLER_AMOUNT="+String.valueOf(SELLER_AMOUNT));
		sb.append(",MP_FEE_AMOUNT="+String.valueOf(MP_FEE_AMOUNT));
		sb.append(",FINANCING_FEE_AMOUNT="+String.valueOf(FINANCING_FEE_AMOUNT));
		sb.append(",SHIPPING_FEE_AMOUNT="+String.valueOf(SHIPPING_FEE_AMOUNT));
		sb.append(",TAXES_AMOUNT="+String.valueOf(TAXES_AMOUNT));
		sb.append(",COUPON_AMOUNT="+String.valueOf(COUPON_AMOUNT));
		sb.append(",INSTALLMENTS="+String.valueOf(INSTALLMENTS));
		sb.append(",PAYMENT_METHOD="+PAYMENT_METHOD);
		sb.append(",TAX_DETAIL="+TAX_DETAIL);
		sb.append(",TAX_AMOUNT_TELCO="+TAX_AMOUNT_TELCO);
		sb.append(",APPROVAL_DATE="+APPROVAL_DATE);
		sb.append(",POS_ID="+POS_ID);
		sb.append(",POS_NAME="+POS_NAME);
		sb.append(",EXTERNAL_POS_ID="+EXTERNAL_POS_ID);
		sb.append(",STORE_ID="+STORE_ID);
		sb.append(",STORE_NAME="+STORE_NAME);
		sb.append(",EXTERNAL_STORE_ID="+EXTERNAL_STORE_ID);
		sb.append(",CURRENCY="+CURRENCY);
		sb.append(",TAXES_DISAGGREGATED="+TAXES_DISAGGREGATED);
		sb.append(",SHIPPING_ID="+String.valueOf(SHIPPING_ID));
		sb.append(",SHIPMENT_MODE="+SHIPMENT_MODE);
		sb.append(",ORDER_ID="+ORDER_ID);
		sb.append(",PACK_ID="+PACK_ID);
		sb.append(",METADATA="+METADATA);
		sb.append(",REFUND_ID="+REFUND_ID);
		sb.append(",EFFECTIVE_COUPON_AMOUNT="+EFFECTIVE_COUPON_AMOUNT);
		sb.append(",POI_ID="+POI_ID);
		sb.append(",CONCAT_FRETE="+CONCAT_FRETE);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row49Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CONCAT_FRETE, other.CONCAT_FRETE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row49Struct row49 = new row49Struct();




	
	/**
	 * [tAdvancedHash_row49 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row49", false);
		start_Hash.put("tAdvancedHash_row49", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row49";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row49");
					}
				
		int tos_count_tAdvancedHash_row49 = 0;
		

			   		// connection name:row49
			   		// source node:tHashInput_18 - inputs:(after_tHashInput_13) outputs:(row49,row49) | target node:tAdvancedHash_row49 - inputs:(row49) outputs:()
			   		// linked node: tMap_20 - inputs:(row55,row49) outputs:(Saida13)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row49 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row49Struct> tHash_Lookup_row49 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row49Struct>getLookup(matchingModeEnum_row49);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row49", tHash_Lookup_row49);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row49 begin ] stop
 */



	
	/**
	 * [tHashInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_18", false);
		start_Hash.put("tHashInput_18", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_18";
	
	
		int tos_count_tHashInput_18 = 0;
		


int nb_line_tHashInput_18 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_18=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row15Struct> tHashFile_tHashInput_18 = mf_tHashInput_18.getAdvancedMemoryHashFile("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_18==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row15Struct> iterator_tHashInput_18 = tHashFile_tHashInput_18.iterator();
while (iterator_tHashInput_18.hasNext()) {
    row15Struct next_tHashInput_18 = iterator_tHashInput_18.next();

	row49.RELEASE_DATE = next_tHashInput_18.RELEASE_DATE;
	row49.SOURCE_ID = next_tHashInput_18.SOURCE_ID;
	row49.EXTERNAL_REFERENCE = next_tHashInput_18.EXTERNAL_REFERENCE;
	row49.RECORD_TYPE = next_tHashInput_18.RECORD_TYPE;
	row49.DESCRIPTION = next_tHashInput_18.DESCRIPTION;
	row49.NET_CREDIT_AMOUNT = next_tHashInput_18.NET_CREDIT_AMOUNT;
	row49.NET_DEBIT_AMOUNT = next_tHashInput_18.NET_DEBIT_AMOUNT;
	row49.GROSS_AMOUNT = next_tHashInput_18.GROSS_AMOUNT;
	row49.SELLER_AMOUNT = next_tHashInput_18.SELLER_AMOUNT;
	row49.MP_FEE_AMOUNT = next_tHashInput_18.MP_FEE_AMOUNT;
	row49.FINANCING_FEE_AMOUNT = next_tHashInput_18.FINANCING_FEE_AMOUNT;
	row49.SHIPPING_FEE_AMOUNT = next_tHashInput_18.SHIPPING_FEE_AMOUNT;
	row49.TAXES_AMOUNT = next_tHashInput_18.TAXES_AMOUNT;
	row49.COUPON_AMOUNT = next_tHashInput_18.COUPON_AMOUNT;
	row49.INSTALLMENTS = next_tHashInput_18.INSTALLMENTS;
	row49.PAYMENT_METHOD = next_tHashInput_18.PAYMENT_METHOD;
	row49.TAX_DETAIL = next_tHashInput_18.TAX_DETAIL;
	row49.TAX_AMOUNT_TELCO = next_tHashInput_18.TAX_AMOUNT_TELCO;
	row49.APPROVAL_DATE = next_tHashInput_18.APPROVAL_DATE;
	row49.POS_ID = next_tHashInput_18.POS_ID;
	row49.POS_NAME = next_tHashInput_18.POS_NAME;
	row49.EXTERNAL_POS_ID = next_tHashInput_18.EXTERNAL_POS_ID;
	row49.STORE_ID = next_tHashInput_18.STORE_ID;
	row49.STORE_NAME = next_tHashInput_18.STORE_NAME;
	row49.EXTERNAL_STORE_ID = next_tHashInput_18.EXTERNAL_STORE_ID;
	row49.CURRENCY = next_tHashInput_18.CURRENCY;
	row49.TAXES_DISAGGREGATED = next_tHashInput_18.TAXES_DISAGGREGATED;
	row49.SHIPPING_ID = next_tHashInput_18.SHIPPING_ID;
	row49.SHIPMENT_MODE = next_tHashInput_18.SHIPMENT_MODE;
	row49.ORDER_ID = next_tHashInput_18.ORDER_ID;
	row49.PACK_ID = next_tHashInput_18.PACK_ID;
	row49.METADATA = next_tHashInput_18.METADATA;
	row49.REFUND_ID = next_tHashInput_18.REFUND_ID;
	row49.EFFECTIVE_COUPON_AMOUNT = next_tHashInput_18.EFFECTIVE_COUPON_AMOUNT;
	row49.POI_ID = next_tHashInput_18.POI_ID;
	row49.CONCAT_FRETE = next_tHashInput_18.CONCAT_FRETE;

 



/**
 * [tHashInput_18 begin ] stop
 */
	
	/**
	 * [tHashInput_18 main ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 


	tos_count_tHashInput_18++;

/**
 * [tHashInput_18 main ] stop
 */
	
	/**
	 * [tHashInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row49 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row49"
						
						);
					}
					


			   
			   

					row49Struct row49_HashRow = new row49Struct();
		   	   	   
				
				row49_HashRow.RELEASE_DATE = row49.RELEASE_DATE;
				
				row49_HashRow.SOURCE_ID = row49.SOURCE_ID;
				
				row49_HashRow.EXTERNAL_REFERENCE = row49.EXTERNAL_REFERENCE;
				
				row49_HashRow.RECORD_TYPE = row49.RECORD_TYPE;
				
				row49_HashRow.DESCRIPTION = row49.DESCRIPTION;
				
				row49_HashRow.NET_CREDIT_AMOUNT = row49.NET_CREDIT_AMOUNT;
				
				row49_HashRow.NET_DEBIT_AMOUNT = row49.NET_DEBIT_AMOUNT;
				
				row49_HashRow.GROSS_AMOUNT = row49.GROSS_AMOUNT;
				
				row49_HashRow.SELLER_AMOUNT = row49.SELLER_AMOUNT;
				
				row49_HashRow.MP_FEE_AMOUNT = row49.MP_FEE_AMOUNT;
				
				row49_HashRow.FINANCING_FEE_AMOUNT = row49.FINANCING_FEE_AMOUNT;
				
				row49_HashRow.SHIPPING_FEE_AMOUNT = row49.SHIPPING_FEE_AMOUNT;
				
				row49_HashRow.TAXES_AMOUNT = row49.TAXES_AMOUNT;
				
				row49_HashRow.COUPON_AMOUNT = row49.COUPON_AMOUNT;
				
				row49_HashRow.INSTALLMENTS = row49.INSTALLMENTS;
				
				row49_HashRow.PAYMENT_METHOD = row49.PAYMENT_METHOD;
				
				row49_HashRow.TAX_DETAIL = row49.TAX_DETAIL;
				
				row49_HashRow.TAX_AMOUNT_TELCO = row49.TAX_AMOUNT_TELCO;
				
				row49_HashRow.APPROVAL_DATE = row49.APPROVAL_DATE;
				
				row49_HashRow.POS_ID = row49.POS_ID;
				
				row49_HashRow.POS_NAME = row49.POS_NAME;
				
				row49_HashRow.EXTERNAL_POS_ID = row49.EXTERNAL_POS_ID;
				
				row49_HashRow.STORE_ID = row49.STORE_ID;
				
				row49_HashRow.STORE_NAME = row49.STORE_NAME;
				
				row49_HashRow.EXTERNAL_STORE_ID = row49.EXTERNAL_STORE_ID;
				
				row49_HashRow.CURRENCY = row49.CURRENCY;
				
				row49_HashRow.TAXES_DISAGGREGATED = row49.TAXES_DISAGGREGATED;
				
				row49_HashRow.SHIPPING_ID = row49.SHIPPING_ID;
				
				row49_HashRow.SHIPMENT_MODE = row49.SHIPMENT_MODE;
				
				row49_HashRow.ORDER_ID = row49.ORDER_ID;
				
				row49_HashRow.PACK_ID = row49.PACK_ID;
				
				row49_HashRow.METADATA = row49.METADATA;
				
				row49_HashRow.REFUND_ID = row49.REFUND_ID;
				
				row49_HashRow.EFFECTIVE_COUPON_AMOUNT = row49.EFFECTIVE_COUPON_AMOUNT;
				
				row49_HashRow.POI_ID = row49.POI_ID;
				
				row49_HashRow.CONCAT_FRETE = row49.CONCAT_FRETE;
				
			tHash_Lookup_row49.put(row49_HashRow);
			
            




 


	tos_count_tAdvancedHash_row49++;

/**
 * [tAdvancedHash_row49 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row49 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

 



/**
 * [tAdvancedHash_row49 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row49 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

 



/**
 * [tAdvancedHash_row49 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_18 end ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	
    

		
			nb_line_tHashInput_18++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_conciliacao_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_18_NB_LINE", nb_line_tHashInput_18);       

 

ok_Hash.put("tHashInput_18", true);
end_Hash.put("tHashInput_18", System.currentTimeMillis());




/**
 * [tHashInput_18 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row49 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

tHash_Lookup_row49.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row49");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row49", true);
end_Hash.put("tAdvancedHash_row49", System.currentTimeMillis());




/**
 * [tAdvancedHash_row49 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_18 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_18";
	
	

 



/**
 * [tHashInput_18 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row49 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row49";
	
	

 



/**
 * [tAdvancedHash_row49 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_18_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBInput_3Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_conciliacao relatorio_conciliacaoClass = new relatorio_conciliacao();

        int exitCode = relatorio_conciliacaoClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_conciliacao.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_conciliacao_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_conciliacao.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("summary", "id_String");
                        if(context.getStringValue("summary") == null) {
                            context.summary = null;
                        } else {
                            context.summary=(String) context.getProperty("summary");
                        }
                        context.setContextType("erro_code", "id_Integer");
                        if(context.getStringValue("erro_code") == null) {
                            context.erro_code = null;
                        } else {
                            try{
                                context.erro_code=routines.system.ParserUtils.parseTo_Integer (context.getProperty("erro_code"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "erro_code", e.getMessage()));
                                context.erro_code=null;
                            }
                        }
                        context.setContextType("DW_HOST", "id_String");
                        if(context.getStringValue("DW_HOST") == null) {
                            context.DW_HOST = null;
                        } else {
                            context.DW_HOST=(String) context.getProperty("DW_HOST");
                        }
                        context.setContextType("DW_USER", "id_String");
                        if(context.getStringValue("DW_USER") == null) {
                            context.DW_USER = null;
                        } else {
                            context.DW_USER=(String) context.getProperty("DW_USER");
                        }
                        context.setContextType("DW_PASSWORD", "id_String");
                        if(context.getStringValue("DW_PASSWORD") == null) {
                            context.DW_PASSWORD = null;
                        } else {
                            context.DW_PASSWORD=(String) context.getProperty("DW_PASSWORD");
                        }
                        context.setContextType("DW_DB", "id_String");
                        if(context.getStringValue("DW_DB") == null) {
                            context.DW_DB = null;
                        } else {
                            context.DW_DB=(String) context.getProperty("DW_DB");
                        }
                        context.setContextType("DW_PORT", "id_String");
                        if(context.getStringValue("DW_PORT") == null) {
                            context.DW_PORT = null;
                        } else {
                            context.DW_PORT=(String) context.getProperty("DW_PORT");
                        }
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_String");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            context.versao=(String) context.getProperty("versao");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("mesprocessamento", "id_Integer");
                        if(context.getStringValue("mesprocessamento") == null) {
                            context.mesprocessamento = null;
                        } else {
                            try{
                                context.mesprocessamento=routines.system.ParserUtils.parseTo_Integer (context.getProperty("mesprocessamento"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "mesprocessamento", e.getMessage()));
                                context.mesprocessamento=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("summary")) {
                context.summary = (String) parentContextMap.get("summary");
            }if (parentContextMap.containsKey("erro_code")) {
                context.erro_code = (Integer) parentContextMap.get("erro_code");
            }if (parentContextMap.containsKey("DW_HOST")) {
                context.DW_HOST = (String) parentContextMap.get("DW_HOST");
            }if (parentContextMap.containsKey("DW_USER")) {
                context.DW_USER = (String) parentContextMap.get("DW_USER");
            }if (parentContextMap.containsKey("DW_PASSWORD")) {
                context.DW_PASSWORD = (String) parentContextMap.get("DW_PASSWORD");
            }if (parentContextMap.containsKey("DW_DB")) {
                context.DW_DB = (String) parentContextMap.get("DW_DB");
            }if (parentContextMap.containsKey("DW_PORT")) {
                context.DW_PORT = (String) parentContextMap.get("DW_PORT");
            }if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (String) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("mesprocessamento")) {
                context.mesprocessamento = (Integer) parentContextMap.get("mesprocessamento");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);

e_tFileInputExcel_1.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_1) {
globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tDBInput_4Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tDBInput_4) {
globalMap.put("tDBInput_4_SUBPROCESS_STATE", -1);

e_tDBInput_4.printStackTrace();

}catch (java.lang.Error e_tDBInput_4) {
globalMap.put("tDBInput_4_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tDBInput_4;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_2) {
globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", -1);

e_tFileInputExcel_2.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_2) {
globalMap.put("tFileInputExcel_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tFileInputExcel_3Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tFileInputExcel_3) {
globalMap.put("tFileInputExcel_3_SUBPROCESS_STATE", -1);

e_tFileInputExcel_3.printStackTrace();

}catch (java.lang.Error e_tFileInputExcel_3) {
globalMap.put("tFileInputExcel_3_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tFileInputExcel_3;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_conciliacao");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     3273985 characters generated by Talend Open Studio for Big Data 
 *     on the 19 de março de 2024 15:08:34 BRT
 ************************************************************************************************/