// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.insert_produto_empresa_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_1
	//import java.util.List;

	//the import part of tJavaFlex_1
	//import java.util.List;

	//the import part of tJavaFlex_2
	//import java.util.List;

	//the import part of tJava_4
	//import java.util.List;

	//the import part of tJava_5
	//import java.util.List;

	//the import part of tJava_10
	//import java.util.List;

	//the import part of tJava_6
	//import java.util.List;

	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJavaRow_2
	//import java.util.List;

	//the import part of tJava_3
	//import java.util.List;

	//the import part of tJavaRow_3
	//import java.util.List;

	//the import part of tJavaRow_4
	//import java.util.List;

	//the import part of tJava_7
	//import java.util.List;

	//the import part of tJavaRow_5
	//import java.util.List;

	//the import part of tJavaRow_6
	//import java.util.List;

	//the import part of tJava_8
	//import java.util.List;

	//the import part of tJavaRow_8
	//import java.util.List;

	//the import part of tJavaRow_9
	//import java.util.List;

	//the import part of tJava_9
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: insert_produto_empresa Purpose: <br>
 * Description:  <br>
 * @author henriquesantos@palaciodasferramentas.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class insert_produto_empresa implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(Acumulado != null){
				
					this.setProperty("Acumulado", Acumulado.toString());
				
			}
			
			if(Dias_VendasItens != null){
				
					this.setProperty("Dias_VendasItens", Dias_VendasItens.toString());
				
			}
			
			if(Dias_Vendas != null){
				
					this.setProperty("Dias_Vendas", Dias_Vendas.toString());
				
			}
			
			if(parametro_qtde != null){
				
					this.setProperty("parametro_qtde", parametro_qtde.toString());
				
			}
			
			if(parametro_vlr != null){
				
					this.setProperty("parametro_vlr", parametro_vlr.toString());
				
			}
			
			if(Acumuladovlr != null){
				
					this.setProperty("Acumuladovlr", Acumuladovlr.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(AcumuladovlrAgr != null){
				
					this.setProperty("AcumuladovlrAgr", AcumuladovlrAgr.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public Double Acumulado;
public Double getAcumulado(){
	return this.Acumulado;
}
public Integer Dias_VendasItens;
public Integer getDias_VendasItens(){
	return this.Dias_VendasItens;
}
public Integer Dias_Vendas;
public Integer getDias_Vendas(){
	return this.Dias_Vendas;
}
public Integer parametro_qtde;
public Integer getParametro_qtde(){
	return this.parametro_qtde;
}
public Integer parametro_vlr;
public Integer getParametro_vlr(){
	return this.parametro_vlr;
}
public Double Acumuladovlr;
public Double getAcumuladovlr(){
	return this.Acumuladovlr;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public Double AcumuladovlrAgr;
public Double getAcumuladovlrAgr(){
	return this.AcumuladovlrAgr;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "insert_produto_empresa";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	LogCatcherUtils tLogCatcher_1 = new LogCatcherUtils();

private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				insert_produto_empresa.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(insert_produto_empresa.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
				tLogCatcher_1.addMessage("Java Exception", currentComponent, 6, e.getClass().getName() + ":" + e.getMessage(), 1);
				tLogCatcher_1Process(globalMap);
			}
			} catch (TalendException e) {
				// do nothing
			
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError1", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_1Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
						try {
							
								if(this.execStat){
									runStat.updateStatOnConnection("OnComponentError2", 0, "error");
								}
							
							
								((java.util.Map)threadLocal.get()).put("errorCode", null);
								tDie_2Process(globalMap);
								if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
									((java.util.Map)threadLocal.get()).put("status", "end");
								}
								

						} catch (Exception e) {
							e.printStackTrace();
						}
						
					tDBConnection_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaFlex_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaFlex_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBRow_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDie_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDie_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogCatcher_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tLogCatcher_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDie_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBRow_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "ERROR", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

				try {
					
						if(this.execStat){
							runStat.updateStatOnConnection("OnSubjobError1", 0, "error");
						}
					
					((java.util.Map)threadLocal.get()).put("errorCode", null);
					tDie_3Process(globalMap);
					if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
						((java.util.Map)threadLocal.get()).put("status", "end");
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			public void tDie_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tLogCatcher_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = context.JDBC_PARAMETERS;
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.AUTCOM_PASSWORD)
; 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_2",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBConnection_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_3", false);
		start_Hash.put("tDBConnection_3", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_3";
	
	
		int tos_count_tDBConnection_3 = 0;
		


	
            String dbProperties_tDBConnection_3 = "ApplicationName=stg_t_produto_empresa";
            String url_tDBConnection_3 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_3 != null && !"".equals(dbProperties_tDBConnection_3.trim())) {
                url_tDBConnection_3 = url_tDBConnection_3 + "?" + dbProperties_tDBConnection_3;
            }
	String dbUser_tDBConnection_3 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_3 = System.getenv(context.POSTGRES_PASSWORD)
; 
		String dbPwd_tDBConnection_3 = decryptedPassword_tDBConnection_3;
	
	
	java.sql.Connection conn_tDBConnection_3 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_3 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_3 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_3.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_3 = drivers_tDBConnection_3.nextElement();
        if (redShiftDriverNames_tDBConnection_3.contains(d_tDBConnection_3.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_3);
                java.sql.DriverManager.registerDriver(d_tDBConnection_3);
            } catch (java.lang.Exception e_tDBConnection_3) {
globalMap.put("tDBConnection_3_ERROR_MESSAGE",e_tDBConnection_3.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_3 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_3 = java.lang.Class.forName(driverClass_tDBConnection_3);
			globalMap.put("driverClass_tDBConnection_3", driverClass_tDBConnection_3);
		
			conn_tDBConnection_3 = java.sql.DriverManager.getConnection(url_tDBConnection_3,dbUser_tDBConnection_3,dbPwd_tDBConnection_3);

		globalMap.put("conn_tDBConnection_3", conn_tDBConnection_3);
	if (null != conn_tDBConnection_3) {
		
			conn_tDBConnection_3.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_3","");

 



/**
 * [tDBConnection_3 begin ] stop
 */
	
	/**
	 * [tDBConnection_3 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 


	tos_count_tDBConnection_3++;

/**
 * [tDBConnection_3 main ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_3 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 

ok_Hash.put("tDBConnection_3", true);
end_Hash.put("tDBConnection_3", System.currentTimeMillis());




/**
 * [tDBConnection_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_3 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
insert_logStruct insert_log = new insert_logStruct();
row5Struct row5 = new row5Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_2=0;
        java.lang.StringBuilder sb_tDBOutput_2 = new java.lang.StringBuilder();
        sb_tDBOutput_2.append("INSERT INTO \"").append(tableName_tDBOutput_2).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_2 = sb_tDBOutput_2.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(insert_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row4.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row4.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row5 = null;
        whetherReject_tDBOutput_2 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_2.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_2.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                insertedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_2) {
                            row5 = new row5Struct();
                                row5.nm_programa = insert_log.nm_programa;
                                row5.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row5.data_termino_execucao = insert_log.data_termino_execucao;
                                row5.mensagem = insert_log.mensagem;
                                row5.uuid = insert_log.uuid;
                                row5.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.nm_programa = row5.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row5.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row5.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row5.mensagem;
					oneRow_tHashOutput_1.uuid = row5.uuid;
					oneRow_tHashOutput_1.versao = row5.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk25", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


System.out.println("\n");
System.out.println("GET no parametro para calculo de curva ABC");



 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk18", 0, "ok");
								} 
							
							tDBInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public Integer cd_parametro;

				public Integer getCd_parametro () {
					return this.cd_parametro;
				}

				public Boolean cd_parametroIsNullable(){
				    return true;
				}
				public Boolean cd_parametroIsKey(){
				    return false;
				}
				public Integer cd_parametroLength(){
				    return null;
				}
				public Integer cd_parametroPrecision(){
				    return null;
				}
				public String cd_parametroDefault(){
				
					return null;
				
				}
				public String cd_parametroComment(){
				
				    return "";
				
				}
				public String cd_parametroPattern(){
				
					return "";
				
				}
				public String cd_parametroOriginalDbColumnName(){
				
					return "cd_parametro";
				
				}

				
			    public Integer vl_parametro;

				public Integer getVl_parametro () {
					return this.vl_parametro;
				}

				public Boolean vl_parametroIsNullable(){
				    return true;
				}
				public Boolean vl_parametroIsKey(){
				    return false;
				}
				public Integer vl_parametroLength(){
				    return null;
				}
				public Integer vl_parametroPrecision(){
				    return null;
				}
				public String vl_parametroDefault(){
				
					return null;
				
				}
				public String vl_parametroComment(){
				
				    return "";
				
				}
				public String vl_parametroPattern(){
				
					return "";
				
				}
				public String vl_parametroOriginalDbColumnName(){
				
					return "vl_parametro";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
						this.cd_parametro = readInteger(dis);
					
						this.vl_parametro = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
						this.cd_parametro = readInteger(dis);
					
						this.vl_parametro = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.cd_parametro,dos);
					
					// Integer
				
						writeInteger(this.vl_parametro,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.cd_parametro,dos);
					
					// Integer
				
						writeInteger(this.vl_parametro,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_parametro="+String.valueOf(cd_parametro));
		sb.append(",vl_parametro="+String.valueOf(vl_parametro));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tJavaFlex_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaFlex_1", false);
		start_Hash.put("tJavaFlex_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaFlex_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tJavaFlex_1 = 0;
		


// start part of your Java code
      


 



/**
 * [tJavaFlex_1 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "select cd_parametro, vl_parametro from dw_t_parametros\nwhere cd_parametro in (1)";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row16.cd_parametro = null;
							} else {
		                          
            row16.cd_parametro = rs_tDBInput_4.getInt(1);
            if(rs_tDBInput_4.wasNull()){
                    row16.cd_parametro = null;
            }
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row16.vl_parametro = null;
							} else {
		                          
            row16.vl_parametro = rs_tDBInput_4.getInt(2);
            if(rs_tDBInput_4.wasNull()){
                    row16.vl_parametro = null;
            }
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tJavaFlex_1 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					



// here is the main part of the component,
// a piece of code executed in the row
// loop
context.parametro_qtde = row16.vl_parametro;

 


	tos_count_tJavaFlex_1++;

/**
 * [tJavaFlex_1 main ] stop
 */
	
	/**
	 * [tJavaFlex_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_begin ] stop
 */
	
	/**
	 * [tJavaFlex_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tJavaFlex_1 end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	


// end of the component, outside/closing the loop
      

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tJavaFlex_1", true);
end_Hash.put("tJavaFlex_1", System.currentTimeMillis());




/**
 * [tJavaFlex_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tDBInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tJavaFlex_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaFlex_1";
	
	

 



/**
 * [tJavaFlex_1 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public Integer cd_parametro;

				public Integer getCd_parametro () {
					return this.cd_parametro;
				}

				public Boolean cd_parametroIsNullable(){
				    return true;
				}
				public Boolean cd_parametroIsKey(){
				    return false;
				}
				public Integer cd_parametroLength(){
				    return null;
				}
				public Integer cd_parametroPrecision(){
				    return null;
				}
				public String cd_parametroDefault(){
				
					return null;
				
				}
				public String cd_parametroComment(){
				
				    return "";
				
				}
				public String cd_parametroPattern(){
				
					return "";
				
				}
				public String cd_parametroOriginalDbColumnName(){
				
					return "cd_parametro";
				
				}

				
			    public Integer vl_parametro;

				public Integer getVl_parametro () {
					return this.vl_parametro;
				}

				public Boolean vl_parametroIsNullable(){
				    return true;
				}
				public Boolean vl_parametroIsKey(){
				    return false;
				}
				public Integer vl_parametroLength(){
				    return null;
				}
				public Integer vl_parametroPrecision(){
				    return null;
				}
				public String vl_parametroDefault(){
				
					return null;
				
				}
				public String vl_parametroComment(){
				
				    return "";
				
				}
				public String vl_parametroPattern(){
				
					return "";
				
				}
				public String vl_parametroOriginalDbColumnName(){
				
					return "vl_parametro";
				
				}

				


	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
						this.cd_parametro = readInteger(dis);
					
						this.vl_parametro = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
						this.cd_parametro = readInteger(dis);
					
						this.vl_parametro = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// Integer
				
						writeInteger(this.cd_parametro,dos);
					
					// Integer
				
						writeInteger(this.vl_parametro,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// Integer
				
						writeInteger(this.cd_parametro,dos);
					
					// Integer
				
						writeInteger(this.vl_parametro,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_parametro="+String.valueOf(cd_parametro));
		sb.append(",vl_parametro="+String.valueOf(vl_parametro));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();




	
	/**
	 * [tJavaFlex_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaFlex_2", false);
		start_Hash.put("tJavaFlex_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaFlex_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tJavaFlex_2 = 0;
		


// start part of your Java code
      


 



/**
 * [tJavaFlex_2 begin ] stop
 */



	
	/**
	 * [tDBInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_5", false);
		start_Hash.put("tDBInput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_5";
	
	
		int tos_count_tDBInput_5 = 0;
		
	
    
	
		    int nb_line_tDBInput_5 = 0;
		    java.sql.Connection conn_tDBInput_5 = null;
				conn_tDBInput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

		    String dbquery_tDBInput_5 = "select cd_parametro, vl_parametro from dw_t_parametros\nwhere cd_parametro in (2)";
		    

		    globalMap.put("tDBInput_5_QUERY",dbquery_tDBInput_5);

		    java.sql.ResultSet rs_tDBInput_5 = null;

		    try {
		    	rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
		    	int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

		    String tmpContent_tDBInput_5 = null;
		    
		    
		    while (rs_tDBInput_5.next()) {
		        nb_line_tDBInput_5++;
		        
							if(colQtyInRs_tDBInput_5 < 1) {
								row17.cd_parametro = null;
							} else {
		                          
            row17.cd_parametro = rs_tDBInput_5.getInt(1);
            if(rs_tDBInput_5.wasNull()){
                    row17.cd_parametro = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 2) {
								row17.vl_parametro = null;
							} else {
		                          
            row17.vl_parametro = rs_tDBInput_5.getInt(2);
            if(rs_tDBInput_5.wasNull()){
                    row17.vl_parametro = null;
            }
		                    }
					


 



/**
 * [tDBInput_5 begin ] stop
 */
	
	/**
	 * [tDBInput_5 main ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 


	tos_count_tDBInput_5++;

/**
 * [tDBInput_5 main ] stop
 */
	
	/**
	 * [tDBInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tJavaFlex_2 main ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					



// here is the main part of the component,
// a piece of code executed in the row
// loop
context.parametro_vlr = row17.vl_parametro;

 


	tos_count_tJavaFlex_2++;

/**
 * [tJavaFlex_2 main ] stop
 */
	
	/**
	 * [tJavaFlex_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 process_data_begin ] stop
 */
	
	/**
	 * [tJavaFlex_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_5 end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

	}
}finally{
	if (rs_tDBInput_5 != null) {
		rs_tDBInput_5.close();
	}
	if (stmt_tDBInput_5 != null) {
		stmt_tDBInput_5.close();
	}
}
globalMap.put("tDBInput_5_NB_LINE",nb_line_tDBInput_5);
 

ok_Hash.put("tDBInput_5", true);
end_Hash.put("tDBInput_5", System.currentTimeMillis());




/**
 * [tDBInput_5 end ] stop
 */

	
	/**
	 * [tJavaFlex_2 end ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	


// end of the component, outside/closing the loop
      

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tJavaFlex_2", true);
end_Hash.put("tJavaFlex_2", System.currentTimeMillis());




/**
 * [tJavaFlex_2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 finally ] stop
 */

	
	/**
	 * [tJavaFlex_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaFlex_2";
	
	

 



/**
 * [tJavaFlex_2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 1);
	}
	


public void tDie_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_2", false);
		start_Hash.put("tDie_2", System.currentTimeMillis());
		
	
	currentComponent="tDie_2";
	
	
		int tos_count_tDie_2 = 0;
		

 



/**
 * [tDie_2 begin ] stop
 */
	
	/**
	 * [tDie_2 main ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_2", 5, "Erro na Conexão com o banco de dados do postegreSQL", 2);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_2_DIE_PRIORITY", 5);
	System.err.println("Erro na Conexão com o banco de dados do postegreSQL");
	
	globalMap.put("tDie_2_DIE_MESSAGE", "Erro na Conexão com o banco de dados do postegreSQL");
	globalMap.put("tDie_2_DIE_MESSAGES", "Erro na Conexão com o banco de dados do postegreSQL");
	
	} catch (Exception | Error e_tDie_2) {
	    globalMap.put("tDie_2_ERROR_MESSAGE",e_tDie_2.getMessage());
		logIgnoredError(String.format("tDie_2 - tDie failed to log message due to internal error: %s", e_tDie_2), e_tDie_2);
	}
	
	currentComponent = "tDie_2";
	status = "failure";
    	errorCode = new Integer(2);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(2));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_2_DIE_CODE", errorCode);

    
	

	
	
	System.exit(2);

 


	tos_count_tDie_2++;

/**
 * [tDie_2 main ] stop
 */
	
	/**
	 * [tDie_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_begin ] stop
 */
	
	/**
	 * [tDie_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 process_data_end ] stop
 */
	
	/**
	 * [tDie_2 end ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 

ok_Hash.put("tDie_2", true);
end_Hash.put("tDie_2", System.currentTimeMillis());




/**
 * [tDie_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_2 finally ] start
	 */

	

	
	
	currentComponent="tDie_2";
	
	

 



/**
 * [tDie_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_2_SUBPROCESS_STATE", 1);
	}
	


public void tDie_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_1", false);
		start_Hash.put("tDie_1", System.currentTimeMillis());
		
	
	currentComponent="tDie_1";
	
	
		int tos_count_tDie_1 = 0;
		

 



/**
 * [tDie_1 begin ] stop
 */
	
	/**
	 * [tDie_1 main ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_1", 5, "Erro na Conexão com o banco de dados do Autcom", 1);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_1_DIE_PRIORITY", 5);
	System.err.println("Erro na Conexão com o banco de dados do Autcom");
	
	globalMap.put("tDie_1_DIE_MESSAGE", "Erro na Conexão com o banco de dados do Autcom");
	globalMap.put("tDie_1_DIE_MESSAGES", "Erro na Conexão com o banco de dados do Autcom");
	
	} catch (Exception | Error e_tDie_1) {
	    globalMap.put("tDie_1_ERROR_MESSAGE",e_tDie_1.getMessage());
		logIgnoredError(String.format("tDie_1 - tDie failed to log message due to internal error: %s", e_tDie_1), e_tDie_1);
	}
	
	currentComponent = "tDie_1";
	status = "failure";
    	errorCode = new Integer(1);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(1));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_1_DIE_CODE", errorCode);

    
	

	
	
	System.exit(1);

 


	tos_count_tDie_1++;

/**
 * [tDie_1 main ] stop
 */
	
	/**
	 * [tDie_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_begin ] stop
 */
	
	/**
	 * [tDie_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 process_data_end ] stop
 */
	
	/**
	 * [tDie_1 end ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 

ok_Hash.put("tDie_1", true);
end_Hash.put("tDie_1", System.currentTimeMillis());




/**
 * [tDie_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_1 finally ] start
	 */

	

	
	
	currentComponent="tDie_1";
	
	

 



/**
 * [tDie_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_1_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tJava_4Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_4", false);
		start_Hash.put("tJava_4", System.currentTimeMillis());
		
	
	currentComponent="tJava_4";
	
	
		int tos_count_tJava_4 = 0;
		


System.out.println("Iniciado select produto_empresa no AUTCOM em: "+TalendDate.getCurrentDate());



 



/**
 * [tJava_4 begin ] stop
 */
	
	/**
	 * [tJava_4 main ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 


	tos_count_tJava_4++;

/**
 * [tJava_4 main ] stop
 */
	
	/**
	 * [tJava_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_begin ] stop
 */
	
	/**
	 * [tJava_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 process_data_end ] stop
 */
	
	/**
	 * [tJava_4 end ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 

ok_Hash.put("tJava_4", true);
end_Hash.put("tJava_4", System.currentTimeMillis());




/**
 * [tJava_4 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk21", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_4 finally ] start
	 */

	

	
	
	currentComponent="tJava_4";
	
	

 



/**
 * [tJava_4 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_4_SUBPROCESS_STATE", 1);
	}
	


public static class StatusStruct implements routines.system.IPersistableRow<StatusStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return 3;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final StatusStruct other = (StatusStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.CD_EMPRESA == null) {
							if (other.CD_EMPRESA != null)
								return false;
						
						} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(StatusStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.CD_EMPRESA = this.CD_EMPRESA;
	            other.code_curva_emp = this.code_curva_emp;
	            other.SALDO_FISICO = this.SALDO_FISICO;
	            other.RESERVADO_ORDEM_PRODUCAO = this.RESERVADO_ORDEM_PRODUCAO;
	            other.RESERVADO_PEDIDO_VENDA = this.RESERVADO_PEDIDO_VENDA;
	            other.RESERVADO_ENDERECAMENTO = this.RESERVADO_ENDERECAMENTO;
	            other.RESERVADO_GARANTIA = this.RESERVADO_GARANTIA;
	            other.RESERVADO_EXTERNO = this.RESERVADO_EXTERNO;
	            other.VL_COMPRA = this.VL_COMPRA;
	            other.PRECO_COMPRA = this.PRECO_COMPRA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA1_PRECO_VENDA = this.TABELA1_PRECO_VENDA;
	            other.MARKUP_TABELA1 = this.MARKUP_TABELA1;
	            other.TABELA2_PRECO_VENDA = this.TABELA2_PRECO_VENDA;
	            other.MARKUP_TABELA2 = this.MARKUP_TABELA2;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.MARKUP_TABELA3 = this.MARKUP_TABELA3;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            other.MARKUP_TABELA4 = this.MARKUP_TABELA4;
	            other.TABELA5_PRECO_VENDA = this.TABELA5_PRECO_VENDA;
	            other.MARKUP_TABELA5 = this.MARKUP_TABELA5;
	            other.TABELA6_PRECO_VENDA = this.TABELA6_PRECO_VENDA;
	            other.MARKUP_TABELA6 = this.MARKUP_TABELA6;
	            other.TABELA7_PRECO_VENDA = this.TABELA7_PRECO_VENDA;
	            other.MARKUP_TABELA7 = this.MARKUP_TABELA7;
	            other.ABRANGENCIA_FISCAL = this.ABRANGENCIA_FISCAL;
	            other.IMPORTADO = this.IMPORTADO;
	            other.DT_ULTIMA_COMPRA = this.DT_ULTIMA_COMPRA;
	            other.PRECO_ULTIMA_COMPRA = this.PRECO_ULTIMA_COMPRA;
	            other.QTD_ULTIMA_COMPRA = this.QTD_ULTIMA_COMPRA;
	            other.PRECO_MEDIO = this.PRECO_MEDIO;
	            other.DT_ULTIMA_VENDA = this.DT_ULTIMA_VENDA;
	            other.PRECO_ULTIMA_VENDA = this.PRECO_ULTIMA_VENDA;
	            other.QTD_ULTIMA_VENDA = this.QTD_ULTIMA_VENDA;
	            other.DIAS_SEM_VENDA = this.DIAS_SEM_VENDA;
	            other.ST = this.ST;
	            other.CURVA_ABC = this.CURVA_ABC;
	            other.CRITICIDADE = this.CRITICIDADE;
	            other.LOCAL_FISICO = this.LOCAL_FISICO;
	            other.Curva_qtde = this.Curva_qtde;
	            other.Curva_vlr = this.Curva_vlr;
	            other.agp_curva_emp = this.agp_curva_emp;
	            other.STATUS = this.STATUS;
	            
	}

	public void copyKeysDataTo(StatusStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.CD_EMPRESA = this.CD_EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",agp_curva_emp="+agp_curva_emp);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(StatusStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CD_EMPRESA, other.CD_EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class Curva3Struct implements routines.system.IPersistableRow<Curva3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return 3;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",agp_curva_emp="+agp_curva_emp);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Curva3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class curva2Struct implements routines.system.IPersistableRow<curva2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return 3;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(curva2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return 3;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return 3;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return 3;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row1Struct other = (row1Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.CD_EMPRESA == null) {
							if (other.CD_EMPRESA != null)
								return false;
						
						} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row1Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.CD_EMPRESA = this.CD_EMPRESA;
	            other.code_curva_emp = this.code_curva_emp;
	            other.SALDO_FISICO = this.SALDO_FISICO;
	            other.RESERVADO_ORDEM_PRODUCAO = this.RESERVADO_ORDEM_PRODUCAO;
	            other.RESERVADO_PEDIDO_VENDA = this.RESERVADO_PEDIDO_VENDA;
	            other.RESERVADO_ENDERECAMENTO = this.RESERVADO_ENDERECAMENTO;
	            other.RESERVADO_GARANTIA = this.RESERVADO_GARANTIA;
	            other.RESERVADO_EXTERNO = this.RESERVADO_EXTERNO;
	            other.VL_COMPRA = this.VL_COMPRA;
	            other.PRECO_COMPRA = this.PRECO_COMPRA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA1_PRECO_VENDA = this.TABELA1_PRECO_VENDA;
	            other.MARKUP_TABELA1 = this.MARKUP_TABELA1;
	            other.TABELA2_PRECO_VENDA = this.TABELA2_PRECO_VENDA;
	            other.MARKUP_TABELA2 = this.MARKUP_TABELA2;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.MARKUP_TABELA3 = this.MARKUP_TABELA3;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            other.MARKUP_TABELA4 = this.MARKUP_TABELA4;
	            other.TABELA5_PRECO_VENDA = this.TABELA5_PRECO_VENDA;
	            other.MARKUP_TABELA5 = this.MARKUP_TABELA5;
	            other.TABELA6_PRECO_VENDA = this.TABELA6_PRECO_VENDA;
	            other.MARKUP_TABELA6 = this.MARKUP_TABELA6;
	            other.TABELA7_PRECO_VENDA = this.TABELA7_PRECO_VENDA;
	            other.MARKUP_TABELA7 = this.MARKUP_TABELA7;
	            other.ABRANGENCIA_FISCAL = this.ABRANGENCIA_FISCAL;
	            other.IMPORTADO = this.IMPORTADO;
	            other.QTD_ULTIMA_COMPRA = this.QTD_ULTIMA_COMPRA;
	            other.DT_ULTIMA_COMPRA = this.DT_ULTIMA_COMPRA;
	            other.PRECO_ULTIMA_COMPRA = this.PRECO_ULTIMA_COMPRA;
	            other.PRECO_MEDIO = this.PRECO_MEDIO;
	            other.QTD_ULTIMA_VENDA = this.QTD_ULTIMA_VENDA;
	            other.DT_ULTIMA_VENDA = this.DT_ULTIMA_VENDA;
	            other.PRECO_ULTIMA_VENDA = this.PRECO_ULTIMA_VENDA;
	            other.DIAS_SEM_VENDA = this.DIAS_SEM_VENDA;
	            other.ST = this.ST;
	            other.CURVA_ABC = this.CURVA_ABC;
	            other.CRITICIDADE = this.CRITICIDADE;
	            other.LOCAL_FISICO = this.LOCAL_FISICO;
	            
	}

	public void copyKeysDataTo(row1Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.CD_EMPRESA = this.CD_EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CD_EMPRESA, other.CD_EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tDBInput_2Struct implements routines.system.IPersistableRow<after_tDBInput_2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return 3;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final after_tDBInput_2Struct other = (after_tDBInput_2Struct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.CD_EMPRESA == null) {
							if (other.CD_EMPRESA != null)
								return false;
						
						} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(after_tDBInput_2Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.CD_EMPRESA = this.CD_EMPRESA;
	            other.code_curva_emp = this.code_curva_emp;
	            other.SALDO_FISICO = this.SALDO_FISICO;
	            other.RESERVADO_ORDEM_PRODUCAO = this.RESERVADO_ORDEM_PRODUCAO;
	            other.RESERVADO_PEDIDO_VENDA = this.RESERVADO_PEDIDO_VENDA;
	            other.RESERVADO_ENDERECAMENTO = this.RESERVADO_ENDERECAMENTO;
	            other.RESERVADO_GARANTIA = this.RESERVADO_GARANTIA;
	            other.RESERVADO_EXTERNO = this.RESERVADO_EXTERNO;
	            other.VL_COMPRA = this.VL_COMPRA;
	            other.PRECO_COMPRA = this.PRECO_COMPRA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA1_PRECO_VENDA = this.TABELA1_PRECO_VENDA;
	            other.MARKUP_TABELA1 = this.MARKUP_TABELA1;
	            other.TABELA2_PRECO_VENDA = this.TABELA2_PRECO_VENDA;
	            other.MARKUP_TABELA2 = this.MARKUP_TABELA2;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.MARKUP_TABELA3 = this.MARKUP_TABELA3;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            other.MARKUP_TABELA4 = this.MARKUP_TABELA4;
	            other.TABELA5_PRECO_VENDA = this.TABELA5_PRECO_VENDA;
	            other.MARKUP_TABELA5 = this.MARKUP_TABELA5;
	            other.TABELA6_PRECO_VENDA = this.TABELA6_PRECO_VENDA;
	            other.MARKUP_TABELA6 = this.MARKUP_TABELA6;
	            other.TABELA7_PRECO_VENDA = this.TABELA7_PRECO_VENDA;
	            other.MARKUP_TABELA7 = this.MARKUP_TABELA7;
	            other.ABRANGENCIA_FISCAL = this.ABRANGENCIA_FISCAL;
	            other.IMPORTADO = this.IMPORTADO;
	            other.QTD_ULTIMA_COMPRA = this.QTD_ULTIMA_COMPRA;
	            other.DT_ULTIMA_COMPRA = this.DT_ULTIMA_COMPRA;
	            other.PRECO_ULTIMA_COMPRA = this.PRECO_ULTIMA_COMPRA;
	            other.PRECO_MEDIO = this.PRECO_MEDIO;
	            other.QTD_ULTIMA_VENDA = this.QTD_ULTIMA_VENDA;
	            other.DT_ULTIMA_VENDA = this.DT_ULTIMA_VENDA;
	            other.PRECO_ULTIMA_VENDA = this.PRECO_ULTIMA_VENDA;
	            other.DIAS_SEM_VENDA = this.DIAS_SEM_VENDA;
	            other.ST = this.ST;
	            other.CURVA_ABC = this.CURVA_ABC;
	            other.CRITICIDADE = this.CRITICIDADE;
	            other.LOCAL_FISICO = this.LOCAL_FISICO;
	            
	}

	public void copyKeysDataTo(after_tDBInput_2Struct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.CD_EMPRESA = this.CD_EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tDBInput_2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CD_EMPRESA, other.CD_EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_4Process(globalMap);
		tHashInput_7Process(globalMap);
		tHashInput_8Process(globalMap);
		tHashInput_9Process(globalMap);

		row1Struct row1 = new row1Struct();
row3Struct row3 = new row3Struct();
out1Struct out1 = new out1Struct();
curva2Struct curva2 = new curva2Struct();
Curva3Struct Curva3 = new Curva3Struct();
StatusStruct Status = new StatusStruct();









	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Status");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<StatusStruct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<StatusStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Curva3");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct> tHash_Lookup_row23 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct>) 
					globalMap.get( "tHash_Lookup_row23" ))
					;					
					
	

row23Struct row23HashKey = new row23Struct();
row23Struct row23Default = new row23Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
StatusStruct Status_tmp = new StatusStruct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"curva2");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct> tHash_Lookup_row22 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct>) 
					globalMap.get( "tHash_Lookup_row22" ))
					;					
					
	

row22Struct row22HashKey = new row22Struct();
row22Struct row22Default = new row22Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
Curva3Struct Curva3_tmp = new Curva3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
curva2Struct curva2_tmp = new curva2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
					globalMap.get( "tHash_Lookup_row10" ))
					;					
					
	

row10Struct row10HashKey = new row10Struct();
row10Struct row10Default = new row10Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String CD_PRODUTO;
					String CD_EMPRESA;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
								
								result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.CD_PRODUTO == null) {
										if (other.CD_PRODUTO != null) 
											return false;
								
									} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
								 
										return false;
								
									if (this.CD_EMPRESA == null) {
										if (other.CD_EMPRESA != null) 
											return false;
								
									} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT \nI.ITE_CODITE CD_PRODUTO,\nG.ITE_CODEMP CD_EMPRESA,\ncase when G.ITE_CODEMP = '010' then 'MG'\n     when G.ITE_"
+"CODEMP = '201' then 'REI'\nelse 'CD'\nend as code_curva_emp,\nG.ITE_SALDOS SALDO_FISICO,\nITE_QTPD_P RESERVADO_ORDEM_PRO"
+"DUCAO,\n(ITE_QTPD_V+ITE_QTPD_F) RESERVADO_PEDIDO_VENDA,\nITE_QTPD_E RESERVADO_ENDERECAMENTO,\nITE_SALREG RESERVADO_GARAN"
+"TIA,\nITE_SALEXT RESERVADO_EXTERNO,\nFCALCULAPRECODECOMPRALIQUIDO(I.ITE_CODITE,G.ITE_CODEMP) VL_COMPRA,\nG.ITE_PRECOM PR"
+"ECO_COMPRA,\nROUND(G.ITE_PRECUS,4) VL_CUSTO,\nROUND(G.ITE_PREVE1,4) TABELA1_PRECO_VENDA,\nROUND ((G.ITE_PREVE1/G.ITE_PRE"
+"CUS)-1,4)*100 MARKUP_TABELA1,\nG.ITE_PREVE2 AS TABELA2_PRECO_VENDA,\nROUND ((G.ITE_PREVE2/G.ITE_PRECUS)-1,4)*100 MARKUP_"
+"TABELA2 ,\nG.ITE_PREVE3 AS TABELA3_PRECO_VENDA,\nROUND ((G.ITE_PREVE3/G.ITE_PRECUS)-1,4)*100 MARKUP_TABELA3 ,\nG.ITE_PRE"
+"VE4 AS TABELA4_PRECO_VENDA,\nROUND ((G.ITE_PREVE4/G.ITE_PRECUS)-1,4)*100 MARKUP_TABELA4 ,\nG.ITE_PREVE5 AS TABELA5_PRECO"
+"_VENDA,\nROUND ((G.ITE_PREVE5/G.ITE_PRECUS)-1,4)*100 MARKUP_TABELA5 ,\nG.ITE_PREVE6 AS TABELA6_PRECO_VENDA,\nROUND ((G.I"
+"TE_PREVE6/G.ITE_PRECUS)-1,4)*100 MARKUP_TABELA6 ,\nG.ITE_PREVE7 AS TABELA7_PRECO_VENDA,\nROUND ((G.ITE_PREVE7/G.ITE_PREC"
+"US)-1,4)*100 MARKUP_TABELA7 ,\n(SELECT DISTINCT CONCAT(A.ABF_CODABF,'-', A.ABF_DESABF)\nFROM ABFICM A\nWHERE A.ABF_CODAB"
+"F = I.ITE_CODABF\nAND A.ABF_CODEMP = I.ITE_CODEMP\nAND A.ABF_CODEMP = G.ITE_CODEMP\nlimit 1) ABRANGENCIA_FISCAL,\nCASE W"
+"HEN IFNULL((SELECT DISTINCT ABF_CODABF\nFROM ABFICM ABF\nWHERE ABF.ABF_CODABF = I.ITE_CODABF\nAND (ABF.ABF_DESABF LIKE '"
+"%IMP%' OR ABF.ABF_DESABF LIKE '%EST%')),0) = 0\nTHEN 'NAO'\nELSE 'SIM'\nEND IMPORTADO,\nG.ITE_QTDUCO QTD_ULTIMA_COMPRA,"
+"\nG.ITE_DTAULT DT_ULTIMA_COMPRA,\nG.ITE_PREULT PRECO_ULTIMA_COMPRA,\nG.ITE_PREMED PRECO_MEDIO,\nG.ITE_QTDUVE QTD_ULTIMA_V"
+"ENDA,\nG.ITE_DTAUVE DT_ULTIMA_VENDA,\nG.ITE_PREUVE PRECO_ULTIMA_VENDA,\nDATEDIFF (CURDATE(), G.ITE_DTAUVE) DIAS_SEM_VEND"
+"A,\nG.ITE_SUBSTI ST,\nG.ITE_NIVGIR CURVA_ABC,\nG.ITE_NIVCRI CRITICIDADE,\nG.ITE_LOCFIS LOCAL_FISICO\nFROM CADITE I,\nITE"
+"GER G\nWHERE G.ITE_CODITE = I.ITE_CODITE\n-- and G.ITE_CODEMP = '001'\n";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row1.CD_PRODUTO = null;
							} else {
	                         		
        	row1.CD_PRODUTO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row1.CD_EMPRESA = null;
							} else {
	                         		
        	row1.CD_EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row1.code_curva_emp = null;
							} else {
	                         		
        	row1.code_curva_emp = routines.system.JDBCUtil.getString(rs_tDBInput_2, 3, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 4) {
								row1.SALDO_FISICO = null;
							} else {
		                          
            row1.SALDO_FISICO = rs_tDBInput_2.getBigDecimal(4);
            if(rs_tDBInput_2.wasNull()){
                    row1.SALDO_FISICO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 5) {
								row1.RESERVADO_ORDEM_PRODUCAO = null;
							} else {
		                          
            row1.RESERVADO_ORDEM_PRODUCAO = rs_tDBInput_2.getBigDecimal(5);
            if(rs_tDBInput_2.wasNull()){
                    row1.RESERVADO_ORDEM_PRODUCAO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 6) {
								row1.RESERVADO_PEDIDO_VENDA = null;
							} else {
		                          
            row1.RESERVADO_PEDIDO_VENDA = rs_tDBInput_2.getBigDecimal(6);
            if(rs_tDBInput_2.wasNull()){
                    row1.RESERVADO_PEDIDO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 7) {
								row1.RESERVADO_ENDERECAMENTO = null;
							} else {
		                          
            row1.RESERVADO_ENDERECAMENTO = rs_tDBInput_2.getBigDecimal(7);
            if(rs_tDBInput_2.wasNull()){
                    row1.RESERVADO_ENDERECAMENTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 8) {
								row1.RESERVADO_GARANTIA = null;
							} else {
		                          
            row1.RESERVADO_GARANTIA = rs_tDBInput_2.getBigDecimal(8);
            if(rs_tDBInput_2.wasNull()){
                    row1.RESERVADO_GARANTIA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 9) {
								row1.RESERVADO_EXTERNO = null;
							} else {
		                          
            row1.RESERVADO_EXTERNO = rs_tDBInput_2.getBigDecimal(9);
            if(rs_tDBInput_2.wasNull()){
                    row1.RESERVADO_EXTERNO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 10) {
								row1.VL_COMPRA = null;
							} else {
		                          
            row1.VL_COMPRA = rs_tDBInput_2.getBigDecimal(10);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 11) {
								row1.PRECO_COMPRA = null;
							} else {
		                          
            row1.PRECO_COMPRA = rs_tDBInput_2.getBigDecimal(11);
            if(rs_tDBInput_2.wasNull()){
                    row1.PRECO_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 12) {
								row1.VL_CUSTO = null;
							} else {
		                          
            row1.VL_CUSTO = rs_tDBInput_2.getBigDecimal(12);
            if(rs_tDBInput_2.wasNull()){
                    row1.VL_CUSTO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 13) {
								row1.TABELA1_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA1_PRECO_VENDA = rs_tDBInput_2.getBigDecimal(13);
            if(rs_tDBInput_2.wasNull()){
                    row1.TABELA1_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 14) {
								row1.MARKUP_TABELA1 = null;
							} else {
		                          
            row1.MARKUP_TABELA1 = rs_tDBInput_2.getBigDecimal(14);
            if(rs_tDBInput_2.wasNull()){
                    row1.MARKUP_TABELA1 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 15) {
								row1.TABELA2_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA2_PRECO_VENDA = rs_tDBInput_2.getBigDecimal(15);
            if(rs_tDBInput_2.wasNull()){
                    row1.TABELA2_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 16) {
								row1.MARKUP_TABELA2 = null;
							} else {
		                          
            row1.MARKUP_TABELA2 = rs_tDBInput_2.getBigDecimal(16);
            if(rs_tDBInput_2.wasNull()){
                    row1.MARKUP_TABELA2 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 17) {
								row1.TABELA3_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA3_PRECO_VENDA = rs_tDBInput_2.getBigDecimal(17);
            if(rs_tDBInput_2.wasNull()){
                    row1.TABELA3_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 18) {
								row1.MARKUP_TABELA3 = null;
							} else {
		                          
            row1.MARKUP_TABELA3 = rs_tDBInput_2.getBigDecimal(18);
            if(rs_tDBInput_2.wasNull()){
                    row1.MARKUP_TABELA3 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 19) {
								row1.TABELA4_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA4_PRECO_VENDA = rs_tDBInput_2.getBigDecimal(19);
            if(rs_tDBInput_2.wasNull()){
                    row1.TABELA4_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 20) {
								row1.MARKUP_TABELA4 = null;
							} else {
		                          
            row1.MARKUP_TABELA4 = rs_tDBInput_2.getBigDecimal(20);
            if(rs_tDBInput_2.wasNull()){
                    row1.MARKUP_TABELA4 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 21) {
								row1.TABELA5_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA5_PRECO_VENDA = rs_tDBInput_2.getBigDecimal(21);
            if(rs_tDBInput_2.wasNull()){
                    row1.TABELA5_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 22) {
								row1.MARKUP_TABELA5 = null;
							} else {
		                          
            row1.MARKUP_TABELA5 = rs_tDBInput_2.getBigDecimal(22);
            if(rs_tDBInput_2.wasNull()){
                    row1.MARKUP_TABELA5 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 23) {
								row1.TABELA6_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA6_PRECO_VENDA = rs_tDBInput_2.getBigDecimal(23);
            if(rs_tDBInput_2.wasNull()){
                    row1.TABELA6_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 24) {
								row1.MARKUP_TABELA6 = null;
							} else {
		                          
            row1.MARKUP_TABELA6 = rs_tDBInput_2.getBigDecimal(24);
            if(rs_tDBInput_2.wasNull()){
                    row1.MARKUP_TABELA6 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 25) {
								row1.TABELA7_PRECO_VENDA = null;
							} else {
		                          
            row1.TABELA7_PRECO_VENDA = rs_tDBInput_2.getBigDecimal(25);
            if(rs_tDBInput_2.wasNull()){
                    row1.TABELA7_PRECO_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 26) {
								row1.MARKUP_TABELA7 = null;
							} else {
		                          
            row1.MARKUP_TABELA7 = rs_tDBInput_2.getBigDecimal(26);
            if(rs_tDBInput_2.wasNull()){
                    row1.MARKUP_TABELA7 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 27) {
								row1.ABRANGENCIA_FISCAL = null;
							} else {
	                         		
        	row1.ABRANGENCIA_FISCAL = routines.system.JDBCUtil.getString(rs_tDBInput_2, 27, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 28) {
								row1.IMPORTADO = null;
							} else {
	                         		
        	row1.IMPORTADO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 28, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 29) {
								row1.QTD_ULTIMA_COMPRA = null;
							} else {
		                          
            row1.QTD_ULTIMA_COMPRA = rs_tDBInput_2.getInt(29);
            if(rs_tDBInput_2.wasNull()){
                    row1.QTD_ULTIMA_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 30) {
								row1.DT_ULTIMA_COMPRA = null;
							} else {
										
				if(rs_tDBInput_2.getString(30) != null) {
					String dateString_tDBInput_2 = rs_tDBInput_2.getString(30);
					if (!("0000-00-00").equals(dateString_tDBInput_2) && !("0000-00-00 00:00:00").equals(dateString_tDBInput_2)) {
						row1.DT_ULTIMA_COMPRA = rs_tDBInput_2.getTimestamp(30);
					} else {
						row1.DT_ULTIMA_COMPRA = (java.util.Date) year0_tDBInput_2.clone();
					}
				} else {
					row1.DT_ULTIMA_COMPRA =  null;
				}
		                    }
							if(colQtyInRs_tDBInput_2 < 31) {
								row1.PRECO_ULTIMA_COMPRA = null;
							} else {
		                          
            row1.PRECO_ULTIMA_COMPRA = rs_tDBInput_2.getBigDecimal(31);
            if(rs_tDBInput_2.wasNull()){
                    row1.PRECO_ULTIMA_COMPRA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 32) {
								row1.PRECO_MEDIO = null;
							} else {
		                          
            row1.PRECO_MEDIO = rs_tDBInput_2.getBigDecimal(32);
            if(rs_tDBInput_2.wasNull()){
                    row1.PRECO_MEDIO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 33) {
								row1.QTD_ULTIMA_VENDA = null;
							} else {
		                          
            row1.QTD_ULTIMA_VENDA = rs_tDBInput_2.getInt(33);
            if(rs_tDBInput_2.wasNull()){
                    row1.QTD_ULTIMA_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 34) {
								row1.DT_ULTIMA_VENDA = null;
							} else {
										
				if(rs_tDBInput_2.getString(34) != null) {
					String dateString_tDBInput_2 = rs_tDBInput_2.getString(34);
					if (!("0000-00-00").equals(dateString_tDBInput_2) && !("0000-00-00 00:00:00").equals(dateString_tDBInput_2)) {
						row1.DT_ULTIMA_VENDA = rs_tDBInput_2.getTimestamp(34);
					} else {
						row1.DT_ULTIMA_VENDA = (java.util.Date) year0_tDBInput_2.clone();
					}
				} else {
					row1.DT_ULTIMA_VENDA =  null;
				}
		                    }
							if(colQtyInRs_tDBInput_2 < 35) {
								row1.PRECO_ULTIMA_VENDA = null;
							} else {
		                          
            row1.PRECO_ULTIMA_VENDA = rs_tDBInput_2.getBigDecimal(35);
            if(rs_tDBInput_2.wasNull()){
                    row1.PRECO_ULTIMA_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 36) {
								row1.DIAS_SEM_VENDA = null;
							} else {
		                          
            row1.DIAS_SEM_VENDA = rs_tDBInput_2.getInt(36);
            if(rs_tDBInput_2.wasNull()){
                    row1.DIAS_SEM_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 37) {
								row1.ST = null;
							} else {
	                         		
            row1.ST = rs_tDBInput_2.getDouble(37);
            if(rs_tDBInput_2.wasNull()){
                    row1.ST = null;
            }
		                    }
							if(colQtyInRs_tDBInput_2 < 38) {
								row1.CURVA_ABC = null;
							} else {
	                         		
        	row1.CURVA_ABC = routines.system.JDBCUtil.getString(rs_tDBInput_2, 38, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 39) {
								row1.CRITICIDADE = null;
							} else {
	                         		
        	row1.CRITICIDADE = routines.system.JDBCUtil.getString(rs_tDBInput_2, 39, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 40) {
								row1.LOCAL_FISICO = null;
							} else {
	                         		
        	row1.LOCAL_FISICO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 40, false);
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					
row3 = null;			
if(row1.CD_PRODUTO == null){
	finder_tUniqRow_1.CD_PRODUTO = null;
}else{
	finder_tUniqRow_1.CD_PRODUTO = row1.CD_PRODUTO.toLowerCase();
}
if(row1.CD_EMPRESA == null){
	finder_tUniqRow_1.CD_EMPRESA = null;
}else{
	finder_tUniqRow_1.CD_EMPRESA = row1.CD_EMPRESA.toLowerCase();
}	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
if(row1.CD_PRODUTO == null){
	new_tUniqRow_1.CD_PRODUTO = null;
}else{
	new_tUniqRow_1.CD_PRODUTO = row1.CD_PRODUTO.toLowerCase();
}
if(row1.CD_EMPRESA == null){
	new_tUniqRow_1.CD_EMPRESA = null;
}else{
	new_tUniqRow_1.CD_EMPRESA = row1.CD_EMPRESA.toLowerCase();
}
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row3 == null){ 
	
	row3 = new row3Struct();
}row3.CD_PRODUTO = row1.CD_PRODUTO;			row3.CD_EMPRESA = row1.CD_EMPRESA;			row3.code_curva_emp = row1.code_curva_emp;			row3.SALDO_FISICO = row1.SALDO_FISICO;			row3.RESERVADO_ORDEM_PRODUCAO = row1.RESERVADO_ORDEM_PRODUCAO;			row3.RESERVADO_PEDIDO_VENDA = row1.RESERVADO_PEDIDO_VENDA;			row3.RESERVADO_ENDERECAMENTO = row1.RESERVADO_ENDERECAMENTO;			row3.RESERVADO_GARANTIA = row1.RESERVADO_GARANTIA;			row3.RESERVADO_EXTERNO = row1.RESERVADO_EXTERNO;			row3.VL_COMPRA = row1.VL_COMPRA;			row3.PRECO_COMPRA = row1.PRECO_COMPRA;			row3.VL_CUSTO = row1.VL_CUSTO;			row3.TABELA1_PRECO_VENDA = row1.TABELA1_PRECO_VENDA;			row3.MARKUP_TABELA1 = row1.MARKUP_TABELA1;			row3.TABELA2_PRECO_VENDA = row1.TABELA2_PRECO_VENDA;			row3.MARKUP_TABELA2 = row1.MARKUP_TABELA2;			row3.TABELA3_PRECO_VENDA = row1.TABELA3_PRECO_VENDA;			row3.MARKUP_TABELA3 = row1.MARKUP_TABELA3;			row3.TABELA4_PRECO_VENDA = row1.TABELA4_PRECO_VENDA;			row3.MARKUP_TABELA4 = row1.MARKUP_TABELA4;			row3.TABELA5_PRECO_VENDA = row1.TABELA5_PRECO_VENDA;			row3.MARKUP_TABELA5 = row1.MARKUP_TABELA5;			row3.TABELA6_PRECO_VENDA = row1.TABELA6_PRECO_VENDA;			row3.MARKUP_TABELA6 = row1.MARKUP_TABELA6;			row3.TABELA7_PRECO_VENDA = row1.TABELA7_PRECO_VENDA;			row3.MARKUP_TABELA7 = row1.MARKUP_TABELA7;			row3.ABRANGENCIA_FISCAL = row1.ABRANGENCIA_FISCAL;			row3.IMPORTADO = row1.IMPORTADO;			row3.QTD_ULTIMA_COMPRA = row1.QTD_ULTIMA_COMPRA;			row3.DT_ULTIMA_COMPRA = row1.DT_ULTIMA_COMPRA;			row3.PRECO_ULTIMA_COMPRA = row1.PRECO_ULTIMA_COMPRA;			row3.PRECO_MEDIO = row1.PRECO_MEDIO;			row3.QTD_ULTIMA_VENDA = row1.QTD_ULTIMA_VENDA;			row3.DT_ULTIMA_VENDA = row1.DT_ULTIMA_VENDA;			row3.PRECO_ULTIMA_VENDA = row1.PRECO_ULTIMA_VENDA;			row3.DIAS_SEM_VENDA = row1.DIAS_SEM_VENDA;			row3.ST = row1.ST;			row3.CURVA_ABC = row1.CURVA_ABC;			row3.CRITICIDADE = row1.CRITICIDADE;			row3.LOCAL_FISICO = row1.LOCAL_FISICO;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row3"
if(row3 != null) { 



	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
						row10Struct row10 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row10" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow10 = false;
       		  	    	
       		  	    	
 							row10Struct row10ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_1) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_1 = false;
								
                        		    		    row10HashKey.CODIGO_ITEM = row3.CD_PRODUTO ;
                        		    		

								
		                        	row10HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row10.lookup( row10HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row10' and it contains more one result from keys :  row10.CODIGO_ITEM = '" + row10HashKey.CODIGO_ITEM + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row10Struct fromLookup_row10 = null;
							row10 = row10Default;
										 
							
								 
							
							
								if (tHash_Lookup_row10 !=null && tHash_Lookup_row10.hasNext()) { // G 099
								
							
								
								fromLookup_row10 = tHash_Lookup_row10.next();

							
							
								} // G 099
							
							

							if(fromLookup_row10 != null) {
								row10 = fromLookup_row10;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

out1 = null;


// # Output table : 'out1'
out1_tmp.CD_PRODUTO = row3.CD_PRODUTO ;
out1_tmp.CD_EMPRESA = row3.CD_EMPRESA ;
out1_tmp.code_curva_emp = row3.code_curva_emp ;
out1_tmp.SALDO_FISICO = row3.SALDO_FISICO ;
out1_tmp.RESERVADO_ORDEM_PRODUCAO = row3.RESERVADO_ORDEM_PRODUCAO ;
out1_tmp.RESERVADO_PEDIDO_VENDA = row3.RESERVADO_PEDIDO_VENDA ;
out1_tmp.RESERVADO_ENDERECAMENTO = row3.RESERVADO_ENDERECAMENTO ;
out1_tmp.RESERVADO_GARANTIA = row3.RESERVADO_GARANTIA ;
out1_tmp.RESERVADO_EXTERNO = row3.RESERVADO_EXTERNO ;
out1_tmp.VL_COMPRA = row3.VL_COMPRA ;
out1_tmp.PRECO_COMPRA = row3.PRECO_COMPRA ;
out1_tmp.VL_CUSTO = row3.VL_CUSTO ;
out1_tmp.TABELA1_PRECO_VENDA = row3.TABELA1_PRECO_VENDA ;
out1_tmp.MARKUP_TABELA1 = row3.MARKUP_TABELA1 ;
out1_tmp.TABELA2_PRECO_VENDA = row3.TABELA2_PRECO_VENDA ;
out1_tmp.MARKUP_TABELA2 = row3.MARKUP_TABELA2 ;
out1_tmp.TABELA3_PRECO_VENDA = row3.TABELA3_PRECO_VENDA ;
out1_tmp.MARKUP_TABELA3 = row3.MARKUP_TABELA3 ;
out1_tmp.TABELA4_PRECO_VENDA = row3.TABELA4_PRECO_VENDA ;
out1_tmp.MARKUP_TABELA4 = row3.MARKUP_TABELA4 ;
out1_tmp.TABELA5_PRECO_VENDA = row3.TABELA5_PRECO_VENDA ;
out1_tmp.MARKUP_TABELA5 = row3.MARKUP_TABELA5 ;
out1_tmp.TABELA6_PRECO_VENDA = row3.TABELA6_PRECO_VENDA ;
out1_tmp.MARKUP_TABELA6 = row3.MARKUP_TABELA6 ;
out1_tmp.TABELA7_PRECO_VENDA = row3.TABELA7_PRECO_VENDA ;
out1_tmp.MARKUP_TABELA7 = row3.MARKUP_TABELA7 ;
out1_tmp.ABRANGENCIA_FISCAL = row3.ABRANGENCIA_FISCAL ;
out1_tmp.IMPORTADO = row3.IMPORTADO ;
out1_tmp.DT_ULTIMA_COMPRA = row3.DT_ULTIMA_COMPRA ;
out1_tmp.PRECO_ULTIMA_COMPRA = row3.PRECO_ULTIMA_COMPRA ;
out1_tmp.QTD_ULTIMA_COMPRA = row3.QTD_ULTIMA_COMPRA ;
out1_tmp.PRECO_MEDIO = row3.PRECO_MEDIO ;
out1_tmp.DT_ULTIMA_VENDA = row3.DT_ULTIMA_VENDA ;
out1_tmp.PRECO_ULTIMA_VENDA = row3.PRECO_ULTIMA_VENDA ;
out1_tmp.QTD_ULTIMA_VENDA = row3.QTD_ULTIMA_VENDA ;
out1_tmp.DIAS_SEM_VENDA = row3.DIAS_SEM_VENDA ;
out1_tmp.ST = row3.ST ;
out1_tmp.CURVA_ABC = row3.CURVA_ABC ;
out1_tmp.CRITICIDADE = row3.CRITICIDADE ;
out1_tmp.LOCAL_FISICO = row3.LOCAL_FISICO ;
out1_tmp.Curva_qtde = row10.Curva ;
out1 = out1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row15Struct row15 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row15HashKey.CODIGO_ITEM = out1.CD_PRODUTO ;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row15 != null && tHash_Lookup_row15.getCount(row15HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row15' and it contains more one result from keys :  row15.CODIGO_ITEM = '" + row15HashKey.CODIGO_ITEM + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								 
							
							
								if (tHash_Lookup_row15 !=null && tHash_Lookup_row15.hasNext()) { // G 099
								
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							
							
								} // G 099
							
							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

curva2 = null;


// # Output table : 'curva2'
curva2_tmp.CD_PRODUTO = out1.CD_PRODUTO;
curva2_tmp.CD_EMPRESA = out1.CD_EMPRESA;
curva2_tmp.code_curva_emp = out1.code_curva_emp;
curva2_tmp.SALDO_FISICO = out1.SALDO_FISICO;
curva2_tmp.RESERVADO_ORDEM_PRODUCAO = out1.RESERVADO_ORDEM_PRODUCAO;
curva2_tmp.RESERVADO_PEDIDO_VENDA = out1.RESERVADO_PEDIDO_VENDA;
curva2_tmp.RESERVADO_ENDERECAMENTO = out1.RESERVADO_ENDERECAMENTO;
curva2_tmp.RESERVADO_GARANTIA = out1.RESERVADO_GARANTIA;
curva2_tmp.RESERVADO_EXTERNO = out1.RESERVADO_EXTERNO;
curva2_tmp.VL_COMPRA = out1.VL_COMPRA;
curva2_tmp.PRECO_COMPRA = out1.PRECO_COMPRA;
curva2_tmp.VL_CUSTO = out1.VL_CUSTO;
curva2_tmp.TABELA1_PRECO_VENDA = out1.TABELA1_PRECO_VENDA;
curva2_tmp.MARKUP_TABELA1 = out1.MARKUP_TABELA1;
curva2_tmp.TABELA2_PRECO_VENDA = out1.TABELA2_PRECO_VENDA;
curva2_tmp.MARKUP_TABELA2 = out1.MARKUP_TABELA2;
curva2_tmp.TABELA3_PRECO_VENDA = out1.TABELA3_PRECO_VENDA;
curva2_tmp.MARKUP_TABELA3 = out1.MARKUP_TABELA3;
curva2_tmp.TABELA4_PRECO_VENDA = out1.TABELA4_PRECO_VENDA;
curva2_tmp.MARKUP_TABELA4 = out1.MARKUP_TABELA4;
curva2_tmp.TABELA5_PRECO_VENDA = out1.TABELA5_PRECO_VENDA;
curva2_tmp.MARKUP_TABELA5 = out1.MARKUP_TABELA5;
curva2_tmp.TABELA6_PRECO_VENDA = out1.TABELA6_PRECO_VENDA;
curva2_tmp.MARKUP_TABELA6 = out1.MARKUP_TABELA6;
curva2_tmp.TABELA7_PRECO_VENDA = out1.TABELA7_PRECO_VENDA;
curva2_tmp.MARKUP_TABELA7 = out1.MARKUP_TABELA7;
curva2_tmp.ABRANGENCIA_FISCAL = out1.ABRANGENCIA_FISCAL;
curva2_tmp.IMPORTADO = out1.IMPORTADO;
curva2_tmp.DT_ULTIMA_COMPRA = out1.DT_ULTIMA_COMPRA;
curva2_tmp.PRECO_ULTIMA_COMPRA = out1.PRECO_ULTIMA_COMPRA;
curva2_tmp.QTD_ULTIMA_COMPRA = out1.QTD_ULTIMA_COMPRA;
curva2_tmp.PRECO_MEDIO = out1.PRECO_MEDIO ;
curva2_tmp.DT_ULTIMA_VENDA = out1.DT_ULTIMA_VENDA;
curva2_tmp.PRECO_ULTIMA_VENDA = out1.PRECO_ULTIMA_VENDA;
curva2_tmp.QTD_ULTIMA_VENDA = out1.QTD_ULTIMA_VENDA;
curva2_tmp.DIAS_SEM_VENDA = out1.DIAS_SEM_VENDA;
curva2_tmp.ST = out1.ST;
curva2_tmp.CURVA_ABC = out1.CURVA_ABC;
curva2_tmp.CRITICIDADE = out1.CRITICIDADE;
curva2_tmp.LOCAL_FISICO = out1.LOCAL_FISICO;
curva2_tmp.Curva_qtde = out1.Curva_qtde;
curva2_tmp.Curva_vlr = row15.Curva_vlr ;
curva2 = curva2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "curva2"
if(curva2 != null) { 



	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"curva2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
						row22Struct row22 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row22" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow22 = false;
       		  	    	
       		  	    	
 							row22Struct row22ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_9) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_9 = false;
								
                        		    		    row22HashKey.CODIGO_ITEM = curva2.CD_PRODUTO ;
                        		    		
                        		    		    row22HashKey.code_curva_emp = curva2.code_curva_emp;
                        		    		

								
		                        	row22HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row22.lookup( row22HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row22 != null && tHash_Lookup_row22.getCount(row22HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row22' and it contains more one result from keys :  row22.CODIGO_ITEM = '" + row22HashKey.CODIGO_ITEM + "', row22.code_curva_emp = '" + row22HashKey.code_curva_emp + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row22Struct fromLookup_row22 = null;
							row22 = row22Default;
										 
							
								 
							
							
								if (tHash_Lookup_row22 !=null && tHash_Lookup_row22.hasNext()) { // G 099
								
							
								
								fromLookup_row22 = tHash_Lookup_row22.next();

							
							
								} // G 099
							
							

							if(fromLookup_row22 != null) {
								row22 = fromLookup_row22;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

Curva3 = null;


// # Output table : 'Curva3'
Curva3_tmp.CD_PRODUTO = curva2.CD_PRODUTO;
Curva3_tmp.CD_EMPRESA = curva2.CD_EMPRESA;
Curva3_tmp.code_curva_emp = curva2.code_curva_emp;
Curva3_tmp.SALDO_FISICO = curva2.SALDO_FISICO;
Curva3_tmp.RESERVADO_ORDEM_PRODUCAO = curva2.RESERVADO_ORDEM_PRODUCAO;
Curva3_tmp.RESERVADO_PEDIDO_VENDA = curva2.RESERVADO_PEDIDO_VENDA;
Curva3_tmp.RESERVADO_ENDERECAMENTO = curva2.RESERVADO_ENDERECAMENTO;
Curva3_tmp.RESERVADO_GARANTIA = curva2.RESERVADO_GARANTIA;
Curva3_tmp.RESERVADO_EXTERNO = curva2.RESERVADO_EXTERNO;
Curva3_tmp.VL_COMPRA = curva2.VL_COMPRA;
Curva3_tmp.PRECO_COMPRA = curva2.PRECO_COMPRA;
Curva3_tmp.VL_CUSTO = curva2.VL_CUSTO;
Curva3_tmp.TABELA1_PRECO_VENDA = curva2.TABELA1_PRECO_VENDA;
Curva3_tmp.MARKUP_TABELA1 = curva2.MARKUP_TABELA1;
Curva3_tmp.TABELA2_PRECO_VENDA = curva2.TABELA2_PRECO_VENDA;
Curva3_tmp.MARKUP_TABELA2 = curva2.MARKUP_TABELA2;
Curva3_tmp.TABELA3_PRECO_VENDA = curva2.TABELA3_PRECO_VENDA;
Curva3_tmp.MARKUP_TABELA3 = curva2.MARKUP_TABELA3;
Curva3_tmp.TABELA4_PRECO_VENDA = curva2.TABELA4_PRECO_VENDA;
Curva3_tmp.MARKUP_TABELA4 = curva2.MARKUP_TABELA4;
Curva3_tmp.TABELA5_PRECO_VENDA = curva2.TABELA5_PRECO_VENDA;
Curva3_tmp.MARKUP_TABELA5 = curva2.MARKUP_TABELA5;
Curva3_tmp.TABELA6_PRECO_VENDA = curva2.TABELA6_PRECO_VENDA;
Curva3_tmp.MARKUP_TABELA6 = curva2.MARKUP_TABELA6;
Curva3_tmp.TABELA7_PRECO_VENDA = curva2.TABELA7_PRECO_VENDA;
Curva3_tmp.MARKUP_TABELA7 = curva2.MARKUP_TABELA7;
Curva3_tmp.ABRANGENCIA_FISCAL = curva2.ABRANGENCIA_FISCAL;
Curva3_tmp.IMPORTADO = curva2.IMPORTADO;
Curva3_tmp.DT_ULTIMA_COMPRA = curva2.DT_ULTIMA_COMPRA;
Curva3_tmp.PRECO_ULTIMA_COMPRA = curva2.PRECO_ULTIMA_COMPRA;
Curva3_tmp.QTD_ULTIMA_COMPRA = curva2.QTD_ULTIMA_COMPRA;
Curva3_tmp.PRECO_MEDIO = curva2.PRECO_MEDIO;
Curva3_tmp.DT_ULTIMA_VENDA = curva2.DT_ULTIMA_VENDA;
Curva3_tmp.PRECO_ULTIMA_VENDA = curva2.PRECO_ULTIMA_VENDA;
Curva3_tmp.QTD_ULTIMA_VENDA = curva2.QTD_ULTIMA_VENDA;
Curva3_tmp.DIAS_SEM_VENDA = curva2.DIAS_SEM_VENDA;
Curva3_tmp.ST = curva2.ST;
Curva3_tmp.CURVA_ABC = curva2.CURVA_ABC;
Curva3_tmp.CRITICIDADE = curva2.CRITICIDADE;
Curva3_tmp.LOCAL_FISICO = curva2.LOCAL_FISICO;
Curva3_tmp.Curva_qtde = curva2.Curva_qtde;
Curva3_tmp.Curva_vlr = curva2.Curva_vlr;
Curva3_tmp.agp_curva_emp = row22.Curva_vlr_Agr ;
Curva3 = Curva3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "Curva3"
if(Curva3 != null) { 



	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Curva3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
						row23Struct row23 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row23" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow23 = false;
       		  	    	
       		  	    	
 							row23Struct row23ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row23HashKey.CODIGO_ITEM = Curva3.CD_PRODUTO ;
                        		    		
                        		    		    row23HashKey.EMPRESA = Curva3.CD_EMPRESA ;
                        		    		

								
		                        	row23HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row23.lookup( row23HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row23.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow23 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow23 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row23 != null && tHash_Lookup_row23.hasNext()) || forceLooprow23) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row23'
									
                    		  	 
							   
                    		  	 
	       		  	    	row23Struct fromLookup_row23 = null;
							row23 = row23Default;
										 
							
								
								if(!forceLooprow23) { // G 46
								
							
								 
							
								
								fromLookup_row23 = tHash_Lookup_row23.next();

							

							if(fromLookup_row23 != null) {
								row23 = fromLookup_row23;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow23 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

Status = null;


// # Output table : 'Status'
Status_tmp.CD_PRODUTO = Curva3.CD_PRODUTO;
Status_tmp.CD_EMPRESA = Curva3.CD_EMPRESA;
Status_tmp.code_curva_emp = Curva3.code_curva_emp;
Status_tmp.SALDO_FISICO = Curva3.SALDO_FISICO;
Status_tmp.RESERVADO_ORDEM_PRODUCAO = Curva3.RESERVADO_ORDEM_PRODUCAO;
Status_tmp.RESERVADO_PEDIDO_VENDA = Curva3.RESERVADO_PEDIDO_VENDA;
Status_tmp.RESERVADO_ENDERECAMENTO = Curva3.RESERVADO_ENDERECAMENTO;
Status_tmp.RESERVADO_GARANTIA = Curva3.RESERVADO_GARANTIA;
Status_tmp.RESERVADO_EXTERNO = Curva3.RESERVADO_EXTERNO;
Status_tmp.VL_COMPRA = Curva3.VL_COMPRA;
Status_tmp.PRECO_COMPRA = Curva3.PRECO_COMPRA;
Status_tmp.VL_CUSTO = Curva3.VL_CUSTO;
Status_tmp.TABELA1_PRECO_VENDA = Curva3.TABELA1_PRECO_VENDA;
Status_tmp.MARKUP_TABELA1 = Curva3.MARKUP_TABELA1;
Status_tmp.TABELA2_PRECO_VENDA = Curva3.TABELA2_PRECO_VENDA;
Status_tmp.MARKUP_TABELA2 = Curva3.MARKUP_TABELA2;
Status_tmp.TABELA3_PRECO_VENDA = Curva3.TABELA3_PRECO_VENDA;
Status_tmp.MARKUP_TABELA3 = Curva3.MARKUP_TABELA3;
Status_tmp.TABELA4_PRECO_VENDA = Curva3.TABELA4_PRECO_VENDA;
Status_tmp.MARKUP_TABELA4 = Curva3.MARKUP_TABELA4;
Status_tmp.TABELA5_PRECO_VENDA = Curva3.TABELA5_PRECO_VENDA;
Status_tmp.MARKUP_TABELA5 = Curva3.MARKUP_TABELA5;
Status_tmp.TABELA6_PRECO_VENDA = Curva3.TABELA6_PRECO_VENDA;
Status_tmp.MARKUP_TABELA6 = Curva3.MARKUP_TABELA6;
Status_tmp.TABELA7_PRECO_VENDA = Curva3.TABELA7_PRECO_VENDA;
Status_tmp.MARKUP_TABELA7 = Curva3.MARKUP_TABELA7;
Status_tmp.ABRANGENCIA_FISCAL = Curva3.ABRANGENCIA_FISCAL;
Status_tmp.IMPORTADO = Curva3.IMPORTADO;
Status_tmp.DT_ULTIMA_COMPRA = Curva3.DT_ULTIMA_COMPRA;
Status_tmp.PRECO_ULTIMA_COMPRA = Curva3.PRECO_ULTIMA_COMPRA;
Status_tmp.QTD_ULTIMA_COMPRA = Curva3.QTD_ULTIMA_COMPRA;
Status_tmp.PRECO_MEDIO = Curva3.PRECO_MEDIO;
Status_tmp.DT_ULTIMA_VENDA = Curva3.DT_ULTIMA_VENDA;
Status_tmp.PRECO_ULTIMA_VENDA = Curva3.PRECO_ULTIMA_VENDA;
Status_tmp.QTD_ULTIMA_VENDA = Curva3.QTD_ULTIMA_VENDA;
Status_tmp.DIAS_SEM_VENDA = Curva3.DIAS_SEM_VENDA;
Status_tmp.ST = Curva3.ST;
Status_tmp.CURVA_ABC = Curva3.CURVA_ABC;
Status_tmp.CRITICIDADE = Curva3.CRITICIDADE;
Status_tmp.LOCAL_FISICO = Curva3.LOCAL_FISICO;
Status_tmp.Curva_qtde = Curva3.Curva_qtde;
Status_tmp.Curva_vlr = Curva3.Curva_vlr;
Status_tmp.agp_curva_emp = Curva3.agp_curva_emp;
Status_tmp.STATUS = row23.STATUS ;
Status = Status_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "Status"
if(Status != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"Status"
						
						);
					}
					



    
		StatusStruct oneRow_tHashOutput_2 = new StatusStruct();
				
					oneRow_tHashOutput_2.CD_PRODUTO = Status.CD_PRODUTO;
					oneRow_tHashOutput_2.CD_EMPRESA = Status.CD_EMPRESA;
					oneRow_tHashOutput_2.code_curva_emp = Status.code_curva_emp;
					oneRow_tHashOutput_2.SALDO_FISICO = Status.SALDO_FISICO;
					oneRow_tHashOutput_2.RESERVADO_ORDEM_PRODUCAO = Status.RESERVADO_ORDEM_PRODUCAO;
					oneRow_tHashOutput_2.RESERVADO_PEDIDO_VENDA = Status.RESERVADO_PEDIDO_VENDA;
					oneRow_tHashOutput_2.RESERVADO_ENDERECAMENTO = Status.RESERVADO_ENDERECAMENTO;
					oneRow_tHashOutput_2.RESERVADO_GARANTIA = Status.RESERVADO_GARANTIA;
					oneRow_tHashOutput_2.RESERVADO_EXTERNO = Status.RESERVADO_EXTERNO;
					oneRow_tHashOutput_2.VL_COMPRA = Status.VL_COMPRA;
					oneRow_tHashOutput_2.PRECO_COMPRA = Status.PRECO_COMPRA;
					oneRow_tHashOutput_2.VL_CUSTO = Status.VL_CUSTO;
					oneRow_tHashOutput_2.TABELA1_PRECO_VENDA = Status.TABELA1_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA1 = Status.MARKUP_TABELA1;
					oneRow_tHashOutput_2.TABELA2_PRECO_VENDA = Status.TABELA2_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA2 = Status.MARKUP_TABELA2;
					oneRow_tHashOutput_2.TABELA3_PRECO_VENDA = Status.TABELA3_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA3 = Status.MARKUP_TABELA3;
					oneRow_tHashOutput_2.TABELA4_PRECO_VENDA = Status.TABELA4_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA4 = Status.MARKUP_TABELA4;
					oneRow_tHashOutput_2.TABELA5_PRECO_VENDA = Status.TABELA5_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA5 = Status.MARKUP_TABELA5;
					oneRow_tHashOutput_2.TABELA6_PRECO_VENDA = Status.TABELA6_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA6 = Status.MARKUP_TABELA6;
					oneRow_tHashOutput_2.TABELA7_PRECO_VENDA = Status.TABELA7_PRECO_VENDA;
					oneRow_tHashOutput_2.MARKUP_TABELA7 = Status.MARKUP_TABELA7;
					oneRow_tHashOutput_2.ABRANGENCIA_FISCAL = Status.ABRANGENCIA_FISCAL;
					oneRow_tHashOutput_2.IMPORTADO = Status.IMPORTADO;
					oneRow_tHashOutput_2.DT_ULTIMA_COMPRA = Status.DT_ULTIMA_COMPRA;
					oneRow_tHashOutput_2.PRECO_ULTIMA_COMPRA = Status.PRECO_ULTIMA_COMPRA;
					oneRow_tHashOutput_2.QTD_ULTIMA_COMPRA = Status.QTD_ULTIMA_COMPRA;
					oneRow_tHashOutput_2.PRECO_MEDIO = Status.PRECO_MEDIO;
					oneRow_tHashOutput_2.DT_ULTIMA_VENDA = Status.DT_ULTIMA_VENDA;
					oneRow_tHashOutput_2.PRECO_ULTIMA_VENDA = Status.PRECO_ULTIMA_VENDA;
					oneRow_tHashOutput_2.QTD_ULTIMA_VENDA = Status.QTD_ULTIMA_VENDA;
					oneRow_tHashOutput_2.DIAS_SEM_VENDA = Status.DIAS_SEM_VENDA;
					oneRow_tHashOutput_2.ST = Status.ST;
					oneRow_tHashOutput_2.CURVA_ABC = Status.CURVA_ABC;
					oneRow_tHashOutput_2.CRITICIDADE = Status.CRITICIDADE;
					oneRow_tHashOutput_2.LOCAL_FISICO = Status.LOCAL_FISICO;
					oneRow_tHashOutput_2.Curva_qtde = Status.Curva_qtde;
					oneRow_tHashOutput_2.Curva_vlr = Status.Curva_vlr;
					oneRow_tHashOutput_2.agp_curva_emp = Status.agp_curva_emp;
					oneRow_tHashOutput_2.STATUS = Status.STATUS;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "Status"



	
		} // close loop of lookup 'row23' // G_TM_M_043
	
	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */

} // End of branch "Curva3"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */

} // End of branch "curva2"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */

} // End of branch "row3"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);

 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row10 != null) {
						tHash_Lookup_row10.endGet();
					}
					globalMap.remove( "tHash_Lookup_row10" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row22 != null) {
						tHash_Lookup_row22.endGet();
					}
					globalMap.remove( "tHash_Lookup_row22" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"curva2");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row23 != null) {
						tHash_Lookup_row23.endGet();
					}
					globalMap.remove( "tHash_Lookup_row23" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Curva3");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Status");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tJava_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row23"); 
				     			
					     			//free memory for "tMap_9"
					     			globalMap.remove("tHash_Lookup_row22"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
					     			//free memory for "tMap_1"
					     			globalMap.remove("tHash_Lookup_row10"); 
				     			
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_5", false);
		start_Hash.put("tJava_5", System.currentTimeMillis());
		
	
	currentComponent="tJava_5";
	
	
		int tos_count_tJava_5 = 0;
		


System.out.println("Iniciado insert stg_produto_empresa no DW em: "+TalendDate.getCurrentDate());



 



/**
 * [tJava_5 begin ] stop
 */
	
	/**
	 * [tJava_5 main ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 


	tos_count_tJava_5++;

/**
 * [tJava_5 main ] stop
 */
	
	/**
	 * [tJava_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_begin ] stop
 */
	
	/**
	 * [tJava_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 process_data_end ] stop
 */
	
	/**
	 * [tJava_5 end ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 

ok_Hash.put("tJava_5", true);
end_Hash.put("tJava_5", System.currentTimeMillis());




/**
 * [tJava_5 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk22", 0, "ok");
								} 
							
							tHashInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_5 finally ] start
	 */

	

	
	
	currentComponent="tJava_5";
	
	

 



/**
 * [tJava_5 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_5_SUBPROCESS_STATE", 1);
	}
	


public static class insertStruct implements routines.system.IPersistableRow<insertStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public java.util.Date DATA_EXECUCAO;

				public java.util.Date getDATA_EXECUCAO () {
					return this.DATA_EXECUCAO;
				}

				public Boolean DATA_EXECUCAOIsNullable(){
				    return true;
				}
				public Boolean DATA_EXECUCAOIsKey(){
				    return false;
				}
				public Integer DATA_EXECUCAOLength(){
				    return null;
				}
				public Integer DATA_EXECUCAOPrecision(){
				    return null;
				}
				public String DATA_EXECUCAODefault(){
				
					return null;
				
				}
				public String DATA_EXECUCAOComment(){
				
				    return "";
				
				}
				public String DATA_EXECUCAOPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String DATA_EXECUCAOOriginalDbColumnName(){
				
					return "DATA_EXECUCAO";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.CD_EMPRESA == null) ? 0 : this.CD_EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final insertStruct other = (insertStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.CD_EMPRESA == null) {
							if (other.CD_EMPRESA != null)
								return false;
						
						} else if (!this.CD_EMPRESA.equals(other.CD_EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(insertStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.CD_EMPRESA = this.CD_EMPRESA;
	            other.SALDO_FISICO = this.SALDO_FISICO;
	            other.RESERVADO_ORDEM_PRODUCAO = this.RESERVADO_ORDEM_PRODUCAO;
	            other.RESERVADO_PEDIDO_VENDA = this.RESERVADO_PEDIDO_VENDA;
	            other.RESERVADO_ENDERECAMENTO = this.RESERVADO_ENDERECAMENTO;
	            other.RESERVADO_GARANTIA = this.RESERVADO_GARANTIA;
	            other.RESERVADO_EXTERNO = this.RESERVADO_EXTERNO;
	            other.VL_COMPRA = this.VL_COMPRA;
	            other.PRECO_COMPRA = this.PRECO_COMPRA;
	            other.VL_CUSTO = this.VL_CUSTO;
	            other.TABELA1_PRECO_VENDA = this.TABELA1_PRECO_VENDA;
	            other.MARKUP_TABELA1 = this.MARKUP_TABELA1;
	            other.TABELA2_PRECO_VENDA = this.TABELA2_PRECO_VENDA;
	            other.MARKUP_TABELA2 = this.MARKUP_TABELA2;
	            other.TABELA3_PRECO_VENDA = this.TABELA3_PRECO_VENDA;
	            other.MARKUP_TABELA3 = this.MARKUP_TABELA3;
	            other.TABELA4_PRECO_VENDA = this.TABELA4_PRECO_VENDA;
	            other.MARKUP_TABELA4 = this.MARKUP_TABELA4;
	            other.TABELA5_PRECO_VENDA = this.TABELA5_PRECO_VENDA;
	            other.MARKUP_TABELA5 = this.MARKUP_TABELA5;
	            other.TABELA6_PRECO_VENDA = this.TABELA6_PRECO_VENDA;
	            other.MARKUP_TABELA6 = this.MARKUP_TABELA6;
	            other.TABELA7_PRECO_VENDA = this.TABELA7_PRECO_VENDA;
	            other.MARKUP_TABELA7 = this.MARKUP_TABELA7;
	            other.ABRANGENCIA_FISCAL = this.ABRANGENCIA_FISCAL;
	            other.IMPORTADO = this.IMPORTADO;
	            other.DT_ULTIMA_COMPRA = this.DT_ULTIMA_COMPRA;
	            other.PRECO_ULTIMA_COMPRA = this.PRECO_ULTIMA_COMPRA;
	            other.QTD_ULTIMA_COMPRA = this.QTD_ULTIMA_COMPRA;
	            other.PRECO_MEDIO = this.PRECO_MEDIO;
	            other.DT_ULTIMA_VENDA = this.DT_ULTIMA_VENDA;
	            other.PRECO_ULTIMA_VENDA = this.PRECO_ULTIMA_VENDA;
	            other.QTD_ULTIMA_VENDA = this.QTD_ULTIMA_VENDA;
	            other.DIAS_SEM_VENDA = this.DIAS_SEM_VENDA;
	            other.ST = this.ST;
	            other.CURVA_ABC = this.CURVA_ABC;
	            other.CRITICIDADE = this.CRITICIDADE;
	            other.LOCAL_FISICO = this.LOCAL_FISICO;
	            other.Curva_qtde = this.Curva_qtde;
	            other.Curva_vlr = this.Curva_vlr;
	            other.DATA_EXECUCAO = this.DATA_EXECUCAO;
	            other.code_curva_emp = this.code_curva_emp;
	            other.agp_curva_emp = this.agp_curva_emp;
	            other.STATUS = this.STATUS;
	            
	}

	public void copyKeysDataTo(insertStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.CD_EMPRESA = this.CD_EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.DATA_EXECUCAO = readDate(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.DATA_EXECUCAO,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",DATA_EXECUCAO="+String.valueOf(DATA_EXECUCAO));
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",agp_curva_emp="+agp_curva_emp);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insertStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.CD_EMPRESA, other.CD_EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String CD_EMPRESA;

				public String getCD_EMPRESA () {
					return this.CD_EMPRESA;
				}

				public Boolean CD_EMPRESAIsNullable(){
				    return true;
				}
				public Boolean CD_EMPRESAIsKey(){
				    return true;
				}
				public Integer CD_EMPRESALength(){
				    return 3;
				}
				public Integer CD_EMPRESAPrecision(){
				    return null;
				}
				public String CD_EMPRESADefault(){
				
					return null;
				
				}
				public String CD_EMPRESAComment(){
				
				    return "";
				
				}
				public String CD_EMPRESAPattern(){
				
					return "";
				
				}
				public String CD_EMPRESAOriginalDbColumnName(){
				
					return "CD_EMPRESA";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public BigDecimal SALDO_FISICO;

				public BigDecimal getSALDO_FISICO () {
					return this.SALDO_FISICO;
				}

				public Boolean SALDO_FISICOIsNullable(){
				    return true;
				}
				public Boolean SALDO_FISICOIsKey(){
				    return false;
				}
				public Integer SALDO_FISICOLength(){
				    return 12;
				}
				public Integer SALDO_FISICOPrecision(){
				    return 2;
				}
				public String SALDO_FISICODefault(){
				
					return null;
				
				}
				public String SALDO_FISICOComment(){
				
				    return "";
				
				}
				public String SALDO_FISICOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String SALDO_FISICOOriginalDbColumnName(){
				
					return "SALDO_FISICO";
				
				}

				
			    public BigDecimal RESERVADO_ORDEM_PRODUCAO;

				public BigDecimal getRESERVADO_ORDEM_PRODUCAO () {
					return this.RESERVADO_ORDEM_PRODUCAO;
				}

				public Boolean RESERVADO_ORDEM_PRODUCAOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ORDEM_PRODUCAOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOLength(){
				    return 12;
				}
				public Integer RESERVADO_ORDEM_PRODUCAOPrecision(){
				    return 2;
				}
				public String RESERVADO_ORDEM_PRODUCAODefault(){
				
					return null;
				
				}
				public String RESERVADO_ORDEM_PRODUCAOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String RESERVADO_ORDEM_PRODUCAOOriginalDbColumnName(){
				
					return "RESERVADO_ORDEM_PRODUCAO";
				
				}

				
			    public BigDecimal RESERVADO_PEDIDO_VENDA;

				public BigDecimal getRESERVADO_PEDIDO_VENDA () {
					return this.RESERVADO_PEDIDO_VENDA;
				}

				public Boolean RESERVADO_PEDIDO_VENDAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_PEDIDO_VENDAIsKey(){
				    return false;
				}
				public Integer RESERVADO_PEDIDO_VENDALength(){
				    return 12;
				}
				public Integer RESERVADO_PEDIDO_VENDAPrecision(){
				    return 2;
				}
				public String RESERVADO_PEDIDO_VENDADefault(){
				
					return null;
				
				}
				public String RESERVADO_PEDIDO_VENDAComment(){
				
				    return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAPattern(){
				
					return "";
				
				}
				public String RESERVADO_PEDIDO_VENDAOriginalDbColumnName(){
				
					return "RESERVADO_PEDIDO_VENDA";
				
				}

				
			    public BigDecimal RESERVADO_ENDERECAMENTO;

				public BigDecimal getRESERVADO_ENDERECAMENTO () {
					return this.RESERVADO_ENDERECAMENTO;
				}

				public Boolean RESERVADO_ENDERECAMENTOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_ENDERECAMENTOIsKey(){
				    return false;
				}
				public Integer RESERVADO_ENDERECAMENTOLength(){
				    return 12;
				}
				public Integer RESERVADO_ENDERECAMENTOPrecision(){
				    return 2;
				}
				public String RESERVADO_ENDERECAMENTODefault(){
				
					return null;
				
				}
				public String RESERVADO_ENDERECAMENTOComment(){
				
				    return "";
				
				}
				public String RESERVADO_ENDERECAMENTOPattern(){
				
					return "";
				
				}
				public String RESERVADO_ENDERECAMENTOOriginalDbColumnName(){
				
					return "RESERVADO_ENDERECAMENTO";
				
				}

				
			    public BigDecimal RESERVADO_GARANTIA;

				public BigDecimal getRESERVADO_GARANTIA () {
					return this.RESERVADO_GARANTIA;
				}

				public Boolean RESERVADO_GARANTIAIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_GARANTIAIsKey(){
				    return false;
				}
				public Integer RESERVADO_GARANTIALength(){
				    return 12;
				}
				public Integer RESERVADO_GARANTIAPrecision(){
				    return 2;
				}
				public String RESERVADO_GARANTIADefault(){
				
					return null;
				
				}
				public String RESERVADO_GARANTIAComment(){
				
				    return "";
				
				}
				public String RESERVADO_GARANTIAPattern(){
				
					return "";
				
				}
				public String RESERVADO_GARANTIAOriginalDbColumnName(){
				
					return "RESERVADO_GARANTIA";
				
				}

				
			    public BigDecimal RESERVADO_EXTERNO;

				public BigDecimal getRESERVADO_EXTERNO () {
					return this.RESERVADO_EXTERNO;
				}

				public Boolean RESERVADO_EXTERNOIsNullable(){
				    return true;
				}
				public Boolean RESERVADO_EXTERNOIsKey(){
				    return false;
				}
				public Integer RESERVADO_EXTERNOLength(){
				    return 12;
				}
				public Integer RESERVADO_EXTERNOPrecision(){
				    return 2;
				}
				public String RESERVADO_EXTERNODefault(){
				
					return null;
				
				}
				public String RESERVADO_EXTERNOComment(){
				
				    return "";
				
				}
				public String RESERVADO_EXTERNOPattern(){
				
					return "";
				
				}
				public String RESERVADO_EXTERNOOriginalDbColumnName(){
				
					return "RESERVADO_EXTERNO";
				
				}

				
			    public BigDecimal VL_COMPRA;

				public BigDecimal getVL_COMPRA () {
					return this.VL_COMPRA;
				}

				public Boolean VL_COMPRAIsNullable(){
				    return true;
				}
				public Boolean VL_COMPRAIsKey(){
				    return false;
				}
				public Integer VL_COMPRALength(){
				    return 12;
				}
				public Integer VL_COMPRAPrecision(){
				    return 4;
				}
				public String VL_COMPRADefault(){
				
					return null;
				
				}
				public String VL_COMPRAComment(){
				
				    return "";
				
				}
				public String VL_COMPRAPattern(){
				
					return "";
				
				}
				public String VL_COMPRAOriginalDbColumnName(){
				
					return "VL_COMPRA";
				
				}

				
			    public BigDecimal PRECO_COMPRA;

				public BigDecimal getPRECO_COMPRA () {
					return this.PRECO_COMPRA;
				}

				public Boolean PRECO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_COMPRAOriginalDbColumnName(){
				
					return "PRECO_COMPRA";
				
				}

				
			    public BigDecimal VL_CUSTO;

				public BigDecimal getVL_CUSTO () {
					return this.VL_CUSTO;
				}

				public Boolean VL_CUSTOIsNullable(){
				    return true;
				}
				public Boolean VL_CUSTOIsKey(){
				    return false;
				}
				public Integer VL_CUSTOLength(){
				    return 12;
				}
				public Integer VL_CUSTOPrecision(){
				    return 4;
				}
				public String VL_CUSTODefault(){
				
					return null;
				
				}
				public String VL_CUSTOComment(){
				
				    return "";
				
				}
				public String VL_CUSTOPattern(){
				
					return "";
				
				}
				public String VL_CUSTOOriginalDbColumnName(){
				
					return "VL_CUSTO";
				
				}

				
			    public BigDecimal TABELA1_PRECO_VENDA;

				public BigDecimal getTABELA1_PRECO_VENDA () {
					return this.TABELA1_PRECO_VENDA;
				}

				public Boolean TABELA1_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA1_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA1_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA1_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA1_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA1_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA1_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA1_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA1_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA1;

				public BigDecimal getMARKUP_TABELA1 () {
					return this.MARKUP_TABELA1;
				}

				public Boolean MARKUP_TABELA1IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA1IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA1Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA1Precision(){
				    return 2;
				}
				public String MARKUP_TABELA1Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA1Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA1Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA1OriginalDbColumnName(){
				
					return "MARKUP_TABELA1";
				
				}

				
			    public BigDecimal TABELA2_PRECO_VENDA;

				public BigDecimal getTABELA2_PRECO_VENDA () {
					return this.TABELA2_PRECO_VENDA;
				}

				public Boolean TABELA2_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA2_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA2_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA2_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA2_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA2_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA2_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA2_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA2_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA2;

				public BigDecimal getMARKUP_TABELA2 () {
					return this.MARKUP_TABELA2;
				}

				public Boolean MARKUP_TABELA2IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA2IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA2Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA2Precision(){
				    return 2;
				}
				public String MARKUP_TABELA2Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA2Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA2Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA2OriginalDbColumnName(){
				
					return "MARKUP_TABELA2";
				
				}

				
			    public BigDecimal TABELA3_PRECO_VENDA;

				public BigDecimal getTABELA3_PRECO_VENDA () {
					return this.TABELA3_PRECO_VENDA;
				}

				public Boolean TABELA3_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA3_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA3_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA3_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA3_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA3_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA3_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA3_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA3_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA3;

				public BigDecimal getMARKUP_TABELA3 () {
					return this.MARKUP_TABELA3;
				}

				public Boolean MARKUP_TABELA3IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA3IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA3Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA3Precision(){
				    return 2;
				}
				public String MARKUP_TABELA3Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA3Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA3Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA3OriginalDbColumnName(){
				
					return "MARKUP_TABELA3";
				
				}

				
			    public BigDecimal TABELA4_PRECO_VENDA;

				public BigDecimal getTABELA4_PRECO_VENDA () {
					return this.TABELA4_PRECO_VENDA;
				}

				public Boolean TABELA4_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA4_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA4_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA4_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA4_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA4_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA4_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA4_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA4_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA4;

				public BigDecimal getMARKUP_TABELA4 () {
					return this.MARKUP_TABELA4;
				}

				public Boolean MARKUP_TABELA4IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA4IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA4Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA4Precision(){
				    return 2;
				}
				public String MARKUP_TABELA4Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA4Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA4Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA4OriginalDbColumnName(){
				
					return "MARKUP_TABELA4";
				
				}

				
			    public BigDecimal TABELA5_PRECO_VENDA;

				public BigDecimal getTABELA5_PRECO_VENDA () {
					return this.TABELA5_PRECO_VENDA;
				}

				public Boolean TABELA5_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA5_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA5_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA5_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA5_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA5_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA5_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA5_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA5_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA5;

				public BigDecimal getMARKUP_TABELA5 () {
					return this.MARKUP_TABELA5;
				}

				public Boolean MARKUP_TABELA5IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA5IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA5Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA5Precision(){
				    return 2;
				}
				public String MARKUP_TABELA5Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA5Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA5Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA5OriginalDbColumnName(){
				
					return "MARKUP_TABELA5";
				
				}

				
			    public BigDecimal TABELA6_PRECO_VENDA;

				public BigDecimal getTABELA6_PRECO_VENDA () {
					return this.TABELA6_PRECO_VENDA;
				}

				public Boolean TABELA6_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA6_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA6_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA6_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA6_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA6_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA6_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA6_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA6_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA6;

				public BigDecimal getMARKUP_TABELA6 () {
					return this.MARKUP_TABELA6;
				}

				public Boolean MARKUP_TABELA6IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA6IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA6Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA6Precision(){
				    return 2;
				}
				public String MARKUP_TABELA6Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA6Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA6Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA6OriginalDbColumnName(){
				
					return "MARKUP_TABELA6";
				
				}

				
			    public BigDecimal TABELA7_PRECO_VENDA;

				public BigDecimal getTABELA7_PRECO_VENDA () {
					return this.TABELA7_PRECO_VENDA;
				}

				public Boolean TABELA7_PRECO_VENDAIsNullable(){
				    return true;
				}
				public Boolean TABELA7_PRECO_VENDAIsKey(){
				    return false;
				}
				public Integer TABELA7_PRECO_VENDALength(){
				    return 12;
				}
				public Integer TABELA7_PRECO_VENDAPrecision(){
				    return 4;
				}
				public String TABELA7_PRECO_VENDADefault(){
				
					return null;
				
				}
				public String TABELA7_PRECO_VENDAComment(){
				
				    return "";
				
				}
				public String TABELA7_PRECO_VENDAPattern(){
				
					return "";
				
				}
				public String TABELA7_PRECO_VENDAOriginalDbColumnName(){
				
					return "TABELA7_PRECO_VENDA";
				
				}

				
			    public BigDecimal MARKUP_TABELA7;

				public BigDecimal getMARKUP_TABELA7 () {
					return this.MARKUP_TABELA7;
				}

				public Boolean MARKUP_TABELA7IsNullable(){
				    return true;
				}
				public Boolean MARKUP_TABELA7IsKey(){
				    return false;
				}
				public Integer MARKUP_TABELA7Length(){
				    return 12;
				}
				public Integer MARKUP_TABELA7Precision(){
				    return 2;
				}
				public String MARKUP_TABELA7Default(){
				
					return null;
				
				}
				public String MARKUP_TABELA7Comment(){
				
				    return "";
				
				}
				public String MARKUP_TABELA7Pattern(){
				
					return "";
				
				}
				public String MARKUP_TABELA7OriginalDbColumnName(){
				
					return "MARKUP_TABELA7";
				
				}

				
			    public String ABRANGENCIA_FISCAL;

				public String getABRANGENCIA_FISCAL () {
					return this.ABRANGENCIA_FISCAL;
				}

				public Boolean ABRANGENCIA_FISCALIsNullable(){
				    return true;
				}
				public Boolean ABRANGENCIA_FISCALIsKey(){
				    return false;
				}
				public Integer ABRANGENCIA_FISCALLength(){
				    return 200;
				}
				public Integer ABRANGENCIA_FISCALPrecision(){
				    return null;
				}
				public String ABRANGENCIA_FISCALDefault(){
				
					return null;
				
				}
				public String ABRANGENCIA_FISCALComment(){
				
				    return "";
				
				}
				public String ABRANGENCIA_FISCALPattern(){
				
					return "";
				
				}
				public String ABRANGENCIA_FISCALOriginalDbColumnName(){
				
					return "ABRANGENCIA_FISCAL";
				
				}

				
			    public String IMPORTADO;

				public String getIMPORTADO () {
					return this.IMPORTADO;
				}

				public Boolean IMPORTADOIsNullable(){
				    return true;
				}
				public Boolean IMPORTADOIsKey(){
				    return false;
				}
				public Integer IMPORTADOLength(){
				    return 3;
				}
				public Integer IMPORTADOPrecision(){
				    return null;
				}
				public String IMPORTADODefault(){
				
					return null;
				
				}
				public String IMPORTADOComment(){
				
				    return "";
				
				}
				public String IMPORTADOPattern(){
				
					return "";
				
				}
				public String IMPORTADOOriginalDbColumnName(){
				
					return "IMPORTADO";
				
				}

				
			    public java.util.Date DT_ULTIMA_COMPRA;

				public java.util.Date getDT_ULTIMA_COMPRA () {
					return this.DT_ULTIMA_COMPRA;
				}

				public Boolean DT_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer DT_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_COMPRAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "DT_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_COMPRA;

				public BigDecimal getPRECO_ULTIMA_COMPRA () {
					return this.PRECO_ULTIMA_COMPRA;
				}

				public Boolean PRECO_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_COMPRALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_COMPRAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_COMPRA";
				
				}

				
			    public Integer QTD_ULTIMA_COMPRA;

				public Integer getQTD_ULTIMA_COMPRA () {
					return this.QTD_ULTIMA_COMPRA;
				}

				public Boolean QTD_ULTIMA_COMPRAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_COMPRAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_COMPRALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_COMPRAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_COMPRADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_COMPRAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_COMPRAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_COMPRAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_COMPRA";
				
				}

				
			    public BigDecimal PRECO_MEDIO;

				public BigDecimal getPRECO_MEDIO () {
					return this.PRECO_MEDIO;
				}

				public Boolean PRECO_MEDIOIsNullable(){
				    return true;
				}
				public Boolean PRECO_MEDIOIsKey(){
				    return false;
				}
				public Integer PRECO_MEDIOLength(){
				    return 12;
				}
				public Integer PRECO_MEDIOPrecision(){
				    return 4;
				}
				public String PRECO_MEDIODefault(){
				
					return null;
				
				}
				public String PRECO_MEDIOComment(){
				
				    return "";
				
				}
				public String PRECO_MEDIOPattern(){
				
					return "";
				
				}
				public String PRECO_MEDIOOriginalDbColumnName(){
				
					return "PRECO_MEDIO";
				
				}

				
			    public java.util.Date DT_ULTIMA_VENDA;

				public java.util.Date getDT_ULTIMA_VENDA () {
					return this.DT_ULTIMA_VENDA;
				}

				public Boolean DT_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DT_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DT_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DT_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DT_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DT_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DT_ULTIMA_VENDAPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String DT_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DT_ULTIMA_VENDA";
				
				}

				
			    public BigDecimal PRECO_ULTIMA_VENDA;

				public BigDecimal getPRECO_ULTIMA_VENDA () {
					return this.PRECO_ULTIMA_VENDA;
				}

				public Boolean PRECO_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean PRECO_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer PRECO_ULTIMA_VENDALength(){
				    return 12;
				}
				public Integer PRECO_ULTIMA_VENDAPrecision(){
				    return 4;
				}
				public String PRECO_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String PRECO_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String PRECO_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String PRECO_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "PRECO_ULTIMA_VENDA";
				
				}

				
			    public Integer QTD_ULTIMA_VENDA;

				public Integer getQTD_ULTIMA_VENDA () {
					return this.QTD_ULTIMA_VENDA;
				}

				public Boolean QTD_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QTD_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QTD_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QTD_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QTD_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QTD_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QTD_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QTD_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QTD_ULTIMA_VENDA";
				
				}

				
			    public Integer DIAS_SEM_VENDA;

				public Integer getDIAS_SEM_VENDA () {
					return this.DIAS_SEM_VENDA;
				}

				public Boolean DIAS_SEM_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIAS_SEM_VENDAIsKey(){
				    return false;
				}
				public Integer DIAS_SEM_VENDALength(){
				    return null;
				}
				public Integer DIAS_SEM_VENDAPrecision(){
				    return null;
				}
				public String DIAS_SEM_VENDADefault(){
				
					return null;
				
				}
				public String DIAS_SEM_VENDAComment(){
				
				    return "";
				
				}
				public String DIAS_SEM_VENDAPattern(){
				
					return "";
				
				}
				public String DIAS_SEM_VENDAOriginalDbColumnName(){
				
					return "DIAS_SEM_VENDA";
				
				}

				
			    public Double ST;

				public Double getST () {
					return this.ST;
				}

				public Boolean STIsNullable(){
				    return true;
				}
				public Boolean STIsKey(){
				    return false;
				}
				public Integer STLength(){
				    return null;
				}
				public Integer STPrecision(){
				    return null;
				}
				public String STDefault(){
				
					return null;
				
				}
				public String STComment(){
				
				    return "";
				
				}
				public String STPattern(){
				
					return "";
				
				}
				public String STOriginalDbColumnName(){
				
					return "ST";
				
				}

				
			    public String CURVA_ABC;

				public String getCURVA_ABC () {
					return this.CURVA_ABC;
				}

				public Boolean CURVA_ABCIsNullable(){
				    return true;
				}
				public Boolean CURVA_ABCIsKey(){
				    return false;
				}
				public Integer CURVA_ABCLength(){
				    return 3;
				}
				public Integer CURVA_ABCPrecision(){
				    return null;
				}
				public String CURVA_ABCDefault(){
				
					return null;
				
				}
				public String CURVA_ABCComment(){
				
				    return "";
				
				}
				public String CURVA_ABCPattern(){
				
					return "";
				
				}
				public String CURVA_ABCOriginalDbColumnName(){
				
					return "CURVA_ABC";
				
				}

				
			    public String CRITICIDADE;

				public String getCRITICIDADE () {
					return this.CRITICIDADE;
				}

				public Boolean CRITICIDADEIsNullable(){
				    return true;
				}
				public Boolean CRITICIDADEIsKey(){
				    return false;
				}
				public Integer CRITICIDADELength(){
				    return 3;
				}
				public Integer CRITICIDADEPrecision(){
				    return null;
				}
				public String CRITICIDADEDefault(){
				
					return null;
				
				}
				public String CRITICIDADEComment(){
				
				    return "";
				
				}
				public String CRITICIDADEPattern(){
				
					return "";
				
				}
				public String CRITICIDADEOriginalDbColumnName(){
				
					return "CRITICIDADE";
				
				}

				
			    public String LOCAL_FISICO;

				public String getLOCAL_FISICO () {
					return this.LOCAL_FISICO;
				}

				public Boolean LOCAL_FISICOIsNullable(){
				    return true;
				}
				public Boolean LOCAL_FISICOIsKey(){
				    return false;
				}
				public Integer LOCAL_FISICOLength(){
				    return 20;
				}
				public Integer LOCAL_FISICOPrecision(){
				    return null;
				}
				public String LOCAL_FISICODefault(){
				
					return null;
				
				}
				public String LOCAL_FISICOComment(){
				
				    return "";
				
				}
				public String LOCAL_FISICOPattern(){
				
					return "";
				
				}
				public String LOCAL_FISICOOriginalDbColumnName(){
				
					return "LOCAL_FISICO";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				
			    public String agp_curva_emp;

				public String getAgp_curva_emp () {
					return this.agp_curva_emp;
				}

				public Boolean agp_curva_empIsNullable(){
				    return true;
				}
				public Boolean agp_curva_empIsKey(){
				    return false;
				}
				public Integer agp_curva_empLength(){
				    return null;
				}
				public Integer agp_curva_empPrecision(){
				    return null;
				}
				public String agp_curva_empDefault(){
				
					return null;
				
				}
				public String agp_curva_empComment(){
				
				    return "";
				
				}
				public String agp_curva_empPattern(){
				
					return "";
				
				}
				public String agp_curva_empOriginalDbColumnName(){
				
					return "agp_curva_emp";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.CD_EMPRESA = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
						this.SALDO_FISICO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ORDEM_PRODUCAO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_PEDIDO_VENDA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_ENDERECAMENTO = (BigDecimal) dis.readObject();
					
						this.RESERVADO_GARANTIA = (BigDecimal) dis.readObject();
					
						this.RESERVADO_EXTERNO = (BigDecimal) dis.readObject();
					
						this.VL_COMPRA = (BigDecimal) dis.readObject();
					
						this.PRECO_COMPRA = (BigDecimal) dis.readObject();
					
						this.VL_CUSTO = (BigDecimal) dis.readObject();
					
						this.TABELA1_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA1 = (BigDecimal) dis.readObject();
					
						this.TABELA2_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA2 = (BigDecimal) dis.readObject();
					
						this.TABELA3_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA3 = (BigDecimal) dis.readObject();
					
						this.TABELA4_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA4 = (BigDecimal) dis.readObject();
					
						this.TABELA5_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA5 = (BigDecimal) dis.readObject();
					
						this.TABELA6_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA6 = (BigDecimal) dis.readObject();
					
						this.TABELA7_PRECO_VENDA = (BigDecimal) dis.readObject();
					
						this.MARKUP_TABELA7 = (BigDecimal) dis.readObject();
					
					this.ABRANGENCIA_FISCAL = readString(dis);
					
					this.IMPORTADO = readString(dis);
					
					this.DT_ULTIMA_COMPRA = readDate(dis);
					
						this.PRECO_ULTIMA_COMPRA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_COMPRA = readInteger(dis);
					
						this.PRECO_MEDIO = (BigDecimal) dis.readObject();
					
					this.DT_ULTIMA_VENDA = readDate(dis);
					
						this.PRECO_ULTIMA_VENDA = (BigDecimal) dis.readObject();
					
						this.QTD_ULTIMA_VENDA = readInteger(dis);
					
						this.DIAS_SEM_VENDA = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.ST = null;
           				} else {
           			    	this.ST = dis.readDouble();
           				}
					
					this.CURVA_ABC = readString(dis);
					
					this.CRITICIDADE = readString(dis);
					
					this.LOCAL_FISICO = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
					this.agp_curva_emp = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
       			    	dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.CD_EMPRESA,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.SALDO_FISICO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ORDEM_PRODUCAO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_PEDIDO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_ENDERECAMENTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_GARANTIA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.RESERVADO_EXTERNO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_COMPRA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.VL_CUSTO);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA1_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA1);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA2_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA2);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA3_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA3);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA4_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA4);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA5_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA5);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA6_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA6);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TABELA7_PRECO_VENDA);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.MARKUP_TABELA7);
					
					// String
				
						writeString(this.ABRANGENCIA_FISCAL,dos);
					
					// String
				
						writeString(this.IMPORTADO,dos);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_COMPRA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_COMPRA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_MEDIO);
					
					// java.util.Date
				
						writeDate(this.DT_ULTIMA_VENDA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.PRECO_ULTIMA_VENDA);
					
					// Integer
				
						writeInteger(this.QTD_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.DIAS_SEM_VENDA,dos);
					
					// Double
				
						if(this.ST == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.ST);
		            	}
					
					// String
				
						writeString(this.CURVA_ABC,dos);
					
					// String
				
						writeString(this.CRITICIDADE,dos);
					
					// String
				
						writeString(this.LOCAL_FISICO,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
					// String
				
						writeString(this.agp_curva_emp,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",CD_EMPRESA="+CD_EMPRESA);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",SALDO_FISICO="+String.valueOf(SALDO_FISICO));
		sb.append(",RESERVADO_ORDEM_PRODUCAO="+String.valueOf(RESERVADO_ORDEM_PRODUCAO));
		sb.append(",RESERVADO_PEDIDO_VENDA="+String.valueOf(RESERVADO_PEDIDO_VENDA));
		sb.append(",RESERVADO_ENDERECAMENTO="+String.valueOf(RESERVADO_ENDERECAMENTO));
		sb.append(",RESERVADO_GARANTIA="+String.valueOf(RESERVADO_GARANTIA));
		sb.append(",RESERVADO_EXTERNO="+String.valueOf(RESERVADO_EXTERNO));
		sb.append(",VL_COMPRA="+String.valueOf(VL_COMPRA));
		sb.append(",PRECO_COMPRA="+String.valueOf(PRECO_COMPRA));
		sb.append(",VL_CUSTO="+String.valueOf(VL_CUSTO));
		sb.append(",TABELA1_PRECO_VENDA="+String.valueOf(TABELA1_PRECO_VENDA));
		sb.append(",MARKUP_TABELA1="+String.valueOf(MARKUP_TABELA1));
		sb.append(",TABELA2_PRECO_VENDA="+String.valueOf(TABELA2_PRECO_VENDA));
		sb.append(",MARKUP_TABELA2="+String.valueOf(MARKUP_TABELA2));
		sb.append(",TABELA3_PRECO_VENDA="+String.valueOf(TABELA3_PRECO_VENDA));
		sb.append(",MARKUP_TABELA3="+String.valueOf(MARKUP_TABELA3));
		sb.append(",TABELA4_PRECO_VENDA="+String.valueOf(TABELA4_PRECO_VENDA));
		sb.append(",MARKUP_TABELA4="+String.valueOf(MARKUP_TABELA4));
		sb.append(",TABELA5_PRECO_VENDA="+String.valueOf(TABELA5_PRECO_VENDA));
		sb.append(",MARKUP_TABELA5="+String.valueOf(MARKUP_TABELA5));
		sb.append(",TABELA6_PRECO_VENDA="+String.valueOf(TABELA6_PRECO_VENDA));
		sb.append(",MARKUP_TABELA6="+String.valueOf(MARKUP_TABELA6));
		sb.append(",TABELA7_PRECO_VENDA="+String.valueOf(TABELA7_PRECO_VENDA));
		sb.append(",MARKUP_TABELA7="+String.valueOf(MARKUP_TABELA7));
		sb.append(",ABRANGENCIA_FISCAL="+ABRANGENCIA_FISCAL);
		sb.append(",IMPORTADO="+IMPORTADO);
		sb.append(",DT_ULTIMA_COMPRA="+String.valueOf(DT_ULTIMA_COMPRA));
		sb.append(",PRECO_ULTIMA_COMPRA="+String.valueOf(PRECO_ULTIMA_COMPRA));
		sb.append(",QTD_ULTIMA_COMPRA="+String.valueOf(QTD_ULTIMA_COMPRA));
		sb.append(",PRECO_MEDIO="+String.valueOf(PRECO_MEDIO));
		sb.append(",DT_ULTIMA_VENDA="+String.valueOf(DT_ULTIMA_VENDA));
		sb.append(",PRECO_ULTIMA_VENDA="+String.valueOf(PRECO_ULTIMA_VENDA));
		sb.append(",QTD_ULTIMA_VENDA="+String.valueOf(QTD_ULTIMA_VENDA));
		sb.append(",DIAS_SEM_VENDA="+String.valueOf(DIAS_SEM_VENDA));
		sb.append(",ST="+String.valueOf(ST));
		sb.append(",CURVA_ABC="+CURVA_ABC);
		sb.append(",CRITICIDADE="+CRITICIDADE);
		sb.append(",LOCAL_FISICO="+LOCAL_FISICO);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
		sb.append(",agp_curva_emp="+agp_curva_emp);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
insertStruct insert = new insertStruct();





	
	/**
	 * [tDBOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_4", false);
		start_Hash.put("tDBOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert");
					}
				
		int tos_count_tDBOutput_4 = 0;
		





String dbschema_tDBOutput_4 = null;
	dbschema_tDBOutput_4 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_4 = null;
if(dbschema_tDBOutput_4 == null || dbschema_tDBOutput_4.trim().length() == 0) {
	tableName_tDBOutput_4 = ("stg_t_produto_empresa").toLowerCase();
} else {
	tableName_tDBOutput_4 = dbschema_tDBOutput_4 + "\".\"" + ("stg_t_produto_empresa").toLowerCase();
}


int nb_line_tDBOutput_4 = 0;
int nb_line_update_tDBOutput_4 = 0;
int nb_line_inserted_tDBOutput_4 = 0;
int nb_line_deleted_tDBOutput_4 = 0;
int nb_line_rejected_tDBOutput_4 = 0;

int deletedCount_tDBOutput_4=0;
int updatedCount_tDBOutput_4=0;
int insertedCount_tDBOutput_4=0;
int rowsToCommitCount_tDBOutput_4=0;
int rejectedCount_tDBOutput_4=0;

boolean whetherReject_tDBOutput_4 = false;

java.sql.Connection conn_tDBOutput_4 = null;
String dbUser_tDBOutput_4 = null;

	conn_tDBOutput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	


   int batchSize_tDBOutput_4 = 10000;
   int batchSizeCounter_tDBOutput_4=0;

int count_tDBOutput_4=0;
            int rsTruncCountNumber_tDBOutput_4 = 0;
            try(java.sql.Statement stmtTruncCount_tDBOutput_4 = conn_tDBOutput_4.createStatement()) {
                try (java.sql.ResultSet rsTruncCount_tDBOutput_4 = stmtTruncCount_tDBOutput_4.executeQuery("SELECT COUNT(1) FROM \"" + tableName_tDBOutput_4 + "\"")) {
                    if(rsTruncCount_tDBOutput_4.next()) {
                        rsTruncCountNumber_tDBOutput_4 = rsTruncCount_tDBOutput_4.getInt(1);
                    }
                }
            }
            try (java.sql.Statement stmtTrunc_tDBOutput_4 = conn_tDBOutput_4.createStatement()) {
                stmtTrunc_tDBOutput_4.executeUpdate("TRUNCATE TABLE \"" + tableName_tDBOutput_4 + "\"");
                deletedCount_tDBOutput_4 += rsTruncCountNumber_tDBOutput_4;
            }
        java.lang.StringBuilder sb_tDBOutput_4 = new java.lang.StringBuilder();
        sb_tDBOutput_4.append("INSERT INTO \"").append(tableName_tDBOutput_4).append("\" (\"cd_produto\",\"cd_empresa\",\"saldo_fisico\",\"reservado_ordem_producao\",\"reservado_pedido_venda\",\"reservado_enderecamento\",\"reservado_garantia\",\"reservado_externo\",\"vl_compra\",\"preco_compra\",\"vl_custo\",\"tabela1_preco_venda\",\"markup_tabela1\",\"tabela2_preco_venda\",\"markup_tabela2\",\"tabela3_preco_venda\",\"markup_tabela3\",\"tabela4_preco_venda\",\"markup_tabela4\",\"tabela5_preco_venda\",\"markup_tabela5\",\"tabela6_preco_venda\",\"markup_tabela6\",\"tabela7_preco_venda\",\"markup_tabela7\",\"abrangencia_fiscal\",\"importado\",\"dt_ultima_compra\",\"preco_ultima_compra\",\"qtd_ultima_compra\",\"preco_medio\",\"dt_ultima_venda\",\"preco_ultima_venda\",\"qtd_ultima_venda\",\"dias_sem_venda\",\"st\",\"curva_abc\",\"criticidade\",\"local_fisico\",\"curva_qtde\",\"curva_vlr\",\"data_execucao\",\"code_curva_emp\",\"agp_curva_emp\",\"status\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_4 = sb_tDBOutput_4.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(insert_tDBOutput_4);
	    resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);
	    

 



/**
 * [tDBOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
insertStruct insert_tmp = new insertStruct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<StatusStruct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<StatusStruct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    StatusStruct next_tHashInput_3 = iterator_tHashInput_3.next();

	row2.CD_PRODUTO = next_tHashInput_3.CD_PRODUTO;
	row2.CD_EMPRESA = next_tHashInput_3.CD_EMPRESA;
	row2.code_curva_emp = next_tHashInput_3.code_curva_emp;
	row2.SALDO_FISICO = next_tHashInput_3.SALDO_FISICO;
	row2.RESERVADO_ORDEM_PRODUCAO = next_tHashInput_3.RESERVADO_ORDEM_PRODUCAO;
	row2.RESERVADO_PEDIDO_VENDA = next_tHashInput_3.RESERVADO_PEDIDO_VENDA;
	row2.RESERVADO_ENDERECAMENTO = next_tHashInput_3.RESERVADO_ENDERECAMENTO;
	row2.RESERVADO_GARANTIA = next_tHashInput_3.RESERVADO_GARANTIA;
	row2.RESERVADO_EXTERNO = next_tHashInput_3.RESERVADO_EXTERNO;
	row2.VL_COMPRA = next_tHashInput_3.VL_COMPRA;
	row2.PRECO_COMPRA = next_tHashInput_3.PRECO_COMPRA;
	row2.VL_CUSTO = next_tHashInput_3.VL_CUSTO;
	row2.TABELA1_PRECO_VENDA = next_tHashInput_3.TABELA1_PRECO_VENDA;
	row2.MARKUP_TABELA1 = next_tHashInput_3.MARKUP_TABELA1;
	row2.TABELA2_PRECO_VENDA = next_tHashInput_3.TABELA2_PRECO_VENDA;
	row2.MARKUP_TABELA2 = next_tHashInput_3.MARKUP_TABELA2;
	row2.TABELA3_PRECO_VENDA = next_tHashInput_3.TABELA3_PRECO_VENDA;
	row2.MARKUP_TABELA3 = next_tHashInput_3.MARKUP_TABELA3;
	row2.TABELA4_PRECO_VENDA = next_tHashInput_3.TABELA4_PRECO_VENDA;
	row2.MARKUP_TABELA4 = next_tHashInput_3.MARKUP_TABELA4;
	row2.TABELA5_PRECO_VENDA = next_tHashInput_3.TABELA5_PRECO_VENDA;
	row2.MARKUP_TABELA5 = next_tHashInput_3.MARKUP_TABELA5;
	row2.TABELA6_PRECO_VENDA = next_tHashInput_3.TABELA6_PRECO_VENDA;
	row2.MARKUP_TABELA6 = next_tHashInput_3.MARKUP_TABELA6;
	row2.TABELA7_PRECO_VENDA = next_tHashInput_3.TABELA7_PRECO_VENDA;
	row2.MARKUP_TABELA7 = next_tHashInput_3.MARKUP_TABELA7;
	row2.ABRANGENCIA_FISCAL = next_tHashInput_3.ABRANGENCIA_FISCAL;
	row2.IMPORTADO = next_tHashInput_3.IMPORTADO;
	row2.DT_ULTIMA_COMPRA = next_tHashInput_3.DT_ULTIMA_COMPRA;
	row2.PRECO_ULTIMA_COMPRA = next_tHashInput_3.PRECO_ULTIMA_COMPRA;
	row2.QTD_ULTIMA_COMPRA = next_tHashInput_3.QTD_ULTIMA_COMPRA;
	row2.PRECO_MEDIO = next_tHashInput_3.PRECO_MEDIO;
	row2.DT_ULTIMA_VENDA = next_tHashInput_3.DT_ULTIMA_VENDA;
	row2.PRECO_ULTIMA_VENDA = next_tHashInput_3.PRECO_ULTIMA_VENDA;
	row2.QTD_ULTIMA_VENDA = next_tHashInput_3.QTD_ULTIMA_VENDA;
	row2.DIAS_SEM_VENDA = next_tHashInput_3.DIAS_SEM_VENDA;
	row2.ST = next_tHashInput_3.ST;
	row2.CURVA_ABC = next_tHashInput_3.CURVA_ABC;
	row2.CRITICIDADE = next_tHashInput_3.CRITICIDADE;
	row2.LOCAL_FISICO = next_tHashInput_3.LOCAL_FISICO;
	row2.Curva_qtde = next_tHashInput_3.Curva_qtde;
	row2.Curva_vlr = next_tHashInput_3.Curva_vlr;
	row2.agp_curva_emp = next_tHashInput_3.agp_curva_emp;
	row2.STATUS = next_tHashInput_3.STATUS;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

insert = null;


// # Output table : 'insert'
insert_tmp.CD_PRODUTO = row2.CD_PRODUTO ;
insert_tmp.CD_EMPRESA = row2.CD_EMPRESA ;
insert_tmp.SALDO_FISICO = row2.SALDO_FISICO ;
insert_tmp.RESERVADO_ORDEM_PRODUCAO = row2.RESERVADO_ORDEM_PRODUCAO ;
insert_tmp.RESERVADO_PEDIDO_VENDA = row2.RESERVADO_PEDIDO_VENDA ;
insert_tmp.RESERVADO_ENDERECAMENTO = row2.RESERVADO_ENDERECAMENTO ;
insert_tmp.RESERVADO_GARANTIA = row2.RESERVADO_GARANTIA ;
insert_tmp.RESERVADO_EXTERNO = row2.RESERVADO_EXTERNO ;
insert_tmp.VL_COMPRA = row2.VL_COMPRA ;
insert_tmp.PRECO_COMPRA = row2.PRECO_COMPRA ;
insert_tmp.VL_CUSTO = row2.VL_CUSTO ;
insert_tmp.TABELA1_PRECO_VENDA = row2.TABELA1_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA1 = row2.MARKUP_TABELA1 ;
insert_tmp.TABELA2_PRECO_VENDA = row2.TABELA2_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA2 = row2.MARKUP_TABELA2 ;
insert_tmp.TABELA3_PRECO_VENDA = row2.TABELA3_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA3 = row2.MARKUP_TABELA3 ;
insert_tmp.TABELA4_PRECO_VENDA = row2.TABELA4_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA4 = row2.MARKUP_TABELA4 ;
insert_tmp.TABELA5_PRECO_VENDA = row2.TABELA5_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA5 = row2.MARKUP_TABELA5 ;
insert_tmp.TABELA6_PRECO_VENDA = row2.TABELA6_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA6 = row2.MARKUP_TABELA6 ;
insert_tmp.TABELA7_PRECO_VENDA = row2.TABELA7_PRECO_VENDA ;
insert_tmp.MARKUP_TABELA7 = row2.MARKUP_TABELA7 ;
insert_tmp.ABRANGENCIA_FISCAL = row2.ABRANGENCIA_FISCAL ;
insert_tmp.IMPORTADO = row2.IMPORTADO ;
insert_tmp.DT_ULTIMA_COMPRA = row2.DT_ULTIMA_COMPRA ;
insert_tmp.PRECO_ULTIMA_COMPRA = row2.PRECO_ULTIMA_COMPRA ;
insert_tmp.QTD_ULTIMA_COMPRA = row2.QTD_ULTIMA_COMPRA ;
insert_tmp.PRECO_MEDIO = row2.PRECO_MEDIO ;
insert_tmp.DT_ULTIMA_VENDA = row2.DT_ULTIMA_VENDA ;
insert_tmp.PRECO_ULTIMA_VENDA = row2.PRECO_ULTIMA_VENDA ;
insert_tmp.QTD_ULTIMA_VENDA = row2.QTD_ULTIMA_VENDA ;
insert_tmp.DIAS_SEM_VENDA = row2.DIAS_SEM_VENDA ;
insert_tmp.ST = row2.ST ;
insert_tmp.CURVA_ABC = row2.CURVA_ABC ;
insert_tmp.CRITICIDADE = row2.CRITICIDADE ;
insert_tmp.LOCAL_FISICO = row2.LOCAL_FISICO ;
insert_tmp.Curva_qtde = row2.Curva_qtde ;
insert_tmp.Curva_vlr = row2.Curva_vlr ;
insert_tmp.DATA_EXECUCAO = TalendDate.getCurrentDate();
insert_tmp.code_curva_emp = row2.code_curva_emp ;
insert_tmp.agp_curva_emp = row2.agp_curva_emp ;
insert_tmp.STATUS = row2.STATUS ;
insert = insert_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "insert"
if(insert != null) { 



	
	/**
	 * [tDBOutput_4 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert"
						
						);
					}
					



        whetherReject_tDBOutput_4 = false;
                    if(insert.CD_PRODUTO == null) {
pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(1, insert.CD_PRODUTO);
}

                    if(insert.CD_EMPRESA == null) {
pstmt_tDBOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(2, insert.CD_EMPRESA);
}

                    pstmt_tDBOutput_4.setBigDecimal(3, insert.SALDO_FISICO);

                    pstmt_tDBOutput_4.setBigDecimal(4, insert.RESERVADO_ORDEM_PRODUCAO);

                    pstmt_tDBOutput_4.setBigDecimal(5, insert.RESERVADO_PEDIDO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(6, insert.RESERVADO_ENDERECAMENTO);

                    pstmt_tDBOutput_4.setBigDecimal(7, insert.RESERVADO_GARANTIA);

                    pstmt_tDBOutput_4.setBigDecimal(8, insert.RESERVADO_EXTERNO);

                    pstmt_tDBOutput_4.setBigDecimal(9, insert.VL_COMPRA);

                    pstmt_tDBOutput_4.setBigDecimal(10, insert.PRECO_COMPRA);

                    pstmt_tDBOutput_4.setBigDecimal(11, insert.VL_CUSTO);

                    pstmt_tDBOutput_4.setBigDecimal(12, insert.TABELA1_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(13, insert.MARKUP_TABELA1);

                    pstmt_tDBOutput_4.setBigDecimal(14, insert.TABELA2_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(15, insert.MARKUP_TABELA2);

                    pstmt_tDBOutput_4.setBigDecimal(16, insert.TABELA3_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(17, insert.MARKUP_TABELA3);

                    pstmt_tDBOutput_4.setBigDecimal(18, insert.TABELA4_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(19, insert.MARKUP_TABELA4);

                    pstmt_tDBOutput_4.setBigDecimal(20, insert.TABELA5_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(21, insert.MARKUP_TABELA5);

                    pstmt_tDBOutput_4.setBigDecimal(22, insert.TABELA6_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(23, insert.MARKUP_TABELA6);

                    pstmt_tDBOutput_4.setBigDecimal(24, insert.TABELA7_PRECO_VENDA);

                    pstmt_tDBOutput_4.setBigDecimal(25, insert.MARKUP_TABELA7);

                    if(insert.ABRANGENCIA_FISCAL == null) {
pstmt_tDBOutput_4.setNull(26, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(26, insert.ABRANGENCIA_FISCAL);
}

                    if(insert.IMPORTADO == null) {
pstmt_tDBOutput_4.setNull(27, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(27, insert.IMPORTADO);
}

                    if(insert.DT_ULTIMA_COMPRA != null) {
pstmt_tDBOutput_4.setTimestamp(28, new java.sql.Timestamp(insert.DT_ULTIMA_COMPRA.getTime()));
} else {
pstmt_tDBOutput_4.setNull(28, java.sql.Types.TIMESTAMP);
}

                    pstmt_tDBOutput_4.setBigDecimal(29, insert.PRECO_ULTIMA_COMPRA);

                    if(insert.QTD_ULTIMA_COMPRA == null) {
pstmt_tDBOutput_4.setNull(30, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(30, insert.QTD_ULTIMA_COMPRA);
}

                    pstmt_tDBOutput_4.setBigDecimal(31, insert.PRECO_MEDIO);

                    if(insert.DT_ULTIMA_VENDA != null) {
pstmt_tDBOutput_4.setTimestamp(32, new java.sql.Timestamp(insert.DT_ULTIMA_VENDA.getTime()));
} else {
pstmt_tDBOutput_4.setNull(32, java.sql.Types.TIMESTAMP);
}

                    pstmt_tDBOutput_4.setBigDecimal(33, insert.PRECO_ULTIMA_VENDA);

                    if(insert.QTD_ULTIMA_VENDA == null) {
pstmt_tDBOutput_4.setNull(34, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(34, insert.QTD_ULTIMA_VENDA);
}

                    if(insert.DIAS_SEM_VENDA == null) {
pstmt_tDBOutput_4.setNull(35, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_4.setInt(35, insert.DIAS_SEM_VENDA);
}

                    if(insert.ST == null) {
pstmt_tDBOutput_4.setNull(36, java.sql.Types.DOUBLE);
} else {pstmt_tDBOutput_4.setDouble(36, insert.ST);
}

                    if(insert.CURVA_ABC == null) {
pstmt_tDBOutput_4.setNull(37, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(37, insert.CURVA_ABC);
}

                    if(insert.CRITICIDADE == null) {
pstmt_tDBOutput_4.setNull(38, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(38, insert.CRITICIDADE);
}

                    if(insert.LOCAL_FISICO == null) {
pstmt_tDBOutput_4.setNull(39, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(39, insert.LOCAL_FISICO);
}

                    if(insert.Curva_qtde == null) {
pstmt_tDBOutput_4.setNull(40, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(40, insert.Curva_qtde);
}

                    if(insert.Curva_vlr == null) {
pstmt_tDBOutput_4.setNull(41, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(41, insert.Curva_vlr);
}

                    if(insert.DATA_EXECUCAO != null) {
pstmt_tDBOutput_4.setTimestamp(42, new java.sql.Timestamp(insert.DATA_EXECUCAO.getTime()));
} else {
pstmt_tDBOutput_4.setNull(42, java.sql.Types.TIMESTAMP);
}

                    if(insert.code_curva_emp == null) {
pstmt_tDBOutput_4.setNull(43, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(43, insert.code_curva_emp);
}

                    if(insert.agp_curva_emp == null) {
pstmt_tDBOutput_4.setNull(44, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(44, insert.agp_curva_emp);
}

                    if(insert.STATUS == null) {
pstmt_tDBOutput_4.setNull(45, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(45, insert.STATUS);
}

			
    		pstmt_tDBOutput_4.addBatch();
    		nb_line_tDBOutput_4++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_4++;
    		  
    			if ((batchSize_tDBOutput_4 > 0) && (batchSize_tDBOutput_4 <= batchSizeCounter_tDBOutput_4)) {
                try {
						int countSum_tDBOutput_4 = 0;
						    
						for(int countEach_tDBOutput_4: pstmt_tDBOutput_4.executeBatch()) {
							countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
						}
				    	rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
				    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
            	    	batchSizeCounter_tDBOutput_4 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_4){
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e_tDBOutput_4.getMessage());
				    	java.sql.SQLException ne_tDBOutput_4 = e_tDBOutput_4.getNextException(),sqle_tDBOutput_4=null;
				    	String errormessage_tDBOutput_4;
						if (ne_tDBOutput_4 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_4 = new java.sql.SQLException(e_tDBOutput_4.getMessage() + "\ncaused by: " + ne_tDBOutput_4.getMessage(), ne_tDBOutput_4.getSQLState(), ne_tDBOutput_4.getErrorCode(), ne_tDBOutput_4);
							errormessage_tDBOutput_4 = sqle_tDBOutput_4.getMessage();
						}else{
							errormessage_tDBOutput_4 = e_tDBOutput_4.getMessage();
						}
				    	
				    	int countSum_tDBOutput_4 = 0;
						for(int countEach_tDBOutput_4: e_tDBOutput_4.getUpdateCounts()) {
							countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
						}
						rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
						
				    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
				    	
				    	System.err.println(errormessage_tDBOutput_4);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_4++;

/**
 * [tDBOutput_4 main ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	

 



/**
 * [tDBOutput_4 process_data_end ] stop
 */

} // End of branch "insert"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tDBOutput_4 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



	    try {
				int countSum_tDBOutput_4 = 0;
				if (pstmt_tDBOutput_4 != null && batchSizeCounter_tDBOutput_4 > 0) {
						
					for(int countEach_tDBOutput_4: pstmt_tDBOutput_4.executeBatch()) {
						countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
					}
					rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
						
				}
		    	
		    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_4){
globalMap.put("tDBOutput_4_ERROR_MESSAGE",e_tDBOutput_4.getMessage());
	    	java.sql.SQLException ne_tDBOutput_4 = e_tDBOutput_4.getNextException(),sqle_tDBOutput_4=null;
	    	String errormessage_tDBOutput_4;
			if (ne_tDBOutput_4 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_4 = new java.sql.SQLException(e_tDBOutput_4.getMessage() + "\ncaused by: " + ne_tDBOutput_4.getMessage(), ne_tDBOutput_4.getSQLState(), ne_tDBOutput_4.getErrorCode(), ne_tDBOutput_4);
				errormessage_tDBOutput_4 = sqle_tDBOutput_4.getMessage();
			}else{
				errormessage_tDBOutput_4 = e_tDBOutput_4.getMessage();
			}
	    	
	    	int countSum_tDBOutput_4 = 0;
			for(int countEach_tDBOutput_4: e_tDBOutput_4.getUpdateCounts()) {
				countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
			}
			rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;
			
	    		insertedCount_tDBOutput_4 += countSum_tDBOutput_4;
	    	
	    	System.err.println(errormessage_tDBOutput_4);
	    	
		}
	    
        if(pstmt_tDBOutput_4 != null) {
        		
            pstmt_tDBOutput_4.close();
            resourceMap.remove("pstmt_tDBOutput_4");
        }
    resourceMap.put("statementClosed_tDBOutput_4", true);

	nb_line_deleted_tDBOutput_4=nb_line_deleted_tDBOutput_4+ deletedCount_tDBOutput_4;
	nb_line_update_tDBOutput_4=nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
	nb_line_inserted_tDBOutput_4=nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
	nb_line_rejected_tDBOutput_4=nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;
	
        globalMap.put("tDBOutput_4_NB_LINE",nb_line_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_UPDATED",nb_line_update_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_DELETED",nb_line_deleted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert");
			  	}
			  	
 

ok_Hash.put("tDBOutput_4", true);
end_Hash.put("tDBOutput_4", System.currentTimeMillis());




/**
 * [tDBOutput_4 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tJava_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tDBOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
                if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_4")) != null) {
                    pstmtToClose_tDBOutput_4.close();
                }
    }
 



/**
 * [tDBOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public void tJava_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_10", false);
		start_Hash.put("tJava_10", System.currentTimeMillis());
		
	
	currentComponent="tJava_10";
	
	
		int tos_count_tJava_10 = 0;
		


System.out.println("Iniciado update de Itens sem Vendas na stg_produto_empresa no DW em: "+TalendDate.getCurrentDate());



 



/**
 * [tJava_10 begin ] stop
 */
	
	/**
	 * [tJava_10 main ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 


	tos_count_tJava_10++;

/**
 * [tJava_10 main ] stop
 */
	
	/**
	 * [tJava_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 



/**
 * [tJava_10 process_data_begin ] stop
 */
	
	/**
	 * [tJava_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 



/**
 * [tJava_10 process_data_end ] stop
 */
	
	/**
	 * [tJava_10 end ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 

ok_Hash.put("tJava_10", true);
end_Hash.put("tJava_10", System.currentTimeMillis());




/**
 * [tJava_10 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk30", 0, "ok");
								} 
							
							tHashInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_10 finally ] start
	 */

	

	
	
	currentComponent="tJava_10";
	
	

 



/**
 * [tJava_10 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_10_SUBPROCESS_STATE", 1);
	}
	


public static class update_sem_vendaStruct implements routines.system.IPersistableRow<update_sem_vendaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CD_PRODUTO;

				public String getCD_PRODUTO () {
					return this.CD_PRODUTO;
				}

				public Boolean CD_PRODUTOIsNullable(){
				    return true;
				}
				public Boolean CD_PRODUTOIsKey(){
				    return true;
				}
				public Integer CD_PRODUTOLength(){
				    return 5;
				}
				public Integer CD_PRODUTOPrecision(){
				    return null;
				}
				public String CD_PRODUTODefault(){
				
					return null;
				
				}
				public String CD_PRODUTOComment(){
				
				    return "";
				
				}
				public String CD_PRODUTOPattern(){
				
					return "";
				
				}
				public String CD_PRODUTOOriginalDbColumnName(){
				
					return "CD_PRODUTO";
				
				}

				
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return true;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String Curva_qtde;

				public String getCurva_qtde () {
					return this.Curva_qtde;
				}

				public Boolean Curva_qtdeIsNullable(){
				    return true;
				}
				public Boolean Curva_qtdeIsKey(){
				    return false;
				}
				public Integer Curva_qtdeLength(){
				    return null;
				}
				public Integer Curva_qtdePrecision(){
				    return null;
				}
				public String Curva_qtdeDefault(){
				
					return null;
				
				}
				public String Curva_qtdeComment(){
				
				    return "";
				
				}
				public String Curva_qtdePattern(){
				
					return "";
				
				}
				public String Curva_qtdeOriginalDbColumnName(){
				
					return "Curva_qtde";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CD_PRODUTO == null) ? 0 : this.CD_PRODUTO.hashCode());
					
						result = prime * result + ((this.cd_empresa == null) ? 0 : this.cd_empresa.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final update_sem_vendaStruct other = (update_sem_vendaStruct) obj;
		
						if (this.CD_PRODUTO == null) {
							if (other.CD_PRODUTO != null)
								return false;
						
						} else if (!this.CD_PRODUTO.equals(other.CD_PRODUTO))
						
							return false;
					
						if (this.cd_empresa == null) {
							if (other.cd_empresa != null)
								return false;
						
						} else if (!this.cd_empresa.equals(other.cd_empresa))
						
							return false;
					

		return true;
    }

	public void copyDataTo(update_sem_vendaStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            other.cd_empresa = this.cd_empresa;
	            other.Curva_qtde = this.Curva_qtde;
	            other.Curva_vlr = this.Curva_vlr;
	            
	}

	public void copyKeysDataTo(update_sem_vendaStruct other) {

		other.CD_PRODUTO = this.CD_PRODUTO;
	            	other.cd_empresa = this.cd_empresa;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.cd_empresa = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CD_PRODUTO = readString(dis);
					
					this.cd_empresa = readString(dis);
					
					this.Curva_qtde = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CD_PRODUTO,dos);
					
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.Curva_qtde,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CD_PRODUTO="+CD_PRODUTO);
		sb.append(",cd_empresa="+cd_empresa);
		sb.append(",Curva_qtde="+Curva_qtde);
		sb.append(",Curva_vlr="+Curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_sem_vendaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CD_PRODUTO, other.CD_PRODUTO);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.cd_empresa, other.cd_empresa);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String CODIGO_EMP;

				public String getCODIGO_EMP () {
					return this.CODIGO_EMP;
				}

				public Boolean CODIGO_EMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPLength(){
				    return null;
				}
				public Integer CODIGO_EMPPrecision(){
				    return null;
				}
				public String CODIGO_EMPDefault(){
				
					return null;
				
				}
				public String CODIGO_EMPComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPOriginalDbColumnName(){
				
					return "CODIGO_EMP";
				
				}

				
			    public Integer qtde_venda_120;

				public Integer getQtde_venda_120 () {
					return this.qtde_venda_120;
				}

				public Boolean qtde_venda_120IsNullable(){
				    return true;
				}
				public Boolean qtde_venda_120IsKey(){
				    return false;
				}
				public Integer qtde_venda_120Length(){
				    return null;
				}
				public Integer qtde_venda_120Precision(){
				    return null;
				}
				public String qtde_venda_120Default(){
				
					return null;
				
				}
				public String qtde_venda_120Comment(){
				
				    return "";
				
				}
				public String qtde_venda_120Pattern(){
				
					return "";
				
				}
				public String qtde_venda_120OriginalDbColumnName(){
				
					return "qtde_venda_120";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
						this.qtde_venda_120 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
						this.qtde_venda_120 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
					// Integer
				
						writeInteger(this.qtde_venda_120,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
					// Integer
				
						writeInteger(this.qtde_venda_120,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",CODIGO_EMP="+CODIGO_EMP);
		sb.append(",qtde_venda_120="+String.valueOf(qtde_venda_120));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row32Struct row32 = new row32Struct();
update_sem_vendaStruct update_sem_venda = new update_sem_vendaStruct();





	
	/**
	 * [tDBOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_5", false);
		start_Hash.put("tDBOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_sem_venda");
					}
				
		int tos_count_tDBOutput_5 = 0;
		





String dbschema_tDBOutput_5 = null;
	dbschema_tDBOutput_5 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_5 = null;
if(dbschema_tDBOutput_5 == null || dbschema_tDBOutput_5.trim().length() == 0) {
	tableName_tDBOutput_5 = ("stg_t_produto_empresa").toLowerCase();
} else {
	tableName_tDBOutput_5 = dbschema_tDBOutput_5 + "\".\"" + ("stg_t_produto_empresa").toLowerCase();
}

        int updateKeyCount_tDBOutput_5 = 2;
        if(updateKeyCount_tDBOutput_5 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_5 == 4 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_5 = 0;
int nb_line_update_tDBOutput_5 = 0;
int nb_line_inserted_tDBOutput_5 = 0;
int nb_line_deleted_tDBOutput_5 = 0;
int nb_line_rejected_tDBOutput_5 = 0;

int deletedCount_tDBOutput_5=0;
int updatedCount_tDBOutput_5=0;
int insertedCount_tDBOutput_5=0;
int rowsToCommitCount_tDBOutput_5=0;
int rejectedCount_tDBOutput_5=0;

boolean whetherReject_tDBOutput_5 = false;

java.sql.Connection conn_tDBOutput_5 = null;
String dbUser_tDBOutput_5 = null;

	conn_tDBOutput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	


   int batchSize_tDBOutput_5 = 10000;
   int batchSizeCounter_tDBOutput_5=0;

int count_tDBOutput_5=0;
	    String update_tDBOutput_5 = "UPDATE \"" + tableName_tDBOutput_5 + "\" SET \"curva_qtde\" = ?,\"curva_vlr\" = ? WHERE \"cd_produto\" = ? AND \"cd_empresa\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_5 = conn_tDBOutput_5.prepareStatement(update_tDBOutput_5);
	    resourceMap.put("pstmt_tDBOutput_5", pstmt_tDBOutput_5);
	    

 



/**
 * [tDBOutput_5 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_sem_vendaStruct update_sem_venda_tmp = new update_sem_vendaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<sem_vendaStruct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<sem_vendaStruct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    sem_vendaStruct next_tHashInput_11 = iterator_tHashInput_11.next();

	row32.cod_item = next_tHashInput_11.CODIGO_ITEM;
	row32.CODIGO_EMP = next_tHashInput_11.CODIGO_EMP;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

update_sem_venda = null;


// # Output table : 'update_sem_venda'
update_sem_venda_tmp.CD_PRODUTO = row32.cod_item ;
update_sem_venda_tmp.cd_empresa = row32.CODIGO_EMP ;
update_sem_venda_tmp.Curva_qtde = "SV";
update_sem_venda_tmp.Curva_vlr = "SV";
update_sem_venda = update_sem_venda_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "update_sem_venda"
if(update_sem_venda != null) { 



	
	/**
	 * [tDBOutput_5 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_sem_venda"
						
						);
					}
					



        whetherReject_tDBOutput_5 = false;
                    if(update_sem_venda.Curva_qtde == null) {
pstmt_tDBOutput_5.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(1, update_sem_venda.Curva_qtde);
}

                    if(update_sem_venda.Curva_vlr == null) {
pstmt_tDBOutput_5.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(2, update_sem_venda.Curva_vlr);
}

                    if(update_sem_venda.CD_PRODUTO == null) {
pstmt_tDBOutput_5.setNull(3 + count_tDBOutput_5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(3 + count_tDBOutput_5, update_sem_venda.CD_PRODUTO);
}


                    if(update_sem_venda.cd_empresa == null) {
pstmt_tDBOutput_5.setNull(4 + count_tDBOutput_5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(4 + count_tDBOutput_5, update_sem_venda.cd_empresa);
}


    		pstmt_tDBOutput_5.addBatch();
    		nb_line_tDBOutput_5++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_5++;
    		  
    			if ((batchSize_tDBOutput_5 > 0) && (batchSize_tDBOutput_5 <= batchSizeCounter_tDBOutput_5)) {
                try {
						int countSum_tDBOutput_5 = 0;
						    
						for(int countEach_tDBOutput_5: pstmt_tDBOutput_5.executeBatch()) {
							countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
						}
				    	rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
				    	
				    		updatedCount_tDBOutput_5 += countSum_tDBOutput_5;
				    	
            	    	batchSizeCounter_tDBOutput_5 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_5){
globalMap.put("tDBOutput_5_ERROR_MESSAGE",e_tDBOutput_5.getMessage());
				    	java.sql.SQLException ne_tDBOutput_5 = e_tDBOutput_5.getNextException(),sqle_tDBOutput_5=null;
				    	String errormessage_tDBOutput_5;
						if (ne_tDBOutput_5 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_5 = new java.sql.SQLException(e_tDBOutput_5.getMessage() + "\ncaused by: " + ne_tDBOutput_5.getMessage(), ne_tDBOutput_5.getSQLState(), ne_tDBOutput_5.getErrorCode(), ne_tDBOutput_5);
							errormessage_tDBOutput_5 = sqle_tDBOutput_5.getMessage();
						}else{
							errormessage_tDBOutput_5 = e_tDBOutput_5.getMessage();
						}
				    	
				    	int countSum_tDBOutput_5 = 0;
						for(int countEach_tDBOutput_5: e_tDBOutput_5.getUpdateCounts()) {
							countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
						}
						rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
						
				    		updatedCount_tDBOutput_5 += countSum_tDBOutput_5;
				    	
				    	System.err.println(errormessage_tDBOutput_5);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_5++;

/**
 * [tDBOutput_5 main ] stop
 */
	
	/**
	 * [tDBOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	

 



/**
 * [tDBOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	

 



/**
 * [tDBOutput_5 process_data_end ] stop
 */

} // End of branch "update_sem_venda"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tDBOutput_5 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	



	    try {
				int countSum_tDBOutput_5 = 0;
				if (pstmt_tDBOutput_5 != null && batchSizeCounter_tDBOutput_5 > 0) {
						
					for(int countEach_tDBOutput_5: pstmt_tDBOutput_5.executeBatch()) {
						countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
					}
					rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
						
				}
		    	
		    		updatedCount_tDBOutput_5 += countSum_tDBOutput_5;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_5){
globalMap.put("tDBOutput_5_ERROR_MESSAGE",e_tDBOutput_5.getMessage());
	    	java.sql.SQLException ne_tDBOutput_5 = e_tDBOutput_5.getNextException(),sqle_tDBOutput_5=null;
	    	String errormessage_tDBOutput_5;
			if (ne_tDBOutput_5 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_5 = new java.sql.SQLException(e_tDBOutput_5.getMessage() + "\ncaused by: " + ne_tDBOutput_5.getMessage(), ne_tDBOutput_5.getSQLState(), ne_tDBOutput_5.getErrorCode(), ne_tDBOutput_5);
				errormessage_tDBOutput_5 = sqle_tDBOutput_5.getMessage();
			}else{
				errormessage_tDBOutput_5 = e_tDBOutput_5.getMessage();
			}
	    	
	    	int countSum_tDBOutput_5 = 0;
			for(int countEach_tDBOutput_5: e_tDBOutput_5.getUpdateCounts()) {
				countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
			}
			rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;
			
	    		updatedCount_tDBOutput_5 += countSum_tDBOutput_5;
	    	
	    	System.err.println(errormessage_tDBOutput_5);
	    	
		}
	    
        if(pstmt_tDBOutput_5 != null) {
        		
            pstmt_tDBOutput_5.close();
            resourceMap.remove("pstmt_tDBOutput_5");
        }
    resourceMap.put("statementClosed_tDBOutput_5", true);

	nb_line_deleted_tDBOutput_5=nb_line_deleted_tDBOutput_5+ deletedCount_tDBOutput_5;
	nb_line_update_tDBOutput_5=nb_line_update_tDBOutput_5 + updatedCount_tDBOutput_5;
	nb_line_inserted_tDBOutput_5=nb_line_inserted_tDBOutput_5 + insertedCount_tDBOutput_5;
	nb_line_rejected_tDBOutput_5=nb_line_rejected_tDBOutput_5 + rejectedCount_tDBOutput_5;
	
        globalMap.put("tDBOutput_5_NB_LINE",nb_line_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_UPDATED",nb_line_update_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_DELETED",nb_line_deleted_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_5);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_sem_venda");
			  	}
			  	
 

ok_Hash.put("tDBOutput_5", true);
end_Hash.put("tDBOutput_5", System.currentTimeMillis());




/**
 * [tDBOutput_5 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk10", 0, "ok");
								} 
							
							tJava_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tDBOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_5") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_5 = null;
                if ((pstmtToClose_tDBOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_5")) != null) {
                    pstmtToClose_tDBOutput_5.close();
                }
    }
 



/**
 * [tDBOutput_5 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public void tJava_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_6", false);
		start_Hash.put("tJava_6", System.currentTimeMillis());
		
	
	currentComponent="tJava_6";
	
	
		int tos_count_tJava_6 = 0;
		


System.out.println("Iniciado limpeza dos campos nulos na stg_produto_empresa no DW em: "+TalendDate.getCurrentDate());



 



/**
 * [tJava_6 begin ] stop
 */
	
	/**
	 * [tJava_6 main ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 


	tos_count_tJava_6++;

/**
 * [tJava_6 main ] stop
 */
	
	/**
	 * [tJava_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_begin ] stop
 */
	
	/**
	 * [tJava_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 process_data_end ] stop
 */
	
	/**
	 * [tJava_6 end ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 

ok_Hash.put("tJava_6", true);
end_Hash.put("tJava_6", System.currentTimeMillis());




/**
 * [tJava_6 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk32", 0, "ok");
								} 
							
							tDBRow_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_6 finally ] start
	 */

	

	
	
	currentComponent="tJava_6";
	
	

 



/**
 * [tJava_6 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_6_SUBPROCESS_STATE", 1);
	}
	


public void tDBRow_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBRow_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBRow_1", false);
		start_Hash.put("tDBRow_1", System.currentTimeMillis());
		
	
	currentComponent="tDBRow_1";
	
	
		int tos_count_tDBRow_1 = 0;
		

	java.sql.Connection conn_tDBRow_1 = null;
	String query_tDBRow_1 = "";
	boolean whetherReject_tDBRow_1 = false;
	int count_tDBRow_1 = 0;
				conn_tDBRow_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
			
        resourceMap.put("conn_tDBRow_1", conn_tDBRow_1);
        java.sql.Statement stmt_tDBRow_1 = conn_tDBRow_1.createStatement();
        resourceMap.put("stmt_tDBRow_1", stmt_tDBRow_1);


 



/**
 * [tDBRow_1 begin ] stop
 */
	
	/**
	 * [tDBRow_1 main ] start
	 */

	

	
	
	currentComponent="tDBRow_1";
	
	

query_tDBRow_1 = "\nupdate stg_t_produto_empresa set local_fisico = null where local_fisico = ''; \ncommit;\nupdate stg_t_produto_empresa"
+" set local_fisico = null where local_fisico = ' ';\ncommit;\nupdate stg_t_produto_empresa set curva_qtde = 'SV' where cu"
+"rva_qtde is null;\ncommit;\nupdate stg_t_produto_empresa set curva_vlr = 'SV' where curva_vlr is null;\ncommit;\nupdate "
+"stg_t_produto_empresa set agp_curva_emp = 'SV' where agp_curva_emp is null;\ncommit;\n";
whetherReject_tDBRow_1 = false;
globalMap.put("tDBRow_1_QUERY",query_tDBRow_1);
try {
				stmt_tDBRow_1.execute(query_tDBRow_1);
	} catch (java.lang.Exception e) {
		whetherReject_tDBRow_1 = true;
		
				System.err.print(e.getMessage());
				globalMap.put("tDBRow_1_ERROR_MESSAGE", e.getMessage());
				
	}
	
	if(!whetherReject_tDBRow_1) {
		
	}
	

 


	tos_count_tDBRow_1++;

/**
 * [tDBRow_1 main ] stop
 */
	
	/**
	 * [tDBRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBRow_1";
	
	

 



/**
 * [tDBRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBRow_1";
	
	

 



/**
 * [tDBRow_1 process_data_end ] stop
 */
	
	/**
	 * [tDBRow_1 end ] start
	 */

	

	
	
	currentComponent="tDBRow_1";
	
	

	globalMap.put("tDBRow_1_NB_LINE", count_tDBRow_1);
        stmt_tDBRow_1.close();
        resourceMap.remove("stmt_tDBRow_1");
    resourceMap.put("statementClosed_tDBRow_1", true);
    resourceMap.put("finish_tDBRow_1", true);
 

ok_Hash.put("tDBRow_1", true);
end_Hash.put("tDBRow_1", System.currentTimeMillis());




/**
 * [tDBRow_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBRow_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk33", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBRow_1 finally ] start
	 */

	

	
	
	currentComponent="tDBRow_1";
	
	

    if (resourceMap.get("statementClosed_tDBRow_1") == null) {
            java.sql.Statement stmtToClose_tDBRow_1 = null;
            if ((stmtToClose_tDBRow_1 = (java.sql.Statement) resourceMap.remove("stmt_tDBRow_1")) != null) {
                stmtToClose_tDBRow_1.close();
            }
    }
 



/**
 * [tDBRow_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBRow_1_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_3 = 1;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_3 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_3=0;
	    String update_tDBOutput_3 = "UPDATE \"" + tableName_tDBOutput_3 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row5Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row6.nm_programa = next_tHashInput_1.nm_programa;
	row6.data_inicio_execucao = next_tHashInput_1.data_inicio_execucao;
	row6.data_termino_execucao = next_tHashInput_1.data_termino_execucao;
	row6.mensagem = next_tHashInput_1.mensagem;
	row6.uuid = next_tHashInput_1.uuid;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row6.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row6.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_3.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_3.setNull(5 + count_tDBOutput_3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(5 + count_tDBOutput_3, update_log.uuid);
}


            try {
                nb_line_tDBOutput_3++;
				
                int processedCount_tDBOutput_3 = pstmt_tDBOutput_3.executeUpdate();
                updatedCount_tDBOutput_3 += processedCount_tDBOutput_3;
                rowsToCommitCount_tDBOutput_3 += processedCount_tDBOutput_3;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_3 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tDBClose_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
		
			conn_tDBClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tDBClose_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	



	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
        conn_tDBClose_2.close();
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableComparableLookupRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String Curva;

				public String getCurva () {
					return this.Curva;
				}

				public Boolean CurvaIsNullable(){
				    return true;
				}
				public Boolean CurvaIsKey(){
				    return false;
				}
				public Integer CurvaLength(){
				    return null;
				}
				public Integer CurvaPrecision(){
				    return null;
				}
				public String CurvaDefault(){
				
					return null;
				
				}
				public String CurvaComment(){
				
				    return "";
				
				}
				public String CurvaPattern(){
				
					return "";
				
				}
				public String CurvaOriginalDbColumnName(){
				
					return "Curva";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_ITEM == null) ? 0 : this.CODIGO_ITEM.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.CODIGO_ITEM == null) {
							if (other.CODIGO_ITEM != null)
								return false;
						
						} else if (!this.CODIGO_ITEM.equals(other.CODIGO_ITEM))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            other.Curva = this.Curva;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.Curva = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.Curva = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.Curva, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.Curva, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",Curva="+Curva);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_ITEM, other.CODIGO_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tAdvancedHash_row10 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row10", false);
		start_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tAdvancedHash_row10 = 0;
		

			   		// connection name:row10
			   		// source node:tHashInput_4 - inputs:(after_tDBInput_2) outputs:(row10,row10) | target node:tAdvancedHash_row10 - inputs:(row10) outputs:()
			   		// linked node: tMap_1 - inputs:(row3,row10) outputs:(out1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row10 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row10Struct>getLookup(matchingModeEnum_row10);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row10", tHash_Lookup_row10);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row10 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<curvaStruct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<curvaStruct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    curvaStruct next_tHashInput_4 = iterator_tHashInput_4.next();

	row10.CODIGO_ITEM = next_tHashInput_4.CODIGO_ITEM;
	row10.Curva = next_tHashInput_4.Curva;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


			   
			   

					row10Struct row10_HashRow = new row10Struct();
		   	   	   
				
				row10_HashRow.CODIGO_ITEM = row10.CODIGO_ITEM;
				
				row10_HashRow.Curva = row10.Curva;
				
			tHash_Lookup_row10.put(row10_HashRow);
			
            




 


	tos_count_tAdvancedHash_row10++;

/**
 * [tAdvancedHash_row10 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

tHash_Lookup_row10.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row10", true);
end_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());




/**
 * [tAdvancedHash_row10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_ITEM == null) ? 0 : this.CODIGO_ITEM.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.CODIGO_ITEM == null) {
							if (other.CODIGO_ITEM != null)
								return false;
						
						} else if (!this.CODIGO_ITEM.equals(other.CODIGO_ITEM))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            other.Curva_vlr = this.Curva_vlr;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.Curva_vlr = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.Curva_vlr = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.Curva_vlr, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.Curva_vlr, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",Curva_vlr="+Curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_ITEM, other.CODIGO_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tHashInput_7 - inputs:(after_tDBInput_2) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_7 - inputs:(out1,row15) outputs:(curva2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcurvaStruct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<copyOfcurvaStruct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    copyOfcurvaStruct next_tHashInput_7 = iterator_tHashInput_7.next();

	row15.CODIGO_ITEM = next_tHashInput_7.CODIGO_ITEM;
	row15.Curva_vlr = next_tHashInput_7.Curva_vlr;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.CODIGO_ITEM = row15.CODIGO_ITEM;
				
				row15_HashRow.Curva_vlr = row15.Curva_vlr;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row22Struct implements routines.system.IPersistableComparableLookupRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public String Curva_vlr_Agr;

				public String getCurva_vlr_Agr () {
					return this.Curva_vlr_Agr;
				}

				public Boolean Curva_vlr_AgrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlr_AgrIsKey(){
				    return false;
				}
				public Integer Curva_vlr_AgrLength(){
				    return null;
				}
				public Integer Curva_vlr_AgrPrecision(){
				    return null;
				}
				public String Curva_vlr_AgrDefault(){
				
					return null;
				
				}
				public String Curva_vlr_AgrComment(){
				
				    return "";
				
				}
				public String Curva_vlr_AgrPattern(){
				
					return "";
				
				}
				public String Curva_vlr_AgrOriginalDbColumnName(){
				
					return "Curva_vlr_Agr";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_ITEM == null) ? 0 : this.CODIGO_ITEM.hashCode());
					
						result = prime * result + ((this.code_curva_emp == null) ? 0 : this.code_curva_emp.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row22Struct other = (row22Struct) obj;
		
						if (this.CODIGO_ITEM == null) {
							if (other.CODIGO_ITEM != null)
								return false;
						
						} else if (!this.CODIGO_ITEM.equals(other.CODIGO_ITEM))
						
							return false;
					
						if (this.code_curva_emp == null) {
							if (other.code_curva_emp != null)
								return false;
						
						} else if (!this.code_curva_emp.equals(other.code_curva_emp))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row22Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            other.code_curva_emp = this.code_curva_emp;
	            other.Curva_vlr_Agr = this.Curva_vlr_Agr;
	            
	}

	public void copyKeysDataTo(row22Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            	other.code_curva_emp = this.code_curva_emp;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.Curva_vlr_Agr = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.Curva_vlr_Agr = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.Curva_vlr_Agr, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.Curva_vlr_Agr, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",Curva_vlr_Agr="+Curva_vlr_Agr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_ITEM, other.CODIGO_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.code_curva_emp, other.code_curva_emp);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();




	
	/**
	 * [tAdvancedHash_row22 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row22", false);
		start_Hash.put("tAdvancedHash_row22", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tAdvancedHash_row22 = 0;
		

			   		// connection name:row22
			   		// source node:tHashInput_8 - inputs:(after_tDBInput_2) outputs:(row22,row22) | target node:tAdvancedHash_row22 - inputs:(row22) outputs:()
			   		// linked node: tMap_9 - inputs:(curva2,row22) outputs:(Curva3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row22 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row22Struct> tHash_Lookup_row22 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row22Struct>getLookup(matchingModeEnum_row22);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row22", tHash_Lookup_row22);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row22 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfcurvaStruct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_8");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<copyOfcopyOfcurvaStruct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    copyOfcopyOfcurvaStruct next_tHashInput_8 = iterator_tHashInput_8.next();

	row22.CODIGO_ITEM = next_tHashInput_8.CODIGO_ITEM;
	row22.code_curva_emp = next_tHashInput_8.code_curva_emp;
	row22.Curva_vlr_Agr = next_tHashInput_8.Curva_vlr_Agr;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row22"
						
						);
					}
					


			   
			   

					row22Struct row22_HashRow = new row22Struct();
		   	   	   
				
				row22_HashRow.CODIGO_ITEM = row22.CODIGO_ITEM;
				
				row22_HashRow.code_curva_emp = row22.code_curva_emp;
				
				row22_HashRow.Curva_vlr_Agr = row22.Curva_vlr_Agr;
				
			tHash_Lookup_row22.put(row22_HashRow);
			
            




 


	tos_count_tAdvancedHash_row22++;

/**
 * [tAdvancedHash_row22 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

 



/**
 * [tAdvancedHash_row22 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row22 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

 



/**
 * [tAdvancedHash_row22 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_8");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

tHash_Lookup_row22.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row22", true);
end_Hash.put("tAdvancedHash_row22", System.currentTimeMillis());




/**
 * [tAdvancedHash_row22 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row22 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row22";
	
	

 



/**
 * [tAdvancedHash_row22 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row23Struct implements routines.system.IPersistableComparableLookupRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String EMPRESA;

				public String getEMPRESA () {
					return this.EMPRESA;
				}

				public Boolean EMPRESAIsNullable(){
				    return true;
				}
				public Boolean EMPRESAIsKey(){
				    return false;
				}
				public Integer EMPRESALength(){
				    return null;
				}
				public Integer EMPRESAPrecision(){
				    return null;
				}
				public String EMPRESADefault(){
				
					return null;
				
				}
				public String EMPRESAComment(){
				
				    return "";
				
				}
				public String EMPRESAPattern(){
				
					return "";
				
				}
				public String EMPRESAOriginalDbColumnName(){
				
					return "EMPRESA";
				
				}

				
			    public String ATIVO_COMPRA;

				public String getATIVO_COMPRA () {
					return this.ATIVO_COMPRA;
				}

				public Boolean ATIVO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ATIVO_COMPRAIsKey(){
				    return false;
				}
				public Integer ATIVO_COMPRALength(){
				    return null;
				}
				public Integer ATIVO_COMPRAPrecision(){
				    return null;
				}
				public String ATIVO_COMPRADefault(){
				
					return null;
				
				}
				public String ATIVO_COMPRAComment(){
				
				    return "";
				
				}
				public String ATIVO_COMPRAPattern(){
				
					return "";
				
				}
				public String ATIVO_COMPRAOriginalDbColumnName(){
				
					return "ATIVO_COMPRA";
				
				}

				
			    public Integer QUANTIDE_ULTIMA_VENDA;

				public Integer getQUANTIDE_ULTIMA_VENDA () {
					return this.QUANTIDE_ULTIMA_VENDA;
				}

				public Boolean QUANTIDE_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QUANTIDE_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QUANTIDE_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QUANTIDE_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QUANTIDE_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QUANTIDE_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QUANTIDE_ULTIMA_VENDA";
				
				}

				
			    public String DATA_CADASTRO;

				public String getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_CADASTRO;

				public Integer getDIF_DATA_CADASTRO () {
					return this.DIF_DATA_CADASTRO;
				}

				public Boolean DIF_DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DIF_DATA_CADASTROLength(){
				    return null;
				}
				public Integer DIF_DATA_CADASTROPrecision(){
				    return null;
				}
				public String DIF_DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DIF_DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DIF_DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DIF_DATA_CADASTROOriginalDbColumnName(){
				
					return "DIF_DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_ULTIMA_VENDA;

				public Integer getDIF_DATA_ULTIMA_VENDA () {
					return this.DIF_DATA_ULTIMA_VENDA;
				}

				public Boolean DIF_DATA_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DIF_DATA_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DIF_DATA_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DIF_DATA_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DIF_DATA_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DIF_DATA_ULTIMA_VENDA";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer COBERTURA;

				public Integer getCOBERTURA () {
					return this.COBERTURA;
				}

				public Boolean COBERTURAIsNullable(){
				    return true;
				}
				public Boolean COBERTURAIsKey(){
				    return false;
				}
				public Integer COBERTURALength(){
				    return null;
				}
				public Integer COBERTURAPrecision(){
				    return null;
				}
				public String COBERTURADefault(){
				
					return null;
				
				}
				public String COBERTURAComment(){
				
				    return "";
				
				}
				public String COBERTURAPattern(){
				
					return "";
				
				}
				public String COBERTURAOriginalDbColumnName(){
				
					return "COBERTURA";
				
				}

				
			    public String COMBO;

				public String getCOMBO () {
					return this.COMBO;
				}

				public Boolean COMBOIsNullable(){
				    return true;
				}
				public Boolean COMBOIsKey(){
				    return false;
				}
				public Integer COMBOLength(){
				    return null;
				}
				public Integer COMBOPrecision(){
				    return null;
				}
				public String COMBODefault(){
				
					return null;
				
				}
				public String COMBOComment(){
				
				    return "";
				
				}
				public String COMBOPattern(){
				
					return "";
				
				}
				public String COMBOOriginalDbColumnName(){
				
					return "COMBO";
				
				}

				
			    public String ITENS_PECA;

				public String getITENS_PECA () {
					return this.ITENS_PECA;
				}

				public Boolean ITENS_PECAIsNullable(){
				    return true;
				}
				public Boolean ITENS_PECAIsKey(){
				    return false;
				}
				public Integer ITENS_PECALength(){
				    return null;
				}
				public Integer ITENS_PECAPrecision(){
				    return null;
				}
				public String ITENS_PECADefault(){
				
					return null;
				
				}
				public String ITENS_PECAComment(){
				
				    return "";
				
				}
				public String ITENS_PECAPattern(){
				
					return "";
				
				}
				public String ITENS_PECAOriginalDbColumnName(){
				
					return "ITENS_PECA";
				
				}

				
			    public String EXPORTA_SITE;

				public String getEXPORTA_SITE () {
					return this.EXPORTA_SITE;
				}

				public Boolean EXPORTA_SITEIsNullable(){
				    return true;
				}
				public Boolean EXPORTA_SITEIsKey(){
				    return false;
				}
				public Integer EXPORTA_SITELength(){
				    return null;
				}
				public Integer EXPORTA_SITEPrecision(){
				    return null;
				}
				public String EXPORTA_SITEDefault(){
				
					return null;
				
				}
				public String EXPORTA_SITEComment(){
				
				    return "";
				
				}
				public String EXPORTA_SITEPattern(){
				
					return "";
				
				}
				public String EXPORTA_SITEOriginalDbColumnName(){
				
					return "EXPORTA_SITE";
				
				}

				
			    public String ITENS_USO_CONSUMO;

				public String getITENS_USO_CONSUMO () {
					return this.ITENS_USO_CONSUMO;
				}

				public Boolean ITENS_USO_CONSUMOIsNullable(){
				    return true;
				}
				public Boolean ITENS_USO_CONSUMOIsKey(){
				    return false;
				}
				public Integer ITENS_USO_CONSUMOLength(){
				    return null;
				}
				public Integer ITENS_USO_CONSUMOPrecision(){
				    return null;
				}
				public String ITENS_USO_CONSUMODefault(){
				
					return null;
				
				}
				public String ITENS_USO_CONSUMOComment(){
				
				    return "";
				
				}
				public String ITENS_USO_CONSUMOPattern(){
				
					return "";
				
				}
				public String ITENS_USO_CONSUMOOriginalDbColumnName(){
				
					return "ITENS_USO_CONSUMO";
				
				}

				
			    public String ITENS_CROSS;

				public String getITENS_CROSS () {
					return this.ITENS_CROSS;
				}

				public Boolean ITENS_CROSSIsNullable(){
				    return true;
				}
				public Boolean ITENS_CROSSIsKey(){
				    return false;
				}
				public Integer ITENS_CROSSLength(){
				    return null;
				}
				public Integer ITENS_CROSSPrecision(){
				    return null;
				}
				public String ITENS_CROSSDefault(){
				
					return null;
				
				}
				public String ITENS_CROSSComment(){
				
				    return "";
				
				}
				public String ITENS_CROSSPattern(){
				
					return "";
				
				}
				public String ITENS_CROSSOriginalDbColumnName(){
				
					return "ITENS_CROSS";
				
				}

				
			    public String DESCRICAO_FORNECEDOR;

				public String getDESCRICAO_FORNECEDOR () {
					return this.DESCRICAO_FORNECEDOR;
				}

				public Boolean DESCRICAO_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean DESCRICAO_FORNECEDORIsKey(){
				    return false;
				}
				public Integer DESCRICAO_FORNECEDORLength(){
				    return null;
				}
				public Integer DESCRICAO_FORNECEDORPrecision(){
				    return null;
				}
				public String DESCRICAO_FORNECEDORDefault(){
				
					return null;
				
				}
				public String DESCRICAO_FORNECEDORComment(){
				
				    return "";
				
				}
				public String DESCRICAO_FORNECEDORPattern(){
				
					return "";
				
				}
				public String DESCRICAO_FORNECEDOROriginalDbColumnName(){
				
					return "DESCRICAO_FORNECEDOR";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.CODIGO_ITEM == null) ? 0 : this.CODIGO_ITEM.hashCode());
					
						result = prime * result + ((this.EMPRESA == null) ? 0 : this.EMPRESA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row23Struct other = (row23Struct) obj;
		
						if (this.CODIGO_ITEM == null) {
							if (other.CODIGO_ITEM != null)
								return false;
						
						} else if (!this.CODIGO_ITEM.equals(other.CODIGO_ITEM))
						
							return false;
					
						if (this.EMPRESA == null) {
							if (other.EMPRESA != null)
								return false;
						
						} else if (!this.EMPRESA.equals(other.EMPRESA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row23Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            other.EMPRESA = this.EMPRESA;
	            other.ATIVO_COMPRA = this.ATIVO_COMPRA;
	            other.QUANTIDE_ULTIMA_VENDA = this.QUANTIDE_ULTIMA_VENDA;
	            other.DATA_CADASTRO = this.DATA_CADASTRO;
	            other.DIF_DATA_CADASTRO = this.DIF_DATA_CADASTRO;
	            other.DIF_DATA_ULTIMA_VENDA = this.DIF_DATA_ULTIMA_VENDA;
	            other.SALDO_DISPONIVEL = this.SALDO_DISPONIVEL;
	            other.COBERTURA = this.COBERTURA;
	            other.COMBO = this.COMBO;
	            other.ITENS_PECA = this.ITENS_PECA;
	            other.EXPORTA_SITE = this.EXPORTA_SITE;
	            other.ITENS_USO_CONSUMO = this.ITENS_USO_CONSUMO;
	            other.ITENS_CROSS = this.ITENS_CROSS;
	            other.DESCRICAO_FORNECEDOR = this.DESCRICAO_FORNECEDOR;
	            other.STATUS = this.STATUS;
	            
	}

	public void copyKeysDataTo(row23Struct other) {

		other.CODIGO_ITEM = this.CODIGO_ITEM;
	            	other.EMPRESA = this.EMPRESA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.ATIVO_COMPRA = readString(dis,ois);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis,ois);
					
						this.DATA_CADASTRO = readString(dis,ois);
					
						this.DIF_DATA_CADASTRO = readInteger(dis,ois);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis,ois);
					
						this.SALDO_DISPONIVEL = readInteger(dis,ois);
					
						this.COBERTURA = readInteger(dis,ois);
					
						this.COMBO = readString(dis,ois);
					
						this.ITENS_PECA = readString(dis,ois);
					
						this.EXPORTA_SITE = readString(dis,ois);
					
						this.ITENS_USO_CONSUMO = readString(dis,ois);
					
						this.ITENS_CROSS = readString(dis,ois);
					
						this.DESCRICAO_FORNECEDOR = readString(dis,ois);
					
						this.STATUS = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.ATIVO_COMPRA = readString(dis,objectIn);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis,objectIn);
					
						this.DATA_CADASTRO = readString(dis,objectIn);
					
						this.DIF_DATA_CADASTRO = readInteger(dis,objectIn);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis,objectIn);
					
						this.SALDO_DISPONIVEL = readInteger(dis,objectIn);
					
						this.COBERTURA = readInteger(dis,objectIn);
					
						this.COMBO = readString(dis,objectIn);
					
						this.ITENS_PECA = readString(dis,objectIn);
					
						this.EXPORTA_SITE = readString(dis,objectIn);
					
						this.ITENS_USO_CONSUMO = readString(dis,objectIn);
					
						this.ITENS_CROSS = readString(dis,objectIn);
					
						this.DESCRICAO_FORNECEDOR = readString(dis,objectIn);
					
						this.STATUS = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.ATIVO_COMPRA, dos, oos);
					
					writeInteger(this.QUANTIDE_ULTIMA_VENDA, dos, oos);
					
						writeString(this.DATA_CADASTRO, dos, oos);
					
					writeInteger(this.DIF_DATA_CADASTRO, dos, oos);
					
					writeInteger(this.DIF_DATA_ULTIMA_VENDA, dos, oos);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, oos);
					
					writeInteger(this.COBERTURA, dos, oos);
					
						writeString(this.COMBO, dos, oos);
					
						writeString(this.ITENS_PECA, dos, oos);
					
						writeString(this.EXPORTA_SITE, dos, oos);
					
						writeString(this.ITENS_USO_CONSUMO, dos, oos);
					
						writeString(this.ITENS_CROSS, dos, oos);
					
						writeString(this.DESCRICAO_FORNECEDOR, dos, oos);
					
						writeString(this.STATUS, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.ATIVO_COMPRA, dos, objectOut);
					
					writeInteger(this.QUANTIDE_ULTIMA_VENDA, dos, objectOut);
					
						writeString(this.DATA_CADASTRO, dos, objectOut);
					
					writeInteger(this.DIF_DATA_CADASTRO, dos, objectOut);
					
					writeInteger(this.DIF_DATA_ULTIMA_VENDA, dos, objectOut);
					
					writeInteger(this.SALDO_DISPONIVEL, dos, objectOut);
					
					writeInteger(this.COBERTURA, dos, objectOut);
					
						writeString(this.COMBO, dos, objectOut);
					
						writeString(this.ITENS_PECA, dos, objectOut);
					
						writeString(this.EXPORTA_SITE, dos, objectOut);
					
						writeString(this.ITENS_USO_CONSUMO, dos, objectOut);
					
						writeString(this.ITENS_CROSS, dos, objectOut);
					
						writeString(this.DESCRICAO_FORNECEDOR, dos, objectOut);
					
						writeString(this.STATUS, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",EMPRESA="+EMPRESA);
		sb.append(",ATIVO_COMPRA="+ATIVO_COMPRA);
		sb.append(",QUANTIDE_ULTIMA_VENDA="+String.valueOf(QUANTIDE_ULTIMA_VENDA));
		sb.append(",DATA_CADASTRO="+DATA_CADASTRO);
		sb.append(",DIF_DATA_CADASTRO="+String.valueOf(DIF_DATA_CADASTRO));
		sb.append(",DIF_DATA_ULTIMA_VENDA="+String.valueOf(DIF_DATA_ULTIMA_VENDA));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",COBERTURA="+String.valueOf(COBERTURA));
		sb.append(",COMBO="+COMBO);
		sb.append(",ITENS_PECA="+ITENS_PECA);
		sb.append(",EXPORTA_SITE="+EXPORTA_SITE);
		sb.append(",ITENS_USO_CONSUMO="+ITENS_USO_CONSUMO);
		sb.append(",ITENS_CROSS="+ITENS_CROSS);
		sb.append(",DESCRICAO_FORNECEDOR="+DESCRICAO_FORNECEDOR);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.CODIGO_ITEM, other.CODIGO_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.EMPRESA, other.EMPRESA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();




	
	/**
	 * [tAdvancedHash_row23 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row23", false);
		start_Hash.put("tAdvancedHash_row23", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tAdvancedHash_row23 = 0;
		

			   		// connection name:row23
			   		// source node:tHashInput_9 - inputs:(after_tDBInput_2) outputs:(row23,row23) | target node:tAdvancedHash_row23 - inputs:(row23) outputs:()
			   		// linked node: tMap_10 - inputs:(Curva3,row23) outputs:(Status)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row23 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row23Struct> tHash_Lookup_row23 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row23Struct>getLookup(matchingModeEnum_row23);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row23", tHash_Lookup_row23);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row23 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row28Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row28Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row28Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row23.CODIGO_ITEM = next_tHashInput_9.CODIGO_ITEM;
	row23.EMPRESA = next_tHashInput_9.EMPRESA;
	row23.ATIVO_COMPRA = next_tHashInput_9.ATIVO_COMPRA;
	row23.QUANTIDE_ULTIMA_VENDA = next_tHashInput_9.QUANTIDE_ULTIMA_VENDA;
	row23.DATA_CADASTRO = next_tHashInput_9.DATA_CADASTRO;
	row23.DIF_DATA_CADASTRO = next_tHashInput_9.DIF_DATA_CADASTRO;
	row23.DIF_DATA_ULTIMA_VENDA = next_tHashInput_9.DIF_DATA_ULTIMA_VENDA;
	row23.SALDO_DISPONIVEL = next_tHashInput_9.SALDO_DISPONIVEL;
	row23.COBERTURA = next_tHashInput_9.COBERTURA;
	row23.COMBO = next_tHashInput_9.COMBO;
	row23.ITENS_PECA = next_tHashInput_9.ITENS_PECA;
	row23.EXPORTA_SITE = next_tHashInput_9.EXPORTA_SITE;
	row23.ITENS_USO_CONSUMO = next_tHashInput_9.ITENS_USO_CONSUMO;
	row23.ITENS_CROSS = next_tHashInput_9.ITENS_CROSS;
	row23.DESCRICAO_FORNECEDOR = next_tHashInput_9.DESCRICAO_FORNECEDOR;
	row23.STATUS = next_tHashInput_9.STATUS;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					


			   
			   

					row23Struct row23_HashRow = new row23Struct();
		   	   	   
				
				row23_HashRow.CODIGO_ITEM = row23.CODIGO_ITEM;
				
				row23_HashRow.EMPRESA = row23.EMPRESA;
				
				row23_HashRow.ATIVO_COMPRA = row23.ATIVO_COMPRA;
				
				row23_HashRow.QUANTIDE_ULTIMA_VENDA = row23.QUANTIDE_ULTIMA_VENDA;
				
				row23_HashRow.DATA_CADASTRO = row23.DATA_CADASTRO;
				
				row23_HashRow.DIF_DATA_CADASTRO = row23.DIF_DATA_CADASTRO;
				
				row23_HashRow.DIF_DATA_ULTIMA_VENDA = row23.DIF_DATA_ULTIMA_VENDA;
				
				row23_HashRow.SALDO_DISPONIVEL = row23.SALDO_DISPONIVEL;
				
				row23_HashRow.COBERTURA = row23.COBERTURA;
				
				row23_HashRow.COMBO = row23.COMBO;
				
				row23_HashRow.ITENS_PECA = row23.ITENS_PECA;
				
				row23_HashRow.EXPORTA_SITE = row23.EXPORTA_SITE;
				
				row23_HashRow.ITENS_USO_CONSUMO = row23.ITENS_USO_CONSUMO;
				
				row23_HashRow.ITENS_CROSS = row23.ITENS_CROSS;
				
				row23_HashRow.DESCRICAO_FORNECEDOR = row23.DESCRICAO_FORNECEDOR;
				
				row23_HashRow.STATUS = row23.STATUS;
				
			tHash_Lookup_row23.put(row23_HashRow);
			
            




 


	tos_count_tAdvancedHash_row23++;

/**
 * [tAdvancedHash_row23 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row23 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

tHash_Lookup_row23.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row23", true);
end_Hash.put("tAdvancedHash_row23", System.currentTimeMillis());




/**
 * [tAdvancedHash_row23 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row23 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row23";
	
	

 



/**
 * [tAdvancedHash_row23 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("Iniciado Consulta de dados para gerar ranking (QTDE ITENS) em: "+TalendDate.getCurrentDate());



 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk19", 0, "ok");
								} 
							
							tDBInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS_ITEM;

				public Integer getQTDE_VENDAS_ITEM () {
					return this.QTDE_VENDAS_ITEM;
				}

				public Boolean QTDE_VENDAS_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDAS_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_VENDAS_ITEMLength(){
				    return null;
				}
				public Integer QTDE_VENDAS_ITEMPrecision(){
				    return null;
				}
				public String QTDE_VENDAS_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_VENDAS_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_VENDAS_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_VENDAS_ITEMOriginalDbColumnName(){
				
					return "QTDE_VENDAS_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS;

				public Integer getQTDE_VENDAS () {
					return this.QTDE_VENDAS;
				}

				public Boolean QTDE_VENDASIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDASIsKey(){
				    return false;
				}
				public Integer QTDE_VENDASLength(){
				    return null;
				}
				public Integer QTDE_VENDASPrecision(){
				    return null;
				}
				public String QTDE_VENDASDefault(){
				
					return null;
				
				}
				public String QTDE_VENDASComment(){
				
				    return "";
				
				}
				public String QTDE_VENDASPattern(){
				
					return "";
				
				}
				public String QTDE_VENDASOriginalDbColumnName(){
				
					return "QTDE_VENDAS";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double Acumulado;

				public Double getAcumulado () {
					return this.Acumulado;
				}

				public Boolean AcumuladoIsNullable(){
				    return true;
				}
				public Boolean AcumuladoIsKey(){
				    return false;
				}
				public Integer AcumuladoLength(){
				    return null;
				}
				public Integer AcumuladoPrecision(){
				    return 2;
				}
				public String AcumuladoDefault(){
				
					return null;
				
				}
				public String AcumuladoComment(){
				
				    return "";
				
				}
				public String AcumuladoPattern(){
				
					return "";
				
				}
				public String AcumuladoOriginalDbColumnName(){
				
					return "Acumulado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",QTDE_VENDAS_ITEM="+String.valueOf(QTDE_VENDAS_ITEM));
		sb.append(",QTDE_VENDAS="+String.valueOf(QTDE_VENDAS));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",Acumulado="+String.valueOf(Acumulado));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS_ITEM;

				public Integer getQTDE_VENDAS_ITEM () {
					return this.QTDE_VENDAS_ITEM;
				}

				public Boolean QTDE_VENDAS_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDAS_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_VENDAS_ITEMLength(){
				    return null;
				}
				public Integer QTDE_VENDAS_ITEMPrecision(){
				    return null;
				}
				public String QTDE_VENDAS_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_VENDAS_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_VENDAS_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_VENDAS_ITEMOriginalDbColumnName(){
				
					return "QTDE_VENDAS_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS;

				public Integer getQTDE_VENDAS () {
					return this.QTDE_VENDAS;
				}

				public Boolean QTDE_VENDASIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDASIsKey(){
				    return false;
				}
				public Integer QTDE_VENDASLength(){
				    return null;
				}
				public Integer QTDE_VENDASPrecision(){
				    return null;
				}
				public String QTDE_VENDASDefault(){
				
					return null;
				
				}
				public String QTDE_VENDASComment(){
				
				    return "";
				
				}
				public String QTDE_VENDASPattern(){
				
					return "";
				
				}
				public String QTDE_VENDASOriginalDbColumnName(){
				
					return "QTDE_VENDAS";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",QTDE_VENDAS_ITEM="+String.valueOf(QTDE_VENDAS_ITEM));
		sb.append(",QTDE_VENDAS="+String.valueOf(QTDE_VENDAS));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();
row8Struct row8 = new row8Struct();





	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
		    calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "SELECT TB.CODIGO_ITEM,\n       TB.QTDE_VENDAS_ITEM,\n       TB.QTDE_VENDAS,\n       ROUND ((TB.QTDE_VENDAS_ITEM/TB.QTDE"
+"_VENDAS),6)*100      PERCENT\n  FROM (SELECT COD_ITEM                     CODIGO_ITEM,\n       SUM(VF.QTD_ITEM)         "
+"            QTDE_VENDAS_ITEM,\n       (SELECT SUM(VF.QTD_ITEM)\n          FROM VW_FATURAMENTO VF\n         WHERE VF.DATA"
+"_ANO >= (YEAR(CURRENT_DATE())-1)\n   AND VF.DATA_MES >= MONTH(CURRENT_DATE()))   QTDE_VENDAS\n  FROM VW_FATURAMENTO VF\n"
+"	 WHERE VF.DATA_ANO >= (YEAR(CURRENT_DATE())-1)\n   AND VF.DATA_MES >= MONTH(CURRENT_DATE())\nGROUP BY COD_ITEM\n   )TB"
+"\n ORDER BY PERCENT DESC";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row7.CODIGO_ITEM = null;
							} else {
	                         		
        	row7.CODIGO_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row7.QTDE_VENDAS_ITEM = null;
							} else {
		                          
            row7.QTDE_VENDAS_ITEM = rs_tDBInput_1.getInt(2);
            if(rs_tDBInput_1.wasNull()){
                    row7.QTDE_VENDAS_ITEM = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row7.QTDE_VENDAS = null;
							} else {
		                          
            row7.QTDE_VENDAS = rs_tDBInput_1.getInt(3);
            if(rs_tDBInput_1.wasNull()){
                    row7.QTDE_VENDAS = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row7.PERCENT = null;
							} else {
	                         		
            row7.PERCENT = rs_tDBInput_1.getDouble(4);
            if(rs_tDBInput_1.wasNull()){
                    row7.PERCENT = null;
            }
		                    }
					

 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

    //Code generate according to input schema and output schema
row8.CODIGO_ITEM = row7.CODIGO_ITEM;
row8.QTDE_VENDAS_ITEM = row7.QTDE_VENDAS_ITEM;
row8.QTDE_VENDAS = row7.QTDE_VENDAS;
row8.PERCENT = row7.PERCENT;

context.Acumulado = context.Acumulado + row7.PERCENT;
row8.Acumulado = context.Acumulado;
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					



    
		row8Struct oneRow_tHashOutput_3 = new row8Struct();
				
					oneRow_tHashOutput_3.CODIGO_ITEM = row8.CODIGO_ITEM;
					oneRow_tHashOutput_3.QTDE_VENDAS_ITEM = row8.QTDE_VENDAS_ITEM;
					oneRow_tHashOutput_3.QTDE_VENDAS = row8.QTDE_VENDAS;
					oneRow_tHashOutput_3.PERCENT = row8.PERCENT;
					oneRow_tHashOutput_3.Acumulado = row8.Acumulado;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);

 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class curvaStruct implements routines.system.IPersistableRow<curvaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String Curva;

				public String getCurva () {
					return this.Curva;
				}

				public Boolean CurvaIsNullable(){
				    return true;
				}
				public Boolean CurvaIsKey(){
				    return false;
				}
				public Integer CurvaLength(){
				    return null;
				}
				public Integer CurvaPrecision(){
				    return null;
				}
				public String CurvaDefault(){
				
					return null;
				
				}
				public String CurvaComment(){
				
				    return "";
				
				}
				public String CurvaPattern(){
				
					return "";
				
				}
				public String CurvaOriginalDbColumnName(){
				
					return "Curva";
				
				}

				
			    public Integer QTDE_VENDAS_ITEM;

				public Integer getQTDE_VENDAS_ITEM () {
					return this.QTDE_VENDAS_ITEM;
				}

				public Boolean QTDE_VENDAS_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDAS_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_VENDAS_ITEMLength(){
				    return null;
				}
				public Integer QTDE_VENDAS_ITEMPrecision(){
				    return null;
				}
				public String QTDE_VENDAS_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_VENDAS_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_VENDAS_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_VENDAS_ITEMOriginalDbColumnName(){
				
					return "QTDE_VENDAS_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS;

				public Integer getQTDE_VENDAS () {
					return this.QTDE_VENDAS;
				}

				public Boolean QTDE_VENDASIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDASIsKey(){
				    return false;
				}
				public Integer QTDE_VENDASLength(){
				    return null;
				}
				public Integer QTDE_VENDASPrecision(){
				    return null;
				}
				public String QTDE_VENDASDefault(){
				
					return null;
				
				}
				public String QTDE_VENDASComment(){
				
				    return "";
				
				}
				public String QTDE_VENDASPattern(){
				
					return "";
				
				}
				public String QTDE_VENDASOriginalDbColumnName(){
				
					return "QTDE_VENDAS";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double Acumulado;

				public Double getAcumulado () {
					return this.Acumulado;
				}

				public Boolean AcumuladoIsNullable(){
				    return true;
				}
				public Boolean AcumuladoIsKey(){
				    return false;
				}
				public Integer AcumuladoLength(){
				    return null;
				}
				public Integer AcumuladoPrecision(){
				    return 2;
				}
				public String AcumuladoDefault(){
				
					return null;
				
				}
				public String AcumuladoComment(){
				
				    return "";
				
				}
				public String AcumuladoPattern(){
				
					return "";
				
				}
				public String AcumuladoOriginalDbColumnName(){
				
					return "Acumulado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.Curva = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.Curva = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.Curva,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.Curva,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",Curva="+Curva);
		sb.append(",QTDE_VENDAS_ITEM="+String.valueOf(QTDE_VENDAS_ITEM));
		sb.append(",QTDE_VENDAS="+String.valueOf(QTDE_VENDAS));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",Acumulado="+String.valueOf(Acumulado));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(curvaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8_0Struct implements routines.system.IPersistableRow<row8_0Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS_ITEM;

				public Integer getQTDE_VENDAS_ITEM () {
					return this.QTDE_VENDAS_ITEM;
				}

				public Boolean QTDE_VENDAS_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDAS_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_VENDAS_ITEMLength(){
				    return null;
				}
				public Integer QTDE_VENDAS_ITEMPrecision(){
				    return null;
				}
				public String QTDE_VENDAS_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_VENDAS_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_VENDAS_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_VENDAS_ITEMOriginalDbColumnName(){
				
					return "QTDE_VENDAS_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS;

				public Integer getQTDE_VENDAS () {
					return this.QTDE_VENDAS;
				}

				public Boolean QTDE_VENDASIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDASIsKey(){
				    return false;
				}
				public Integer QTDE_VENDASLength(){
				    return null;
				}
				public Integer QTDE_VENDASPrecision(){
				    return null;
				}
				public String QTDE_VENDASDefault(){
				
					return null;
				
				}
				public String QTDE_VENDASComment(){
				
				    return "";
				
				}
				public String QTDE_VENDASPattern(){
				
					return "";
				
				}
				public String QTDE_VENDASOriginalDbColumnName(){
				
					return "QTDE_VENDAS";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double Acumulado;

				public Double getAcumulado () {
					return this.Acumulado;
				}

				public Boolean AcumuladoIsNullable(){
				    return true;
				}
				public Boolean AcumuladoIsKey(){
				    return false;
				}
				public Integer AcumuladoLength(){
				    return null;
				}
				public Integer AcumuladoPrecision(){
				    return 2;
				}
				public String AcumuladoDefault(){
				
					return null;
				
				}
				public String AcumuladoComment(){
				
				    return "";
				
				}
				public String AcumuladoPattern(){
				
					return "";
				
				}
				public String AcumuladoOriginalDbColumnName(){
				
					return "Acumulado";
				
				}

				
			    public String Curva;

				public String getCurva () {
					return this.Curva;
				}

				public Boolean CurvaIsNullable(){
				    return true;
				}
				public Boolean CurvaIsKey(){
				    return false;
				}
				public Integer CurvaLength(){
				    return null;
				}
				public Integer CurvaPrecision(){
				    return null;
				}
				public String CurvaDefault(){
				
					return null;
				
				}
				public String CurvaComment(){
				
				    return "";
				
				}
				public String CurvaPattern(){
				
					return "";
				
				}
				public String CurvaOriginalDbColumnName(){
				
					return "Curva";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
					this.Curva = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
					this.Curva = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
					// String
				
						writeString(this.Curva,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
					// String
				
						writeString(this.Curva,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",QTDE_VENDAS_ITEM="+String.valueOf(QTDE_VENDAS_ITEM));
		sb.append(",QTDE_VENDAS="+String.valueOf(QTDE_VENDAS));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",Acumulado="+String.valueOf(Acumulado));
		sb.append(",Curva="+Curva);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8_0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS_ITEM;

				public Integer getQTDE_VENDAS_ITEM () {
					return this.QTDE_VENDAS_ITEM;
				}

				public Boolean QTDE_VENDAS_ITEMIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDAS_ITEMIsKey(){
				    return false;
				}
				public Integer QTDE_VENDAS_ITEMLength(){
				    return null;
				}
				public Integer QTDE_VENDAS_ITEMPrecision(){
				    return null;
				}
				public String QTDE_VENDAS_ITEMDefault(){
				
					return null;
				
				}
				public String QTDE_VENDAS_ITEMComment(){
				
				    return "";
				
				}
				public String QTDE_VENDAS_ITEMPattern(){
				
					return "";
				
				}
				public String QTDE_VENDAS_ITEMOriginalDbColumnName(){
				
					return "QTDE_VENDAS_ITEM";
				
				}

				
			    public Integer QTDE_VENDAS;

				public Integer getQTDE_VENDAS () {
					return this.QTDE_VENDAS;
				}

				public Boolean QTDE_VENDASIsNullable(){
				    return true;
				}
				public Boolean QTDE_VENDASIsKey(){
				    return false;
				}
				public Integer QTDE_VENDASLength(){
				    return null;
				}
				public Integer QTDE_VENDASPrecision(){
				    return null;
				}
				public String QTDE_VENDASDefault(){
				
					return null;
				
				}
				public String QTDE_VENDASComment(){
				
				    return "";
				
				}
				public String QTDE_VENDASPattern(){
				
					return "";
				
				}
				public String QTDE_VENDASOriginalDbColumnName(){
				
					return "QTDE_VENDAS";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double Acumulado;

				public Double getAcumulado () {
					return this.Acumulado;
				}

				public Boolean AcumuladoIsNullable(){
				    return true;
				}
				public Boolean AcumuladoIsKey(){
				    return false;
				}
				public Integer AcumuladoLength(){
				    return null;
				}
				public Integer AcumuladoPrecision(){
				    return 2;
				}
				public String AcumuladoDefault(){
				
					return null;
				
				}
				public String AcumuladoComment(){
				
				    return "";
				
				}
				public String AcumuladoPattern(){
				
					return "";
				
				}
				public String AcumuladoOriginalDbColumnName(){
				
					return "Acumulado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
						this.QTDE_VENDAS_ITEM = readInteger(dis);
					
						this.QTDE_VENDAS = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumulado = null;
           				} else {
           			    	this.Acumulado = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS_ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTDE_VENDAS,dos);
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumulado == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumulado);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",QTDE_VENDAS_ITEM="+String.valueOf(QTDE_VENDAS_ITEM));
		sb.append(",QTDE_VENDAS="+String.valueOf(QTDE_VENDAS));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",Acumulado="+String.valueOf(Acumulado));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();
row8_0Struct row8_0 = new row8_0Struct();
curvaStruct curva = new curvaStruct();






	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"curva");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<curvaStruct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<curvaStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8_0");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
curvaStruct curva_tmp = new curvaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tJavaRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_2", false);
		start_Hash.put("tJavaRow_2", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tJavaRow_2 = 0;
		

int nb_line_tJavaRow_2 = 0;

 



/**
 * [tJavaRow_2 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row8Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row8Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row8Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row9.CODIGO_ITEM = next_tHashInput_2.CODIGO_ITEM;
	row9.QTDE_VENDAS_ITEM = next_tHashInput_2.QTDE_VENDAS_ITEM;
	row9.QTDE_VENDAS = next_tHashInput_2.QTDE_VENDAS;
	row9.PERCENT = next_tHashInput_2.PERCENT;
	row9.Acumulado = next_tHashInput_2.Acumulado;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_2 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					

    //Code generate according to input schema and output schema
row8_0.CODIGO_ITEM = row9.CODIGO_ITEM;
row8_0.QTDE_VENDAS_ITEM = row9.QTDE_VENDAS_ITEM;
row8_0.QTDE_VENDAS = row9.QTDE_VENDAS;
row8_0.PERCENT = row9.PERCENT;
row8_0.Acumulado = row9.Acumulado;

if (row9.Acumulado <= 50) {
row8_0.Curva = "A";
} else if (row9.Acumulado > 50 && row9.Acumulado <= 80) {
row8_0.Curva = "B";
//} else if (row9.Acumulado > 80 && row9.Acumulado <= 99) {
//row8_0.Curva = "C";
} else {
row8_0.Curva = "C";
//row8_0.Curva = "SV";
}
    nb_line_tJavaRow_2++;   

 


	tos_count_tJavaRow_2++;

/**
 * [tJavaRow_2 main ] stop
 */
	
	/**
	 * [tJavaRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8_0"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

curva = null;


// # Output table : 'curva'
curva_tmp.CODIGO_ITEM = row8_0.CODIGO_ITEM;
curva_tmp.Curva = row8_0.Curva;
curva_tmp.QTDE_VENDAS_ITEM = row8_0.QTDE_VENDAS_ITEM ;
curva_tmp.QTDE_VENDAS = row8_0.QTDE_VENDAS ;
curva_tmp.PERCENT = row8_0.PERCENT ;
curva_tmp.Acumulado = row8_0.Acumulado ;
curva = curva_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "curva"
if(curva != null) { 



	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"curva"
						
						);
					}
					



    
		curvaStruct oneRow_tHashOutput_4 = new curvaStruct();
				
					oneRow_tHashOutput_4.CODIGO_ITEM = curva.CODIGO_ITEM;
					oneRow_tHashOutput_4.Curva = curva.Curva;
					oneRow_tHashOutput_4.QTDE_VENDAS_ITEM = curva.QTDE_VENDAS_ITEM;
					oneRow_tHashOutput_4.QTDE_VENDAS = curva.QTDE_VENDAS;
					oneRow_tHashOutput_4.PERCENT = curva.PERCENT;
					oneRow_tHashOutput_4.Acumulado = curva.Acumulado;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */

} // End of branch "curva"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tJavaRow_2 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

globalMap.put("tJavaRow_2_NB_LINE",nb_line_tJavaRow_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tJavaRow_2", true);
end_Hash.put("tJavaRow_2", System.currentTimeMillis());




/**
 * [tJavaRow_2 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8_0");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"curva");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tJavaRow_2 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_2";
	
	

 



/**
 * [tJavaRow_2 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


System.out.println("Iniciado Consulta de dados para gerar ranking (VALOR MONETARIO) em: "+TalendDate.getCurrentDate());


 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk20", 0, "ok");
								} 
							
							tDBInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double Acumuladovlr;

				public Double getAcumuladovlr () {
					return this.Acumuladovlr;
				}

				public Boolean AcumuladovlrIsNullable(){
				    return true;
				}
				public Boolean AcumuladovlrIsKey(){
				    return false;
				}
				public Integer AcumuladovlrLength(){
				    return null;
				}
				public Integer AcumuladovlrPrecision(){
				    return null;
				}
				public String AcumuladovlrDefault(){
				
					return null;
				
				}
				public String AcumuladovlrComment(){
				
				    return "";
				
				}
				public String AcumuladovlrPattern(){
				
					return "";
				
				}
				public String AcumuladovlrOriginalDbColumnName(){
				
					return "Acumuladovlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumuladovlr = null;
           				} else {
           			    	this.Acumuladovlr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumuladovlr = null;
           				} else {
           			    	this.Acumuladovlr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumuladovlr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumuladovlr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumuladovlr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumuladovlr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",Acumuladovlr="+String.valueOf(Acumuladovlr));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();
row12Struct row12 = new row12Struct();





	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_3", false);
		start_Hash.put("tJavaRow_3", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tJavaRow_3 = 0;
		

int nb_line_tJavaRow_3 = 0;

 



/**
 * [tJavaRow_3 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_3 = java.util.Calendar.getInstance();
		    calendar_tDBInput_3.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_3 = calendar_tDBInput_3.getTime();
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "SELECT TB.CODIGO_ITEM,\n       TB.TOTAL_VENDA_ITEM,\n       TB.TOTAL_VENDA,\n       ROUND ((TB.TOTAL_VENDA_ITEM/TB.TOTA"
+"L_VENDA),6)*100      PERCENT\n  FROM (SELECT COD_ITEM                     CODIGO_ITEM,\n       SUM(VF.TOTAL_VENDA)      "
+"               TOTAL_VENDA_ITEM,\n       (SELECT SUM(VF1.TOTAL_VENDA)\n          FROM VW_FATURAMENTO VF1\n		     WHERE V"
+"F1.DATA_ANO >= (YEAR(CURRENT_DATE())-1)\n   AND VF1.DATA_MES >= MONTH(CURRENT_DATE())) TOTAL_VENDA\n  FROM VW_FATURAMENT"
+"O VF\n	 WHERE VF.DATA_ANO >= (YEAR(CURRENT_DATE())-1)\n   AND VF.DATA_MES >= MONTH(CURRENT_DATE())\nGROUP BY COD_ITEM\n "
+"  )TB\n ORDER BY PERCENT DESC";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row11.CODIGO_ITEM = null;
							} else {
	                         		
        	row11.CODIGO_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row11.total_venda_item = null;
							} else {
	                         		
            row11.total_venda_item = rs_tDBInput_3.getDouble(2);
            if(rs_tDBInput_3.wasNull()){
                    row11.total_venda_item = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row11.total_venda = null;
							} else {
	                         		
            row11.total_venda = rs_tDBInput_3.getDouble(3);
            if(rs_tDBInput_3.wasNull()){
                    row11.total_venda = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row11.PERCENT = null;
							} else {
	                         		
            row11.PERCENT = rs_tDBInput_3.getDouble(4);
            if(rs_tDBInput_3.wasNull()){
                    row11.PERCENT = null;
            }
		                    }
					

 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_3 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

    //Code generate according to input schema and output schema
row12.CODIGO_ITEM = row11.CODIGO_ITEM;
row12.total_venda_item = row11.total_venda_item;
row12.total_venda = row11.total_venda;
row12.PERCENT = row11.PERCENT;

context.Acumuladovlr = context.Acumuladovlr + row11.PERCENT;
row12.Acumuladovlr = context.Acumuladovlr;
    nb_line_tJavaRow_3++;   

 


	tos_count_tJavaRow_3++;

/**
 * [tJavaRow_3 main ] stop
 */
	
	/**
	 * [tJavaRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					



    
		row12Struct oneRow_tHashOutput_5 = new row12Struct();
				
					oneRow_tHashOutput_5.CODIGO_ITEM = row12.CODIGO_ITEM;
					oneRow_tHashOutput_5.total_venda_item = row12.total_venda_item;
					oneRow_tHashOutput_5.total_venda = row12.total_venda;
					oneRow_tHashOutput_5.PERCENT = row12.PERCENT;
					oneRow_tHashOutput_5.Acumuladovlr = row12.Acumuladovlr;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);

 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tJavaRow_3 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

globalMap.put("tJavaRow_3_NB_LINE",nb_line_tJavaRow_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tJavaRow_3", true);
end_Hash.put("tJavaRow_3", System.currentTimeMillis());




/**
 * [tJavaRow_3 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tJavaRow_3 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_3";
	
	

 



/**
 * [tJavaRow_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcurvaStruct implements routines.system.IPersistableRow<copyOfcurvaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String Curva_vlr;

				public String getCurva_vlr () {
					return this.Curva_vlr;
				}

				public Boolean Curva_vlrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlrIsKey(){
				    return false;
				}
				public Integer Curva_vlrLength(){
				    return null;
				}
				public Integer Curva_vlrPrecision(){
				    return null;
				}
				public String Curva_vlrDefault(){
				
					return null;
				
				}
				public String Curva_vlrComment(){
				
				    return "";
				
				}
				public String Curva_vlrPattern(){
				
					return "";
				
				}
				public String Curva_vlrOriginalDbColumnName(){
				
					return "Curva_vlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.Curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.Curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",Curva_vlr="+Curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcurvaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double Acumuladovlr;

				public Double getAcumuladovlr () {
					return this.Acumuladovlr;
				}

				public Boolean AcumuladovlrIsNullable(){
				    return true;
				}
				public Boolean AcumuladovlrIsKey(){
				    return false;
				}
				public Integer AcumuladovlrLength(){
				    return null;
				}
				public Integer AcumuladovlrPrecision(){
				    return 2;
				}
				public String AcumuladovlrDefault(){
				
					return null;
				
				}
				public String AcumuladovlrComment(){
				
				    return "";
				
				}
				public String AcumuladovlrPattern(){
				
					return "";
				
				}
				public String AcumuladovlrOriginalDbColumnName(){
				
					return "Acumuladovlr";
				
				}

				
			    public String Curva;

				public String getCurva () {
					return this.Curva;
				}

				public Boolean CurvaIsNullable(){
				    return true;
				}
				public Boolean CurvaIsKey(){
				    return false;
				}
				public Integer CurvaLength(){
				    return null;
				}
				public Integer CurvaPrecision(){
				    return null;
				}
				public String CurvaDefault(){
				
					return null;
				
				}
				public String CurvaComment(){
				
				    return "";
				
				}
				public String CurvaPattern(){
				
					return "";
				
				}
				public String CurvaOriginalDbColumnName(){
				
					return "Curva";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumuladovlr = null;
           				} else {
           			    	this.Acumuladovlr = dis.readDouble();
           				}
					
					this.Curva = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumuladovlr = null;
           				} else {
           			    	this.Acumuladovlr = dis.readDouble();
           				}
					
					this.Curva = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumuladovlr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumuladovlr);
		            	}
					
					// String
				
						writeString(this.Curva,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumuladovlr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumuladovlr);
		            	}
					
					// String
				
						writeString(this.Curva,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",Acumuladovlr="+String.valueOf(Acumuladovlr));
		sb.append(",Curva="+Curva);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double Acumuladovlr;

				public Double getAcumuladovlr () {
					return this.Acumuladovlr;
				}

				public Boolean AcumuladovlrIsNullable(){
				    return true;
				}
				public Boolean AcumuladovlrIsKey(){
				    return false;
				}
				public Integer AcumuladovlrLength(){
				    return null;
				}
				public Integer AcumuladovlrPrecision(){
				    return 2;
				}
				public String AcumuladovlrDefault(){
				
					return null;
				
				}
				public String AcumuladovlrComment(){
				
				    return "";
				
				}
				public String AcumuladovlrPattern(){
				
					return "";
				
				}
				public String AcumuladovlrOriginalDbColumnName(){
				
					return "Acumuladovlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumuladovlr = null;
           				} else {
           			    	this.Acumuladovlr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.Acumuladovlr = null;
           				} else {
           			    	this.Acumuladovlr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumuladovlr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumuladovlr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.Acumuladovlr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.Acumuladovlr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",Acumuladovlr="+String.valueOf(Acumuladovlr));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();
row14Struct row14 = new row14Struct();
copyOfcurvaStruct copyOfcurva = new copyOfcurvaStruct();






	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcurva");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcurvaStruct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcurvaStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcurvaStruct copyOfcurva_tmp = new copyOfcurvaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tJavaRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_4", false);
		start_Hash.put("tJavaRow_4", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tJavaRow_4 = 0;
		

int nb_line_tJavaRow_4 = 0;

 



/**
 * [tJavaRow_4 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row12Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row12Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row12Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row13.CODIGO_ITEM = next_tHashInput_5.CODIGO_ITEM;
	row13.total_venda_item = next_tHashInput_5.total_venda_item;
	row13.total_venda = next_tHashInput_5.total_venda;
	row13.PERCENT = next_tHashInput_5.PERCENT;
	row13.Acumuladovlr = next_tHashInput_5.Acumuladovlr;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_4 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					

    //Code generate according to input schema and output schema
row14.CODIGO_ITEM = row13.CODIGO_ITEM;
row14.total_venda_item = row13.total_venda_item;
row14.total_venda = row13.total_venda;
row14.PERCENT = row13.PERCENT;
row14.Acumuladovlr = row13.Acumuladovlr;

if (row13.Acumuladovlr <= 50) {
row14.Curva = "A";
} else if (row13.Acumuladovlr > 50 && row13.Acumuladovlr <= 80) {
row14.Curva = "B";
//} else if (row13.Acumuladovlr > 80 && row13.Acumuladovlr <= 99) {
//row14.Curva = "C";
} else {
row14.Curva = "C";
//row14.Curva = "SV";
}
    nb_line_tJavaRow_4++;   

 


	tos_count_tJavaRow_4++;

/**
 * [tJavaRow_4 main ] stop
 */
	
	/**
	 * [tJavaRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

copyOfcurva = null;


// # Output table : 'copyOfcurva'
copyOfcurva_tmp.CODIGO_ITEM = row14.CODIGO_ITEM;
copyOfcurva_tmp.Curva_vlr = row14.Curva;
copyOfcurva = copyOfcurva_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "copyOfcurva"
if(copyOfcurva != null) { 



	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcurva"
						
						);
					}
					



    
		copyOfcurvaStruct oneRow_tHashOutput_6 = new copyOfcurvaStruct();
				
					oneRow_tHashOutput_6.CODIGO_ITEM = copyOfcurva.CODIGO_ITEM;
					oneRow_tHashOutput_6.Curva_vlr = copyOfcurva.Curva_vlr;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */

} // End of branch "copyOfcurva"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tJavaRow_4 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

globalMap.put("tJavaRow_4_NB_LINE",nb_line_tJavaRow_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tJavaRow_4", true);
end_Hash.put("tJavaRow_4", System.currentTimeMillis());




/**
 * [tJavaRow_4 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcurva");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tJavaRow_4 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_4";
	
	

 



/**
 * [tJavaRow_4 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public void tJava_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_7", false);
		start_Hash.put("tJava_7", System.currentTimeMillis());
		
	
	currentComponent="tJava_7";
	
	
		int tos_count_tJava_7 = 0;
		


System.out.println("Iniciado Consulta de dados para gerar ranking (VALOR MONETARIO) com Agregação de empresa em: "+TalendDate.getCurrentDate());


 



/**
 * [tJava_7 begin ] stop
 */
	
	/**
	 * [tJava_7 main ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 


	tos_count_tJava_7++;

/**
 * [tJava_7 main ] stop
 */
	
	/**
	 * [tJava_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_begin ] stop
 */
	
	/**
	 * [tJava_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 process_data_end ] stop
 */
	
	/**
	 * [tJava_7 end ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 

ok_Hash.put("tJava_7", true);
end_Hash.put("tJava_7", System.currentTimeMillis());




/**
 * [tJava_7 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_7:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tDBInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_7 finally ] start
	 */

	

	
	
	currentComponent="tJava_7";
	
	

 



/**
 * [tJava_7 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_7_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double AcumuladovlrAgr;

				public Double getAcumuladovlrAgr () {
					return this.AcumuladovlrAgr;
				}

				public Boolean AcumuladovlrAgrIsNullable(){
				    return true;
				}
				public Boolean AcumuladovlrAgrIsKey(){
				    return false;
				}
				public Integer AcumuladovlrAgrLength(){
				    return null;
				}
				public Integer AcumuladovlrAgrPrecision(){
				    return null;
				}
				public String AcumuladovlrAgrDefault(){
				
					return null;
				
				}
				public String AcumuladovlrAgrComment(){
				
				    return "";
				
				}
				public String AcumuladovlrAgrPattern(){
				
					return "";
				
				}
				public String AcumuladovlrAgrOriginalDbColumnName(){
				
					return "AcumuladovlrAgr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.AcumuladovlrAgr = null;
           				} else {
           			    	this.AcumuladovlrAgr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.AcumuladovlrAgr = null;
           				} else {
           			    	this.AcumuladovlrAgr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.AcumuladovlrAgr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.AcumuladovlrAgr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.AcumuladovlrAgr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.AcumuladovlrAgr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",AcumuladovlrAgr="+String.valueOf(AcumuladovlrAgr));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();
row19Struct row19 = new row19Struct();





	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row19Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row19Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tJavaRow_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_5", false);
		start_Hash.put("tJavaRow_5", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tJavaRow_5 = 0;
		

int nb_line_tJavaRow_5 = 0;

 



/**
 * [tJavaRow_5 begin ] stop
 */



	
	/**
	 * [tDBInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_6", false);
		start_Hash.put("tDBInput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_6";
	
	
		int tos_count_tDBInput_6 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_6 = java.util.Calendar.getInstance();
		    calendar_tDBInput_6.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_6 = calendar_tDBInput_6.getTime();
		    int nb_line_tDBInput_6 = 0;
		    java.sql.Connection conn_tDBInput_6 = null;
				conn_tDBInput_6 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_6 = conn_tDBInput_6.createStatement();

		    String dbquery_tDBInput_6 = "SELECT\n	TB.CODIGO_ITEM,\n	TB.CODE_CURVA_EMP,\n	TB.TOTAL_VENDA_ITEM,\n	TB.TOTAL_VENDA,\n	ROUND ((TB.TOTAL_VENDA_ITEM / "
+"TB.TOTAL_VENDA),6)* 100 PERCENT\nFROM\n	(\n	SELECT COD_ITEM CODIGO_ITEM,\n		   CASE\n			   WHEN EMPRESA = '010' THEN 'MG"
+"'\n			   WHEN EMPRESA = '201' THEN 'REI'\n			   ELSE 'CD'\n		   END AS CODE_CURVA_EMP,\n		   SUM(VF.TOTAL_VENDA) TOTAL_V"
+"ENDA_ITEM,\n		   (\n		    SELECT SUM(VF1.TOTAL_VENDA)\n		      FROM VW_FATURAMENTO VF1\n		     WHERE VF1.DATA_ANO >= (YE"
+"AR(CURRENT_DATE())-1)\n   AND VF1.DATA_MES >= MONTH(CURRENT_DATE())) TOTAL_VENDA\n	  FROM VW_FATURAMENTO VF\n	 WHERE VF."
+"DATA_ANO >= (YEAR(CURRENT_DATE())-1)\n   AND VF.DATA_MES >= MONTH(CURRENT_DATE())\n	 GROUP BY COD_ITEM, CODE_CURVA_EMP )"
+"TB\nORDER BY PERCENT DESC";
		    

		    globalMap.put("tDBInput_6_QUERY",dbquery_tDBInput_6);

		    java.sql.ResultSet rs_tDBInput_6 = null;

		    try {
		    	rs_tDBInput_6 = stmt_tDBInput_6.executeQuery(dbquery_tDBInput_6);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_6 = rs_tDBInput_6.getMetaData();
		    	int colQtyInRs_tDBInput_6 = rsmd_tDBInput_6.getColumnCount();

		    String tmpContent_tDBInput_6 = null;
		    
		    
		    while (rs_tDBInput_6.next()) {
		        nb_line_tDBInput_6++;
		        
							if(colQtyInRs_tDBInput_6 < 1) {
								row18.CODIGO_ITEM = null;
							} else {
	                         		
        	row18.CODIGO_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_6, 1, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 2) {
								row18.code_curva_emp = null;
							} else {
	                         		
        	row18.code_curva_emp = routines.system.JDBCUtil.getString(rs_tDBInput_6, 2, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 3) {
								row18.total_venda_item = null;
							} else {
	                         		
            row18.total_venda_item = rs_tDBInput_6.getDouble(3);
            if(rs_tDBInput_6.wasNull()){
                    row18.total_venda_item = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 4) {
								row18.total_venda = null;
							} else {
	                         		
            row18.total_venda = rs_tDBInput_6.getDouble(4);
            if(rs_tDBInput_6.wasNull()){
                    row18.total_venda = null;
            }
		                    }
							if(colQtyInRs_tDBInput_6 < 5) {
								row18.PERCENT = null;
							} else {
	                         		
            row18.PERCENT = rs_tDBInput_6.getDouble(5);
            if(rs_tDBInput_6.wasNull()){
                    row18.PERCENT = null;
            }
		                    }
					

 



/**
 * [tDBInput_6 begin ] stop
 */
	
	/**
	 * [tDBInput_6 main ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 


	tos_count_tDBInput_6++;

/**
 * [tDBInput_6 main ] stop
 */
	
	/**
	 * [tDBInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_5 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					

    //Code generate according to input schema and output schema
row19.CODIGO_ITEM = row18.CODIGO_ITEM;
row19.code_curva_emp = row18.code_curva_emp;
row19.total_venda_item = row18.total_venda_item;
row19.total_venda = row18.total_venda;
row19.PERCENT = row18.PERCENT;

context.AcumuladovlrAgr = context.AcumuladovlrAgr + row18.PERCENT;
row19.AcumuladovlrAgr = context.AcumuladovlrAgr;
    nb_line_tJavaRow_5++;   

 


	tos_count_tJavaRow_5++;

/**
 * [tJavaRow_5 main ] stop
 */
	
	/**
	 * [tJavaRow_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					



    
		row19Struct oneRow_tHashOutput_7 = new row19Struct();
				
					oneRow_tHashOutput_7.CODIGO_ITEM = row19.CODIGO_ITEM;
					oneRow_tHashOutput_7.code_curva_emp = row19.code_curva_emp;
					oneRow_tHashOutput_7.total_venda_item = row19.total_venda_item;
					oneRow_tHashOutput_7.total_venda = row19.total_venda;
					oneRow_tHashOutput_7.PERCENT = row19.PERCENT;
					oneRow_tHashOutput_7.AcumuladovlrAgr = row19.AcumuladovlrAgr;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_6 end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

	}
}finally{
	if (rs_tDBInput_6 != null) {
		rs_tDBInput_6.close();
	}
	if (stmt_tDBInput_6 != null) {
		stmt_tDBInput_6.close();
	}
}
globalMap.put("tDBInput_6_NB_LINE",nb_line_tDBInput_6);

 

ok_Hash.put("tDBInput_6", true);
end_Hash.put("tDBInput_6", System.currentTimeMillis());




/**
 * [tDBInput_6 end ] stop
 */

	
	/**
	 * [tJavaRow_5 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

globalMap.put("tJavaRow_5_NB_LINE",nb_line_tJavaRow_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tJavaRow_5", true);
end_Hash.put("tJavaRow_5", System.currentTimeMillis());




/**
 * [tJavaRow_5 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk31", 0, "ok");
								} 
							
							tHashInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_5 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_5";
	
	

 



/**
 * [tJavaRow_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcurvaStruct implements routines.system.IPersistableRow<copyOfcopyOfcurvaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public String Curva_vlr_Agr;

				public String getCurva_vlr_Agr () {
					return this.Curva_vlr_Agr;
				}

				public Boolean Curva_vlr_AgrIsNullable(){
				    return true;
				}
				public Boolean Curva_vlr_AgrIsKey(){
				    return false;
				}
				public Integer Curva_vlr_AgrLength(){
				    return null;
				}
				public Integer Curva_vlr_AgrPrecision(){
				    return null;
				}
				public String Curva_vlr_AgrDefault(){
				
					return null;
				
				}
				public String Curva_vlr_AgrComment(){
				
				    return "";
				
				}
				public String Curva_vlr_AgrPattern(){
				
					return "";
				
				}
				public String Curva_vlr_AgrOriginalDbColumnName(){
				
					return "Curva_vlr_Agr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.Curva_vlr_Agr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
					this.Curva_vlr_Agr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.Curva_vlr_Agr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// String
				
						writeString(this.Curva_vlr_Agr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",Curva_vlr_Agr="+Curva_vlr_Agr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcurvaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double AcumuladovlrAgr;

				public Double getAcumuladovlrAgr () {
					return this.AcumuladovlrAgr;
				}

				public Boolean AcumuladovlrAgrIsNullable(){
				    return true;
				}
				public Boolean AcumuladovlrAgrIsKey(){
				    return false;
				}
				public Integer AcumuladovlrAgrLength(){
				    return null;
				}
				public Integer AcumuladovlrAgrPrecision(){
				    return 2;
				}
				public String AcumuladovlrAgrDefault(){
				
					return null;
				
				}
				public String AcumuladovlrAgrComment(){
				
				    return "";
				
				}
				public String AcumuladovlrAgrPattern(){
				
					return "";
				
				}
				public String AcumuladovlrAgrOriginalDbColumnName(){
				
					return "AcumuladovlrAgr";
				
				}

				
			    public String Curva;

				public String getCurva () {
					return this.Curva;
				}

				public Boolean CurvaIsNullable(){
				    return true;
				}
				public Boolean CurvaIsKey(){
				    return false;
				}
				public Integer CurvaLength(){
				    return null;
				}
				public Integer CurvaPrecision(){
				    return null;
				}
				public String CurvaDefault(){
				
					return null;
				
				}
				public String CurvaComment(){
				
				    return "";
				
				}
				public String CurvaPattern(){
				
					return "";
				
				}
				public String CurvaOriginalDbColumnName(){
				
					return "Curva";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.AcumuladovlrAgr = null;
           				} else {
           			    	this.AcumuladovlrAgr = dis.readDouble();
           				}
					
					this.Curva = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.AcumuladovlrAgr = null;
           				} else {
           			    	this.AcumuladovlrAgr = dis.readDouble();
           				}
					
					this.Curva = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.AcumuladovlrAgr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.AcumuladovlrAgr);
		            	}
					
					// String
				
						writeString(this.Curva,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.AcumuladovlrAgr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.AcumuladovlrAgr);
		            	}
					
					// String
				
						writeString(this.Curva,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",AcumuladovlrAgr="+String.valueOf(AcumuladovlrAgr));
		sb.append(",Curva="+Curva);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String code_curva_emp;

				public String getCode_curva_emp () {
					return this.code_curva_emp;
				}

				public Boolean code_curva_empIsNullable(){
				    return true;
				}
				public Boolean code_curva_empIsKey(){
				    return false;
				}
				public Integer code_curva_empLength(){
				    return null;
				}
				public Integer code_curva_empPrecision(){
				    return null;
				}
				public String code_curva_empDefault(){
				
					return null;
				
				}
				public String code_curva_empComment(){
				
				    return "";
				
				}
				public String code_curva_empPattern(){
				
					return "";
				
				}
				public String code_curva_empOriginalDbColumnName(){
				
					return "code_curva_emp";
				
				}

				
			    public Double total_venda_item;

				public Double getTotal_venda_item () {
					return this.total_venda_item;
				}

				public Boolean total_venda_itemIsNullable(){
				    return true;
				}
				public Boolean total_venda_itemIsKey(){
				    return false;
				}
				public Integer total_venda_itemLength(){
				    return null;
				}
				public Integer total_venda_itemPrecision(){
				    return null;
				}
				public String total_venda_itemDefault(){
				
					return null;
				
				}
				public String total_venda_itemComment(){
				
				    return "";
				
				}
				public String total_venda_itemPattern(){
				
					return "";
				
				}
				public String total_venda_itemOriginalDbColumnName(){
				
					return "total_venda_item";
				
				}

				
			    public Double total_venda;

				public Double getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				
			    public Double PERCENT;

				public Double getPERCENT () {
					return this.PERCENT;
				}

				public Boolean PERCENTIsNullable(){
				    return true;
				}
				public Boolean PERCENTIsKey(){
				    return false;
				}
				public Integer PERCENTLength(){
				    return null;
				}
				public Integer PERCENTPrecision(){
				    return null;
				}
				public String PERCENTDefault(){
				
					return null;
				
				}
				public String PERCENTComment(){
				
				    return "";
				
				}
				public String PERCENTPattern(){
				
					return "";
				
				}
				public String PERCENTOriginalDbColumnName(){
				
					return "PERCENT";
				
				}

				
			    public Double AcumuladovlrAgr;

				public Double getAcumuladovlrAgr () {
					return this.AcumuladovlrAgr;
				}

				public Boolean AcumuladovlrAgrIsNullable(){
				    return true;
				}
				public Boolean AcumuladovlrAgrIsKey(){
				    return false;
				}
				public Integer AcumuladovlrAgrLength(){
				    return null;
				}
				public Integer AcumuladovlrAgrPrecision(){
				    return 2;
				}
				public String AcumuladovlrAgrDefault(){
				
					return null;
				
				}
				public String AcumuladovlrAgrComment(){
				
				    return "";
				
				}
				public String AcumuladovlrAgrPattern(){
				
					return "";
				
				}
				public String AcumuladovlrAgrOriginalDbColumnName(){
				
					return "AcumuladovlrAgr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.AcumuladovlrAgr = null;
           				} else {
           			    	this.AcumuladovlrAgr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.code_curva_emp = readString(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda_item = null;
           				} else {
           			    	this.total_venda_item = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.total_venda = null;
           				} else {
           			    	this.total_venda = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.PERCENT = null;
           				} else {
           			    	this.PERCENT = dis.readDouble();
           				}
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.AcumuladovlrAgr = null;
           				} else {
           			    	this.AcumuladovlrAgr = dis.readDouble();
           				}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.AcumuladovlrAgr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.AcumuladovlrAgr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.code_curva_emp,dos);
					
					// Double
				
						if(this.total_venda_item == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda_item);
		            	}
					
					// Double
				
						if(this.total_venda == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.total_venda);
		            	}
					
					// Double
				
						if(this.PERCENT == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.PERCENT);
		            	}
					
					// Double
				
						if(this.AcumuladovlrAgr == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeDouble(this.AcumuladovlrAgr);
		            	}
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",code_curva_emp="+code_curva_emp);
		sb.append(",total_venda_item="+String.valueOf(total_venda_item));
		sb.append(",total_venda="+String.valueOf(total_venda));
		sb.append(",PERCENT="+String.valueOf(PERCENT));
		sb.append(",AcumuladovlrAgr="+String.valueOf(AcumuladovlrAgr));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();
row21Struct row21 = new row21Struct();
copyOfcopyOfcurvaStruct copyOfcopyOfcurva = new copyOfcopyOfcurvaStruct();






	
	/**
	 * [tHashOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_8", false);
		start_Hash.put("tHashOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcurva");
					}
				
		int tos_count_tHashOutput_8 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfcurvaStruct> tHashFile_tHashOutput_8 = null;
		String hashKey_tHashOutput_8 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_8";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_8)){
			    if(mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8) == null){
	      		    mf_tHashOutput_8.getResourceMap().put(hashKey_tHashOutput_8, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfcopyOfcurvaStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }else{
			    	tHashFile_tHashOutput_8 = mf_tHashOutput_8.getResourceMap().get(hashKey_tHashOutput_8);
			    }
			}
        int nb_line_tHashOutput_8 = 0;

 



/**
 * [tHashOutput_8 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcurvaStruct copyOfcopyOfcurva_tmp = new copyOfcopyOfcurvaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tJavaRow_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_6", false);
		start_Hash.put("tJavaRow_6", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tJavaRow_6 = 0;
		

int nb_line_tJavaRow_6 = 0;

 



/**
 * [tJavaRow_6 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row19Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row19Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row19Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row20.CODIGO_ITEM = next_tHashInput_6.CODIGO_ITEM;
	row20.code_curva_emp = next_tHashInput_6.code_curva_emp;
	row20.total_venda_item = next_tHashInput_6.total_venda_item;
	row20.total_venda = next_tHashInput_6.total_venda;
	row20.PERCENT = next_tHashInput_6.PERCENT;
	row20.AcumuladovlrAgr = next_tHashInput_6.AcumuladovlrAgr;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_6 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					

    //Code generate according to input schema and output schema
row21.CODIGO_ITEM = row20.CODIGO_ITEM;
row21.code_curva_emp = row20.code_curva_emp;
row21.total_venda_item = row20.total_venda_item;
row21.total_venda = row20.total_venda;
row21.PERCENT = row20.PERCENT;
row21.AcumuladovlrAgr = row20.AcumuladovlrAgr;

if (row20.AcumuladovlrAgr <= 50) {
row21.Curva = "A";
} else if (row20.AcumuladovlrAgr > 50 && row20.AcumuladovlrAgr <= 80) {
row21.Curva = "B";
//} else if (row20.AcumuladovlrAgr > 80 && row20.AcumuladovlrAgr <= 99) {
//row21.Curva = "C";
} else {
row21.Curva = "C";
//row21.Curva = "SV";
}
    nb_line_tJavaRow_6++;   

 


	tos_count_tJavaRow_6++;

/**
 * [tJavaRow_6 main ] stop
 */
	
	/**
	 * [tJavaRow_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcurva = null;


// # Output table : 'copyOfcopyOfcurva'
copyOfcopyOfcurva_tmp.CODIGO_ITEM = row21.CODIGO_ITEM;
copyOfcopyOfcurva_tmp.code_curva_emp = row21.code_curva_emp ;
copyOfcopyOfcurva_tmp.Curva_vlr_Agr = row21.Curva;
copyOfcopyOfcurva = copyOfcopyOfcurva_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcurva"
if(copyOfcopyOfcurva != null) { 



	
	/**
	 * [tHashOutput_8 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfcopyOfcurva"
						
						);
					}
					



    
		copyOfcopyOfcurvaStruct oneRow_tHashOutput_8 = new copyOfcopyOfcurvaStruct();
				
					oneRow_tHashOutput_8.CODIGO_ITEM = copyOfcopyOfcurva.CODIGO_ITEM;
					oneRow_tHashOutput_8.code_curva_emp = copyOfcopyOfcurva.code_curva_emp;
					oneRow_tHashOutput_8.Curva_vlr_Agr = copyOfcopyOfcurva.Curva_vlr_Agr;
		
        tHashFile_tHashOutput_8.put(oneRow_tHashOutput_8);
        nb_line_tHashOutput_8 ++;

 


	tos_count_tHashOutput_8++;

/**
 * [tHashOutput_8 main ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcurva"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tJavaRow_6 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

globalMap.put("tJavaRow_6_NB_LINE",nb_line_tJavaRow_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tJavaRow_6", true);
end_Hash.put("tJavaRow_6", System.currentTimeMillis());




/**
 * [tJavaRow_6 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tHashOutput_8 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	
globalMap.put("tHashOutput_8_NB_LINE", nb_line_tHashOutput_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcurva");
			  	}
			  	
 

ok_Hash.put("tHashOutput_8", true);
end_Hash.put("tHashOutput_8", System.currentTimeMillis());




/**
 * [tHashOutput_8 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tJavaRow_6 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_6";
	
	

 



/**
 * [tJavaRow_6 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tHashOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_8";
	
	

 



/**
 * [tHashOutput_8 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public void tJava_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_8", false);
		start_Hash.put("tJava_8", System.currentTimeMillis());
		
	
	currentComponent="tJava_8";
	
	
		int tos_count_tJava_8 = 0;
		


System.out.println("Iniciado Consulta de Status dos Produtos em: "+TalendDate.getCurrentDate());


 



/**
 * [tJava_8 begin ] stop
 */
	
	/**
	 * [tJava_8 main ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 


	tos_count_tJava_8++;

/**
 * [tJava_8 main ] stop
 */
	
	/**
	 * [tJava_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 



/**
 * [tJava_8 process_data_begin ] stop
 */
	
	/**
	 * [tJava_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 



/**
 * [tJava_8 process_data_end ] stop
 */
	
	/**
	 * [tJava_8 end ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 

ok_Hash.put("tJava_8", true);
end_Hash.put("tJava_8", System.currentTimeMillis());




/**
 * [tJava_8 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_8:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk27", 0, "ok");
								} 
							
							tDBInput_8Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_8 finally ] start
	 */

	

	
	
	currentComponent="tJava_8";
	
	

 



/**
 * [tJava_8 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_8_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String EMPRESA;

				public String getEMPRESA () {
					return this.EMPRESA;
				}

				public Boolean EMPRESAIsNullable(){
				    return true;
				}
				public Boolean EMPRESAIsKey(){
				    return false;
				}
				public Integer EMPRESALength(){
				    return null;
				}
				public Integer EMPRESAPrecision(){
				    return null;
				}
				public String EMPRESADefault(){
				
					return null;
				
				}
				public String EMPRESAComment(){
				
				    return "";
				
				}
				public String EMPRESAPattern(){
				
					return "";
				
				}
				public String EMPRESAOriginalDbColumnName(){
				
					return "EMPRESA";
				
				}

				
			    public String ATIVO_COMPRA;

				public String getATIVO_COMPRA () {
					return this.ATIVO_COMPRA;
				}

				public Boolean ATIVO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ATIVO_COMPRAIsKey(){
				    return false;
				}
				public Integer ATIVO_COMPRALength(){
				    return null;
				}
				public Integer ATIVO_COMPRAPrecision(){
				    return null;
				}
				public String ATIVO_COMPRADefault(){
				
					return null;
				
				}
				public String ATIVO_COMPRAComment(){
				
				    return "";
				
				}
				public String ATIVO_COMPRAPattern(){
				
					return "";
				
				}
				public String ATIVO_COMPRAOriginalDbColumnName(){
				
					return "ATIVO_COMPRA";
				
				}

				
			    public Integer QUANTIDE_ULTIMA_VENDA;

				public Integer getQUANTIDE_ULTIMA_VENDA () {
					return this.QUANTIDE_ULTIMA_VENDA;
				}

				public Boolean QUANTIDE_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QUANTIDE_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QUANTIDE_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QUANTIDE_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QUANTIDE_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QUANTIDE_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QUANTIDE_ULTIMA_VENDA";
				
				}

				
			    public String DATA_CADASTRO;

				public String getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_CADASTRO;

				public Integer getDIF_DATA_CADASTRO () {
					return this.DIF_DATA_CADASTRO;
				}

				public Boolean DIF_DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DIF_DATA_CADASTROLength(){
				    return null;
				}
				public Integer DIF_DATA_CADASTROPrecision(){
				    return null;
				}
				public String DIF_DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DIF_DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DIF_DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DIF_DATA_CADASTROOriginalDbColumnName(){
				
					return "DIF_DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_ULTIMA_VENDA;

				public Integer getDIF_DATA_ULTIMA_VENDA () {
					return this.DIF_DATA_ULTIMA_VENDA;
				}

				public Boolean DIF_DATA_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DIF_DATA_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DIF_DATA_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DIF_DATA_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DIF_DATA_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DIF_DATA_ULTIMA_VENDA";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer COBERTURA;

				public Integer getCOBERTURA () {
					return this.COBERTURA;
				}

				public Boolean COBERTURAIsNullable(){
				    return true;
				}
				public Boolean COBERTURAIsKey(){
				    return false;
				}
				public Integer COBERTURALength(){
				    return null;
				}
				public Integer COBERTURAPrecision(){
				    return null;
				}
				public String COBERTURADefault(){
				
					return null;
				
				}
				public String COBERTURAComment(){
				
				    return "";
				
				}
				public String COBERTURAPattern(){
				
					return "";
				
				}
				public String COBERTURAOriginalDbColumnName(){
				
					return "COBERTURA";
				
				}

				
			    public String COMBO;

				public String getCOMBO () {
					return this.COMBO;
				}

				public Boolean COMBOIsNullable(){
				    return true;
				}
				public Boolean COMBOIsKey(){
				    return false;
				}
				public Integer COMBOLength(){
				    return null;
				}
				public Integer COMBOPrecision(){
				    return null;
				}
				public String COMBODefault(){
				
					return null;
				
				}
				public String COMBOComment(){
				
				    return "";
				
				}
				public String COMBOPattern(){
				
					return "";
				
				}
				public String COMBOOriginalDbColumnName(){
				
					return "COMBO";
				
				}

				
			    public String ITENS_PECA;

				public String getITENS_PECA () {
					return this.ITENS_PECA;
				}

				public Boolean ITENS_PECAIsNullable(){
				    return true;
				}
				public Boolean ITENS_PECAIsKey(){
				    return false;
				}
				public Integer ITENS_PECALength(){
				    return null;
				}
				public Integer ITENS_PECAPrecision(){
				    return null;
				}
				public String ITENS_PECADefault(){
				
					return null;
				
				}
				public String ITENS_PECAComment(){
				
				    return "";
				
				}
				public String ITENS_PECAPattern(){
				
					return "";
				
				}
				public String ITENS_PECAOriginalDbColumnName(){
				
					return "ITENS_PECA";
				
				}

				
			    public String EXPORTA_SITE;

				public String getEXPORTA_SITE () {
					return this.EXPORTA_SITE;
				}

				public Boolean EXPORTA_SITEIsNullable(){
				    return true;
				}
				public Boolean EXPORTA_SITEIsKey(){
				    return false;
				}
				public Integer EXPORTA_SITELength(){
				    return null;
				}
				public Integer EXPORTA_SITEPrecision(){
				    return null;
				}
				public String EXPORTA_SITEDefault(){
				
					return null;
				
				}
				public String EXPORTA_SITEComment(){
				
				    return "";
				
				}
				public String EXPORTA_SITEPattern(){
				
					return "";
				
				}
				public String EXPORTA_SITEOriginalDbColumnName(){
				
					return "EXPORTA_SITE";
				
				}

				
			    public String ITENS_USO_CONSUMO;

				public String getITENS_USO_CONSUMO () {
					return this.ITENS_USO_CONSUMO;
				}

				public Boolean ITENS_USO_CONSUMOIsNullable(){
				    return true;
				}
				public Boolean ITENS_USO_CONSUMOIsKey(){
				    return false;
				}
				public Integer ITENS_USO_CONSUMOLength(){
				    return null;
				}
				public Integer ITENS_USO_CONSUMOPrecision(){
				    return null;
				}
				public String ITENS_USO_CONSUMODefault(){
				
					return null;
				
				}
				public String ITENS_USO_CONSUMOComment(){
				
				    return "";
				
				}
				public String ITENS_USO_CONSUMOPattern(){
				
					return "";
				
				}
				public String ITENS_USO_CONSUMOOriginalDbColumnName(){
				
					return "ITENS_USO_CONSUMO";
				
				}

				
			    public String ITENS_CROSS;

				public String getITENS_CROSS () {
					return this.ITENS_CROSS;
				}

				public Boolean ITENS_CROSSIsNullable(){
				    return true;
				}
				public Boolean ITENS_CROSSIsKey(){
				    return false;
				}
				public Integer ITENS_CROSSLength(){
				    return null;
				}
				public Integer ITENS_CROSSPrecision(){
				    return null;
				}
				public String ITENS_CROSSDefault(){
				
					return null;
				
				}
				public String ITENS_CROSSComment(){
				
				    return "";
				
				}
				public String ITENS_CROSSPattern(){
				
					return "";
				
				}
				public String ITENS_CROSSOriginalDbColumnName(){
				
					return "ITENS_CROSS";
				
				}

				
			    public String DESCRICAO_FORNECEDOR;

				public String getDESCRICAO_FORNECEDOR () {
					return this.DESCRICAO_FORNECEDOR;
				}

				public Boolean DESCRICAO_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean DESCRICAO_FORNECEDORIsKey(){
				    return false;
				}
				public Integer DESCRICAO_FORNECEDORLength(){
				    return null;
				}
				public Integer DESCRICAO_FORNECEDORPrecision(){
				    return null;
				}
				public String DESCRICAO_FORNECEDORDefault(){
				
					return null;
				
				}
				public String DESCRICAO_FORNECEDORComment(){
				
				    return "";
				
				}
				public String DESCRICAO_FORNECEDORPattern(){
				
					return "";
				
				}
				public String DESCRICAO_FORNECEDOROriginalDbColumnName(){
				
					return "DESCRICAO_FORNECEDOR";
				
				}

				
			    public String STATUS;

				public String getSTATUS () {
					return this.STATUS;
				}

				public Boolean STATUSIsNullable(){
				    return true;
				}
				public Boolean STATUSIsKey(){
				    return false;
				}
				public Integer STATUSLength(){
				    return null;
				}
				public Integer STATUSPrecision(){
				    return null;
				}
				public String STATUSDefault(){
				
					return null;
				
				}
				public String STATUSComment(){
				
				    return "";
				
				}
				public String STATUSPattern(){
				
					return "";
				
				}
				public String STATUSOriginalDbColumnName(){
				
					return "STATUS";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
					this.ATIVO_COMPRA = readString(dis);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis);
					
					this.DATA_CADASTRO = readString(dis);
					
						this.DIF_DATA_CADASTRO = readInteger(dis);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.COBERTURA = readInteger(dis);
					
					this.COMBO = readString(dis);
					
					this.ITENS_PECA = readString(dis);
					
					this.EXPORTA_SITE = readString(dis);
					
					this.ITENS_USO_CONSUMO = readString(dis);
					
					this.ITENS_CROSS = readString(dis);
					
					this.DESCRICAO_FORNECEDOR = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
					this.ATIVO_COMPRA = readString(dis);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis);
					
					this.DATA_CADASTRO = readString(dis);
					
						this.DIF_DATA_CADASTRO = readInteger(dis);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.COBERTURA = readInteger(dis);
					
					this.COMBO = readString(dis);
					
					this.ITENS_PECA = readString(dis);
					
					this.EXPORTA_SITE = readString(dis);
					
					this.ITENS_USO_CONSUMO = readString(dis);
					
					this.ITENS_CROSS = readString(dis);
					
					this.DESCRICAO_FORNECEDOR = readString(dis);
					
					this.STATUS = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
					// String
				
						writeString(this.ATIVO_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDE_ULTIMA_VENDA,dos);
					
					// String
				
						writeString(this.DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA,dos);
					
					// String
				
						writeString(this.COMBO,dos);
					
					// String
				
						writeString(this.ITENS_PECA,dos);
					
					// String
				
						writeString(this.EXPORTA_SITE,dos);
					
					// String
				
						writeString(this.ITENS_USO_CONSUMO,dos);
					
					// String
				
						writeString(this.ITENS_CROSS,dos);
					
					// String
				
						writeString(this.DESCRICAO_FORNECEDOR,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
					// String
				
						writeString(this.ATIVO_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDE_ULTIMA_VENDA,dos);
					
					// String
				
						writeString(this.DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA,dos);
					
					// String
				
						writeString(this.COMBO,dos);
					
					// String
				
						writeString(this.ITENS_PECA,dos);
					
					// String
				
						writeString(this.EXPORTA_SITE,dos);
					
					// String
				
						writeString(this.ITENS_USO_CONSUMO,dos);
					
					// String
				
						writeString(this.ITENS_CROSS,dos);
					
					// String
				
						writeString(this.DESCRICAO_FORNECEDOR,dos);
					
					// String
				
						writeString(this.STATUS,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",EMPRESA="+EMPRESA);
		sb.append(",ATIVO_COMPRA="+ATIVO_COMPRA);
		sb.append(",QUANTIDE_ULTIMA_VENDA="+String.valueOf(QUANTIDE_ULTIMA_VENDA));
		sb.append(",DATA_CADASTRO="+DATA_CADASTRO);
		sb.append(",DIF_DATA_CADASTRO="+String.valueOf(DIF_DATA_CADASTRO));
		sb.append(",DIF_DATA_ULTIMA_VENDA="+String.valueOf(DIF_DATA_ULTIMA_VENDA));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",COBERTURA="+String.valueOf(COBERTURA));
		sb.append(",COMBO="+COMBO);
		sb.append(",ITENS_PECA="+ITENS_PECA);
		sb.append(",EXPORTA_SITE="+EXPORTA_SITE);
		sb.append(",ITENS_USO_CONSUMO="+ITENS_USO_CONSUMO);
		sb.append(",ITENS_CROSS="+ITENS_CROSS);
		sb.append(",DESCRICAO_FORNECEDOR="+DESCRICAO_FORNECEDOR);
		sb.append(",STATUS="+STATUS);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String EMPRESA;

				public String getEMPRESA () {
					return this.EMPRESA;
				}

				public Boolean EMPRESAIsNullable(){
				    return true;
				}
				public Boolean EMPRESAIsKey(){
				    return false;
				}
				public Integer EMPRESALength(){
				    return null;
				}
				public Integer EMPRESAPrecision(){
				    return null;
				}
				public String EMPRESADefault(){
				
					return null;
				
				}
				public String EMPRESAComment(){
				
				    return "";
				
				}
				public String EMPRESAPattern(){
				
					return "";
				
				}
				public String EMPRESAOriginalDbColumnName(){
				
					return "EMPRESA";
				
				}

				
			    public String ATIVO_COMPRA;

				public String getATIVO_COMPRA () {
					return this.ATIVO_COMPRA;
				}

				public Boolean ATIVO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ATIVO_COMPRAIsKey(){
				    return false;
				}
				public Integer ATIVO_COMPRALength(){
				    return null;
				}
				public Integer ATIVO_COMPRAPrecision(){
				    return null;
				}
				public String ATIVO_COMPRADefault(){
				
					return null;
				
				}
				public String ATIVO_COMPRAComment(){
				
				    return "";
				
				}
				public String ATIVO_COMPRAPattern(){
				
					return "";
				
				}
				public String ATIVO_COMPRAOriginalDbColumnName(){
				
					return "ATIVO_COMPRA";
				
				}

				
			    public Integer QUANTIDE_ULTIMA_VENDA;

				public Integer getQUANTIDE_ULTIMA_VENDA () {
					return this.QUANTIDE_ULTIMA_VENDA;
				}

				public Boolean QUANTIDE_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QUANTIDE_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QUANTIDE_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QUANTIDE_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QUANTIDE_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QUANTIDE_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QUANTIDE_ULTIMA_VENDA";
				
				}

				
			    public String DATA_CADASTRO;

				public String getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_CADASTRO;

				public Integer getDIF_DATA_CADASTRO () {
					return this.DIF_DATA_CADASTRO;
				}

				public Boolean DIF_DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DIF_DATA_CADASTROLength(){
				    return null;
				}
				public Integer DIF_DATA_CADASTROPrecision(){
				    return null;
				}
				public String DIF_DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DIF_DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DIF_DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DIF_DATA_CADASTROOriginalDbColumnName(){
				
					return "DIF_DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_ULTIMA_VENDA;

				public Integer getDIF_DATA_ULTIMA_VENDA () {
					return this.DIF_DATA_ULTIMA_VENDA;
				}

				public Boolean DIF_DATA_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DIF_DATA_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DIF_DATA_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DIF_DATA_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DIF_DATA_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DIF_DATA_ULTIMA_VENDA";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer COBERTURA;

				public Integer getCOBERTURA () {
					return this.COBERTURA;
				}

				public Boolean COBERTURAIsNullable(){
				    return true;
				}
				public Boolean COBERTURAIsKey(){
				    return false;
				}
				public Integer COBERTURALength(){
				    return null;
				}
				public Integer COBERTURAPrecision(){
				    return null;
				}
				public String COBERTURADefault(){
				
					return null;
				
				}
				public String COBERTURAComment(){
				
				    return "";
				
				}
				public String COBERTURAPattern(){
				
					return "";
				
				}
				public String COBERTURAOriginalDbColumnName(){
				
					return "COBERTURA";
				
				}

				
			    public String COMBO;

				public String getCOMBO () {
					return this.COMBO;
				}

				public Boolean COMBOIsNullable(){
				    return true;
				}
				public Boolean COMBOIsKey(){
				    return false;
				}
				public Integer COMBOLength(){
				    return null;
				}
				public Integer COMBOPrecision(){
				    return null;
				}
				public String COMBODefault(){
				
					return null;
				
				}
				public String COMBOComment(){
				
				    return "";
				
				}
				public String COMBOPattern(){
				
					return "";
				
				}
				public String COMBOOriginalDbColumnName(){
				
					return "COMBO";
				
				}

				
			    public String ITENS_PECA;

				public String getITENS_PECA () {
					return this.ITENS_PECA;
				}

				public Boolean ITENS_PECAIsNullable(){
				    return true;
				}
				public Boolean ITENS_PECAIsKey(){
				    return false;
				}
				public Integer ITENS_PECALength(){
				    return null;
				}
				public Integer ITENS_PECAPrecision(){
				    return null;
				}
				public String ITENS_PECADefault(){
				
					return null;
				
				}
				public String ITENS_PECAComment(){
				
				    return "";
				
				}
				public String ITENS_PECAPattern(){
				
					return "";
				
				}
				public String ITENS_PECAOriginalDbColumnName(){
				
					return "ITENS_PECA";
				
				}

				
			    public String EXPORTA_SITE;

				public String getEXPORTA_SITE () {
					return this.EXPORTA_SITE;
				}

				public Boolean EXPORTA_SITEIsNullable(){
				    return true;
				}
				public Boolean EXPORTA_SITEIsKey(){
				    return false;
				}
				public Integer EXPORTA_SITELength(){
				    return null;
				}
				public Integer EXPORTA_SITEPrecision(){
				    return null;
				}
				public String EXPORTA_SITEDefault(){
				
					return null;
				
				}
				public String EXPORTA_SITEComment(){
				
				    return "";
				
				}
				public String EXPORTA_SITEPattern(){
				
					return "";
				
				}
				public String EXPORTA_SITEOriginalDbColumnName(){
				
					return "EXPORTA_SITE";
				
				}

				
			    public String ITENS_USO_CONSUMO;

				public String getITENS_USO_CONSUMO () {
					return this.ITENS_USO_CONSUMO;
				}

				public Boolean ITENS_USO_CONSUMOIsNullable(){
				    return true;
				}
				public Boolean ITENS_USO_CONSUMOIsKey(){
				    return false;
				}
				public Integer ITENS_USO_CONSUMOLength(){
				    return null;
				}
				public Integer ITENS_USO_CONSUMOPrecision(){
				    return null;
				}
				public String ITENS_USO_CONSUMODefault(){
				
					return null;
				
				}
				public String ITENS_USO_CONSUMOComment(){
				
				    return "";
				
				}
				public String ITENS_USO_CONSUMOPattern(){
				
					return "";
				
				}
				public String ITENS_USO_CONSUMOOriginalDbColumnName(){
				
					return "ITENS_USO_CONSUMO";
				
				}

				
			    public String ITENS_CROSS;

				public String getITENS_CROSS () {
					return this.ITENS_CROSS;
				}

				public Boolean ITENS_CROSSIsNullable(){
				    return true;
				}
				public Boolean ITENS_CROSSIsKey(){
				    return false;
				}
				public Integer ITENS_CROSSLength(){
				    return null;
				}
				public Integer ITENS_CROSSPrecision(){
				    return null;
				}
				public String ITENS_CROSSDefault(){
				
					return null;
				
				}
				public String ITENS_CROSSComment(){
				
				    return "";
				
				}
				public String ITENS_CROSSPattern(){
				
					return "";
				
				}
				public String ITENS_CROSSOriginalDbColumnName(){
				
					return "ITENS_CROSS";
				
				}

				
			    public String DESCRICAO_FORNECEDOR;

				public String getDESCRICAO_FORNECEDOR () {
					return this.DESCRICAO_FORNECEDOR;
				}

				public Boolean DESCRICAO_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean DESCRICAO_FORNECEDORIsKey(){
				    return false;
				}
				public Integer DESCRICAO_FORNECEDORLength(){
				    return null;
				}
				public Integer DESCRICAO_FORNECEDORPrecision(){
				    return null;
				}
				public String DESCRICAO_FORNECEDORDefault(){
				
					return null;
				
				}
				public String DESCRICAO_FORNECEDORComment(){
				
				    return "";
				
				}
				public String DESCRICAO_FORNECEDORPattern(){
				
					return "";
				
				}
				public String DESCRICAO_FORNECEDOROriginalDbColumnName(){
				
					return "DESCRICAO_FORNECEDOR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
					this.ATIVO_COMPRA = readString(dis);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis);
					
					this.DATA_CADASTRO = readString(dis);
					
						this.DIF_DATA_CADASTRO = readInteger(dis);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.COBERTURA = readInteger(dis);
					
					this.COMBO = readString(dis);
					
					this.ITENS_PECA = readString(dis);
					
					this.EXPORTA_SITE = readString(dis);
					
					this.ITENS_USO_CONSUMO = readString(dis);
					
					this.ITENS_CROSS = readString(dis);
					
					this.DESCRICAO_FORNECEDOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
					this.ATIVO_COMPRA = readString(dis);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis);
					
					this.DATA_CADASTRO = readString(dis);
					
						this.DIF_DATA_CADASTRO = readInteger(dis);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.COBERTURA = readInteger(dis);
					
					this.COMBO = readString(dis);
					
					this.ITENS_PECA = readString(dis);
					
					this.EXPORTA_SITE = readString(dis);
					
					this.ITENS_USO_CONSUMO = readString(dis);
					
					this.ITENS_CROSS = readString(dis);
					
					this.DESCRICAO_FORNECEDOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
					// String
				
						writeString(this.ATIVO_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDE_ULTIMA_VENDA,dos);
					
					// String
				
						writeString(this.DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA,dos);
					
					// String
				
						writeString(this.COMBO,dos);
					
					// String
				
						writeString(this.ITENS_PECA,dos);
					
					// String
				
						writeString(this.EXPORTA_SITE,dos);
					
					// String
				
						writeString(this.ITENS_USO_CONSUMO,dos);
					
					// String
				
						writeString(this.ITENS_CROSS,dos);
					
					// String
				
						writeString(this.DESCRICAO_FORNECEDOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
					// String
				
						writeString(this.ATIVO_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDE_ULTIMA_VENDA,dos);
					
					// String
				
						writeString(this.DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA,dos);
					
					// String
				
						writeString(this.COMBO,dos);
					
					// String
				
						writeString(this.ITENS_PECA,dos);
					
					// String
				
						writeString(this.EXPORTA_SITE,dos);
					
					// String
				
						writeString(this.ITENS_USO_CONSUMO,dos);
					
					// String
				
						writeString(this.ITENS_CROSS,dos);
					
					// String
				
						writeString(this.DESCRICAO_FORNECEDOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",EMPRESA="+EMPRESA);
		sb.append(",ATIVO_COMPRA="+ATIVO_COMPRA);
		sb.append(",QUANTIDE_ULTIMA_VENDA="+String.valueOf(QUANTIDE_ULTIMA_VENDA));
		sb.append(",DATA_CADASTRO="+DATA_CADASTRO);
		sb.append(",DIF_DATA_CADASTRO="+String.valueOf(DIF_DATA_CADASTRO));
		sb.append(",DIF_DATA_ULTIMA_VENDA="+String.valueOf(DIF_DATA_ULTIMA_VENDA));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",COBERTURA="+String.valueOf(COBERTURA));
		sb.append(",COMBO="+COMBO);
		sb.append(",ITENS_PECA="+ITENS_PECA);
		sb.append(",EXPORTA_SITE="+EXPORTA_SITE);
		sb.append(",ITENS_USO_CONSUMO="+ITENS_USO_CONSUMO);
		sb.append(",ITENS_CROSS="+ITENS_CROSS);
		sb.append(",DESCRICAO_FORNECEDOR="+DESCRICAO_FORNECEDOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String EMPRESA;

				public String getEMPRESA () {
					return this.EMPRESA;
				}

				public Boolean EMPRESAIsNullable(){
				    return true;
				}
				public Boolean EMPRESAIsKey(){
				    return false;
				}
				public Integer EMPRESALength(){
				    return null;
				}
				public Integer EMPRESAPrecision(){
				    return null;
				}
				public String EMPRESADefault(){
				
					return null;
				
				}
				public String EMPRESAComment(){
				
				    return "";
				
				}
				public String EMPRESAPattern(){
				
					return "";
				
				}
				public String EMPRESAOriginalDbColumnName(){
				
					return "EMPRESA";
				
				}

				
			    public String ATIVO_COMPRA;

				public String getATIVO_COMPRA () {
					return this.ATIVO_COMPRA;
				}

				public Boolean ATIVO_COMPRAIsNullable(){
				    return true;
				}
				public Boolean ATIVO_COMPRAIsKey(){
				    return false;
				}
				public Integer ATIVO_COMPRALength(){
				    return null;
				}
				public Integer ATIVO_COMPRAPrecision(){
				    return null;
				}
				public String ATIVO_COMPRADefault(){
				
					return null;
				
				}
				public String ATIVO_COMPRAComment(){
				
				    return "";
				
				}
				public String ATIVO_COMPRAPattern(){
				
					return "";
				
				}
				public String ATIVO_COMPRAOriginalDbColumnName(){
				
					return "ATIVO_COMPRA";
				
				}

				
			    public Integer QUANTIDE_ULTIMA_VENDA;

				public Integer getQUANTIDE_ULTIMA_VENDA () {
					return this.QUANTIDE_ULTIMA_VENDA;
				}

				public Boolean QUANTIDE_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean QUANTIDE_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer QUANTIDE_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer QUANTIDE_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String QUANTIDE_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String QUANTIDE_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String QUANTIDE_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "QUANTIDE_ULTIMA_VENDA";
				
				}

				
			    public String DATA_CADASTRO;

				public String getDATA_CADASTRO () {
					return this.DATA_CADASTRO;
				}

				public Boolean DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DATA_CADASTROLength(){
				    return null;
				}
				public Integer DATA_CADASTROPrecision(){
				    return null;
				}
				public String DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DATA_CADASTROOriginalDbColumnName(){
				
					return "DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_CADASTRO;

				public Integer getDIF_DATA_CADASTRO () {
					return this.DIF_DATA_CADASTRO;
				}

				public Boolean DIF_DATA_CADASTROIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_CADASTROIsKey(){
				    return false;
				}
				public Integer DIF_DATA_CADASTROLength(){
				    return null;
				}
				public Integer DIF_DATA_CADASTROPrecision(){
				    return null;
				}
				public String DIF_DATA_CADASTRODefault(){
				
					return null;
				
				}
				public String DIF_DATA_CADASTROComment(){
				
				    return "";
				
				}
				public String DIF_DATA_CADASTROPattern(){
				
					return "";
				
				}
				public String DIF_DATA_CADASTROOriginalDbColumnName(){
				
					return "DIF_DATA_CADASTRO";
				
				}

				
			    public Integer DIF_DATA_ULTIMA_VENDA;

				public Integer getDIF_DATA_ULTIMA_VENDA () {
					return this.DIF_DATA_ULTIMA_VENDA;
				}

				public Boolean DIF_DATA_ULTIMA_VENDAIsNullable(){
				    return true;
				}
				public Boolean DIF_DATA_ULTIMA_VENDAIsKey(){
				    return false;
				}
				public Integer DIF_DATA_ULTIMA_VENDALength(){
				    return null;
				}
				public Integer DIF_DATA_ULTIMA_VENDAPrecision(){
				    return null;
				}
				public String DIF_DATA_ULTIMA_VENDADefault(){
				
					return null;
				
				}
				public String DIF_DATA_ULTIMA_VENDAComment(){
				
				    return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAPattern(){
				
					return "";
				
				}
				public String DIF_DATA_ULTIMA_VENDAOriginalDbColumnName(){
				
					return "DIF_DATA_ULTIMA_VENDA";
				
				}

				
			    public Integer SALDO_DISPONIVEL;

				public Integer getSALDO_DISPONIVEL () {
					return this.SALDO_DISPONIVEL;
				}

				public Boolean SALDO_DISPONIVELIsNullable(){
				    return true;
				}
				public Boolean SALDO_DISPONIVELIsKey(){
				    return false;
				}
				public Integer SALDO_DISPONIVELLength(){
				    return null;
				}
				public Integer SALDO_DISPONIVELPrecision(){
				    return null;
				}
				public String SALDO_DISPONIVELDefault(){
				
					return null;
				
				}
				public String SALDO_DISPONIVELComment(){
				
				    return "";
				
				}
				public String SALDO_DISPONIVELPattern(){
				
					return "";
				
				}
				public String SALDO_DISPONIVELOriginalDbColumnName(){
				
					return "SALDO_DISPONIVEL";
				
				}

				
			    public Integer COBERTURA;

				public Integer getCOBERTURA () {
					return this.COBERTURA;
				}

				public Boolean COBERTURAIsNullable(){
				    return true;
				}
				public Boolean COBERTURAIsKey(){
				    return false;
				}
				public Integer COBERTURALength(){
				    return null;
				}
				public Integer COBERTURAPrecision(){
				    return null;
				}
				public String COBERTURADefault(){
				
					return null;
				
				}
				public String COBERTURAComment(){
				
				    return "";
				
				}
				public String COBERTURAPattern(){
				
					return "";
				
				}
				public String COBERTURAOriginalDbColumnName(){
				
					return "COBERTURA";
				
				}

				
			    public String COMBO;

				public String getCOMBO () {
					return this.COMBO;
				}

				public Boolean COMBOIsNullable(){
				    return true;
				}
				public Boolean COMBOIsKey(){
				    return false;
				}
				public Integer COMBOLength(){
				    return null;
				}
				public Integer COMBOPrecision(){
				    return null;
				}
				public String COMBODefault(){
				
					return null;
				
				}
				public String COMBOComment(){
				
				    return "";
				
				}
				public String COMBOPattern(){
				
					return "";
				
				}
				public String COMBOOriginalDbColumnName(){
				
					return "COMBO";
				
				}

				
			    public String ITENS_PECA;

				public String getITENS_PECA () {
					return this.ITENS_PECA;
				}

				public Boolean ITENS_PECAIsNullable(){
				    return true;
				}
				public Boolean ITENS_PECAIsKey(){
				    return false;
				}
				public Integer ITENS_PECALength(){
				    return null;
				}
				public Integer ITENS_PECAPrecision(){
				    return null;
				}
				public String ITENS_PECADefault(){
				
					return null;
				
				}
				public String ITENS_PECAComment(){
				
				    return "";
				
				}
				public String ITENS_PECAPattern(){
				
					return "";
				
				}
				public String ITENS_PECAOriginalDbColumnName(){
				
					return "ITENS_PECA";
				
				}

				
			    public String EXPORTA_SITE;

				public String getEXPORTA_SITE () {
					return this.EXPORTA_SITE;
				}

				public Boolean EXPORTA_SITEIsNullable(){
				    return true;
				}
				public Boolean EXPORTA_SITEIsKey(){
				    return false;
				}
				public Integer EXPORTA_SITELength(){
				    return null;
				}
				public Integer EXPORTA_SITEPrecision(){
				    return null;
				}
				public String EXPORTA_SITEDefault(){
				
					return null;
				
				}
				public String EXPORTA_SITEComment(){
				
				    return "";
				
				}
				public String EXPORTA_SITEPattern(){
				
					return "";
				
				}
				public String EXPORTA_SITEOriginalDbColumnName(){
				
					return "EXPORTA_SITE";
				
				}

				
			    public String ITENS_USO_CONSUMO;

				public String getITENS_USO_CONSUMO () {
					return this.ITENS_USO_CONSUMO;
				}

				public Boolean ITENS_USO_CONSUMOIsNullable(){
				    return true;
				}
				public Boolean ITENS_USO_CONSUMOIsKey(){
				    return false;
				}
				public Integer ITENS_USO_CONSUMOLength(){
				    return null;
				}
				public Integer ITENS_USO_CONSUMOPrecision(){
				    return null;
				}
				public String ITENS_USO_CONSUMODefault(){
				
					return null;
				
				}
				public String ITENS_USO_CONSUMOComment(){
				
				    return "";
				
				}
				public String ITENS_USO_CONSUMOPattern(){
				
					return "";
				
				}
				public String ITENS_USO_CONSUMOOriginalDbColumnName(){
				
					return "ITENS_USO_CONSUMO";
				
				}

				
			    public String ITENS_CROSS;

				public String getITENS_CROSS () {
					return this.ITENS_CROSS;
				}

				public Boolean ITENS_CROSSIsNullable(){
				    return true;
				}
				public Boolean ITENS_CROSSIsKey(){
				    return false;
				}
				public Integer ITENS_CROSSLength(){
				    return null;
				}
				public Integer ITENS_CROSSPrecision(){
				    return null;
				}
				public String ITENS_CROSSDefault(){
				
					return null;
				
				}
				public String ITENS_CROSSComment(){
				
				    return "";
				
				}
				public String ITENS_CROSSPattern(){
				
					return "";
				
				}
				public String ITENS_CROSSOriginalDbColumnName(){
				
					return "ITENS_CROSS";
				
				}

				
			    public String DESCRICAO_FORNECEDOR;

				public String getDESCRICAO_FORNECEDOR () {
					return this.DESCRICAO_FORNECEDOR;
				}

				public Boolean DESCRICAO_FORNECEDORIsNullable(){
				    return true;
				}
				public Boolean DESCRICAO_FORNECEDORIsKey(){
				    return false;
				}
				public Integer DESCRICAO_FORNECEDORLength(){
				    return null;
				}
				public Integer DESCRICAO_FORNECEDORPrecision(){
				    return null;
				}
				public String DESCRICAO_FORNECEDORDefault(){
				
					return null;
				
				}
				public String DESCRICAO_FORNECEDORComment(){
				
				    return "";
				
				}
				public String DESCRICAO_FORNECEDORPattern(){
				
					return "";
				
				}
				public String DESCRICAO_FORNECEDOROriginalDbColumnName(){
				
					return "DESCRICAO_FORNECEDOR";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
					this.ATIVO_COMPRA = readString(dis);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis);
					
					this.DATA_CADASTRO = readString(dis);
					
						this.DIF_DATA_CADASTRO = readInteger(dis);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.COBERTURA = readInteger(dis);
					
					this.COMBO = readString(dis);
					
					this.ITENS_PECA = readString(dis);
					
					this.EXPORTA_SITE = readString(dis);
					
					this.ITENS_USO_CONSUMO = readString(dis);
					
					this.ITENS_CROSS = readString(dis);
					
					this.DESCRICAO_FORNECEDOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.EMPRESA = readString(dis);
					
					this.ATIVO_COMPRA = readString(dis);
					
						this.QUANTIDE_ULTIMA_VENDA = readInteger(dis);
					
					this.DATA_CADASTRO = readString(dis);
					
						this.DIF_DATA_CADASTRO = readInteger(dis);
					
						this.DIF_DATA_ULTIMA_VENDA = readInteger(dis);
					
						this.SALDO_DISPONIVEL = readInteger(dis);
					
						this.COBERTURA = readInteger(dis);
					
					this.COMBO = readString(dis);
					
					this.ITENS_PECA = readString(dis);
					
					this.EXPORTA_SITE = readString(dis);
					
					this.ITENS_USO_CONSUMO = readString(dis);
					
					this.ITENS_CROSS = readString(dis);
					
					this.DESCRICAO_FORNECEDOR = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
					// String
				
						writeString(this.ATIVO_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDE_ULTIMA_VENDA,dos);
					
					// String
				
						writeString(this.DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA,dos);
					
					// String
				
						writeString(this.COMBO,dos);
					
					// String
				
						writeString(this.ITENS_PECA,dos);
					
					// String
				
						writeString(this.EXPORTA_SITE,dos);
					
					// String
				
						writeString(this.ITENS_USO_CONSUMO,dos);
					
					// String
				
						writeString(this.ITENS_CROSS,dos);
					
					// String
				
						writeString(this.DESCRICAO_FORNECEDOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.EMPRESA,dos);
					
					// String
				
						writeString(this.ATIVO_COMPRA,dos);
					
					// Integer
				
						writeInteger(this.QUANTIDE_ULTIMA_VENDA,dos);
					
					// String
				
						writeString(this.DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_CADASTRO,dos);
					
					// Integer
				
						writeInteger(this.DIF_DATA_ULTIMA_VENDA,dos);
					
					// Integer
				
						writeInteger(this.SALDO_DISPONIVEL,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA,dos);
					
					// String
				
						writeString(this.COMBO,dos);
					
					// String
				
						writeString(this.ITENS_PECA,dos);
					
					// String
				
						writeString(this.EXPORTA_SITE,dos);
					
					// String
				
						writeString(this.ITENS_USO_CONSUMO,dos);
					
					// String
				
						writeString(this.ITENS_CROSS,dos);
					
					// String
				
						writeString(this.DESCRICAO_FORNECEDOR,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",EMPRESA="+EMPRESA);
		sb.append(",ATIVO_COMPRA="+ATIVO_COMPRA);
		sb.append(",QUANTIDE_ULTIMA_VENDA="+String.valueOf(QUANTIDE_ULTIMA_VENDA));
		sb.append(",DATA_CADASTRO="+DATA_CADASTRO);
		sb.append(",DIF_DATA_CADASTRO="+String.valueOf(DIF_DATA_CADASTRO));
		sb.append(",DIF_DATA_ULTIMA_VENDA="+String.valueOf(DIF_DATA_ULTIMA_VENDA));
		sb.append(",SALDO_DISPONIVEL="+String.valueOf(SALDO_DISPONIVEL));
		sb.append(",COBERTURA="+String.valueOf(COBERTURA));
		sb.append(",COMBO="+COMBO);
		sb.append(",ITENS_PECA="+ITENS_PECA);
		sb.append(",EXPORTA_SITE="+EXPORTA_SITE);
		sb.append(",ITENS_USO_CONSUMO="+ITENS_USO_CONSUMO);
		sb.append(",ITENS_CROSS="+ITENS_CROSS);
		sb.append(",DESCRICAO_FORNECEDOR="+DESCRICAO_FORNECEDOR);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();
row26Struct row26 = new row26Struct();
row28Struct row28 = new row28Struct();






	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row28Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row28Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tJavaRow_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_9", false);
		start_Hash.put("tJavaRow_9", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tJavaRow_9 = 0;
		

int nb_line_tJavaRow_9 = 0;

 



/**
 * [tJavaRow_9 begin ] stop
 */



	
	/**
	 * [tJavaRow_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_8", false);
		start_Hash.put("tJavaRow_8", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tJavaRow_8 = 0;
		

int nb_line_tJavaRow_8 = 0;

 



/**
 * [tJavaRow_8 begin ] stop
 */



	
	/**
	 * [tDBInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_8", false);
		start_Hash.put("tDBInput_8", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_8";
	
	
		int tos_count_tDBInput_8 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_8 = java.util.Calendar.getInstance();
		    calendar_tDBInput_8.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_8 = calendar_tDBInput_8.getTime();
		    int nb_line_tDBInput_8 = 0;
		    java.sql.Connection conn_tDBInput_8 = null;
				conn_tDBInput_8 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_8 = conn_tDBInput_8.createStatement();

		    String dbquery_tDBInput_8 = "select base.CODIGO_ITEM,\n       base.EMPRESA,\n       base.ATIVO_COMPRA,\n       IFNULL(base.QUANTIDE_ULTIMA_VENDA,0) "
+"QUANTIDE_ULTIMA_VENDA,\n       base.DATA_CADASTRO,\n      TIMESTAMPDIFF(DAY,base.DATA_CADASTRO,NOW()) DIF_DATA_CADASTRO,"
+"\n      IFNULL(TIMESTAMPDIFF(DAY,base.DATA_ULTIMA_VENDA,NOW()),0) DIF_DATA_ULTIMA_VENDA,\n       IFNULL(base.SALDO_DISPO"
+"NIVEL,0) SALDO_DISPONIVEL,\n       ROUND(IFNULL(base.SALDO_DISPONIVEL / base.QTD_VENDA,0),0) COBERTURA,\n       IF(base."
+"COMBO >0, 'S', 'N') COMBO,\n       IF(base.ITENS_PECA >0, 'S', 'N') ITENS_PECA,\n       base.EXPORTA_SITE,\n       IF(ba"
+"se.ITENS_USO_CONSUMO >0, 'S', 'N') ITENS_USO_CONSUMO,\n       IF(base.ITENS_CROSS >0, 'S', 'N') ITENS_CROSS,\n--      ba"
+"se.QTD_VENDA,\n      IFNULL(base.DESCRICAO_FORNECEDOR,'N') DESCRICAO_FORNECEDOR\n       from (\n  SELECT DISTINCT I.ITE_"
+"CODITE                                                                                    CODIGO_ITEM,\n	   I.ITE_DESITE"
+"                                                                                               DESCRICAO_ITEM,\n	   I.IT"
+"E_DTACAD                                                                                               DATA_CADASTRO,\n	"
+"   I.ITE_CODGRU                                                                                               LINHA_GRUP"
+"O,\n	   (SELECT CONCAT(LEFT(I.ITE_CODGRU, 3), '.', RIGHT(I.ITE_CODGRU, 3), '-', CG.GRU_DESGRU)\n	      FROM CADGRU CG\n	"
+"     WHERE I.ITE_CODGRU = CG.GRU_CODGRU)                                                                      GRUPO,\n	 "
+"  (SELECT CONCAT(LEFT(I.ITE_CODGRU, 3), '-', CL.GRU_DESGRU)\n	      FROM CADGRU CL\n	     WHERE CL.GRU_CODGRU = CONCAT(L"
+"EFT(I.ITE_CODGRU, 3), '000'))                                              LINHA,\n	   I.ITE_REFERE                     "
+"                                                                          REFERENCIA,\n	   ITE_ITEATI                   "
+"                                                                              ATIVO,\n	   ITE_ATICOM                    "
+"                                                                             ATIVO_COMPRA,\n	   ITE_EXPSIT              "
+"                                                                                   EXPORTA_SITE,\n	   I.ITE_CODMAR      "
+"                                                                                         CODIGO_MARCA,\n	   (SELECT M.MA"
+"R_DESMAR\n	      FROM CADMAR M\n	     WHERE M.MAR_CODMAR = I.ITE_CODMAR)                                                "
+"                       DESCRICAO_MARCA,\n	   G.ITE_CODEMP                                                               "
+"                                EMPRESA,\n/*	   (SELECT SUM(ITE_SALDOS - ITE_SALREG -ITE_QTPD_P)\n	      FROM ITEGER GG"
+"\n	     WHERE GG.ITE_CODITE = G.ITE_CODITE\n	       and GG.ITE_CODEMP = G.ITE_CODEMP)                                    "
+"                                  SALDO_DISPONIVEL,*/\n	   (IFNULL(G.ITE_SALDOS,'0') - IFNULL(ITE_QTPD_P,'0') - IFNULL(I"
+"TE_QTPD_V,'0') - IFNULL(ITE_QTPD_F,'0') - IFNULL(ITE_SALREG,'0') - IFNULL(ITE_SALEXT,'0')) SALDO_DISPONIVEL,\n	   G.ITE_"
+"QTDUVE                                                                                               QUANTIDE_ULTIMA_VEN"
+"DA,\n	   G.ITE_DTAUVE                                                                                               DATA"
+"_ULTIMA_VENDA,\n	   DATEDIFF (SYSDATE(), G.ITE_DTAUVE)                                                                  "
+"       DIAS_SEM_VENDA,\n	   G.ITE_LOCFIS                                                                                "
+"               LOCALIZACAO_FISCAL,\n	   (SELECT A.ITE_CODGRU\n	      FROM CADITE A\n	     INNER JOIN ITEGER B ON A.ITE_C"
+"ODITE = B.ITE_CODITE AND B.ITE_CODEMP = '001'\n	     WHERE LEFT(A.ITE_CODGRU, 3) = '090'\n		   AND A.ITE_CODITE = I.ITE_"
+"CODITE)                                                                       ITENS_USO_CONSUMO,\n	   (SELECT A.ITE_CODG"
+"RU\n	      FROM CADITE A\n	     INNER JOIN ITEGER B ON A.ITE_CODITE = B.ITE_CODITE AND B.ITE_CODEMP = '001'\n	     WHERE"
+" LEFT(A.ITE_CODGRU, 3) = '021'\n		   AND A.ITE_CODITE = I.ITE_CODITE)                                                   "
+"                    ITENS_PECA,\n        CASE WHEN I.ITE_DESFAB = 'ITEM CROSSDOCKING' THEN 'S'\n                        "
+"ELSE 'N'\n                          END  AS                                                                             "
+"                                   ITENS_CROSS,\n       (SELECT (SUM(FAT.QTD_ITEM)/90)\n          FROM VW_FATURAMENTO FA"
+"T\n         WHERE FAT.COD_ITEM = I.ITE_CODITE\n           AND FAT.EMPRESA = G.ITE_CODEMP\n           AND FAT.DATA >= SUB"
+"DATE(CURDATE(), 90))					                                              QTD_VENDA,\n       (SELECT DISTINCT GM.GMT_CODITE"
+" CD_COMBO       \n          FROM GERMAT GM\n         INNER JOIN DETMAT DM ON GM.AUTOINCREM = DM.DMT_SEQGER\n         INN"
+"ER JOIN CADITE CE ON GM.GMT_CODITE = CE.ITE_CODITE\n         INNER JOIN ITEGER GE ON GE.ITE_CODITE = CE.ITE_CODITE AND G"
+"M.GMT_CODEMP = GE.ITE_CODEMP\n         WHERE CE.ITE_CODITE = I.ITE_CODITE)                                              "
+"                        COMBO,\n         CASE WHEN I.ITE_DESFAB = 'FORA DE LINHA FORNECEDOR' THEN 'S'\n                 "
+"        ELSE 'N'\n                           END AS                                                                     "
+"                                                   DESCRICAO_FORNECEDOR\n  FROM CADITE I,  \n	   ITEGER G\n WHERE G.ITE_"
+"CODITE = I.ITE_CODITE\n-- and G.ITE_CODEMP = '001'\n--   AND I.ITE_CODITE IN ('01108', '84099', '34226', '51071')\n) bas"
+"e";
		    

		    globalMap.put("tDBInput_8_QUERY",dbquery_tDBInput_8);

		    java.sql.ResultSet rs_tDBInput_8 = null;

		    try {
		    	rs_tDBInput_8 = stmt_tDBInput_8.executeQuery(dbquery_tDBInput_8);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_8 = rs_tDBInput_8.getMetaData();
		    	int colQtyInRs_tDBInput_8 = rsmd_tDBInput_8.getColumnCount();

		    String tmpContent_tDBInput_8 = null;
		    
		    
		    while (rs_tDBInput_8.next()) {
		        nb_line_tDBInput_8++;
		        
							if(colQtyInRs_tDBInput_8 < 1) {
								row25.CODIGO_ITEM = null;
							} else {
	                         		
        	row25.CODIGO_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_8, 1, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 2) {
								row25.EMPRESA = null;
							} else {
	                         		
        	row25.EMPRESA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 2, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 3) {
								row25.ATIVO_COMPRA = null;
							} else {
	                         		
        	row25.ATIVO_COMPRA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 3, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 4) {
								row25.QUANTIDE_ULTIMA_VENDA = null;
							} else {
		                          
            row25.QUANTIDE_ULTIMA_VENDA = rs_tDBInput_8.getInt(4);
            if(rs_tDBInput_8.wasNull()){
                    row25.QUANTIDE_ULTIMA_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 5) {
								row25.DATA_CADASTRO = null;
							} else {
	                         		
        	row25.DATA_CADASTRO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 5, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 6) {
								row25.DIF_DATA_CADASTRO = null;
							} else {
		                          
            row25.DIF_DATA_CADASTRO = rs_tDBInput_8.getInt(6);
            if(rs_tDBInput_8.wasNull()){
                    row25.DIF_DATA_CADASTRO = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 7) {
								row25.DIF_DATA_ULTIMA_VENDA = null;
							} else {
		                          
            row25.DIF_DATA_ULTIMA_VENDA = rs_tDBInput_8.getInt(7);
            if(rs_tDBInput_8.wasNull()){
                    row25.DIF_DATA_ULTIMA_VENDA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 8) {
								row25.SALDO_DISPONIVEL = null;
							} else {
		                          
            row25.SALDO_DISPONIVEL = rs_tDBInput_8.getInt(8);
            if(rs_tDBInput_8.wasNull()){
                    row25.SALDO_DISPONIVEL = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 9) {
								row25.COBERTURA = null;
							} else {
		                          
            row25.COBERTURA = rs_tDBInput_8.getInt(9);
            if(rs_tDBInput_8.wasNull()){
                    row25.COBERTURA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_8 < 10) {
								row25.COMBO = null;
							} else {
	                         		
        	row25.COMBO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 10, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 11) {
								row25.ITENS_PECA = null;
							} else {
	                         		
        	row25.ITENS_PECA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 11, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 12) {
								row25.EXPORTA_SITE = null;
							} else {
	                         		
        	row25.EXPORTA_SITE = routines.system.JDBCUtil.getString(rs_tDBInput_8, 12, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 13) {
								row25.ITENS_USO_CONSUMO = null;
							} else {
	                         		
        	row25.ITENS_USO_CONSUMO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 13, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 14) {
								row25.ITENS_CROSS = null;
							} else {
	                         		
        	row25.ITENS_CROSS = routines.system.JDBCUtil.getString(rs_tDBInput_8, 14, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 15) {
								row25.DESCRICAO_FORNECEDOR = null;
							} else {
	                         		
        	row25.DESCRICAO_FORNECEDOR = routines.system.JDBCUtil.getString(rs_tDBInput_8, 15, false);
		                    }
					

 



/**
 * [tDBInput_8 begin ] stop
 */
	
	/**
	 * [tDBInput_8 main ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 


	tos_count_tDBInput_8++;

/**
 * [tDBInput_8 main ] stop
 */
	
	/**
	 * [tDBInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_8 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

    //Code generated according to input schema and output schema
row26.CODIGO_ITEM = row25.CODIGO_ITEM;
row26.EMPRESA = row25.EMPRESA;
row26.ATIVO_COMPRA = row25.ATIVO_COMPRA;
row26.QUANTIDE_ULTIMA_VENDA = row25.QUANTIDE_ULTIMA_VENDA;
row26.DATA_CADASTRO = row25.DATA_CADASTRO;
row26.DIF_DATA_CADASTRO = row25.DIF_DATA_CADASTRO;
row26.DIF_DATA_ULTIMA_VENDA = row25.DIF_DATA_ULTIMA_VENDA;
row26.SALDO_DISPONIVEL = row25.SALDO_DISPONIVEL;
row26.COBERTURA = row25.COBERTURA;
row26.COMBO = row25.COMBO;
row26.ITENS_PECA = row25.ITENS_PECA;
row26.EXPORTA_SITE = row25.EXPORTA_SITE;
row26.ITENS_USO_CONSUMO = row25.ITENS_USO_CONSUMO;
row26.ITENS_CROSS = row25.ITENS_CROSS;
row26.DESCRICAO_FORNECEDOR = row25.DESCRICAO_FORNECEDOR;

    nb_line_tJavaRow_8++;   

 


	tos_count_tJavaRow_8++;

/**
 * [tJavaRow_8 main ] stop
 */
	
	/**
	 * [tJavaRow_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_9 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					

    //Code generated according to input schema and output schema
row28.CODIGO_ITEM = row26.CODIGO_ITEM;
row28.EMPRESA = row26.EMPRESA;
row28.ATIVO_COMPRA = row26.ATIVO_COMPRA;
row28.QUANTIDE_ULTIMA_VENDA = row26.QUANTIDE_ULTIMA_VENDA;
row28.DATA_CADASTRO = row26.DATA_CADASTRO;
row28.DIF_DATA_CADASTRO = row26.DIF_DATA_CADASTRO;
row28.DIF_DATA_ULTIMA_VENDA = row26.DIF_DATA_ULTIMA_VENDA;
row28.SALDO_DISPONIVEL = row26.SALDO_DISPONIVEL;
row28.COBERTURA = row26.COBERTURA;
row28.COMBO = row26.COMBO;
row28.ITENS_PECA = row26.ITENS_PECA;
row28.EXPORTA_SITE = row26.EXPORTA_SITE;
row28.ITENS_USO_CONSUMO = row26.ITENS_USO_CONSUMO;
row28.ITENS_CROSS = row26.ITENS_CROSS;
row28.DESCRICAO_FORNECEDOR = row26.DESCRICAO_FORNECEDOR;

if (row26.ITENS_USO_CONSUMO.equals("S")) {
row28.STATUS = "U.C";
} else if (row26.ITENS_CROSS.equals("S")) {
row28.STATUS = "CROSS";
} else if (row26.COMBO.equals("S")) {
row28.STATUS = "COMBO";
} else if (row26.ITENS_PECA.equals("S")) {
row28.STATUS = "PÇ";
} else if (row26.DIF_DATA_CADASTRO < 90 && row26.SALDO_DISPONIVEL == 0) {
row28.STATUS = "NV";
} else if (row26.DESCRICAO_FORNECEDOR.equals("S")) {
row28.STATUS = "FLF";
} else if (row26.DIF_DATA_ULTIMA_VENDA >= 360 && row26.SALDO_DISPONIVEL > 0) {
row28.STATUS = "FL";
} else if (row26.DIF_DATA_ULTIMA_VENDA >= 120 && row26.DIF_DATA_ULTIMA_VENDA < 360 && row26.SALDO_DISPONIVEL > 0) { // ADD SALDO < 0;
row28.STATUS = "A.FL";
} else if (row26.SALDO_DISPONIVEL <= 0) {
row28.STATUS = "RPT";
} else if (row26.SALDO_DISPONIVEL > 0 && row26.COBERTURA >= 120) {
row28.STATUS = "C.S";
} else if (row26.DIF_DATA_ULTIMA_VENDA >= 30 && row26.DIF_DATA_ULTIMA_VENDA < 120 && row26.SALDO_DISPONIVEL > 0) {
row28.STATUS = "S/V";
} else if (row26.COBERTURA < 120 && row26.SALDO_DISPONIVEL > 0) {
row28.STATUS = "NO";
} else{
row28.STATUS = "OUTROS";
}
//} else if (row26.EXPORTA_SITE.equals("S")) {
//row28.STATUS = "E.C";
    nb_line_tJavaRow_9++;   

 


	tos_count_tJavaRow_9++;

/**
 * [tJavaRow_9 main ] stop
 */
	
	/**
	 * [tJavaRow_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					



    
		row28Struct oneRow_tHashOutput_10 = new row28Struct();
				
					oneRow_tHashOutput_10.CODIGO_ITEM = row28.CODIGO_ITEM;
					oneRow_tHashOutput_10.EMPRESA = row28.EMPRESA;
					oneRow_tHashOutput_10.ATIVO_COMPRA = row28.ATIVO_COMPRA;
					oneRow_tHashOutput_10.QUANTIDE_ULTIMA_VENDA = row28.QUANTIDE_ULTIMA_VENDA;
					oneRow_tHashOutput_10.DATA_CADASTRO = row28.DATA_CADASTRO;
					oneRow_tHashOutput_10.DIF_DATA_CADASTRO = row28.DIF_DATA_CADASTRO;
					oneRow_tHashOutput_10.DIF_DATA_ULTIMA_VENDA = row28.DIF_DATA_ULTIMA_VENDA;
					oneRow_tHashOutput_10.SALDO_DISPONIVEL = row28.SALDO_DISPONIVEL;
					oneRow_tHashOutput_10.COBERTURA = row28.COBERTURA;
					oneRow_tHashOutput_10.COMBO = row28.COMBO;
					oneRow_tHashOutput_10.ITENS_PECA = row28.ITENS_PECA;
					oneRow_tHashOutput_10.EXPORTA_SITE = row28.EXPORTA_SITE;
					oneRow_tHashOutput_10.ITENS_USO_CONSUMO = row28.ITENS_USO_CONSUMO;
					oneRow_tHashOutput_10.ITENS_CROSS = row28.ITENS_CROSS;
					oneRow_tHashOutput_10.DESCRICAO_FORNECEDOR = row28.DESCRICAO_FORNECEDOR;
					oneRow_tHashOutput_10.STATUS = row28.STATUS;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_8 end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

	}
}finally{
	if (rs_tDBInput_8 != null) {
		rs_tDBInput_8.close();
	}
	if (stmt_tDBInput_8 != null) {
		stmt_tDBInput_8.close();
	}
}
globalMap.put("tDBInput_8_NB_LINE",nb_line_tDBInput_8);

 

ok_Hash.put("tDBInput_8", true);
end_Hash.put("tDBInput_8", System.currentTimeMillis());




/**
 * [tDBInput_8 end ] stop
 */

	
	/**
	 * [tJavaRow_8 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

globalMap.put("tJavaRow_8_NB_LINE",nb_line_tJavaRow_8);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tJavaRow_8", true);
end_Hash.put("tJavaRow_8", System.currentTimeMillis());




/**
 * [tJavaRow_8 end ] stop
 */

	
	/**
	 * [tJavaRow_9 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

globalMap.put("tJavaRow_9_NB_LINE",nb_line_tJavaRow_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tJavaRow_9", true);
end_Hash.put("tJavaRow_9", System.currentTimeMillis());




/**
 * [tJavaRow_9 end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */









				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_8 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_8 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_8";
	
	

 



/**
 * [tJavaRow_8 finally ] stop
 */

	
	/**
	 * [tJavaRow_9 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_9";
	
	

 



/**
 * [tJavaRow_9 finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_8_SUBPROCESS_STATE", 1);
	}
	


public void tDie_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDie_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDie_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDie_3", false);
		start_Hash.put("tDie_3", System.currentTimeMillis());
		
	
	currentComponent="tDie_3";
	
	
		int tos_count_tDie_3 = 0;
		

 



/**
 * [tDie_3 begin ] stop
 */
	
	/**
	 * [tDie_3 main ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

	try {
				tLogCatcher_1.addMessage("tDie", "tDie_3", 5, "Erro na Busca de Status", 4);
				tLogCatcher_1Process(globalMap);
				
	globalMap.put("tDie_3_DIE_PRIORITY", 5);
	System.err.println("Erro na Busca de Status");
	
	globalMap.put("tDie_3_DIE_MESSAGE", "Erro na Busca de Status");
	globalMap.put("tDie_3_DIE_MESSAGES", "Erro na Busca de Status");
	
	} catch (Exception | Error e_tDie_3) {
	    globalMap.put("tDie_3_ERROR_MESSAGE",e_tDie_3.getMessage());
		logIgnoredError(String.format("tDie_3 - tDie failed to log message due to internal error: %s", e_tDie_3), e_tDie_3);
	}
	
	currentComponent = "tDie_3";
	status = "failure";
    	errorCode = new Integer(4);
        ((java.util.Map)threadLocal.get()).put("errorCode", new Integer(4));
        ((java.util.Map)threadLocal.get()).put("status", "failure");
        globalMap.put("tDie_3_DIE_CODE", errorCode);

    
	

	
	
	System.exit(4);

 


	tos_count_tDie_3++;

/**
 * [tDie_3 main ] stop
 */
	
	/**
	 * [tDie_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 process_data_begin ] stop
 */
	
	/**
	 * [tDie_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 process_data_end ] stop
 */
	
	/**
	 * [tDie_3 end ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 

ok_Hash.put("tDie_3", true);
end_Hash.put("tDie_3", System.currentTimeMillis());




/**
 * [tDie_3 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDie_3 finally ] start
	 */

	

	
	
	currentComponent="tDie_3";
	
	

 



/**
 * [tDie_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDie_3_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfupdate_log_0Struct implements routines.system.IPersistableRow<copyOfupdate_log_0Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 255;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return true;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.uuid == null) ? 0 : this.uuid.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfupdate_log_0Struct other = (copyOfupdate_log_0Struct) obj;
		
						if (this.uuid == null) {
							if (other.uuid != null)
								return false;
						
						} else if (!this.uuid.equals(other.uuid))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfupdate_log_0Struct other) {

		other.nm_programa = this.nm_programa;
	            other.data_inicio_execucao = this.data_inicio_execucao;
	            other.data_termino_execucao = this.data_termino_execucao;
	            other.mensagem = this.mensagem;
	            other.uuid = this.uuid;
	            
	}

	public void copyKeysDataTo(copyOfupdate_log_0Struct other) {

		other.uuid = this.uuid;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfupdate_log_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.uuid, other.uuid);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return "";
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return "";
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return "";
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return "";
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return "";
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return "";
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return "";
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return "";
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return "";
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return "";
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tLogCatcher_1Struct implements routines.system.IPersistableRow<after_tLogCatcher_1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public java.util.Date moment;

				public java.util.Date getMoment () {
					return this.moment;
				}

				public Boolean momentIsNullable(){
				    return true;
				}
				public Boolean momentIsKey(){
				    return false;
				}
				public Integer momentLength(){
				    return 0;
				}
				public Integer momentPrecision(){
				    return 0;
				}
				public String momentDefault(){
				
					return "";
				
				}
				public String momentComment(){
				
				    return null;
				
				}
				public String momentPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String momentOriginalDbColumnName(){
				
					return "moment";
				
				}

				
			    public String pid;

				public String getPid () {
					return this.pid;
				}

				public Boolean pidIsNullable(){
				    return true;
				}
				public Boolean pidIsKey(){
				    return false;
				}
				public Integer pidLength(){
				    return 20;
				}
				public Integer pidPrecision(){
				    return 0;
				}
				public String pidDefault(){
				
					return "";
				
				}
				public String pidComment(){
				
				    return null;
				
				}
				public String pidPattern(){
				
				    return null;
				
				}
				public String pidOriginalDbColumnName(){
				
					return "pid";
				
				}

				
			    public String root_pid;

				public String getRoot_pid () {
					return this.root_pid;
				}

				public Boolean root_pidIsNullable(){
				    return true;
				}
				public Boolean root_pidIsKey(){
				    return false;
				}
				public Integer root_pidLength(){
				    return 20;
				}
				public Integer root_pidPrecision(){
				    return 0;
				}
				public String root_pidDefault(){
				
					return "";
				
				}
				public String root_pidComment(){
				
				    return null;
				
				}
				public String root_pidPattern(){
				
				    return null;
				
				}
				public String root_pidOriginalDbColumnName(){
				
					return "root_pid";
				
				}

				
			    public String father_pid;

				public String getFather_pid () {
					return this.father_pid;
				}

				public Boolean father_pidIsNullable(){
				    return true;
				}
				public Boolean father_pidIsKey(){
				    return false;
				}
				public Integer father_pidLength(){
				    return 20;
				}
				public Integer father_pidPrecision(){
				    return 0;
				}
				public String father_pidDefault(){
				
					return "";
				
				}
				public String father_pidComment(){
				
				    return null;
				
				}
				public String father_pidPattern(){
				
				    return null;
				
				}
				public String father_pidOriginalDbColumnName(){
				
					return "father_pid";
				
				}

				
			    public String project;

				public String getProject () {
					return this.project;
				}

				public Boolean projectIsNullable(){
				    return true;
				}
				public Boolean projectIsKey(){
				    return false;
				}
				public Integer projectLength(){
				    return 50;
				}
				public Integer projectPrecision(){
				    return 0;
				}
				public String projectDefault(){
				
					return "";
				
				}
				public String projectComment(){
				
				    return null;
				
				}
				public String projectPattern(){
				
				    return null;
				
				}
				public String projectOriginalDbColumnName(){
				
					return "project";
				
				}

				
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return 255;
				}
				public Integer jobPrecision(){
				    return 0;
				}
				public String jobDefault(){
				
					return "";
				
				}
				public String jobComment(){
				
				    return null;
				
				}
				public String jobPattern(){
				
				    return null;
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String context;

				public String getContext () {
					return this.context;
				}

				public Boolean contextIsNullable(){
				    return true;
				}
				public Boolean contextIsKey(){
				    return false;
				}
				public Integer contextLength(){
				    return 50;
				}
				public Integer contextPrecision(){
				    return 0;
				}
				public String contextDefault(){
				
					return "";
				
				}
				public String contextComment(){
				
				    return null;
				
				}
				public String contextPattern(){
				
				    return null;
				
				}
				public String contextOriginalDbColumnName(){
				
					return "context";
				
				}

				
			    public Integer priority;

				public Integer getPriority () {
					return this.priority;
				}

				public Boolean priorityIsNullable(){
				    return true;
				}
				public Boolean priorityIsKey(){
				    return false;
				}
				public Integer priorityLength(){
				    return 3;
				}
				public Integer priorityPrecision(){
				    return 0;
				}
				public String priorityDefault(){
				
					return "";
				
				}
				public String priorityComment(){
				
				    return null;
				
				}
				public String priorityPattern(){
				
				    return null;
				
				}
				public String priorityOriginalDbColumnName(){
				
					return "priority";
				
				}

				
			    public String type;

				public String getType () {
					return this.type;
				}

				public Boolean typeIsNullable(){
				    return true;
				}
				public Boolean typeIsKey(){
				    return false;
				}
				public Integer typeLength(){
				    return 255;
				}
				public Integer typePrecision(){
				    return 0;
				}
				public String typeDefault(){
				
					return "";
				
				}
				public String typeComment(){
				
				    return null;
				
				}
				public String typePattern(){
				
				    return null;
				
				}
				public String typeOriginalDbColumnName(){
				
					return "type";
				
				}

				
			    public String origin;

				public String getOrigin () {
					return this.origin;
				}

				public Boolean originIsNullable(){
				    return true;
				}
				public Boolean originIsKey(){
				    return false;
				}
				public Integer originLength(){
				    return 255;
				}
				public Integer originPrecision(){
				    return 0;
				}
				public String originDefault(){
				
					return "";
				
				}
				public String originComment(){
				
				    return null;
				
				}
				public String originPattern(){
				
				    return null;
				
				}
				public String originOriginalDbColumnName(){
				
					return "origin";
				
				}

				
			    public String message;

				public String getMessage () {
					return this.message;
				}

				public Boolean messageIsNullable(){
				    return true;
				}
				public Boolean messageIsKey(){
				    return false;
				}
				public Integer messageLength(){
				    return 255;
				}
				public Integer messagePrecision(){
				    return 0;
				}
				public String messageDefault(){
				
					return "";
				
				}
				public String messageComment(){
				
				    return null;
				
				}
				public String messagePattern(){
				
				    return null;
				
				}
				public String messageOriginalDbColumnName(){
				
					return "message";
				
				}

				
			    public Integer code;

				public Integer getCode () {
					return this.code;
				}

				public Boolean codeIsNullable(){
				    return true;
				}
				public Boolean codeIsKey(){
				    return false;
				}
				public Integer codeLength(){
				    return 3;
				}
				public Integer codePrecision(){
				    return 0;
				}
				public String codeDefault(){
				
					return "";
				
				}
				public String codeComment(){
				
				    return null;
				
				}
				public String codePattern(){
				
				    return null;
				
				}
				public String codeOriginalDbColumnName(){
				
					return "code";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.moment = readDate(dis);
					
					this.pid = readString(dis);
					
					this.root_pid = readString(dis);
					
					this.father_pid = readString(dis);
					
					this.project = readString(dis);
					
					this.job = readString(dis);
					
					this.context = readString(dis);
					
						this.priority = readInteger(dis);
					
					this.type = readString(dis);
					
					this.origin = readString(dis);
					
					this.message = readString(dis);
					
						this.code = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.moment,dos);
					
					// String
				
						writeString(this.pid,dos);
					
					// String
				
						writeString(this.root_pid,dos);
					
					// String
				
						writeString(this.father_pid,dos);
					
					// String
				
						writeString(this.project,dos);
					
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.context,dos);
					
					// Integer
				
						writeInteger(this.priority,dos);
					
					// String
				
						writeString(this.type,dos);
					
					// String
				
						writeString(this.origin,dos);
					
					// String
				
						writeString(this.message,dos);
					
					// Integer
				
						writeInteger(this.code,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("moment="+String.valueOf(moment));
		sb.append(",pid="+pid);
		sb.append(",root_pid="+root_pid);
		sb.append(",father_pid="+father_pid);
		sb.append(",project="+project);
		sb.append(",job="+job);
		sb.append(",context="+context);
		sb.append(",priority="+String.valueOf(priority));
		sb.append(",type="+type);
		sb.append(",origin="+origin);
		sb.append(",message="+message);
		sb.append(",code="+String.valueOf(code));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tLogCatcher_1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tLogCatcher_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_10Process(globalMap);

		row24Struct row24 = new row24Struct();
copyOfupdate_log_0Struct copyOfupdate_log_0 = new copyOfupdate_log_0Struct();





	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfupdate_log_0");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao");
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao");
}

        int updateKeyCount_tDBOutput_1 = 1;
        if(updateKeyCount_tDBOutput_1 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_1 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	


   int batchSize_tDBOutput_1 = 10000;
   int batchSizeCounter_tDBOutput_1=0;

int count_tDBOutput_1=0;
	    String update_tDBOutput_1 = "UPDATE \"" + tableName_tDBOutput_1 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(update_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct>) 
					globalMap.get( "tHash_Lookup_row27" ))
					;					
					
	
		tHash_Lookup_row27.initGet();
	

row27Struct row27HashKey = new row27Struct();
row27Struct row27Default = new row27Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfupdate_log_0Struct copyOfupdate_log_0_tmp = new copyOfupdate_log_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tLogCatcher_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogCatcher_1", false);
		start_Hash.put("tLogCatcher_1", System.currentTimeMillis());
		
	
	currentComponent="tLogCatcher_1";
	
	
		int tos_count_tLogCatcher_1 = 0;
		

try {
	for (LogCatcherUtils.LogCatcherMessage lcm : tLogCatcher_1.getMessages()) {
		row24.type = lcm.getType();
		row24.origin = (lcm.getOrigin()==null || lcm.getOrigin().length()<1 ? null : lcm.getOrigin());
		row24.priority = lcm.getPriority();
		row24.message = lcm.getMessage();
		row24.code = lcm.getCode();
		
		row24.moment = java.util.Calendar.getInstance().getTime();
	
    	row24.pid = pid;
		row24.root_pid = rootPid;
		row24.father_pid = fatherPid;
	
    	row24.project = projectName;
    	row24.job = jobName;
    	row24.context = contextStr;
    		
 



/**
 * [tLogCatcher_1 begin ] stop
 */
	
	/**
	 * [tLogCatcher_1 main ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 


	tos_count_tLogCatcher_1++;

/**
 * [tLogCatcher_1 main ] stop
 */
	
	/**
	 * [tLogCatcher_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
						row27Struct row27 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row27" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow27 = false;
       		  	    	
       		  	    	
 							row27Struct row27ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_11) { // G_TM_M_020

								

								
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row27.lookup( row27HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row27.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow27 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow27 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row27 != null && tHash_Lookup_row27.hasNext()) || forceLooprow27) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row27'
									
                    		  	 
							   
                    		  	 
	       		  	    	row27Struct fromLookup_row27 = null;
							row27 = row27Default;
										 
							
								
								if(!forceLooprow27) { // G 46
								
							
								 
							
								
								fromLookup_row27 = tHash_Lookup_row27.next();

							

							if(fromLookup_row27 != null) {
								row27 = fromLookup_row27;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow27 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

copyOfupdate_log_0 = null;


// # Output table : 'copyOfupdate_log_0'
copyOfupdate_log_0_tmp.nm_programa = context.programa;
copyOfupdate_log_0_tmp.data_inicio_execucao = row27.data_inicio_execucao;
copyOfupdate_log_0_tmp.data_termino_execucao = TalendDate.getCurrentDate();
copyOfupdate_log_0_tmp.mensagem = row24.message;
copyOfupdate_log_0_tmp.uuid = row27.uuid ;
copyOfupdate_log_0 = copyOfupdate_log_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "copyOfupdate_log_0"
if(copyOfupdate_log_0 != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfupdate_log_0"
						
						);
					}
					



        whetherReject_tDBOutput_1 = false;
                    if(copyOfupdate_log_0.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, copyOfupdate_log_0.nm_programa);
}

                    if(copyOfupdate_log_0.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(copyOfupdate_log_0.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(copyOfupdate_log_0.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(copyOfupdate_log_0.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(copyOfupdate_log_0.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, copyOfupdate_log_0.mensagem);
}

                    if(copyOfupdate_log_0.uuid == null) {
pstmt_tDBOutput_1.setNull(5 + count_tDBOutput_1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5 + count_tDBOutput_1, copyOfupdate_log_0.uuid);
}


    		pstmt_tDBOutput_1.addBatch();
    		nb_line_tDBOutput_1++;
    		  
    		  
    		  batchSizeCounter_tDBOutput_1++;
    		  
    			if ((batchSize_tDBOutput_1 > 0) && (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {
                try {
						int countSum_tDBOutput_1 = 0;
						    
						for(int countEach_tDBOutput_1: pstmt_tDBOutput_1.executeBatch()) {
							countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
						}
				    	rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
				    	
				    		updatedCount_tDBOutput_1 += countSum_tDBOutput_1;
				    	
            	    	batchSizeCounter_tDBOutput_1 = 0;
                }catch (java.sql.BatchUpdateException e_tDBOutput_1){
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e_tDBOutput_1.getMessage());
				    	java.sql.SQLException ne_tDBOutput_1 = e_tDBOutput_1.getNextException(),sqle_tDBOutput_1=null;
				    	String errormessage_tDBOutput_1;
						if (ne_tDBOutput_1 != null) {
							// build new exception to provide the original cause
							sqle_tDBOutput_1 = new java.sql.SQLException(e_tDBOutput_1.getMessage() + "\ncaused by: " + ne_tDBOutput_1.getMessage(), ne_tDBOutput_1.getSQLState(), ne_tDBOutput_1.getErrorCode(), ne_tDBOutput_1);
							errormessage_tDBOutput_1 = sqle_tDBOutput_1.getMessage();
						}else{
							errormessage_tDBOutput_1 = e_tDBOutput_1.getMessage();
						}
				    	
				    	int countSum_tDBOutput_1 = 0;
						for(int countEach_tDBOutput_1: e_tDBOutput_1.getUpdateCounts()) {
							countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
						}
						rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
						
				    		updatedCount_tDBOutput_1 += countSum_tDBOutput_1;
				    	
				    	System.err.println(errormessage_tDBOutput_1);
				    	
					}
    			}
    		

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "copyOfupdate_log_0"



	
		} // close loop of lookup 'row27' // G_TM_M_043
	
	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */



	
	/**
	 * [tLogCatcher_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 process_data_end ] stop
 */
	
	/**
	 * [tLogCatcher_1 end ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	
	}
} catch (Exception e_tLogCatcher_1) {
globalMap.put("tLogCatcher_1_ERROR_MESSAGE",e_tLogCatcher_1.getMessage());
	logIgnoredError(String.format("tLogCatcher_1 - tLogCatcher failed to process log message(s) due to internal error: %s", e_tLogCatcher_1), e_tLogCatcher_1);
}

 

ok_Hash.put("tLogCatcher_1", true);
end_Hash.put("tLogCatcher_1", System.currentTimeMillis());




/**
 * [tLogCatcher_1 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row27 != null) {
						tHash_Lookup_row27.endGet();
					}
					globalMap.remove( "tHash_Lookup_row27" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



	    try {
				int countSum_tDBOutput_1 = 0;
				if (pstmt_tDBOutput_1 != null && batchSizeCounter_tDBOutput_1 > 0) {
						
					for(int countEach_tDBOutput_1: pstmt_tDBOutput_1.executeBatch()) {
						countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
					}
					rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
						
				}
		    	
		    		updatedCount_tDBOutput_1 += countSum_tDBOutput_1;
		    	
	    }catch (java.sql.BatchUpdateException e_tDBOutput_1){
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e_tDBOutput_1.getMessage());
	    	java.sql.SQLException ne_tDBOutput_1 = e_tDBOutput_1.getNextException(),sqle_tDBOutput_1=null;
	    	String errormessage_tDBOutput_1;
			if (ne_tDBOutput_1 != null) {
				// build new exception to provide the original cause
				sqle_tDBOutput_1 = new java.sql.SQLException(e_tDBOutput_1.getMessage() + "\ncaused by: " + ne_tDBOutput_1.getMessage(), ne_tDBOutput_1.getSQLState(), ne_tDBOutput_1.getErrorCode(), ne_tDBOutput_1);
				errormessage_tDBOutput_1 = sqle_tDBOutput_1.getMessage();
			}else{
				errormessage_tDBOutput_1 = e_tDBOutput_1.getMessage();
			}
	    	
	    	int countSum_tDBOutput_1 = 0;
			for(int countEach_tDBOutput_1: e_tDBOutput_1.getUpdateCounts()) {
				countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
			}
			rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;
			
	    		updatedCount_tDBOutput_1 += countSum_tDBOutput_1;
	    	
	    	System.err.println(errormessage_tDBOutput_1);
	    	
		}
	    
        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfupdate_log_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_11"
					     			globalMap.remove("tHash_Lookup_row27"); 
				     			
				try{
					
	
	/**
	 * [tLogCatcher_1 finally ] start
	 */

	

	
	
	currentComponent="tLogCatcher_1";
	
	

 



/**
 * [tLogCatcher_1 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tLogCatcher_1_SUBPROCESS_STATE", 1);
	}
	


public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();




	
	/**
	 * [tAdvancedHash_row27 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row27", false);
		start_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tAdvancedHash_row27 = 0;
		

			   		// connection name:row27
			   		// source node:tHashInput_10 - inputs:(after_tLogCatcher_1) outputs:(row27,row27) | target node:tAdvancedHash_row27 - inputs:(row27) outputs:()
			   		// linked node: tMap_11 - inputs:(row24,row27) outputs:(copyOfupdate_log_0)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row27 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_ROWS;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row27Struct> tHash_Lookup_row27 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row27Struct>getLookup(matchingModeEnum_row27);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row27", tHash_Lookup_row27);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row27 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    row5Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row27.nm_programa = next_tHashInput_10.nm_programa;
	row27.data_inicio_execucao = next_tHashInput_10.data_inicio_execucao;
	row27.data_termino_execucao = next_tHashInput_10.data_termino_execucao;
	row27.mensagem = next_tHashInput_10.mensagem;
	row27.uuid = next_tHashInput_10.uuid;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					


			   
			   

					row27Struct row27_HashRow = new row27Struct();
		   	   	   
				
				row27_HashRow.nm_programa = row27.nm_programa;
				
				row27_HashRow.data_inicio_execucao = row27.data_inicio_execucao;
				
				row27_HashRow.data_termino_execucao = row27.data_termino_execucao;
				
				row27_HashRow.mensagem = row27.mensagem;
				
				row27_HashRow.uuid = row27.uuid;
				
			tHash_Lookup_row27.put(row27_HashRow);
			
            




 


	tos_count_tAdvancedHash_row27++;

/**
 * [tAdvancedHash_row27 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row27 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_insert_produto_empresa_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

tHash_Lookup_row27.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row27", true);
end_Hash.put("tAdvancedHash_row27", System.currentTimeMillis());




/**
 * [tAdvancedHash_row27 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row27 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row27";
	
	

 



/**
 * [tAdvancedHash_row27 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	


public void tJava_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_9", false);
		start_Hash.put("tJava_9", System.currentTimeMillis());
		
	
	currentComponent="tJava_9";
	
	
		int tos_count_tJava_9 = 0;
		


System.out.println("Iniciado Consulta de dados da lista de consultoras que não possuem pedidos nos ultimos 120 dias: "+TalendDate.getCurrentDate());


 



/**
 * [tJava_9 begin ] stop
 */
	
	/**
	 * [tJava_9 main ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 


	tos_count_tJava_9++;

/**
 * [tJava_9 main ] stop
 */
	
	/**
	 * [tJava_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 process_data_begin ] stop
 */
	
	/**
	 * [tJava_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 process_data_end ] stop
 */
	
	/**
	 * [tJava_9 end ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 

ok_Hash.put("tJava_9", true);
end_Hash.put("tJava_9", System.currentTimeMillis());




/**
 * [tJava_9 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk29", 0, "ok");
								} 
							
							tDBInput_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_9 finally ] start
	 */

	

	
	
	currentComponent="tJava_9";
	
	

 



/**
 * [tJava_9 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_9_SUBPROCESS_STATE", 1);
	}
	


public static class sem_vendaStruct implements routines.system.IPersistableRow<sem_vendaStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String CODIGO_EMP;

				public String getCODIGO_EMP () {
					return this.CODIGO_EMP;
				}

				public Boolean CODIGO_EMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPLength(){
				    return null;
				}
				public Integer CODIGO_EMPPrecision(){
				    return null;
				}
				public String CODIGO_EMPDefault(){
				
					return null;
				
				}
				public String CODIGO_EMPComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPOriginalDbColumnName(){
				
					return "CODIGO_EMP";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",CODIGO_EMP="+CODIGO_EMP);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(sem_vendaStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String CODIGO_EMP;

				public String getCODIGO_EMP () {
					return this.CODIGO_EMP;
				}

				public Boolean CODIGO_EMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPLength(){
				    return null;
				}
				public Integer CODIGO_EMPPrecision(){
				    return null;
				}
				public String CODIGO_EMPDefault(){
				
					return null;
				
				}
				public String CODIGO_EMPComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPOriginalDbColumnName(){
				
					return "CODIGO_EMP";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",CODIGO_EMP="+CODIGO_EMP);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tDBInput_9Struct implements routines.system.IPersistableRow<after_tDBInput_9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];

	
			    public String CODIGO_ITEM;

				public String getCODIGO_ITEM () {
					return this.CODIGO_ITEM;
				}

				public Boolean CODIGO_ITEMIsNullable(){
				    return true;
				}
				public Boolean CODIGO_ITEMIsKey(){
				    return false;
				}
				public Integer CODIGO_ITEMLength(){
				    return null;
				}
				public Integer CODIGO_ITEMPrecision(){
				    return null;
				}
				public String CODIGO_ITEMDefault(){
				
					return null;
				
				}
				public String CODIGO_ITEMComment(){
				
				    return "";
				
				}
				public String CODIGO_ITEMPattern(){
				
					return "";
				
				}
				public String CODIGO_ITEMOriginalDbColumnName(){
				
					return "CODIGO_ITEM";
				
				}

				
			    public String CODIGO_EMP;

				public String getCODIGO_EMP () {
					return this.CODIGO_EMP;
				}

				public Boolean CODIGO_EMPIsNullable(){
				    return true;
				}
				public Boolean CODIGO_EMPIsKey(){
				    return false;
				}
				public Integer CODIGO_EMPLength(){
				    return null;
				}
				public Integer CODIGO_EMPPrecision(){
				    return null;
				}
				public String CODIGO_EMPDefault(){
				
					return null;
				
				}
				public String CODIGO_EMPComment(){
				
				    return "";
				
				}
				public String CODIGO_EMPPattern(){
				
					return "";
				
				}
				public String CODIGO_EMPOriginalDbColumnName(){
				
					return "CODIGO_EMP";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.CODIGO_ITEM = readString(dis);
					
					this.CODIGO_EMP = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_ITEM,dos);
					
					// String
				
						writeString(this.CODIGO_EMP,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_ITEM="+CODIGO_ITEM);
		sb.append(",CODIGO_EMP="+CODIGO_EMP);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tDBInput_9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tDBInput_10Process(globalMap);

		row29Struct row29 = new row29Struct();
sem_vendaStruct sem_venda = new sem_vendaStruct();





	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"sem_venda");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<sem_vendaStruct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_insert_produto_empresa_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<sem_vendaStruct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
					globalMap.get( "tHash_Lookup_row30" ))
					;					
					
	

row30Struct row30HashKey = new row30Struct();
row30Struct row30Default = new row30Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
sem_vendaStruct sem_venda_tmp = new sem_vendaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tDBInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_9", false);
		start_Hash.put("tDBInput_9", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_9";
	
	
		int tos_count_tDBInput_9 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_9 = java.util.Calendar.getInstance();
		    calendar_tDBInput_9.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_9 = calendar_tDBInput_9.getTime();
		    int nb_line_tDBInput_9 = 0;
		    java.sql.Connection conn_tDBInput_9 = null;
				conn_tDBInput_9 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_9 = conn_tDBInput_9.createStatement();

		    String dbquery_tDBInput_9 = "select I.ITE_CODITE CODIGO_ITEM,\nG.ITE_CODEMP CODIGO_EMP\n  FROM CADITE I,  \n	   ITEGER G\n WHERE G.ITE_CODITE = I.IT"
+"E_CODITE";
		    

		    globalMap.put("tDBInput_9_QUERY",dbquery_tDBInput_9);

		    java.sql.ResultSet rs_tDBInput_9 = null;

		    try {
		    	rs_tDBInput_9 = stmt_tDBInput_9.executeQuery(dbquery_tDBInput_9);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_9 = rs_tDBInput_9.getMetaData();
		    	int colQtyInRs_tDBInput_9 = rsmd_tDBInput_9.getColumnCount();

		    String tmpContent_tDBInput_9 = null;
		    
		    
		    while (rs_tDBInput_9.next()) {
		        nb_line_tDBInput_9++;
		        
							if(colQtyInRs_tDBInput_9 < 1) {
								row29.CODIGO_ITEM = null;
							} else {
	                         		
        	row29.CODIGO_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_9, 1, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 2) {
								row29.CODIGO_EMP = null;
							} else {
	                         		
        	row29.CODIGO_EMP = routines.system.JDBCUtil.getString(rs_tDBInput_9, 2, false);
		                    }
					

 



/**
 * [tDBInput_9 begin ] stop
 */
	
	/**
	 * [tDBInput_9 main ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 


	tos_count_tDBInput_9++;

/**
 * [tDBInput_9 main ] stop
 */
	
	/**
	 * [tDBInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 



/**
 * [tDBInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
						row30Struct row30 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row30" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow30 = false;
       		  	    	
       		  	    	
 							row30Struct row30ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_12) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_12 = false;
								
                        		    		    row30HashKey.cod_item = row29.CODIGO_ITEM ;
                        		    		

								
		                        	row30HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row30.lookup( row30HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row30.hasNext()) { // G_TM_M_090

  								
		  				
	  								
			  							rejectedInnerJoin_tMap_12 = true;
	  								
						
									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row30 != null && tHash_Lookup_row30.getCount(row30HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row30' and it contains more one result from keys :  row30.cod_item = '" + row30HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row30Struct fromLookup_row30 = null;
							row30 = row30Default;
										 
							
								 
							
							
								if (tHash_Lookup_row30 !=null && tHash_Lookup_row30.hasNext()) { // G 099
								
							
								
								fromLookup_row30 = tHash_Lookup_row30.next();

							
							
								} // G 099
							
							

							if(fromLookup_row30 != null) {
								row30 = fromLookup_row30;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

sem_venda = null;

if(!rejectedInnerJoin_tMap_12 ) {
} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'sem_venda'
// # Filter conditions 
if( rejectedInnerJoin_tMap_12 ) {
sem_venda_tmp.CODIGO_ITEM = row29.CODIGO_ITEM ;
sem_venda_tmp.CODIGO_EMP = row29.CODIGO_EMP ;
sem_venda = sem_venda_tmp;
} // closing filter/reject
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "sem_venda"
if(sem_venda != null) { 



	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"sem_venda"
						
						);
					}
					



    
		sem_vendaStruct oneRow_tHashOutput_9 = new sem_vendaStruct();
				
					oneRow_tHashOutput_9.CODIGO_ITEM = sem_venda.CODIGO_ITEM;
					oneRow_tHashOutput_9.CODIGO_EMP = sem_venda.CODIGO_EMP;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */

} // End of branch "sem_venda"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 



/**
 * [tDBInput_9 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_9 end ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

	}
}finally{
	if (rs_tDBInput_9 != null) {
		rs_tDBInput_9.close();
	}
	if (stmt_tDBInput_9 != null) {
		stmt_tDBInput_9.close();
	}
}
globalMap.put("tDBInput_9_NB_LINE",nb_line_tDBInput_9);

 

ok_Hash.put("tDBInput_9", true);
end_Hash.put("tDBInput_9", System.currentTimeMillis());




/**
 * [tDBInput_9 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row30 != null) {
						tHash_Lookup_row30.endGet();
					}
					globalMap.remove( "tHash_Lookup_row30" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"sem_venda");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_12"
					     			globalMap.remove("tHash_Lookup_row30"); 
				     			
				try{
					
	
	/**
	 * [tDBInput_9 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 



/**
 * [tDBInput_9 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row30Struct implements routines.system.IPersistableComparableLookupRow<row30Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer qtde_venda_120;

				public Integer getQtde_venda_120 () {
					return this.qtde_venda_120;
				}

				public Boolean qtde_venda_120IsNullable(){
				    return true;
				}
				public Boolean qtde_venda_120IsKey(){
				    return false;
				}
				public Integer qtde_venda_120Length(){
				    return null;
				}
				public Integer qtde_venda_120Precision(){
				    return null;
				}
				public String qtde_venda_120Default(){
				
					return null;
				
				}
				public String qtde_venda_120Comment(){
				
				    return "";
				
				}
				public String qtde_venda_120Pattern(){
				
					return "";
				
				}
				public String qtde_venda_120OriginalDbColumnName(){
				
					return "qtde_venda_120";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row30Struct other = (row30Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row30Struct other) {

		other.cod_item = this.cod_item;
	            other.qtde_venda_120 = this.qtde_venda_120;
	            
	}

	public void copyKeysDataTo(row30Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_insert_produto_empresa, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_insert_produto_empresa) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.qtde_venda_120 = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.qtde_venda_120 = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.qtde_venda_120, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.qtde_venda_120, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",qtde_venda_120="+String.valueOf(qtde_venda_120));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row30Struct row30 = new row30Struct();




	
	/**
	 * [tAdvancedHash_row30 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row30", false);
		start_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tAdvancedHash_row30 = 0;
		

			   		// connection name:row30
			   		// source node:tDBInput_10 - inputs:(after_tDBInput_9) outputs:(row30,row30) | target node:tAdvancedHash_row30 - inputs:(row30) outputs:()
			   		// linked node: tMap_12 - inputs:(row29,row30) outputs:(sem_venda)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row30 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row30Struct>getLookup(matchingModeEnum_row30);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row30", tHash_Lookup_row30);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row30 begin ] stop
 */



	
	/**
	 * [tDBInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_10", false);
		start_Hash.put("tDBInput_10", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_10";
	
	
		int tos_count_tDBInput_10 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_10 = java.util.Calendar.getInstance();
		    calendar_tDBInput_10.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_10 = calendar_tDBInput_10.getTime();
		    int nb_line_tDBInput_10 = 0;
		    java.sql.Connection conn_tDBInput_10 = null;
				conn_tDBInput_10 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_10 = conn_tDBInput_10.createStatement();

		    String dbquery_tDBInput_10 = "\nSELECT\n	VF2.COD_ITEM,\n	SUM(VF2.QTD_ITEM) QTDE_VENDA_120\nFROM VW_FATURAMENTO VF2\nWHERE VF2.DATA >= SUBDATE(CURDATE"
+"(),120)\nGROUP BY VF2.COD_ITEM;\n";
		    

		    globalMap.put("tDBInput_10_QUERY",dbquery_tDBInput_10);

		    java.sql.ResultSet rs_tDBInput_10 = null;

		    try {
		    	rs_tDBInput_10 = stmt_tDBInput_10.executeQuery(dbquery_tDBInput_10);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_10 = rs_tDBInput_10.getMetaData();
		    	int colQtyInRs_tDBInput_10 = rsmd_tDBInput_10.getColumnCount();

		    String tmpContent_tDBInput_10 = null;
		    
		    
		    while (rs_tDBInput_10.next()) {
		        nb_line_tDBInput_10++;
		        
							if(colQtyInRs_tDBInput_10 < 1) {
								row30.cod_item = null;
							} else {
	                         		
        	row30.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_10, 1, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 2) {
								row30.qtde_venda_120 = null;
							} else {
		                          
            row30.qtde_venda_120 = rs_tDBInput_10.getInt(2);
            if(rs_tDBInput_10.wasNull()){
                    row30.qtde_venda_120 = null;
            }
		                    }
					

 



/**
 * [tDBInput_10 begin ] stop
 */
	
	/**
	 * [tDBInput_10 main ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 


	tos_count_tDBInput_10++;

/**
 * [tDBInput_10 main ] stop
 */
	
	/**
	 * [tDBInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					


			   
			   

					row30Struct row30_HashRow = new row30Struct();
		   	   	   
				
				row30_HashRow.cod_item = row30.cod_item;
				
				row30_HashRow.qtde_venda_120 = row30.qtde_venda_120;
				
			tHash_Lookup_row30.put(row30_HashRow);
			
            




 


	tos_count_tAdvancedHash_row30++;

/**
 * [tAdvancedHash_row30 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_10 end ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

	}
}finally{
	if (rs_tDBInput_10 != null) {
		rs_tDBInput_10.close();
	}
	if (stmt_tDBInput_10 != null) {
		stmt_tDBInput_10.close();
	}
}
globalMap.put("tDBInput_10_NB_LINE",nb_line_tDBInput_10);

 

ok_Hash.put("tDBInput_10", true);
end_Hash.put("tDBInput_10", System.currentTimeMillis());




/**
 * [tDBInput_10 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

tHash_Lookup_row30.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row30", true);
end_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());




/**
 * [tAdvancedHash_row30 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_10 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_10_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final insert_produto_empresa insert_produto_empresaClass = new insert_produto_empresa();

        int exitCode = insert_produto_empresaClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = insert_produto_empresa.class.getClassLoader().getResourceAsStream("palacio_ferramentas/insert_produto_empresa_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = insert_produto_empresa.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("Acumulado", "id_Double");
                        if(context.getStringValue("Acumulado") == null) {
                            context.Acumulado = null;
                        } else {
                            try{
                                context.Acumulado=routines.system.ParserUtils.parseTo_Double (context.getProperty("Acumulado"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Acumulado", e.getMessage()));
                                context.Acumulado=null;
                            }
                        }
                        context.setContextType("Dias_VendasItens", "id_Integer");
                        if(context.getStringValue("Dias_VendasItens") == null) {
                            context.Dias_VendasItens = null;
                        } else {
                            try{
                                context.Dias_VendasItens=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Dias_VendasItens"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Dias_VendasItens", e.getMessage()));
                                context.Dias_VendasItens=null;
                            }
                        }
                        context.setContextType("Dias_Vendas", "id_Integer");
                        if(context.getStringValue("Dias_Vendas") == null) {
                            context.Dias_Vendas = null;
                        } else {
                            try{
                                context.Dias_Vendas=routines.system.ParserUtils.parseTo_Integer (context.getProperty("Dias_Vendas"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Dias_Vendas", e.getMessage()));
                                context.Dias_Vendas=null;
                            }
                        }
                        context.setContextType("parametro_qtde", "id_Integer");
                        if(context.getStringValue("parametro_qtde") == null) {
                            context.parametro_qtde = null;
                        } else {
                            try{
                                context.parametro_qtde=routines.system.ParserUtils.parseTo_Integer (context.getProperty("parametro_qtde"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "parametro_qtde", e.getMessage()));
                                context.parametro_qtde=null;
                            }
                        }
                        context.setContextType("parametro_vlr", "id_Integer");
                        if(context.getStringValue("parametro_vlr") == null) {
                            context.parametro_vlr = null;
                        } else {
                            try{
                                context.parametro_vlr=routines.system.ParserUtils.parseTo_Integer (context.getProperty("parametro_vlr"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "parametro_vlr", e.getMessage()));
                                context.parametro_vlr=null;
                            }
                        }
                        context.setContextType("Acumuladovlr", "id_Double");
                        if(context.getStringValue("Acumuladovlr") == null) {
                            context.Acumuladovlr = null;
                        } else {
                            try{
                                context.Acumuladovlr=routines.system.ParserUtils.parseTo_Double (context.getProperty("Acumuladovlr"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "Acumuladovlr", e.getMessage()));
                                context.Acumuladovlr=null;
                            }
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("AcumuladovlrAgr", "id_Double");
                        if(context.getStringValue("AcumuladovlrAgr") == null) {
                            context.AcumuladovlrAgr = null;
                        } else {
                            try{
                                context.AcumuladovlrAgr=routines.system.ParserUtils.parseTo_Double (context.getProperty("AcumuladovlrAgr"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "AcumuladovlrAgr", e.getMessage()));
                                context.AcumuladovlrAgr=null;
                            }
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("Acumulado")) {
                context.Acumulado = (Double) parentContextMap.get("Acumulado");
            }if (parentContextMap.containsKey("Dias_VendasItens")) {
                context.Dias_VendasItens = (Integer) parentContextMap.get("Dias_VendasItens");
            }if (parentContextMap.containsKey("Dias_Vendas")) {
                context.Dias_Vendas = (Integer) parentContextMap.get("Dias_Vendas");
            }if (parentContextMap.containsKey("parametro_qtde")) {
                context.parametro_qtde = (Integer) parentContextMap.get("parametro_qtde");
            }if (parentContextMap.containsKey("parametro_vlr")) {
                context.parametro_vlr = (Integer) parentContextMap.get("parametro_vlr");
            }if (parentContextMap.containsKey("Acumuladovlr")) {
                context.Acumuladovlr = (Double) parentContextMap.get("Acumuladovlr");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("AcumuladovlrAgr")) {
                context.AcumuladovlrAgr = (Double) parentContextMap.get("AcumuladovlrAgr");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJava_2Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJava_2) {
globalMap.put("tJava_2_SUBPROCESS_STATE", -1);

e_tJava_2.printStackTrace();

}catch (java.lang.Error e_tJava_2) {
globalMap.put("tJava_2_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJava_2;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJava_3Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJava_3) {
globalMap.put("tJava_3_SUBPROCESS_STATE", -1);

e_tJava_3.printStackTrace();

}catch (java.lang.Error e_tJava_3) {
globalMap.put("tJava_3_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJava_3;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJava_7Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJava_7) {
globalMap.put("tJava_7_SUBPROCESS_STATE", -1);

e_tJava_7.printStackTrace();

}catch (java.lang.Error e_tJava_7) {
globalMap.put("tJava_7_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJava_7;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJava_8Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJava_8) {
globalMap.put("tJava_8_SUBPROCESS_STATE", -1);

e_tJava_8.printStackTrace();

}catch (java.lang.Error e_tJava_8) {
globalMap.put("tJava_8_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJava_8;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tJava_9Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tJava_9) {
globalMap.put("tJava_9_SUBPROCESS_STATE", -1);

e_tJava_9.printStackTrace();

}catch (java.lang.Error e_tJava_9) {
globalMap.put("tJava_9_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tJava_9;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : insert_produto_empresa");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_3");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_3", globalMap.get("conn_tDBConnection_3"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1515888 characters generated by Talend Open Studio for Big Data 
 *     on the 27 de abril de 2025 15:03:56 BRT
 ************************************************************************************************/