// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.dw_t_produto_ranking_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJavaRow_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: dw_t_produto_ranking Purpose: <br>
 * Description:  <br>
 * @author talend@talend.com
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class dw_t_produto_ranking implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String programa;
public String getPrograma(){
	return this.programa;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "dw_t_produto_ranking";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				dw_t_produto_ranking.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(dw_t_produto_ranking.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBConnection_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tHashInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBConnection_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = System.getenv(context.JDBC_PARAMETERS);
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.AUTCOM_PASSWORD)
; 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_2",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBConnection_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_1", false);
		start_Hash.put("tDBConnection_1", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_1";
	
	
		int tos_count_tDBConnection_1 = 0;
		


	
            String dbProperties_tDBConnection_1 = 
"ApplicationName="+context.programa+"";
            String url_tDBConnection_1 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_1 != null && !"".equals(dbProperties_tDBConnection_1.trim())) {
                url_tDBConnection_1 = url_tDBConnection_1 + "?" + dbProperties_tDBConnection_1;
            }
	String dbUser_tDBConnection_1 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_1 = System.getenv(context.POSTGRES_PASSWORD)
; 
		String dbPwd_tDBConnection_1 = decryptedPassword_tDBConnection_1;
	
	
	java.sql.Connection conn_tDBConnection_1 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_1 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_1 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_1.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_1 = drivers_tDBConnection_1.nextElement();
        if (redShiftDriverNames_tDBConnection_1.contains(d_tDBConnection_1.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_1);
                java.sql.DriverManager.registerDriver(d_tDBConnection_1);
            } catch (java.lang.Exception e_tDBConnection_1) {
globalMap.put("tDBConnection_1_ERROR_MESSAGE",e_tDBConnection_1.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_1 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_1 = java.lang.Class.forName(driverClass_tDBConnection_1);
			globalMap.put("driverClass_tDBConnection_1", driverClass_tDBConnection_1);
		
			conn_tDBConnection_1 = java.sql.DriverManager.getConnection(url_tDBConnection_1,dbUser_tDBConnection_1,dbPwd_tDBConnection_1);

		globalMap.put("conn_tDBConnection_1", conn_tDBConnection_1);
	if (null != conn_tDBConnection_1) {
		
			conn_tDBConnection_1.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_1","");

 



/**
 * [tDBConnection_1 begin ] stop
 */
	
	/**
	 * [tDBConnection_1 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 


	tos_count_tDBConnection_1++;

/**
 * [tDBConnection_1 main ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_1 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 

ok_Hash.put("tDBConnection_1", true);
end_Hash.put("tDBConnection_1", System.currentTimeMillis());




/**
 * [tDBConnection_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tRowGenerator_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_1 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_1";
	
	

 



/**
 * [tDBConnection_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_1_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
insert_logStruct insert_log = new insert_logStruct();
row5Struct row5 = new row5Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_dw_t_produto_ranking_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row4.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row4.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row5 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row5 = new row5Struct();
                                row5.nm_programa = insert_log.nm_programa;
                                row5.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row5.data_termino_execucao = insert_log.data_termino_execucao;
                                row5.mensagem = insert_log.mensagem;
                                row5.uuid = insert_log.uuid;
                                row5.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.nm_programa = row5.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row5.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row5.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row5.mensagem;
					oneRow_tHashOutput_1.uuid = row5.uuid;
					oneRow_tHashOutput_1.versao = row5.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk12", 0, "ok");
								} 
							
							tDBInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();
row10Struct row10 = new row10Struct();





	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_dw_t_produto_ranking_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tUniqRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_1", false);
		start_Hash.put("tUniqRow_1", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tUniqRow_1 = 0;
		

	
		class KeyStruct_tUniqRow_1 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String COD_ITEM;
					String ITEM;
					Integer QTD_VENDAS_DIA;
					BigDecimal TOTAL_VENDA_DIA;
					String NOME_COMPRADOR;
					Integer ESTOQUE_001;
					Integer ESTOQUE_010;
					Integer ESTOQUE_201;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.COD_ITEM == null) ? 0 : this.COD_ITEM.hashCode());
								
								result = prime * result + ((this.ITEM == null) ? 0 : this.ITEM.hashCode());
								
								result = prime * result + ((this.QTD_VENDAS_DIA == null) ? 0 : this.QTD_VENDAS_DIA.hashCode());
								
								result = prime * result + ((this.TOTAL_VENDA_DIA == null) ? 0 : this.TOTAL_VENDA_DIA.hashCode());
								
								result = prime * result + ((this.NOME_COMPRADOR == null) ? 0 : this.NOME_COMPRADOR.hashCode());
								
								result = prime * result + ((this.ESTOQUE_001 == null) ? 0 : this.ESTOQUE_001.hashCode());
								
								result = prime * result + ((this.ESTOQUE_010 == null) ? 0 : this.ESTOQUE_010.hashCode());
								
								result = prime * result + ((this.ESTOQUE_201 == null) ? 0 : this.ESTOQUE_201.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_1 other = (KeyStruct_tUniqRow_1) obj;
				
									if (this.COD_ITEM == null) {
										if (other.COD_ITEM != null) 
											return false;
								
									} else if (!this.COD_ITEM.equals(other.COD_ITEM))
								 
										return false;
								
									if (this.ITEM == null) {
										if (other.ITEM != null) 
											return false;
								
									} else if (!this.ITEM.equals(other.ITEM))
								 
										return false;
								
									if (this.QTD_VENDAS_DIA == null) {
										if (other.QTD_VENDAS_DIA != null) 
											return false;
								
									} else if (!this.QTD_VENDAS_DIA.equals(other.QTD_VENDAS_DIA))
								 
										return false;
								
									if (this.TOTAL_VENDA_DIA == null) {
										if (other.TOTAL_VENDA_DIA != null) 
											return false;
								
									} else if (!this.TOTAL_VENDA_DIA.equals(other.TOTAL_VENDA_DIA))
								 
										return false;
								
									if (this.NOME_COMPRADOR == null) {
										if (other.NOME_COMPRADOR != null) 
											return false;
								
									} else if (!this.NOME_COMPRADOR.equals(other.NOME_COMPRADOR))
								 
										return false;
								
									if (this.ESTOQUE_001 == null) {
										if (other.ESTOQUE_001 != null) 
											return false;
								
									} else if (!this.ESTOQUE_001.equals(other.ESTOQUE_001))
								 
										return false;
								
									if (this.ESTOQUE_010 == null) {
										if (other.ESTOQUE_010 != null) 
											return false;
								
									} else if (!this.ESTOQUE_010.equals(other.ESTOQUE_010))
								 
										return false;
								
									if (this.ESTOQUE_201 == null) {
										if (other.ESTOQUE_201 != null) 
											return false;
								
									} else if (!this.ESTOQUE_201.equals(other.ESTOQUE_201))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_1 = 0;
int nb_duplicates_tUniqRow_1 = 0;
KeyStruct_tUniqRow_1 finder_tUniqRow_1 = new KeyStruct_tUniqRow_1();
java.util.Set<KeyStruct_tUniqRow_1> keystUniqRow_1 = new java.util.HashSet<KeyStruct_tUniqRow_1>(); 

 



/**
 * [tUniqRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
		    calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "\n SELECT FAT.COD_ITEM, \n 		FAT.ITEM , \n 		COUNT(FAT.COD_ITEM) QTD_VENDAS_DIA, \n 		SUM(FAT.TOTAL_VENDA) TOTAL_VENDA_"
+"DIA,\n 		 		OP.OPE_NOMOPE AS NOME_COMPRADOR,\n(   SELECT \n         IG002.ITE_SALDOS - IG002.ITE_SALEXT - IFNULL(IG002.I"
+"TE_SALREG,0) - (IFNULL(IG002.ITE_QTPD_V,0) + IFNULL(IG002.ITE_QTPD_F,0) + IFNULL(IG002.ITE_QTPD_P,0)) \n    FROM ITEGER "
+"IG002\n    WHERE IG002.ITE_CODITE = FAT.COD_ITEM\n    AND IG002.ITE_CODEMP = '001') AS ESTOQUE_001,\n(   SELECT \n      "
+"   IG002.ITE_SALDOS - IG002.ITE_SALEXT - IFNULL(IG002.ITE_SALREG,0) - (IFNULL(IG002.ITE_QTPD_V,0) + IFNULL(IG002.ITE_QTP"
+"D_F,0) + IFNULL(IG002.ITE_QTPD_P,0)) \n    FROM ITEGER IG002\n    WHERE IG002.ITE_CODITE = FAT.COD_ITEM\n    AND IG002.I"
+"TE_CODEMP = '010') AS ESTOQUE_010,\n(   SELECT \n         IG002.ITE_SALDOS - IG002.ITE_SALEXT - IFNULL(IG002.ITE_SALREG,"
+"0) - (IFNULL(IG002.ITE_QTPD_V,0) + IFNULL(IG002.ITE_QTPD_F,0) + IFNULL(IG002.ITE_QTPD_P,0)) \n    FROM ITEGER IG002\n   "
+" WHERE IG002.ITE_CODITE = FAT.COD_ITEM\n    AND IG002.ITE_CODEMP = '201') AS ESTOQUE_201\n    FROM VW_FATURAMENTO FAT\n "
+"  LEFT JOIN CADFOR F ON F.FOR_CODFOR = FAT.COD_FORNECEDOR \n   LEFT JOIN CADOPE OP ON OP.OPE_CODOPE = FOR_COMPRA\n  WHER"
+"E  FAT.DATA = CURDATE() \n   GROUP BY FAT.COD_ITEM\n  ORDER BY TOTAL_VENDA DESC\nLIMIT 10;\n";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row7.COD_ITEM = null;
							} else {
	                         		
        	row7.COD_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row7.ITEM = null;
							} else {
	                         		
        	row7.ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row7.QTD_VENDAS_DIA = null;
							} else {
		                          
            row7.QTD_VENDAS_DIA = rs_tDBInput_1.getInt(3);
            if(rs_tDBInput_1.wasNull()){
                    row7.QTD_VENDAS_DIA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row7.TOTAL_VENDA_DIA = null;
							} else {
		                          
            row7.TOTAL_VENDA_DIA = rs_tDBInput_1.getBigDecimal(4);
            if(rs_tDBInput_1.wasNull()){
                    row7.TOTAL_VENDA_DIA = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row7.NOME_COMPRADOR = null;
							} else {
	                         		
        	row7.NOME_COMPRADOR = routines.system.JDBCUtil.getString(rs_tDBInput_1, 5, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 6) {
								row7.ESTOQUE_001 = null;
							} else {
		                          
            row7.ESTOQUE_001 = rs_tDBInput_1.getInt(6);
            if(rs_tDBInput_1.wasNull()){
                    row7.ESTOQUE_001 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 7) {
								row7.ESTOQUE_010 = null;
							} else {
		                          
            row7.ESTOQUE_010 = rs_tDBInput_1.getInt(7);
            if(rs_tDBInput_1.wasNull()){
                    row7.ESTOQUE_010 = null;
            }
		                    }
							if(colQtyInRs_tDBInput_1 < 8) {
								row7.ESTOQUE_201 = null;
							} else {
		                          
            row7.ESTOQUE_201 = rs_tDBInput_1.getInt(8);
            if(rs_tDBInput_1.wasNull()){
                    row7.ESTOQUE_201 = null;
            }
		                    }
					

 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_1 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					
row10 = null;			
if(row7.COD_ITEM == null){
	finder_tUniqRow_1.COD_ITEM = null;
}else{
	finder_tUniqRow_1.COD_ITEM = row7.COD_ITEM.toLowerCase();
}
if(row7.ITEM == null){
	finder_tUniqRow_1.ITEM = null;
}else{
	finder_tUniqRow_1.ITEM = row7.ITEM.toLowerCase();
}
finder_tUniqRow_1.QTD_VENDAS_DIA = row7.QTD_VENDAS_DIA;
finder_tUniqRow_1.TOTAL_VENDA_DIA = row7.TOTAL_VENDA_DIA;
if(row7.NOME_COMPRADOR == null){
	finder_tUniqRow_1.NOME_COMPRADOR = null;
}else{
	finder_tUniqRow_1.NOME_COMPRADOR = row7.NOME_COMPRADOR.toLowerCase();
}
finder_tUniqRow_1.ESTOQUE_001 = row7.ESTOQUE_001;
finder_tUniqRow_1.ESTOQUE_010 = row7.ESTOQUE_010;
finder_tUniqRow_1.ESTOQUE_201 = row7.ESTOQUE_201;	
finder_tUniqRow_1.hashCodeDirty = true;
if (!keystUniqRow_1.contains(finder_tUniqRow_1)) {
		KeyStruct_tUniqRow_1 new_tUniqRow_1 = new KeyStruct_tUniqRow_1();

		
if(row7.COD_ITEM == null){
	new_tUniqRow_1.COD_ITEM = null;
}else{
	new_tUniqRow_1.COD_ITEM = row7.COD_ITEM.toLowerCase();
}
if(row7.ITEM == null){
	new_tUniqRow_1.ITEM = null;
}else{
	new_tUniqRow_1.ITEM = row7.ITEM.toLowerCase();
}
new_tUniqRow_1.QTD_VENDAS_DIA = row7.QTD_VENDAS_DIA;
new_tUniqRow_1.TOTAL_VENDA_DIA = row7.TOTAL_VENDA_DIA;
if(row7.NOME_COMPRADOR == null){
	new_tUniqRow_1.NOME_COMPRADOR = null;
}else{
	new_tUniqRow_1.NOME_COMPRADOR = row7.NOME_COMPRADOR.toLowerCase();
}
new_tUniqRow_1.ESTOQUE_001 = row7.ESTOQUE_001;
new_tUniqRow_1.ESTOQUE_010 = row7.ESTOQUE_010;
new_tUniqRow_1.ESTOQUE_201 = row7.ESTOQUE_201;
		
		keystUniqRow_1.add(new_tUniqRow_1);if(row10 == null){ 
	
	row10 = new row10Struct();
}row10.COD_ITEM = row7.COD_ITEM;			row10.ITEM = row7.ITEM;			row10.QTD_VENDAS_DIA = row7.QTD_VENDAS_DIA;			row10.TOTAL_VENDA_DIA = row7.TOTAL_VENDA_DIA;			row10.NOME_COMPRADOR = row7.NOME_COMPRADOR;			row10.ESTOQUE_001 = row7.ESTOQUE_001;			row10.ESTOQUE_010 = row7.ESTOQUE_010;			row10.ESTOQUE_201 = row7.ESTOQUE_201;					
		nb_uniques_tUniqRow_1++;
	} else {
	  nb_duplicates_tUniqRow_1++;
	}

 


	tos_count_tUniqRow_1++;

/**
 * [tUniqRow_1 main ] stop
 */
	
	/**
	 * [tUniqRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_begin ] stop
 */
// Start of branch "row10"
if(row10 != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					



    
		row10Struct oneRow_tHashOutput_2 = new row10Struct();
				
					oneRow_tHashOutput_2.COD_ITEM = row10.COD_ITEM;
					oneRow_tHashOutput_2.ITEM = row10.ITEM;
					oneRow_tHashOutput_2.QTD_VENDAS_DIA = row10.QTD_VENDAS_DIA;
					oneRow_tHashOutput_2.TOTAL_VENDA_DIA = row10.TOTAL_VENDA_DIA;
					oneRow_tHashOutput_2.NOME_COMPRADOR = row10.NOME_COMPRADOR;
					oneRow_tHashOutput_2.ESTOQUE_001 = row10.ESTOQUE_001;
					oneRow_tHashOutput_2.ESTOQUE_010 = row10.ESTOQUE_010;
					oneRow_tHashOutput_2.ESTOQUE_201 = row10.ESTOQUE_201;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "row10"




	
	/**
	 * [tUniqRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);

 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tUniqRow_1 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

globalMap.put("tUniqRow_1_NB_UNIQUES",nb_uniques_tUniqRow_1);
globalMap.put("tUniqRow_1_NB_DUPLICATES",nb_duplicates_tUniqRow_1);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tUniqRow_1", true);
end_Hash.put("tUniqRow_1", System.currentTimeMillis());




/**
 * [tUniqRow_1 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk4", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tUniqRow_1 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_1";
	
	

 



/**
 * [tUniqRow_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
						this.MEDIA001 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
						this.MEDIA001 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();
row14Struct row14 = new row14Struct();




	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tDBInput_2 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row10Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row11.COD_ITEM = next_tHashInput_1.COD_ITEM;
	row11.ITEM = next_tHashInput_1.ITEM;
	row11.QTD_VENDAS_DIA = next_tHashInput_1.QTD_VENDAS_DIA;
	row11.TOTAL_VENDA_DIA = next_tHashInput_1.TOTAL_VENDA_DIA;
	row11.NOME_COMPRADOR = next_tHashInput_1.NOME_COMPRADOR;
	row11.ESTOQUE_001 = next_tHashInput_1.ESTOQUE_001;
	row11.ESTOQUE_010 = next_tHashInput_1.ESTOQUE_010;
	row11.ESTOQUE_201 = next_tHashInput_1.ESTOQUE_201;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					


    	            
            globalMap.put("row11.COD_ITEM", row11.COD_ITEM);
    	            
            globalMap.put("row11.ITEM", row11.ITEM);
    	            
            globalMap.put("row11.QTD_VENDAS_DIA", row11.QTD_VENDAS_DIA);
    	            
            globalMap.put("row11.TOTAL_VENDA_DIA", row11.TOTAL_VENDA_DIA);
    	            
            globalMap.put("row11.NOME_COMPRADOR", row11.NOME_COMPRADOR);
    	            
            globalMap.put("row11.ESTOQUE_001", row11.ESTOQUE_001);
    	            
            globalMap.put("row11.ESTOQUE_010", row11.ESTOQUE_010);
    	            
            globalMap.put("row11.ESTOQUE_201", row11.ESTOQUE_201);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tDBInput_2++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row14", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tDBInput_2);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_dw_t_produto_ranking_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT COD_ITEM, ROUND (SUM(EMP001.QTD_ITEM)/ 90) AS MEDIA001\n   FROM VW_FATURAMENTO EMP001\n  WHERE EMP001.DATA >= DA"
+"TE_SUB(CURDATE() , INTERVAL 90 DAY) \n    AND EMP001.EMPRESA = '001'\n    AND EMP001.COD_ITEM = '" +((String)globalMap.get("row11.COD_ITEM"))+ "'\n";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row14.COD_ITEM = null;
							} else {
	                         		
        	row14.COD_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row14.MEDIA001 = null;
							} else {
		                          
            row14.MEDIA001 = rs_tDBInput_2.getInt(2);
            if(rs_tDBInput_2.wasNull()){
                    row14.MEDIA001 = null;
            }
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					



    
		row14Struct oneRow_tHashOutput_3 = new row14Struct();
				
					oneRow_tHashOutput_3.COD_ITEM = row14.COD_ITEM;
					oneRow_tHashOutput_3.MEDIA001 = row14.MEDIA001;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);

 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tDBInput_2);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk5", 0, "ok");
								} 
							
							tHashInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public Integer media010;

				public Integer getMedia010 () {
					return this.media010;
				}

				public Boolean media010IsNullable(){
				    return true;
				}
				public Boolean media010IsKey(){
				    return false;
				}
				public Integer media010Length(){
				    return null;
				}
				public Integer media010Precision(){
				    return null;
				}
				public String media010Default(){
				
					return null;
				
				}
				public String media010Comment(){
				
				    return "";
				
				}
				public String media010Pattern(){
				
					return "";
				
				}
				public String media010OriginalDbColumnName(){
				
					return "media010";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
						this.media010 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
						this.media010 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// Integer
				
						writeInteger(this.media010,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// Integer
				
						writeInteger(this.media010,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",media010="+String.valueOf(media010));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();
row17Struct row17 = new row17Struct();




	
	/**
	 * [tFlowToIterate_2 begin ] start
	 */

				
			int NB_ITERATE_tDBInput_3 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_2", false);
		start_Hash.put("tFlowToIterate_2", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tFlowToIterate_2 = 0;
		

int nb_line_tFlowToIterate_2 = 0;
int counter_tFlowToIterate_2 = 0;

 



/**
 * [tFlowToIterate_2 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    row10Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row15.COD_ITEM = next_tHashInput_2.COD_ITEM;
	row15.ITEM = next_tHashInput_2.ITEM;
	row15.QTD_VENDAS_DIA = next_tHashInput_2.QTD_VENDAS_DIA;
	row15.TOTAL_VENDA_DIA = next_tHashInput_2.TOTAL_VENDA_DIA;
	row15.NOME_COMPRADOR = next_tHashInput_2.NOME_COMPRADOR;
	row15.ESTOQUE_001 = next_tHashInput_2.ESTOQUE_001;
	row15.ESTOQUE_010 = next_tHashInput_2.ESTOQUE_010;
	row15.ESTOQUE_201 = next_tHashInput_2.ESTOQUE_201;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_2 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


    	            
            globalMap.put("row15.COD_ITEM", row15.COD_ITEM);
    	            
            globalMap.put("row15.ITEM", row15.ITEM);
    	            
            globalMap.put("row15.QTD_VENDAS_DIA", row15.QTD_VENDAS_DIA);
    	            
            globalMap.put("row15.TOTAL_VENDA_DIA", row15.TOTAL_VENDA_DIA);
    	            
            globalMap.put("row15.NOME_COMPRADOR", row15.NOME_COMPRADOR);
    	            
            globalMap.put("row15.ESTOQUE_001", row15.ESTOQUE_001);
    	            
            globalMap.put("row15.ESTOQUE_010", row15.ESTOQUE_010);
    	            
            globalMap.put("row15.ESTOQUE_201", row15.ESTOQUE_201);
    	
 
	   nb_line_tFlowToIterate_2++;  
       counter_tFlowToIterate_2++;
       globalMap.put("tFlowToIterate_2_CURRENT_ITERATION", counter_tFlowToIterate_2);
 


	tos_count_tFlowToIterate_2++;

/**
 * [tFlowToIterate_2 main ] stop
 */
	
	/**
	 * [tFlowToIterate_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

 



/**
 * [tFlowToIterate_2 process_data_begin ] stop
 */
	NB_ITERATE_tDBInput_3++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row17", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate3", 1, "exec" + NB_ITERATE_tDBInput_3);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_dw_t_produto_ranking_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_3 = java.util.Calendar.getInstance();
		    calendar_tDBInput_3.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_3 = calendar_tDBInput_3.getTime();
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "SELECT COD_ITEM, ROUND(SUM(EMP001.QTD_ITEM)/ 90) AS media010\n   FROM VW_FATURAMENTO EMP001\n  WHERE EMP001.DATA >= DAT"
+"E_SUB(CURDATE() , INTERVAL 90 DAY) \n    AND EMP001.EMPRESA = '010'\n    AND EMP001.COD_ITEM = '" +((String)globalMap.get("row15.COD_ITEM"))+ "'\n";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row17.COD_ITEM = null;
							} else {
	                         		
        	row17.COD_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row17.media010 = null;
							} else {
		                          
            row17.media010 = rs_tDBInput_3.getInt(2);
            if(rs_tDBInput_3.wasNull()){
                    row17.media010 = null;
            }
		                    }
					

 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row17"
						
						);
					}
					



    
		row17Struct oneRow_tHashOutput_4 = new row17Struct();
				
					oneRow_tHashOutput_4.COD_ITEM = row17.COD_ITEM;
					oneRow_tHashOutput_4.media010 = row17.media010;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);

 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate3", 2, "exec" + NB_ITERATE_tDBInput_3);
						}				
					




	
	/**
	 * [tFlowToIterate_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

 



/**
 * [tFlowToIterate_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tFlowToIterate_2 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

globalMap.put("tFlowToIterate_2_NB_LINE",nb_line_tFlowToIterate_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_2", true);
end_Hash.put("tFlowToIterate_2", System.currentTimeMillis());




/**
 * [tFlowToIterate_2 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk7", 0, "ok");
								} 
							
							tHashInput_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_2 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_2";
	
	

 



/**
 * [tFlowToIterate_2 finally ] stop
 */

	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public Integer media201;

				public Integer getMedia201 () {
					return this.media201;
				}

				public Boolean media201IsNullable(){
				    return true;
				}
				public Boolean media201IsKey(){
				    return false;
				}
				public Integer media201Length(){
				    return null;
				}
				public Integer media201Precision(){
				    return null;
				}
				public String media201Default(){
				
					return null;
				
				}
				public String media201Comment(){
				
				    return "";
				
				}
				public String media201Pattern(){
				
					return "";
				
				}
				public String media201OriginalDbColumnName(){
				
					return "media201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
						this.media201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
						this.media201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// Integer
				
						writeInteger(this.media201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// Integer
				
						writeInteger(this.media201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",media201="+String.valueOf(media201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();
row20Struct row20 = new row20Struct();




	
	/**
	 * [tFlowToIterate_3 begin ] start
	 */

				
			int NB_ITERATE_tDBInput_4 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_3", false);
		start_Hash.put("tFlowToIterate_3", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tFlowToIterate_3 = 0;
		

int nb_line_tFlowToIterate_3 = 0;
int counter_tFlowToIterate_3 = 0;

 



/**
 * [tFlowToIterate_3 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    row10Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row18.COD_ITEM = next_tHashInput_3.COD_ITEM;
	row18.ITEM = next_tHashInput_3.ITEM;
	row18.QTD_VENDAS_DIA = next_tHashInput_3.QTD_VENDAS_DIA;
	row18.TOTAL_VENDA_DIA = next_tHashInput_3.TOTAL_VENDA_DIA;
	row18.NOME_COMPRADOR = next_tHashInput_3.NOME_COMPRADOR;
	row18.ESTOQUE_001 = next_tHashInput_3.ESTOQUE_001;
	row18.ESTOQUE_010 = next_tHashInput_3.ESTOQUE_010;
	row18.ESTOQUE_201 = next_tHashInput_3.ESTOQUE_201;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_3 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row18"
						
						);
					}
					


    	            
            globalMap.put("row18.COD_ITEM", row18.COD_ITEM);
    	            
            globalMap.put("row18.ITEM", row18.ITEM);
    	            
            globalMap.put("row18.QTD_VENDAS_DIA", row18.QTD_VENDAS_DIA);
    	            
            globalMap.put("row18.TOTAL_VENDA_DIA", row18.TOTAL_VENDA_DIA);
    	            
            globalMap.put("row18.NOME_COMPRADOR", row18.NOME_COMPRADOR);
    	            
            globalMap.put("row18.ESTOQUE_001", row18.ESTOQUE_001);
    	            
            globalMap.put("row18.ESTOQUE_010", row18.ESTOQUE_010);
    	            
            globalMap.put("row18.ESTOQUE_201", row18.ESTOQUE_201);
    	
 
	   nb_line_tFlowToIterate_3++;  
       counter_tFlowToIterate_3++;
       globalMap.put("tFlowToIterate_3_CURRENT_ITERATION", counter_tFlowToIterate_3);
 


	tos_count_tFlowToIterate_3++;

/**
 * [tFlowToIterate_3 main ] stop
 */
	
	/**
	 * [tFlowToIterate_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

 



/**
 * [tFlowToIterate_3 process_data_begin ] stop
 */
	NB_ITERATE_tDBInput_4++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row20", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate4", 1, "exec" + NB_ITERATE_tDBInput_4);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row20Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_dw_t_produto_ranking_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row20Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_4 = java.util.Calendar.getInstance();
		    calendar_tDBInput_4.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_4 = calendar_tDBInput_4.getTime();
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "SELECT COD_ITEM, ROUND(SUM(EMP001.QTD_ITEM)/ 90) AS media201\n   FROM VW_FATURAMENTO EMP001\n  WHERE EMP001.DATA >= DAT"
+"E_SUB(CURDATE() , INTERVAL 90 DAY) \n    AND EMP001.EMPRESA = '201'\n    AND EMP001.COD_ITEM = '" +((String)globalMap.get("row18.COD_ITEM"))+ "'\n";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row20.COD_ITEM = null;
							} else {
	                         		
        	row20.COD_ITEM = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row20.media201 = null;
							} else {
		                          
            row20.media201 = rs_tDBInput_4.getInt(2);
            if(rs_tDBInput_4.wasNull()){
                    row20.media201 = null;
            }
		                    }
					

 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					



    
		row20Struct oneRow_tHashOutput_5 = new row20Struct();
				
					oneRow_tHashOutput_5.COD_ITEM = row20.COD_ITEM;
					oneRow_tHashOutput_5.media201 = row20.media201;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);

 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate4", 2, "exec" + NB_ITERATE_tDBInput_4);
						}				
					




	
	/**
	 * [tFlowToIterate_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

 



/**
 * [tFlowToIterate_3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tFlowToIterate_3 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

globalMap.put("tFlowToIterate_3_NB_LINE",nb_line_tFlowToIterate_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_3", true);
end_Hash.put("tFlowToIterate_3", System.currentTimeMillis());




/**
 * [tFlowToIterate_3 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk9", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_3 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_3";
	
	

 



/**
 * [tFlowToIterate_3 finally ] stop
 */

	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 5;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public java.util.Date dt_ultima_compra;

				public java.util.Date getDt_ultima_compra () {
					return this.dt_ultima_compra;
				}

				public Boolean dt_ultima_compraIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_compraIsKey(){
				    return false;
				}
				public Integer dt_ultima_compraLength(){
				    return null;
				}
				public Integer dt_ultima_compraPrecision(){
				    return null;
				}
				public String dt_ultima_compraDefault(){
				
					return null;
				
				}
				public String dt_ultima_compraComment(){
				
				    return "";
				
				}
				public String dt_ultima_compraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_compraOriginalDbColumnName(){
				
					return "dt_ultima_compra";
				
				}

				
			    public java.util.Date dt_ultima_venda;

				public java.util.Date getDt_ultima_venda () {
					return this.dt_ultima_venda;
				}

				public Boolean dt_ultima_vendaIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_vendaIsKey(){
				    return false;
				}
				public Integer dt_ultima_vendaLength(){
				    return null;
				}
				public Integer dt_ultima_vendaPrecision(){
				    return null;
				}
				public String dt_ultima_vendaDefault(){
				
					return null;
				
				}
				public String dt_ultima_vendaComment(){
				
				    return "";
				
				}
				public String dt_ultima_vendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_vendaOriginalDbColumnName(){
				
					return "dt_ultima_venda";
				
				}

				
			    public Integer dias_sem_venda;

				public Integer getDias_sem_venda () {
					return this.dias_sem_venda;
				}

				public Boolean dias_sem_vendaIsNullable(){
				    return true;
				}
				public Boolean dias_sem_vendaIsKey(){
				    return false;
				}
				public Integer dias_sem_vendaLength(){
				    return null;
				}
				public Integer dias_sem_vendaPrecision(){
				    return null;
				}
				public String dias_sem_vendaDefault(){
				
					return null;
				
				}
				public String dias_sem_vendaComment(){
				
				    return "";
				
				}
				public String dias_sem_vendaPattern(){
				
					return "";
				
				}
				public String dias_sem_vendaOriginalDbColumnName(){
				
					return "dias_sem_venda";
				
				}

				
			    public String curva_abc;

				public String getCurva_abc () {
					return this.curva_abc;
				}

				public Boolean curva_abcIsNullable(){
				    return true;
				}
				public Boolean curva_abcIsKey(){
				    return false;
				}
				public Integer curva_abcLength(){
				    return 3;
				}
				public Integer curva_abcPrecision(){
				    return null;
				}
				public String curva_abcDefault(){
				
					return null;
				
				}
				public String curva_abcComment(){
				
				    return "";
				
				}
				public String curva_abcPattern(){
				
					return "";
				
				}
				public String curva_abcOriginalDbColumnName(){
				
					return "curva_abc";
				
				}

				
			    public String curva_vlr;

				public String getCurva_vlr () {
					return this.curva_vlr;
				}

				public Boolean curva_vlrIsNullable(){
				    return true;
				}
				public Boolean curva_vlrIsKey(){
				    return false;
				}
				public Integer curva_vlrLength(){
				    return 3;
				}
				public Integer curva_vlrPrecision(){
				    return null;
				}
				public String curva_vlrDefault(){
				
					return null;
				
				}
				public String curva_vlrComment(){
				
				    return "";
				
				}
				public String curva_vlrPattern(){
				
					return "";
				
				}
				public String curva_vlrOriginalDbColumnName(){
				
					return "curva_vlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dt_ultima_compra="+String.valueOf(dt_ultima_compra));
		sb.append(",dt_ultima_venda="+String.valueOf(dt_ultima_venda));
		sb.append(",dias_sem_venda="+String.valueOf(dias_sem_venda));
		sb.append(",curva_abc="+curva_abc);
		sb.append(",curva_vlr="+curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 5;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public java.util.Date dt_ultima_compra;

				public java.util.Date getDt_ultima_compra () {
					return this.dt_ultima_compra;
				}

				public Boolean dt_ultima_compraIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_compraIsKey(){
				    return false;
				}
				public Integer dt_ultima_compraLength(){
				    return null;
				}
				public Integer dt_ultima_compraPrecision(){
				    return null;
				}
				public String dt_ultima_compraDefault(){
				
					return null;
				
				}
				public String dt_ultima_compraComment(){
				
				    return "";
				
				}
				public String dt_ultima_compraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_compraOriginalDbColumnName(){
				
					return "dt_ultima_compra";
				
				}

				
			    public java.util.Date dt_ultima_venda;

				public java.util.Date getDt_ultima_venda () {
					return this.dt_ultima_venda;
				}

				public Boolean dt_ultima_vendaIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_vendaIsKey(){
				    return false;
				}
				public Integer dt_ultima_vendaLength(){
				    return null;
				}
				public Integer dt_ultima_vendaPrecision(){
				    return null;
				}
				public String dt_ultima_vendaDefault(){
				
					return null;
				
				}
				public String dt_ultima_vendaComment(){
				
				    return "";
				
				}
				public String dt_ultima_vendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_vendaOriginalDbColumnName(){
				
					return "dt_ultima_venda";
				
				}

				
			    public Integer dias_sem_venda;

				public Integer getDias_sem_venda () {
					return this.dias_sem_venda;
				}

				public Boolean dias_sem_vendaIsNullable(){
				    return true;
				}
				public Boolean dias_sem_vendaIsKey(){
				    return false;
				}
				public Integer dias_sem_vendaLength(){
				    return null;
				}
				public Integer dias_sem_vendaPrecision(){
				    return null;
				}
				public String dias_sem_vendaDefault(){
				
					return null;
				
				}
				public String dias_sem_vendaComment(){
				
				    return "";
				
				}
				public String dias_sem_vendaPattern(){
				
					return "";
				
				}
				public String dias_sem_vendaOriginalDbColumnName(){
				
					return "dias_sem_venda";
				
				}

				
			    public String curva_abc;

				public String getCurva_abc () {
					return this.curva_abc;
				}

				public Boolean curva_abcIsNullable(){
				    return true;
				}
				public Boolean curva_abcIsKey(){
				    return false;
				}
				public Integer curva_abcLength(){
				    return 3;
				}
				public Integer curva_abcPrecision(){
				    return null;
				}
				public String curva_abcDefault(){
				
					return null;
				
				}
				public String curva_abcComment(){
				
				    return "";
				
				}
				public String curva_abcPattern(){
				
					return "";
				
				}
				public String curva_abcOriginalDbColumnName(){
				
					return "curva_abc";
				
				}

				
			    public String curva_vlr;

				public String getCurva_vlr () {
					return this.curva_vlr;
				}

				public Boolean curva_vlrIsNullable(){
				    return true;
				}
				public Boolean curva_vlrIsKey(){
				    return false;
				}
				public Integer curva_vlrLength(){
				    return 3;
				}
				public Integer curva_vlrPrecision(){
				    return null;
				}
				public String curva_vlrDefault(){
				
					return null;
				
				}
				public String curva_vlrComment(){
				
				    return "";
				
				}
				public String curva_vlrPattern(){
				
					return "";
				
				}
				public String curva_vlrOriginalDbColumnName(){
				
					return "curva_vlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dt_ultima_compra="+String.valueOf(dt_ultima_compra));
		sb.append(",dt_ultima_venda="+String.valueOf(dt_ultima_venda));
		sb.append(",dias_sem_venda="+String.valueOf(dias_sem_venda));
		sb.append(",curva_abc="+curva_abc);
		sb.append(",curva_vlr="+curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();
row8Struct row8 = new row8Struct();
row9Struct row9 = new row9Struct();




	
	/**
	 * [tFlowToIterate_4 begin ] start
	 */

				
			int NB_ITERATE_tDBInput_5 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_4", false);
		start_Hash.put("tFlowToIterate_4", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tFlowToIterate_4 = 0;
		

int nb_line_tFlowToIterate_4 = 0;
int counter_tFlowToIterate_4 = 0;

 



/**
 * [tFlowToIterate_4 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    row10Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row13.COD_ITEM = next_tHashInput_4.COD_ITEM;
	row13.ITEM = next_tHashInput_4.ITEM;
	row13.QTD_VENDAS_DIA = next_tHashInput_4.QTD_VENDAS_DIA;
	row13.TOTAL_VENDA_DIA = next_tHashInput_4.TOTAL_VENDA_DIA;
	row13.NOME_COMPRADOR = next_tHashInput_4.NOME_COMPRADOR;
	row13.ESTOQUE_001 = next_tHashInput_4.ESTOQUE_001;
	row13.ESTOQUE_010 = next_tHashInput_4.ESTOQUE_010;
	row13.ESTOQUE_201 = next_tHashInput_4.ESTOQUE_201;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_4 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


    	            
            globalMap.put("row13.COD_ITEM", row13.COD_ITEM);
    	            
            globalMap.put("row13.ITEM", row13.ITEM);
    	            
            globalMap.put("row13.QTD_VENDAS_DIA", row13.QTD_VENDAS_DIA);
    	            
            globalMap.put("row13.TOTAL_VENDA_DIA", row13.TOTAL_VENDA_DIA);
    	            
            globalMap.put("row13.NOME_COMPRADOR", row13.NOME_COMPRADOR);
    	            
            globalMap.put("row13.ESTOQUE_001", row13.ESTOQUE_001);
    	            
            globalMap.put("row13.ESTOQUE_010", row13.ESTOQUE_010);
    	            
            globalMap.put("row13.ESTOQUE_201", row13.ESTOQUE_201);
    	
 
	   nb_line_tFlowToIterate_4++;  
       counter_tFlowToIterate_4++;
       globalMap.put("tFlowToIterate_4_CURRENT_ITERATION", counter_tFlowToIterate_4);
 


	tos_count_tFlowToIterate_4++;

/**
 * [tFlowToIterate_4 main ] stop
 */
	
	/**
	 * [tFlowToIterate_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

 



/**
 * [tFlowToIterate_4 process_data_begin ] stop
 */
	NB_ITERATE_tDBInput_5++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row9", 3, 0);
					}           			
				
					if(execStat){				
	       				runStat.updateStatOnConnection("row8", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate7", 1, "exec" + NB_ITERATE_tDBInput_5);
					//Thread.sleep(1000);
				}				
			



	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_dw_t_produto_ranking_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tUniqRow_2 = 0;
		

	
		class KeyStruct_tUniqRow_2 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String cd_produto;
					java.util.Date dt_ultima_compra;
					java.util.Date dt_ultima_venda;
					Integer dias_sem_venda;
					String curva_abc;
					String curva_vlr;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
								
								result = prime * result + ((this.dt_ultima_compra == null) ? 0 : this.dt_ultima_compra.hashCode());
								
								result = prime * result + ((this.dt_ultima_venda == null) ? 0 : this.dt_ultima_venda.hashCode());
								
								result = prime * result + ((this.dias_sem_venda == null) ? 0 : this.dias_sem_venda.hashCode());
								
								result = prime * result + ((this.curva_abc == null) ? 0 : this.curva_abc.hashCode());
								
								result = prime * result + ((this.curva_vlr == null) ? 0 : this.curva_vlr.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;
				
									if (this.cd_produto == null) {
										if (other.cd_produto != null) 
											return false;
								
									} else if (!this.cd_produto.equals(other.cd_produto))
								 
										return false;
								
									if (this.dt_ultima_compra == null) {
										if (other.dt_ultima_compra != null) 
											return false;
								
									} else if (!this.dt_ultima_compra.equals(other.dt_ultima_compra))
								 
										return false;
								
									if (this.dt_ultima_venda == null) {
										if (other.dt_ultima_venda != null) 
											return false;
								
									} else if (!this.dt_ultima_venda.equals(other.dt_ultima_venda))
								 
										return false;
								
									if (this.dias_sem_venda == null) {
										if (other.dias_sem_venda != null) 
											return false;
								
									} else if (!this.dias_sem_venda.equals(other.dias_sem_venda))
								 
										return false;
								
									if (this.curva_abc == null) {
										if (other.curva_abc != null) 
											return false;
								
									} else if (!this.curva_abc.equals(other.curva_abc))
								 
										return false;
								
									if (this.curva_vlr == null) {
										if (other.curva_vlr != null) 
											return false;
								
									} else if (!this.curva_vlr.equals(other.curva_vlr))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0;
KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>(); 

 



/**
 * [tUniqRow_2 begin ] stop
 */



	
	/**
	 * [tDBInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_5", false);
		start_Hash.put("tDBInput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_5";
	
	
		int tos_count_tDBInput_5 = 0;
		
	
    
	
		    int nb_line_tDBInput_5 = 0;
		    java.sql.Connection conn_tDBInput_5 = null;
				conn_tDBInput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
				
		    
			java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

		    String dbquery_tDBInput_5 = "select cd_produto , dt_ultima_compra , dt_ultima_venda ,dias_sem_venda, curva_abc , curva_vlr \n  from dw_t_produto_emp"
+"resa\n	where cd_empresa = '001'\n	 and cd_produto = '" +((String)globalMap.get("row13.COD_ITEM"))+ "'\n";
		    

		    globalMap.put("tDBInput_5_QUERY",dbquery_tDBInput_5);

		    java.sql.ResultSet rs_tDBInput_5 = null;

		    try {
		    	rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
		    	int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

		    String tmpContent_tDBInput_5 = null;
		    
		    
		    while (rs_tDBInput_5.next()) {
		        nb_line_tDBInput_5++;
		        
							if(colQtyInRs_tDBInput_5 < 1) {
								row8.cd_produto = null;
							} else {
	                         		
        	row8.cd_produto = routines.system.JDBCUtil.getString(rs_tDBInput_5, 1, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 2) {
								row8.dt_ultima_compra = null;
							} else {
										
			row8.dt_ultima_compra = routines.system.JDBCUtil.getDate(rs_tDBInput_5, 2);
		                    }
							if(colQtyInRs_tDBInput_5 < 3) {
								row8.dt_ultima_venda = null;
							} else {
										
			row8.dt_ultima_venda = routines.system.JDBCUtil.getDate(rs_tDBInput_5, 3);
		                    }
							if(colQtyInRs_tDBInput_5 < 4) {
								row8.dias_sem_venda = null;
							} else {
		                          
            row8.dias_sem_venda = rs_tDBInput_5.getInt(4);
            if(rs_tDBInput_5.wasNull()){
                    row8.dias_sem_venda = null;
            }
		                    }
							if(colQtyInRs_tDBInput_5 < 5) {
								row8.curva_abc = null;
							} else {
	                         		
        	row8.curva_abc = routines.system.JDBCUtil.getString(rs_tDBInput_5, 5, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 6) {
								row8.curva_vlr = null;
							} else {
	                         		
        	row8.curva_vlr = routines.system.JDBCUtil.getString(rs_tDBInput_5, 6, false);
		                    }
					


 



/**
 * [tDBInput_5 begin ] stop
 */
	
	/**
	 * [tDBInput_5 main ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 


	tos_count_tDBInput_5++;

/**
 * [tDBInput_5 main ] stop
 */
	
	/**
	 * [tDBInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					
row9 = null;			
if(row8.cd_produto == null){
	finder_tUniqRow_2.cd_produto = null;
}else{
	finder_tUniqRow_2.cd_produto = row8.cd_produto.toLowerCase();
}
finder_tUniqRow_2.dt_ultima_compra = row8.dt_ultima_compra;
finder_tUniqRow_2.dt_ultima_venda = row8.dt_ultima_venda;
finder_tUniqRow_2.dias_sem_venda = row8.dias_sem_venda;
if(row8.curva_abc == null){
	finder_tUniqRow_2.curva_abc = null;
}else{
	finder_tUniqRow_2.curva_abc = row8.curva_abc.toLowerCase();
}
if(row8.curva_vlr == null){
	finder_tUniqRow_2.curva_vlr = null;
}else{
	finder_tUniqRow_2.curva_vlr = row8.curva_vlr.toLowerCase();
}	
finder_tUniqRow_2.hashCodeDirty = true;
if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
		KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

		
if(row8.cd_produto == null){
	new_tUniqRow_2.cd_produto = null;
}else{
	new_tUniqRow_2.cd_produto = row8.cd_produto.toLowerCase();
}
new_tUniqRow_2.dt_ultima_compra = row8.dt_ultima_compra;
new_tUniqRow_2.dt_ultima_venda = row8.dt_ultima_venda;
new_tUniqRow_2.dias_sem_venda = row8.dias_sem_venda;
if(row8.curva_abc == null){
	new_tUniqRow_2.curva_abc = null;
}else{
	new_tUniqRow_2.curva_abc = row8.curva_abc.toLowerCase();
}
if(row8.curva_vlr == null){
	new_tUniqRow_2.curva_vlr = null;
}else{
	new_tUniqRow_2.curva_vlr = row8.curva_vlr.toLowerCase();
}
		
		keystUniqRow_2.add(new_tUniqRow_2);if(row9 == null){ 
	
	row9 = new row9Struct();
}row9.cd_produto = row8.cd_produto;			row9.dt_ultima_compra = row8.dt_ultima_compra;			row9.dt_ultima_venda = row8.dt_ultima_venda;			row9.dias_sem_venda = row8.dias_sem_venda;			row9.curva_abc = row8.curva_abc;			row9.curva_vlr = row8.curva_vlr;					
		nb_uniques_tUniqRow_2++;
	} else {
	  nb_duplicates_tUniqRow_2++;
	}

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row9"
if(row9 != null) { 



	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row9"
						
						);
					}
					



    
		row9Struct oneRow_tHashOutput_6 = new row9Struct();
				
					oneRow_tHashOutput_6.cd_produto = row9.cd_produto;
					oneRow_tHashOutput_6.dt_ultima_compra = row9.dt_ultima_compra;
					oneRow_tHashOutput_6.dt_ultima_venda = row9.dt_ultima_venda;
					oneRow_tHashOutput_6.dias_sem_venda = row9.dias_sem_venda;
					oneRow_tHashOutput_6.curva_abc = row9.curva_abc;
					oneRow_tHashOutput_6.curva_vlr = row9.curva_vlr;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */

} // End of branch "row9"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_5 end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

	}
}finally{
	if (rs_tDBInput_5 != null) {
		rs_tDBInput_5.close();
	}
	if (stmt_tDBInput_5 != null) {
		stmt_tDBInput_5.close();
	}
}
globalMap.put("tDBInput_5_NB_LINE",nb_line_tDBInput_5);
 

ok_Hash.put("tDBInput_5", true);
end_Hash.put("tDBInput_5", System.currentTimeMillis());




/**
 * [tDBInput_5 end ] stop
 */

	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());




/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */






						if(execStat){
							runStat.updateStatOnConnection("iterate7", 2, "exec" + NB_ITERATE_tDBInput_5);
						}				
					




	
	/**
	 * [tFlowToIterate_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

 



/**
 * [tFlowToIterate_4 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tFlowToIterate_4 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

globalMap.put("tFlowToIterate_4_NB_LINE",nb_line_tFlowToIterate_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_4", true);
end_Hash.put("tFlowToIterate_4", System.currentTimeMillis());




/**
 * [tFlowToIterate_4 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tHashInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_4 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_4";
	
	

 



/**
 * [tFlowToIterate_4 finally ] stop
 */

	
	/**
	 * [tDBInput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 finally ] stop
 */

	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */












				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class out4Struct implements routines.system.IPersistableRow<out4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				
			    public Integer COBERTURA001;

				public Integer getCOBERTURA001 () {
					return this.COBERTURA001;
				}

				public Boolean COBERTURA001IsNullable(){
				    return true;
				}
				public Boolean COBERTURA001IsKey(){
				    return false;
				}
				public Integer COBERTURA001Length(){
				    return null;
				}
				public Integer COBERTURA001Precision(){
				    return null;
				}
				public String COBERTURA001Default(){
				
					return null;
				
				}
				public String COBERTURA001Comment(){
				
				    return "";
				
				}
				public String COBERTURA001Pattern(){
				
					return "";
				
				}
				public String COBERTURA001OriginalDbColumnName(){
				
					return "COBERTURA001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer MEDIA010;

				public Integer getMEDIA010 () {
					return this.MEDIA010;
				}

				public Boolean MEDIA010IsNullable(){
				    return true;
				}
				public Boolean MEDIA010IsKey(){
				    return false;
				}
				public Integer MEDIA010Length(){
				    return null;
				}
				public Integer MEDIA010Precision(){
				    return null;
				}
				public String MEDIA010Default(){
				
					return null;
				
				}
				public String MEDIA010Comment(){
				
				    return "";
				
				}
				public String MEDIA010Pattern(){
				
					return "";
				
				}
				public String MEDIA010OriginalDbColumnName(){
				
					return "MEDIA010";
				
				}

				
			    public Integer COBERTURA010;

				public Integer getCOBERTURA010 () {
					return this.COBERTURA010;
				}

				public Boolean COBERTURA010IsNullable(){
				    return true;
				}
				public Boolean COBERTURA010IsKey(){
				    return false;
				}
				public Integer COBERTURA010Length(){
				    return null;
				}
				public Integer COBERTURA010Precision(){
				    return null;
				}
				public String COBERTURA010Default(){
				
					return null;
				
				}
				public String COBERTURA010Comment(){
				
				    return "";
				
				}
				public String COBERTURA010Pattern(){
				
					return "";
				
				}
				public String COBERTURA010OriginalDbColumnName(){
				
					return "COBERTURA010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				
			    public Integer MEDIA201;

				public Integer getMEDIA201 () {
					return this.MEDIA201;
				}

				public Boolean MEDIA201IsNullable(){
				    return true;
				}
				public Boolean MEDIA201IsKey(){
				    return false;
				}
				public Integer MEDIA201Length(){
				    return null;
				}
				public Integer MEDIA201Precision(){
				    return null;
				}
				public String MEDIA201Default(){
				
					return null;
				
				}
				public String MEDIA201Comment(){
				
				    return "";
				
				}
				public String MEDIA201Pattern(){
				
					return "";
				
				}
				public String MEDIA201OriginalDbColumnName(){
				
					return "MEDIA201";
				
				}

				
			    public Integer COBERTURA201;

				public Integer getCOBERTURA201 () {
					return this.COBERTURA201;
				}

				public Boolean COBERTURA201IsNullable(){
				    return true;
				}
				public Boolean COBERTURA201IsKey(){
				    return false;
				}
				public Integer COBERTURA201Length(){
				    return null;
				}
				public Integer COBERTURA201Precision(){
				    return null;
				}
				public String COBERTURA201Default(){
				
					return null;
				
				}
				public String COBERTURA201Comment(){
				
				    return "";
				
				}
				public String COBERTURA201Pattern(){
				
					return "";
				
				}
				public String COBERTURA201OriginalDbColumnName(){
				
					return "COBERTURA201";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public java.util.Date dt_ultima_compra;

				public java.util.Date getDt_ultima_compra () {
					return this.dt_ultima_compra;
				}

				public Boolean dt_ultima_compraIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_compraIsKey(){
				    return false;
				}
				public Integer dt_ultima_compraLength(){
				    return null;
				}
				public Integer dt_ultima_compraPrecision(){
				    return null;
				}
				public String dt_ultima_compraDefault(){
				
					return null;
				
				}
				public String dt_ultima_compraComment(){
				
				    return "";
				
				}
				public String dt_ultima_compraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_compraOriginalDbColumnName(){
				
					return "dt_ultima_compra";
				
				}

				
			    public java.util.Date dt_ultima_venda;

				public java.util.Date getDt_ultima_venda () {
					return this.dt_ultima_venda;
				}

				public Boolean dt_ultima_vendaIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_vendaIsKey(){
				    return false;
				}
				public Integer dt_ultima_vendaLength(){
				    return null;
				}
				public Integer dt_ultima_vendaPrecision(){
				    return null;
				}
				public String dt_ultima_vendaDefault(){
				
					return null;
				
				}
				public String dt_ultima_vendaComment(){
				
				    return "";
				
				}
				public String dt_ultima_vendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_vendaOriginalDbColumnName(){
				
					return "dt_ultima_venda";
				
				}

				
			    public Integer dias_sem_venda;

				public Integer getDias_sem_venda () {
					return this.dias_sem_venda;
				}

				public Boolean dias_sem_vendaIsNullable(){
				    return true;
				}
				public Boolean dias_sem_vendaIsKey(){
				    return false;
				}
				public Integer dias_sem_vendaLength(){
				    return null;
				}
				public Integer dias_sem_vendaPrecision(){
				    return null;
				}
				public String dias_sem_vendaDefault(){
				
					return null;
				
				}
				public String dias_sem_vendaComment(){
				
				    return "";
				
				}
				public String dias_sem_vendaPattern(){
				
					return "";
				
				}
				public String dias_sem_vendaOriginalDbColumnName(){
				
					return "dias_sem_venda";
				
				}

				
			    public String curva_abc;

				public String getCurva_abc () {
					return this.curva_abc;
				}

				public Boolean curva_abcIsNullable(){
				    return true;
				}
				public Boolean curva_abcIsKey(){
				    return false;
				}
				public Integer curva_abcLength(){
				    return 3;
				}
				public Integer curva_abcPrecision(){
				    return null;
				}
				public String curva_abcDefault(){
				
					return null;
				
				}
				public String curva_abcComment(){
				
				    return "";
				
				}
				public String curva_abcPattern(){
				
					return "";
				
				}
				public String curva_abcOriginalDbColumnName(){
				
					return "curva_abc";
				
				}

				
			    public String curva_vlr;

				public String getCurva_vlr () {
					return this.curva_vlr;
				}

				public Boolean curva_vlrIsNullable(){
				    return true;
				}
				public Boolean curva_vlrIsKey(){
				    return false;
				}
				public Integer curva_vlrLength(){
				    return 3;
				}
				public Integer curva_vlrPrecision(){
				    return null;
				}
				public String curva_vlrDefault(){
				
					return null;
				
				}
				public String curva_vlrComment(){
				
				    return "";
				
				}
				public String curva_vlrPattern(){
				
					return "";
				
				}
				public String curva_vlrOriginalDbColumnName(){
				
					return "curva_vlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
					this.NOME_COMPRADOR = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
					this.NOME_COMPRADOR = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
		sb.append(",COBERTURA001="+String.valueOf(COBERTURA001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",MEDIA010="+String.valueOf(MEDIA010));
		sb.append(",COBERTURA010="+String.valueOf(COBERTURA010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
		sb.append(",MEDIA201="+String.valueOf(MEDIA201));
		sb.append(",COBERTURA201="+String.valueOf(COBERTURA201));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",dt_ultima_compra="+String.valueOf(dt_ultima_compra));
		sb.append(",dt_ultima_venda="+String.valueOf(dt_ultima_venda));
		sb.append(",dias_sem_venda="+String.valueOf(dias_sem_venda));
		sb.append(",curva_abc="+curva_abc);
		sb.append(",curva_vlr="+curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer MEDIA010;

				public Integer getMEDIA010 () {
					return this.MEDIA010;
				}

				public Boolean MEDIA010IsNullable(){
				    return true;
				}
				public Boolean MEDIA010IsKey(){
				    return false;
				}
				public Integer MEDIA010Length(){
				    return null;
				}
				public Integer MEDIA010Precision(){
				    return null;
				}
				public String MEDIA010Default(){
				
					return null;
				
				}
				public String MEDIA010Comment(){
				
				    return "";
				
				}
				public String MEDIA010Pattern(){
				
					return "";
				
				}
				public String MEDIA010OriginalDbColumnName(){
				
					return "MEDIA010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				
			    public Integer MEDIA201;

				public Integer getMEDIA201 () {
					return this.MEDIA201;
				}

				public Boolean MEDIA201IsNullable(){
				    return true;
				}
				public Boolean MEDIA201IsKey(){
				    return false;
				}
				public Integer MEDIA201Length(){
				    return null;
				}
				public Integer MEDIA201Precision(){
				    return null;
				}
				public String MEDIA201Default(){
				
					return null;
				
				}
				public String MEDIA201Comment(){
				
				    return "";
				
				}
				public String MEDIA201Pattern(){
				
					return "";
				
				}
				public String MEDIA201OriginalDbColumnName(){
				
					return "MEDIA201";
				
				}

				
			    public Integer COBERTURA001;

				public Integer getCOBERTURA001 () {
					return this.COBERTURA001;
				}

				public Boolean COBERTURA001IsNullable(){
				    return true;
				}
				public Boolean COBERTURA001IsKey(){
				    return false;
				}
				public Integer COBERTURA001Length(){
				    return null;
				}
				public Integer COBERTURA001Precision(){
				    return null;
				}
				public String COBERTURA001Default(){
				
					return null;
				
				}
				public String COBERTURA001Comment(){
				
				    return "";
				
				}
				public String COBERTURA001Pattern(){
				
					return "";
				
				}
				public String COBERTURA001OriginalDbColumnName(){
				
					return "COBERTURA001";
				
				}

				
			    public Integer COBERTURA010;

				public Integer getCOBERTURA010 () {
					return this.COBERTURA010;
				}

				public Boolean COBERTURA010IsNullable(){
				    return true;
				}
				public Boolean COBERTURA010IsKey(){
				    return false;
				}
				public Integer COBERTURA010Length(){
				    return null;
				}
				public Integer COBERTURA010Precision(){
				    return null;
				}
				public String COBERTURA010Default(){
				
					return null;
				
				}
				public String COBERTURA010Comment(){
				
				    return "";
				
				}
				public String COBERTURA010Pattern(){
				
					return "";
				
				}
				public String COBERTURA010OriginalDbColumnName(){
				
					return "COBERTURA010";
				
				}

				
			    public Integer COBERTURA201;

				public Integer getCOBERTURA201 () {
					return this.COBERTURA201;
				}

				public Boolean COBERTURA201IsNullable(){
				    return true;
				}
				public Boolean COBERTURA201IsKey(){
				    return false;
				}
				public Integer COBERTURA201Length(){
				    return null;
				}
				public Integer COBERTURA201Precision(){
				    return null;
				}
				public String COBERTURA201Default(){
				
					return null;
				
				}
				public String COBERTURA201Comment(){
				
				    return "";
				
				}
				public String COBERTURA201Pattern(){
				
					return "";
				
				}
				public String COBERTURA201OriginalDbColumnName(){
				
					return "COBERTURA201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",MEDIA010="+String.valueOf(MEDIA010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
		sb.append(",MEDIA201="+String.valueOf(MEDIA201));
		sb.append(",COBERTURA001="+String.valueOf(COBERTURA001));
		sb.append(",COBERTURA010="+String.valueOf(COBERTURA010));
		sb.append(",COBERTURA201="+String.valueOf(COBERTURA201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out3Struct implements routines.system.IPersistableRow<out3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer MEDIA010;

				public Integer getMEDIA010 () {
					return this.MEDIA010;
				}

				public Boolean MEDIA010IsNullable(){
				    return true;
				}
				public Boolean MEDIA010IsKey(){
				    return false;
				}
				public Integer MEDIA010Length(){
				    return null;
				}
				public Integer MEDIA010Precision(){
				    return null;
				}
				public String MEDIA010Default(){
				
					return null;
				
				}
				public String MEDIA010Comment(){
				
				    return "";
				
				}
				public String MEDIA010Pattern(){
				
					return "";
				
				}
				public String MEDIA010OriginalDbColumnName(){
				
					return "MEDIA010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				
			    public Integer MEDIA201;

				public Integer getMEDIA201 () {
					return this.MEDIA201;
				}

				public Boolean MEDIA201IsNullable(){
				    return true;
				}
				public Boolean MEDIA201IsKey(){
				    return false;
				}
				public Integer MEDIA201Length(){
				    return null;
				}
				public Integer MEDIA201Precision(){
				    return null;
				}
				public String MEDIA201Default(){
				
					return null;
				
				}
				public String MEDIA201Comment(){
				
				    return "";
				
				}
				public String MEDIA201Pattern(){
				
					return "";
				
				}
				public String MEDIA201OriginalDbColumnName(){
				
					return "MEDIA201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",MEDIA010="+String.valueOf(MEDIA010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
		sb.append(",MEDIA201="+String.valueOf(MEDIA201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out2Struct implements routines.system.IPersistableRow<out2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer media010;

				public Integer getMedia010 () {
					return this.media010;
				}

				public Boolean media010IsNullable(){
				    return true;
				}
				public Boolean media010IsKey(){
				    return false;
				}
				public Integer media010Length(){
				    return null;
				}
				public Integer media010Precision(){
				    return null;
				}
				public String media010Default(){
				
					return null;
				
				}
				public String media010Comment(){
				
				    return "";
				
				}
				public String media010Pattern(){
				
					return "";
				
				}
				public String media010OriginalDbColumnName(){
				
					return "media010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.media010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.media010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.media010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.media010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",media010="+String.valueOf(media010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_5Struct implements routines.system.IPersistableRow<after_tHashInput_5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
					this.NOME_COMPRADOR = readString(dis);
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_6Process(globalMap);
		tHashInput_7Process(globalMap);
		tHashInput_8Process(globalMap);
		tHashInput_9Process(globalMap);

		row1Struct row1 = new row1Struct();
out1Struct out1 = new out1Struct();
out2Struct out2 = new out2Struct();
out3Struct out3 = new out3Struct();
row12Struct row12 = new row12Struct();
out4Struct out4 = new out4Struct();









	
	/**
	 * [tHashOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_7", false);
		start_Hash.put("tHashOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out4");
					}
				
		int tos_count_tHashOutput_7 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<out4Struct> tHashFile_tHashOutput_7 = null;
		String hashKey_tHashOutput_7 = "tHashFile_dw_t_produto_ranking_" + pid + "_tHashOutput_7";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_7)){
			    if(mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7) == null){
	      		    mf_tHashOutput_7.getResourceMap().put(hashKey_tHashOutput_7, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<out4Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }else{
			    	tHashFile_tHashOutput_7 = mf_tHashOutput_7.getResourceMap().get(hashKey_tHashOutput_7);
			    }
			}
        int nb_line_tHashOutput_7 = 0;

 



/**
 * [tHashOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct>) 
					globalMap.get( "tHash_Lookup_row16" ))
					;					
					
	

row16Struct row16HashKey = new row16Struct();
row16Struct row16Default = new row16Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
out4Struct out4_tmp = new out4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out3");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out2");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct> tHash_Lookup_row6 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct>) 
					globalMap.get( "tHash_Lookup_row6" ))
					;					
					
	

row6Struct row6HashKey = new row6Struct();
row6Struct row6Default = new row6Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
out3Struct out3_tmp = new out3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct>) 
					globalMap.get( "tHash_Lookup_row3" ))
					;					
					
	

row3Struct row3HashKey = new row3Struct();
row3Struct row3Default = new row3Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
out2Struct out2_tmp = new out2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct>) 
					globalMap.get( "tHash_Lookup_row2" ))
					;					
					
	

row2Struct row2HashKey = new row2Struct();
row2Struct row2Default = new row2Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row10Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row10Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    row10Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row1.COD_ITEM = next_tHashInput_5.COD_ITEM;
	row1.ITEM = next_tHashInput_5.ITEM;
	row1.QTD_VENDAS_DIA = next_tHashInput_5.QTD_VENDAS_DIA;
	row1.TOTAL_VENDA_DIA = next_tHashInput_5.TOTAL_VENDA_DIA;
	row1.NOME_COMPRADOR = next_tHashInput_5.NOME_COMPRADOR;
	row1.ESTOQUE_001 = next_tHashInput_5.ESTOQUE_001;
	row1.ESTOQUE_010 = next_tHashInput_5.ESTOQUE_010;
	row1.ESTOQUE_201 = next_tHashInput_5.ESTOQUE_201;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
						row2Struct row2 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row2" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow2 = false;
       		  	    	
       		  	    	
 							row2Struct row2ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_2) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_2 = false;
								
                        		    		    row2HashKey.COD_ITEM = row1.COD_ITEM ;
                        		    		

								
		                        	row2HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row2.lookup( row2HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row2 != null && tHash_Lookup_row2.getCount(row2HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row2' and it contains more one result from keys :  row2.COD_ITEM = '" + row2HashKey.COD_ITEM + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row2Struct fromLookup_row2 = null;
							row2 = row2Default;
										 
							
								 
							
							
								if (tHash_Lookup_row2 !=null && tHash_Lookup_row2.hasNext()) { // G 099
								
							
								
								fromLookup_row2 = tHash_Lookup_row2.next();

							
							
								} // G 099
							
							

							if(fromLookup_row2 != null) {
								row2 = fromLookup_row2;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

out1 = null;


// # Output table : 'out1'
out1_tmp.COD_ITEM = row1.COD_ITEM ;
out1_tmp.ITEM = row1.ITEM ;
out1_tmp.QTD_VENDAS_DIA = row1.QTD_VENDAS_DIA ;
out1_tmp.TOTAL_VENDA_DIA = row1.TOTAL_VENDA_DIA ;
out1_tmp.NOME_COMPRADOR = row1.NOME_COMPRADOR ;
out1_tmp.ESTOQUE_001 = row1.ESTOQUE_001 ;
out1_tmp.MEDIA001 = row2.MEDIA001 ;
out1_tmp.ESTOQUE_010 = row1.ESTOQUE_010 ;
out1_tmp.ESTOQUE_201 = row1.ESTOQUE_201 ;
out1 = out1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
						row3Struct row3 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row3" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow3 = false;
       		  	    	
       		  	    	
 							row3Struct row3ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_3) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_3 = false;
								
                        		    		    row3HashKey.COD_ITEM = out1.COD_ITEM ;
                        		    		

								
		                        	row3HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row3.lookup( row3HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row3 != null && tHash_Lookup_row3.getCount(row3HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row3' and it contains more one result from keys :  row3.COD_ITEM = '" + row3HashKey.COD_ITEM + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row3Struct fromLookup_row3 = null;
							row3 = row3Default;
										 
							
								 
							
							
								if (tHash_Lookup_row3 !=null && tHash_Lookup_row3.hasNext()) { // G 099
								
							
								
								fromLookup_row3 = tHash_Lookup_row3.next();

							
							
								} // G 099
							
							

							if(fromLookup_row3 != null) {
								row3 = fromLookup_row3;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

out2 = null;


// # Output table : 'out2'
out2_tmp.COD_ITEM = out1.COD_ITEM ;
out2_tmp.ITEM = out1.ITEM ;
out2_tmp.QTD_VENDAS_DIA = out1.QTD_VENDAS_DIA ;
out2_tmp.TOTAL_VENDA_DIA = out1.TOTAL_VENDA_DIA ;
out2_tmp.NOME_COMPRADOR = out1.NOME_COMPRADOR ;
out2_tmp.ESTOQUE_001 = out1.ESTOQUE_001 ;
out2_tmp.MEDIA001 = out1.MEDIA001 ;
out2_tmp.ESTOQUE_010 = out1.ESTOQUE_010 ;
out2_tmp.media010 = row3.media010 ;
out2_tmp.ESTOQUE_201 = out1.ESTOQUE_201 ;
out2 = out2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "out2"
if(out2 != null) { 



	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
						row6Struct row6 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row6" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow6 = false;
       		  	    	
       		  	    	
 							row6Struct row6ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_4) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_4 = false;
								
                        		    		    row6HashKey.COD_ITEM = out2.COD_ITEM ;
                        		    		

								
		                        	row6HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row6.lookup( row6HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row6 != null && tHash_Lookup_row6.getCount(row6HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row6' and it contains more one result from keys :  row6.COD_ITEM = '" + row6HashKey.COD_ITEM + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row6Struct fromLookup_row6 = null;
							row6 = row6Default;
										 
							
								 
							
							
								if (tHash_Lookup_row6 !=null && tHash_Lookup_row6.hasNext()) { // G 099
								
							
								
								fromLookup_row6 = tHash_Lookup_row6.next();

							
							
								} // G 099
							
							

							if(fromLookup_row6 != null) {
								row6 = fromLookup_row6;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

out3 = null;


// # Output table : 'out3'
out3_tmp.COD_ITEM = out2.COD_ITEM ;
out3_tmp.ITEM = out2.ITEM ;
out3_tmp.QTD_VENDAS_DIA = out2.QTD_VENDAS_DIA ;
out3_tmp.TOTAL_VENDA_DIA = out2.TOTAL_VENDA_DIA ;
out3_tmp.NOME_COMPRADOR = out2.NOME_COMPRADOR ;
out3_tmp.ESTOQUE_001 = out2.ESTOQUE_001 ;
out3_tmp.MEDIA001 = out2.MEDIA001 ;
out3_tmp.ESTOQUE_010 = out2.ESTOQUE_010 ;
out3_tmp.MEDIA010 = out2.media010 ;
out3_tmp.ESTOQUE_201 = out2.ESTOQUE_201 ;
out3_tmp.MEDIA201 = row6.media201 ;
out3 = out3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "out3"
if(out3 != null) { 



	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out3"
						
						);
					}
					

    //Code generated according to input schema and output schema
row12.COD_ITEM = out3.COD_ITEM;
row12.ITEM = out3.ITEM;
row12.QTD_VENDAS_DIA = out3.QTD_VENDAS_DIA;
row12.TOTAL_VENDA_DIA = out3.TOTAL_VENDA_DIA;
row12.NOME_COMPRADOR = out3.NOME_COMPRADOR;
row12.ESTOQUE_001 = out3.ESTOQUE_001;
row12.MEDIA001 = out3.MEDIA001;
row12.ESTOQUE_010 = out3.ESTOQUE_010;
row12.MEDIA010 = out3.MEDIA010;
row12.ESTOQUE_201 = out3.ESTOQUE_201;
row12.MEDIA201 = out3.MEDIA201;


if (out3.MEDIA001 == null || out3.MEDIA001 == 0 || row12.ESTOQUE_001 == 0) {

row12.COBERTURA001 = out3.ESTOQUE_001/1;

} else{

row12.COBERTURA001 = out3.ESTOQUE_001/out3.MEDIA001;

}

if (out3.MEDIA010 == null || out3.MEDIA010 == 0 || row12.ESTOQUE_010 == 0) {

row12.COBERTURA010 = 0;

} else{

row12.COBERTURA010 = out3.ESTOQUE_010/out3.MEDIA010;

}

if (out3.MEDIA201 == null || out3.MEDIA201 == 0 || row12.ESTOQUE_201 == 0) {

row12.COBERTURA201 = 0;

} else{

row12.COBERTURA201 = out3.ESTOQUE_201/out3.MEDIA201;

}


    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row16Struct row16 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row16" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow16 = false;
       		  	    	
       		  	    	
 							row16Struct row16ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row16HashKey.cd_produto = row12.COD_ITEM ;
                        		    		

								
		                        	row16HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row16.lookup( row16HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row16 != null && tHash_Lookup_row16.getCount(row16HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row16' and it contains more one result from keys :  row16.cd_produto = '" + row16HashKey.cd_produto + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row16Struct fromLookup_row16 = null;
							row16 = row16Default;
										 
							
								 
							
							
								if (tHash_Lookup_row16 !=null && tHash_Lookup_row16.hasNext()) { // G 099
								
							
								
								fromLookup_row16 = tHash_Lookup_row16.next();

							
							
								} // G 099
							
							

							if(fromLookup_row16 != null) {
								row16 = fromLookup_row16;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

out4 = null;


// # Output table : 'out4'
out4_tmp.COD_ITEM = row12.COD_ITEM ;
out4_tmp.ITEM = row12.ITEM ;
out4_tmp.QTD_VENDAS_DIA = row12.QTD_VENDAS_DIA ;
out4_tmp.TOTAL_VENDA_DIA = row12.TOTAL_VENDA_DIA ;
out4_tmp.ESTOQUE_001 = row12.ESTOQUE_001 ;
out4_tmp.MEDIA001 = row12.MEDIA001 ;
out4_tmp.COBERTURA001 = row12.COBERTURA001 ;
out4_tmp.ESTOQUE_010 = row12.ESTOQUE_010 ;
out4_tmp.MEDIA010 = row12.MEDIA010 ;
out4_tmp.COBERTURA010 = row12.COBERTURA010 ;
out4_tmp.ESTOQUE_201 = row12.ESTOQUE_201 ;
out4_tmp.MEDIA201 = row12.MEDIA201 ;
out4_tmp.COBERTURA201 = row12.COBERTURA201 ;
out4_tmp.NOME_COMPRADOR = row12.NOME_COMPRADOR ;
out4_tmp.dt_ultima_compra = row16.dt_ultima_compra ;
out4_tmp.dt_ultima_venda = row16.dt_ultima_venda ;
out4_tmp.dias_sem_venda = row16.dias_sem_venda ;
out4_tmp.curva_abc = row16.curva_abc ;
out4_tmp.curva_vlr = row16.curva_vlr ;
out4 = out4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "out4"
if(out4 != null) { 



	
	/**
	 * [tHashOutput_7 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out4"
						
						);
					}
					



    
		out4Struct oneRow_tHashOutput_7 = new out4Struct();
				
					oneRow_tHashOutput_7.COD_ITEM = out4.COD_ITEM;
					oneRow_tHashOutput_7.ITEM = out4.ITEM;
					oneRow_tHashOutput_7.QTD_VENDAS_DIA = out4.QTD_VENDAS_DIA;
					oneRow_tHashOutput_7.TOTAL_VENDA_DIA = out4.TOTAL_VENDA_DIA;
					oneRow_tHashOutput_7.ESTOQUE_001 = out4.ESTOQUE_001;
					oneRow_tHashOutput_7.MEDIA001 = out4.MEDIA001;
					oneRow_tHashOutput_7.COBERTURA001 = out4.COBERTURA001;
					oneRow_tHashOutput_7.ESTOQUE_010 = out4.ESTOQUE_010;
					oneRow_tHashOutput_7.MEDIA010 = out4.MEDIA010;
					oneRow_tHashOutput_7.COBERTURA010 = out4.COBERTURA010;
					oneRow_tHashOutput_7.ESTOQUE_201 = out4.ESTOQUE_201;
					oneRow_tHashOutput_7.MEDIA201 = out4.MEDIA201;
					oneRow_tHashOutput_7.COBERTURA201 = out4.COBERTURA201;
					oneRow_tHashOutput_7.NOME_COMPRADOR = out4.NOME_COMPRADOR;
					oneRow_tHashOutput_7.dt_ultima_compra = out4.dt_ultima_compra;
					oneRow_tHashOutput_7.dt_ultima_venda = out4.dt_ultima_venda;
					oneRow_tHashOutput_7.dias_sem_venda = out4.dias_sem_venda;
					oneRow_tHashOutput_7.curva_abc = out4.curva_abc;
					oneRow_tHashOutput_7.curva_vlr = out4.curva_vlr;
		
        tHashFile_tHashOutput_7.put(oneRow_tHashOutput_7);
        nb_line_tHashOutput_7 ++;

 


	tos_count_tHashOutput_7++;

/**
 * [tHashOutput_7 main ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 process_data_end ] stop
 */

} // End of branch "out4"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */

} // End of branch "out3"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */

} // End of branch "out2"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row2 != null) {
						tHash_Lookup_row2.endGet();
					}
					globalMap.remove( "tHash_Lookup_row2" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row3 != null) {
						tHash_Lookup_row3.endGet();
					}
					globalMap.remove( "tHash_Lookup_row3" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row6 != null) {
						tHash_Lookup_row6.endGet();
					}
					globalMap.remove( "tHash_Lookup_row6" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out2");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out3");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row16 != null) {
						tHash_Lookup_row16.endGet();
					}
					globalMap.remove( "tHash_Lookup_row16" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tHashOutput_7 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	
globalMap.put("tHashOutput_7_NB_LINE", nb_line_tHashOutput_7);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out4");
			  	}
			  	
 

ok_Hash.put("tHashOutput_7", true);
end_Hash.put("tHashOutput_7", System.currentTimeMillis());




/**
 * [tHashOutput_7 end ] stop
 */


















				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tHashInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row16"); 
				     			
					     			//free memory for "tMap_4"
					     			globalMap.remove("tHash_Lookup_row6"); 
				     			
					     			//free memory for "tMap_3"
					     			globalMap.remove("tHash_Lookup_row3"); 
				     			
					     			//free memory for "tMap_2"
					     			globalMap.remove("tHash_Lookup_row2"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tHashOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_7";
	
	

 



/**
 * [tHashOutput_7 finally ] stop
 */


















				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class produto_rankingStruct implements routines.system.IPersistableRow<produto_rankingStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				
			    public Integer COBERTURA001;

				public Integer getCOBERTURA001 () {
					return this.COBERTURA001;
				}

				public Boolean COBERTURA001IsNullable(){
				    return true;
				}
				public Boolean COBERTURA001IsKey(){
				    return false;
				}
				public Integer COBERTURA001Length(){
				    return null;
				}
				public Integer COBERTURA001Precision(){
				    return null;
				}
				public String COBERTURA001Default(){
				
					return null;
				
				}
				public String COBERTURA001Comment(){
				
				    return "";
				
				}
				public String COBERTURA001Pattern(){
				
					return "";
				
				}
				public String COBERTURA001OriginalDbColumnName(){
				
					return "COBERTURA001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer MEDIA010;

				public Integer getMEDIA010 () {
					return this.MEDIA010;
				}

				public Boolean MEDIA010IsNullable(){
				    return true;
				}
				public Boolean MEDIA010IsKey(){
				    return false;
				}
				public Integer MEDIA010Length(){
				    return null;
				}
				public Integer MEDIA010Precision(){
				    return null;
				}
				public String MEDIA010Default(){
				
					return null;
				
				}
				public String MEDIA010Comment(){
				
				    return "";
				
				}
				public String MEDIA010Pattern(){
				
					return "";
				
				}
				public String MEDIA010OriginalDbColumnName(){
				
					return "MEDIA010";
				
				}

				
			    public Integer COBERTURA010;

				public Integer getCOBERTURA010 () {
					return this.COBERTURA010;
				}

				public Boolean COBERTURA010IsNullable(){
				    return true;
				}
				public Boolean COBERTURA010IsKey(){
				    return false;
				}
				public Integer COBERTURA010Length(){
				    return null;
				}
				public Integer COBERTURA010Precision(){
				    return null;
				}
				public String COBERTURA010Default(){
				
					return null;
				
				}
				public String COBERTURA010Comment(){
				
				    return "";
				
				}
				public String COBERTURA010Pattern(){
				
					return "";
				
				}
				public String COBERTURA010OriginalDbColumnName(){
				
					return "COBERTURA010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				
			    public Integer MEDIA201;

				public Integer getMEDIA201 () {
					return this.MEDIA201;
				}

				public Boolean MEDIA201IsNullable(){
				    return true;
				}
				public Boolean MEDIA201IsKey(){
				    return false;
				}
				public Integer MEDIA201Length(){
				    return null;
				}
				public Integer MEDIA201Precision(){
				    return null;
				}
				public String MEDIA201Default(){
				
					return null;
				
				}
				public String MEDIA201Comment(){
				
				    return "";
				
				}
				public String MEDIA201Pattern(){
				
					return "";
				
				}
				public String MEDIA201OriginalDbColumnName(){
				
					return "MEDIA201";
				
				}

				
			    public Integer COBERTURA201;

				public Integer getCOBERTURA201 () {
					return this.COBERTURA201;
				}

				public Boolean COBERTURA201IsNullable(){
				    return true;
				}
				public Boolean COBERTURA201IsKey(){
				    return false;
				}
				public Integer COBERTURA201Length(){
				    return null;
				}
				public Integer COBERTURA201Precision(){
				    return null;
				}
				public String COBERTURA201Default(){
				
					return null;
				
				}
				public String COBERTURA201Comment(){
				
				    return "";
				
				}
				public String COBERTURA201Pattern(){
				
					return "";
				
				}
				public String COBERTURA201OriginalDbColumnName(){
				
					return "COBERTURA201";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public java.util.Date dt_ultima_compra;

				public java.util.Date getDt_ultima_compra () {
					return this.dt_ultima_compra;
				}

				public Boolean dt_ultima_compraIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_compraIsKey(){
				    return false;
				}
				public Integer dt_ultima_compraLength(){
				    return null;
				}
				public Integer dt_ultima_compraPrecision(){
				    return null;
				}
				public String dt_ultima_compraDefault(){
				
					return null;
				
				}
				public String dt_ultima_compraComment(){
				
				    return "";
				
				}
				public String dt_ultima_compraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_compraOriginalDbColumnName(){
				
					return "dt_ultima_compra";
				
				}

				
			    public java.util.Date dt_ultima_venda;

				public java.util.Date getDt_ultima_venda () {
					return this.dt_ultima_venda;
				}

				public Boolean dt_ultima_vendaIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_vendaIsKey(){
				    return false;
				}
				public Integer dt_ultima_vendaLength(){
				    return null;
				}
				public Integer dt_ultima_vendaPrecision(){
				    return null;
				}
				public String dt_ultima_vendaDefault(){
				
					return null;
				
				}
				public String dt_ultima_vendaComment(){
				
				    return "";
				
				}
				public String dt_ultima_vendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_vendaOriginalDbColumnName(){
				
					return "dt_ultima_venda";
				
				}

				
			    public Integer dias_sem_venda;

				public Integer getDias_sem_venda () {
					return this.dias_sem_venda;
				}

				public Boolean dias_sem_vendaIsNullable(){
				    return true;
				}
				public Boolean dias_sem_vendaIsKey(){
				    return false;
				}
				public Integer dias_sem_vendaLength(){
				    return null;
				}
				public Integer dias_sem_vendaPrecision(){
				    return null;
				}
				public String dias_sem_vendaDefault(){
				
					return null;
				
				}
				public String dias_sem_vendaComment(){
				
				    return "";
				
				}
				public String dias_sem_vendaPattern(){
				
					return "";
				
				}
				public String dias_sem_vendaOriginalDbColumnName(){
				
					return "dias_sem_venda";
				
				}

				
			    public String curva_abc;

				public String getCurva_abc () {
					return this.curva_abc;
				}

				public Boolean curva_abcIsNullable(){
				    return true;
				}
				public Boolean curva_abcIsKey(){
				    return false;
				}
				public Integer curva_abcLength(){
				    return 3;
				}
				public Integer curva_abcPrecision(){
				    return null;
				}
				public String curva_abcDefault(){
				
					return null;
				
				}
				public String curva_abcComment(){
				
				    return "";
				
				}
				public String curva_abcPattern(){
				
					return "";
				
				}
				public String curva_abcOriginalDbColumnName(){
				
					return "curva_abc";
				
				}

				
			    public String curva_vlr;

				public String getCurva_vlr () {
					return this.curva_vlr;
				}

				public Boolean curva_vlrIsNullable(){
				    return true;
				}
				public Boolean curva_vlrIsKey(){
				    return false;
				}
				public Integer curva_vlrLength(){
				    return 3;
				}
				public Integer curva_vlrPrecision(){
				    return null;
				}
				public String curva_vlrDefault(){
				
					return null;
				
				}
				public String curva_vlrComment(){
				
				    return "";
				
				}
				public String curva_vlrPattern(){
				
					return "";
				
				}
				public String curva_vlrOriginalDbColumnName(){
				
					return "curva_vlr";
				
				}

				
			    public java.util.Date dt_atualizacao;

				public java.util.Date getDt_atualizacao () {
					return this.dt_atualizacao;
				}

				public Boolean dt_atualizacaoIsNullable(){
				    return true;
				}
				public Boolean dt_atualizacaoIsKey(){
				    return false;
				}
				public Integer dt_atualizacaoLength(){
				    return null;
				}
				public Integer dt_atualizacaoPrecision(){
				    return null;
				}
				public String dt_atualizacaoDefault(){
				
					return null;
				
				}
				public String dt_atualizacaoComment(){
				
				    return "";
				
				}
				public String dt_atualizacaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String dt_atualizacaoOriginalDbColumnName(){
				
					return "dt_atualizacao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
					this.NOME_COMPRADOR = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
					this.dt_atualizacao = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
					this.NOME_COMPRADOR = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
					this.dt_atualizacao = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.dt_atualizacao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
					// java.util.Date
				
						writeDate(this.dt_atualizacao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
		sb.append(",COBERTURA001="+String.valueOf(COBERTURA001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",MEDIA010="+String.valueOf(MEDIA010));
		sb.append(",COBERTURA010="+String.valueOf(COBERTURA010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
		sb.append(",MEDIA201="+String.valueOf(MEDIA201));
		sb.append(",COBERTURA201="+String.valueOf(COBERTURA201));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",dt_ultima_compra="+String.valueOf(dt_ultima_compra));
		sb.append(",dt_ultima_venda="+String.valueOf(dt_ultima_venda));
		sb.append(",dias_sem_venda="+String.valueOf(dias_sem_venda));
		sb.append(",curva_abc="+curva_abc);
		sb.append(",curva_vlr="+curva_vlr);
		sb.append(",dt_atualizacao="+String.valueOf(dt_atualizacao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(produto_rankingStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public String ITEM;

				public String getITEM () {
					return this.ITEM;
				}

				public Boolean ITEMIsNullable(){
				    return true;
				}
				public Boolean ITEMIsKey(){
				    return false;
				}
				public Integer ITEMLength(){
				    return 150;
				}
				public Integer ITEMPrecision(){
				    return null;
				}
				public String ITEMDefault(){
				
					return null;
				
				}
				public String ITEMComment(){
				
				    return "";
				
				}
				public String ITEMPattern(){
				
					return "";
				
				}
				public String ITEMOriginalDbColumnName(){
				
					return "ITEM";
				
				}

				
			    public Integer QTD_VENDAS_DIA;

				public Integer getQTD_VENDAS_DIA () {
					return this.QTD_VENDAS_DIA;
				}

				public Boolean QTD_VENDAS_DIAIsNullable(){
				    return true;
				}
				public Boolean QTD_VENDAS_DIAIsKey(){
				    return false;
				}
				public Integer QTD_VENDAS_DIALength(){
				    return null;
				}
				public Integer QTD_VENDAS_DIAPrecision(){
				    return null;
				}
				public String QTD_VENDAS_DIADefault(){
				
					return null;
				
				}
				public String QTD_VENDAS_DIAComment(){
				
				    return "";
				
				}
				public String QTD_VENDAS_DIAPattern(){
				
					return "";
				
				}
				public String QTD_VENDAS_DIAOriginalDbColumnName(){
				
					return "QTD_VENDAS_DIA";
				
				}

				
			    public BigDecimal TOTAL_VENDA_DIA;

				public BigDecimal getTOTAL_VENDA_DIA () {
					return this.TOTAL_VENDA_DIA;
				}

				public Boolean TOTAL_VENDA_DIAIsNullable(){
				    return true;
				}
				public Boolean TOTAL_VENDA_DIAIsKey(){
				    return false;
				}
				public Integer TOTAL_VENDA_DIALength(){
				    return 14;
				}
				public Integer TOTAL_VENDA_DIAPrecision(){
				    return 2;
				}
				public String TOTAL_VENDA_DIADefault(){
				
					return null;
				
				}
				public String TOTAL_VENDA_DIAComment(){
				
				    return "";
				
				}
				public String TOTAL_VENDA_DIAPattern(){
				
					return "";
				
				}
				public String TOTAL_VENDA_DIAOriginalDbColumnName(){
				
					return "TOTAL_VENDA_DIA";
				
				}

				
			    public Integer ESTOQUE_001;

				public Integer getESTOQUE_001 () {
					return this.ESTOQUE_001;
				}

				public Boolean ESTOQUE_001IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_001IsKey(){
				    return false;
				}
				public Integer ESTOQUE_001Length(){
				    return null;
				}
				public Integer ESTOQUE_001Precision(){
				    return null;
				}
				public String ESTOQUE_001Default(){
				
					return null;
				
				}
				public String ESTOQUE_001Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_001Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_001OriginalDbColumnName(){
				
					return "ESTOQUE_001";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				
			    public Integer COBERTURA001;

				public Integer getCOBERTURA001 () {
					return this.COBERTURA001;
				}

				public Boolean COBERTURA001IsNullable(){
				    return true;
				}
				public Boolean COBERTURA001IsKey(){
				    return false;
				}
				public Integer COBERTURA001Length(){
				    return null;
				}
				public Integer COBERTURA001Precision(){
				    return null;
				}
				public String COBERTURA001Default(){
				
					return null;
				
				}
				public String COBERTURA001Comment(){
				
				    return "";
				
				}
				public String COBERTURA001Pattern(){
				
					return "";
				
				}
				public String COBERTURA001OriginalDbColumnName(){
				
					return "COBERTURA001";
				
				}

				
			    public Integer ESTOQUE_010;

				public Integer getESTOQUE_010 () {
					return this.ESTOQUE_010;
				}

				public Boolean ESTOQUE_010IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_010IsKey(){
				    return false;
				}
				public Integer ESTOQUE_010Length(){
				    return null;
				}
				public Integer ESTOQUE_010Precision(){
				    return null;
				}
				public String ESTOQUE_010Default(){
				
					return null;
				
				}
				public String ESTOQUE_010Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_010Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_010OriginalDbColumnName(){
				
					return "ESTOQUE_010";
				
				}

				
			    public Integer MEDIA010;

				public Integer getMEDIA010 () {
					return this.MEDIA010;
				}

				public Boolean MEDIA010IsNullable(){
				    return true;
				}
				public Boolean MEDIA010IsKey(){
				    return false;
				}
				public Integer MEDIA010Length(){
				    return null;
				}
				public Integer MEDIA010Precision(){
				    return null;
				}
				public String MEDIA010Default(){
				
					return null;
				
				}
				public String MEDIA010Comment(){
				
				    return "";
				
				}
				public String MEDIA010Pattern(){
				
					return "";
				
				}
				public String MEDIA010OriginalDbColumnName(){
				
					return "MEDIA010";
				
				}

				
			    public Integer COBERTURA010;

				public Integer getCOBERTURA010 () {
					return this.COBERTURA010;
				}

				public Boolean COBERTURA010IsNullable(){
				    return true;
				}
				public Boolean COBERTURA010IsKey(){
				    return false;
				}
				public Integer COBERTURA010Length(){
				    return null;
				}
				public Integer COBERTURA010Precision(){
				    return null;
				}
				public String COBERTURA010Default(){
				
					return null;
				
				}
				public String COBERTURA010Comment(){
				
				    return "";
				
				}
				public String COBERTURA010Pattern(){
				
					return "";
				
				}
				public String COBERTURA010OriginalDbColumnName(){
				
					return "COBERTURA010";
				
				}

				
			    public Integer ESTOQUE_201;

				public Integer getESTOQUE_201 () {
					return this.ESTOQUE_201;
				}

				public Boolean ESTOQUE_201IsNullable(){
				    return true;
				}
				public Boolean ESTOQUE_201IsKey(){
				    return false;
				}
				public Integer ESTOQUE_201Length(){
				    return null;
				}
				public Integer ESTOQUE_201Precision(){
				    return null;
				}
				public String ESTOQUE_201Default(){
				
					return null;
				
				}
				public String ESTOQUE_201Comment(){
				
				    return "";
				
				}
				public String ESTOQUE_201Pattern(){
				
					return "";
				
				}
				public String ESTOQUE_201OriginalDbColumnName(){
				
					return "ESTOQUE_201";
				
				}

				
			    public Integer MEDIA201;

				public Integer getMEDIA201 () {
					return this.MEDIA201;
				}

				public Boolean MEDIA201IsNullable(){
				    return true;
				}
				public Boolean MEDIA201IsKey(){
				    return false;
				}
				public Integer MEDIA201Length(){
				    return null;
				}
				public Integer MEDIA201Precision(){
				    return null;
				}
				public String MEDIA201Default(){
				
					return null;
				
				}
				public String MEDIA201Comment(){
				
				    return "";
				
				}
				public String MEDIA201Pattern(){
				
					return "";
				
				}
				public String MEDIA201OriginalDbColumnName(){
				
					return "MEDIA201";
				
				}

				
			    public Integer COBERTURA201;

				public Integer getCOBERTURA201 () {
					return this.COBERTURA201;
				}

				public Boolean COBERTURA201IsNullable(){
				    return true;
				}
				public Boolean COBERTURA201IsKey(){
				    return false;
				}
				public Integer COBERTURA201Length(){
				    return null;
				}
				public Integer COBERTURA201Precision(){
				    return null;
				}
				public String COBERTURA201Default(){
				
					return null;
				
				}
				public String COBERTURA201Comment(){
				
				    return "";
				
				}
				public String COBERTURA201Pattern(){
				
					return "";
				
				}
				public String COBERTURA201OriginalDbColumnName(){
				
					return "COBERTURA201";
				
				}

				
			    public String NOME_COMPRADOR;

				public String getNOME_COMPRADOR () {
					return this.NOME_COMPRADOR;
				}

				public Boolean NOME_COMPRADORIsNullable(){
				    return true;
				}
				public Boolean NOME_COMPRADORIsKey(){
				    return false;
				}
				public Integer NOME_COMPRADORLength(){
				    return 45;
				}
				public Integer NOME_COMPRADORPrecision(){
				    return null;
				}
				public String NOME_COMPRADORDefault(){
				
					return null;
				
				}
				public String NOME_COMPRADORComment(){
				
				    return "";
				
				}
				public String NOME_COMPRADORPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String NOME_COMPRADOROriginalDbColumnName(){
				
					return "NOME_COMPRADOR";
				
				}

				
			    public java.util.Date dt_ultima_compra;

				public java.util.Date getDt_ultima_compra () {
					return this.dt_ultima_compra;
				}

				public Boolean dt_ultima_compraIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_compraIsKey(){
				    return false;
				}
				public Integer dt_ultima_compraLength(){
				    return null;
				}
				public Integer dt_ultima_compraPrecision(){
				    return null;
				}
				public String dt_ultima_compraDefault(){
				
					return null;
				
				}
				public String dt_ultima_compraComment(){
				
				    return "";
				
				}
				public String dt_ultima_compraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_compraOriginalDbColumnName(){
				
					return "dt_ultima_compra";
				
				}

				
			    public java.util.Date dt_ultima_venda;

				public java.util.Date getDt_ultima_venda () {
					return this.dt_ultima_venda;
				}

				public Boolean dt_ultima_vendaIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_vendaIsKey(){
				    return false;
				}
				public Integer dt_ultima_vendaLength(){
				    return null;
				}
				public Integer dt_ultima_vendaPrecision(){
				    return null;
				}
				public String dt_ultima_vendaDefault(){
				
					return null;
				
				}
				public String dt_ultima_vendaComment(){
				
				    return "";
				
				}
				public String dt_ultima_vendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_vendaOriginalDbColumnName(){
				
					return "dt_ultima_venda";
				
				}

				
			    public Integer dias_sem_venda;

				public Integer getDias_sem_venda () {
					return this.dias_sem_venda;
				}

				public Boolean dias_sem_vendaIsNullable(){
				    return true;
				}
				public Boolean dias_sem_vendaIsKey(){
				    return false;
				}
				public Integer dias_sem_vendaLength(){
				    return null;
				}
				public Integer dias_sem_vendaPrecision(){
				    return null;
				}
				public String dias_sem_vendaDefault(){
				
					return null;
				
				}
				public String dias_sem_vendaComment(){
				
				    return "";
				
				}
				public String dias_sem_vendaPattern(){
				
					return "";
				
				}
				public String dias_sem_vendaOriginalDbColumnName(){
				
					return "dias_sem_venda";
				
				}

				
			    public String curva_abc;

				public String getCurva_abc () {
					return this.curva_abc;
				}

				public Boolean curva_abcIsNullable(){
				    return true;
				}
				public Boolean curva_abcIsKey(){
				    return false;
				}
				public Integer curva_abcLength(){
				    return 3;
				}
				public Integer curva_abcPrecision(){
				    return null;
				}
				public String curva_abcDefault(){
				
					return null;
				
				}
				public String curva_abcComment(){
				
				    return "";
				
				}
				public String curva_abcPattern(){
				
					return "";
				
				}
				public String curva_abcOriginalDbColumnName(){
				
					return "curva_abc";
				
				}

				
			    public String curva_vlr;

				public String getCurva_vlr () {
					return this.curva_vlr;
				}

				public Boolean curva_vlrIsNullable(){
				    return true;
				}
				public Boolean curva_vlrIsKey(){
				    return false;
				}
				public Integer curva_vlrLength(){
				    return 3;
				}
				public Integer curva_vlrPrecision(){
				    return null;
				}
				public String curva_vlrDefault(){
				
					return null;
				
				}
				public String curva_vlrComment(){
				
				    return "";
				
				}
				public String curva_vlrPattern(){
				
					return "";
				
				}
				public String curva_vlrOriginalDbColumnName(){
				
					return "curva_vlr";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
					this.NOME_COMPRADOR = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
					this.ITEM = readString(dis);
					
						this.QTD_VENDAS_DIA = readInteger(dis);
					
						this.TOTAL_VENDA_DIA = (BigDecimal) dis.readObject();
					
						this.ESTOQUE_001 = readInteger(dis);
					
						this.MEDIA001 = readInteger(dis);
					
						this.COBERTURA001 = readInteger(dis);
					
						this.ESTOQUE_010 = readInteger(dis);
					
						this.MEDIA010 = readInteger(dis);
					
						this.COBERTURA010 = readInteger(dis);
					
						this.ESTOQUE_201 = readInteger(dis);
					
						this.MEDIA201 = readInteger(dis);
					
						this.COBERTURA201 = readInteger(dis);
					
					this.NOME_COMPRADOR = readString(dis);
					
					this.dt_ultima_compra = readDate(dis);
					
					this.dt_ultima_venda = readDate(dis);
					
						this.dias_sem_venda = readInteger(dis);
					
					this.curva_abc = readString(dis);
					
					this.curva_vlr = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
					// String
				
						writeString(this.ITEM,dos);
					
					// Integer
				
						writeInteger(this.QTD_VENDAS_DIA,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.TOTAL_VENDA_DIA);
					
					// Integer
				
						writeInteger(this.ESTOQUE_001,dos);
					
					// Integer
				
						writeInteger(this.MEDIA001,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA001,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_010,dos);
					
					// Integer
				
						writeInteger(this.MEDIA010,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA010,dos);
					
					// Integer
				
						writeInteger(this.ESTOQUE_201,dos);
					
					// Integer
				
						writeInteger(this.MEDIA201,dos);
					
					// Integer
				
						writeInteger(this.COBERTURA201,dos);
					
					// String
				
						writeString(this.NOME_COMPRADOR,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_compra,dos);
					
					// java.util.Date
				
						writeDate(this.dt_ultima_venda,dos);
					
					// Integer
				
						writeInteger(this.dias_sem_venda,dos);
					
					// String
				
						writeString(this.curva_abc,dos);
					
					// String
				
						writeString(this.curva_vlr,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",ITEM="+ITEM);
		sb.append(",QTD_VENDAS_DIA="+String.valueOf(QTD_VENDAS_DIA));
		sb.append(",TOTAL_VENDA_DIA="+String.valueOf(TOTAL_VENDA_DIA));
		sb.append(",ESTOQUE_001="+String.valueOf(ESTOQUE_001));
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
		sb.append(",COBERTURA001="+String.valueOf(COBERTURA001));
		sb.append(",ESTOQUE_010="+String.valueOf(ESTOQUE_010));
		sb.append(",MEDIA010="+String.valueOf(MEDIA010));
		sb.append(",COBERTURA010="+String.valueOf(COBERTURA010));
		sb.append(",ESTOQUE_201="+String.valueOf(ESTOQUE_201));
		sb.append(",MEDIA201="+String.valueOf(MEDIA201));
		sb.append(",COBERTURA201="+String.valueOf(COBERTURA201));
		sb.append(",NOME_COMPRADOR="+NOME_COMPRADOR);
		sb.append(",dt_ultima_compra="+String.valueOf(dt_ultima_compra));
		sb.append(",dt_ultima_venda="+String.valueOf(dt_ultima_venda));
		sb.append(",dias_sem_venda="+String.valueOf(dias_sem_venda));
		sb.append(",curva_abc="+curva_abc);
		sb.append(",curva_vlr="+curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();
produto_rankingStruct produto_ranking = new produto_rankingStruct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"produto_ranking");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





String dbschema_tDBOutput_3 = null;
	dbschema_tDBOutput_3 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_3 = null;
if(dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
	tableName_tDBOutput_3 = ("dw_t_produto_ranking").toLowerCase();
} else {
	tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "\".\"" + ("dw_t_produto_ranking").toLowerCase();
}


int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;
int rowsToCommitCount_tDBOutput_3=0;
int rejectedCount_tDBOutput_3=0;

boolean whetherReject_tDBOutput_3 = false;

java.sql.Connection conn_tDBOutput_3 = null;
String dbUser_tDBOutput_3 = null;

	conn_tDBOutput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_3=0;
            try (java.sql.Statement stmtClear_tDBOutput_3 = conn_tDBOutput_3.createStatement()) {
                stmtClear_tDBOutput_3.executeUpdate("DELETE FROM \"" + tableName_tDBOutput_3 + "\"");
            }
        java.lang.StringBuilder sb_tDBOutput_3 = new java.lang.StringBuilder();
        sb_tDBOutput_3.append("INSERT INTO \"").append(tableName_tDBOutput_3).append("\" (\"cod_item\",\"item\",\"qtd_vendas_dia\",\"total_venda_dia\",\"estoque_001\",\"media001\",\"cobertura001\",\"estoque_010\",\"media010\",\"cobertura010\",\"estoque_201\",\"media201\",\"cobertura201\",\"nome_comprador\",\"dt_ultima_compra\",\"dt_ultima_venda\",\"dias_sem_venda\",\"curva_abc\",\"curva_vlr\",\"dt_atualizacao\") VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

        String insert_tDBOutput_3 = sb_tDBOutput_3.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(insert_tDBOutput_3);
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
produto_rankingStruct produto_ranking_tmp = new produto_rankingStruct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<out4Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_7");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<out4Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    out4Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row19.COD_ITEM = next_tHashInput_10.COD_ITEM;
	row19.ITEM = next_tHashInput_10.ITEM;
	row19.QTD_VENDAS_DIA = next_tHashInput_10.QTD_VENDAS_DIA;
	row19.TOTAL_VENDA_DIA = next_tHashInput_10.TOTAL_VENDA_DIA;
	row19.ESTOQUE_001 = next_tHashInput_10.ESTOQUE_001;
	row19.MEDIA001 = next_tHashInput_10.MEDIA001;
	row19.COBERTURA001 = next_tHashInput_10.COBERTURA001;
	row19.ESTOQUE_010 = next_tHashInput_10.ESTOQUE_010;
	row19.MEDIA010 = next_tHashInput_10.MEDIA010;
	row19.COBERTURA010 = next_tHashInput_10.COBERTURA010;
	row19.ESTOQUE_201 = next_tHashInput_10.ESTOQUE_201;
	row19.MEDIA201 = next_tHashInput_10.MEDIA201;
	row19.COBERTURA201 = next_tHashInput_10.COBERTURA201;
	row19.NOME_COMPRADOR = next_tHashInput_10.NOME_COMPRADOR;
	row19.dt_ultima_compra = next_tHashInput_10.dt_ultima_compra;
	row19.dt_ultima_venda = next_tHashInput_10.dt_ultima_venda;
	row19.dias_sem_venda = next_tHashInput_10.dias_sem_venda;
	row19.curva_abc = next_tHashInput_10.curva_abc;
	row19.curva_vlr = next_tHashInput_10.curva_vlr;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

produto_ranking = null;


// # Output table : 'produto_ranking'
produto_ranking_tmp.COD_ITEM = row19.COD_ITEM ;
produto_ranking_tmp.ITEM = row19.ITEM ;
produto_ranking_tmp.QTD_VENDAS_DIA = row19.QTD_VENDAS_DIA ;
produto_ranking_tmp.TOTAL_VENDA_DIA = row19.TOTAL_VENDA_DIA ;
produto_ranking_tmp.ESTOQUE_001 = row19.ESTOQUE_001 ;
produto_ranking_tmp.MEDIA001 = row19.MEDIA001 ;
produto_ranking_tmp.COBERTURA001 = row19.COBERTURA001 ;
produto_ranking_tmp.ESTOQUE_010 = row19.ESTOQUE_010 ;
produto_ranking_tmp.MEDIA010 = row19.MEDIA010 ;
produto_ranking_tmp.COBERTURA010 = row19.COBERTURA010 ;
produto_ranking_tmp.ESTOQUE_201 = row19.ESTOQUE_201 ;
produto_ranking_tmp.MEDIA201 = row19.MEDIA201 ;
produto_ranking_tmp.COBERTURA201 = row19.COBERTURA201 ;
produto_ranking_tmp.NOME_COMPRADOR = row19.NOME_COMPRADOR ;
produto_ranking_tmp.dt_ultima_compra = row19.dt_ultima_compra ;
produto_ranking_tmp.dt_ultima_venda = row19.dt_ultima_venda ;
produto_ranking_tmp.dias_sem_venda = row19.dias_sem_venda ;
produto_ranking_tmp.curva_abc = row19.curva_abc ;
produto_ranking_tmp.curva_vlr = row19.curva_vlr ;
produto_ranking_tmp.dt_atualizacao = TalendDate.getCurrentDate();
produto_ranking = produto_ranking_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "produto_ranking"
if(produto_ranking != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"produto_ranking"
						
						);
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(produto_ranking.COD_ITEM == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, produto_ranking.COD_ITEM);
}

                    if(produto_ranking.ITEM == null) {
pstmt_tDBOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(2, produto_ranking.ITEM);
}

                    if(produto_ranking.QTD_VENDAS_DIA == null) {
pstmt_tDBOutput_3.setNull(3, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(3, produto_ranking.QTD_VENDAS_DIA);
}

                    pstmt_tDBOutput_3.setBigDecimal(4, produto_ranking.TOTAL_VENDA_DIA);

                    if(produto_ranking.ESTOQUE_001 == null) {
pstmt_tDBOutput_3.setNull(5, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(5, produto_ranking.ESTOQUE_001);
}

                    if(produto_ranking.MEDIA001 == null) {
pstmt_tDBOutput_3.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(6, produto_ranking.MEDIA001);
}

                    if(produto_ranking.COBERTURA001 == null) {
pstmt_tDBOutput_3.setNull(7, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(7, produto_ranking.COBERTURA001);
}

                    if(produto_ranking.ESTOQUE_010 == null) {
pstmt_tDBOutput_3.setNull(8, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(8, produto_ranking.ESTOQUE_010);
}

                    if(produto_ranking.MEDIA010 == null) {
pstmt_tDBOutput_3.setNull(9, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(9, produto_ranking.MEDIA010);
}

                    if(produto_ranking.COBERTURA010 == null) {
pstmt_tDBOutput_3.setNull(10, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(10, produto_ranking.COBERTURA010);
}

                    if(produto_ranking.ESTOQUE_201 == null) {
pstmt_tDBOutput_3.setNull(11, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(11, produto_ranking.ESTOQUE_201);
}

                    if(produto_ranking.MEDIA201 == null) {
pstmt_tDBOutput_3.setNull(12, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(12, produto_ranking.MEDIA201);
}

                    if(produto_ranking.COBERTURA201 == null) {
pstmt_tDBOutput_3.setNull(13, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(13, produto_ranking.COBERTURA201);
}

                    if(produto_ranking.NOME_COMPRADOR == null) {
pstmt_tDBOutput_3.setNull(14, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(14, produto_ranking.NOME_COMPRADOR);
}

                    if(produto_ranking.dt_ultima_compra != null) {
pstmt_tDBOutput_3.setTimestamp(15, new java.sql.Timestamp(produto_ranking.dt_ultima_compra.getTime()));
} else {
pstmt_tDBOutput_3.setNull(15, java.sql.Types.TIMESTAMP);
}

                    if(produto_ranking.dt_ultima_venda != null) {
pstmt_tDBOutput_3.setTimestamp(16, new java.sql.Timestamp(produto_ranking.dt_ultima_venda.getTime()));
} else {
pstmt_tDBOutput_3.setNull(16, java.sql.Types.TIMESTAMP);
}

                    if(produto_ranking.dias_sem_venda == null) {
pstmt_tDBOutput_3.setNull(17, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_3.setInt(17, produto_ranking.dias_sem_venda);
}

                    if(produto_ranking.curva_abc == null) {
pstmt_tDBOutput_3.setNull(18, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(18, produto_ranking.curva_abc);
}

                    if(produto_ranking.curva_vlr == null) {
pstmt_tDBOutput_3.setNull(19, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(19, produto_ranking.curva_vlr);
}

                    if(produto_ranking.dt_atualizacao != null) {
pstmt_tDBOutput_3.setTimestamp(20, new java.sql.Timestamp(produto_ranking.dt_atualizacao.getTime()));
} else {
pstmt_tDBOutput_3.setNull(20, java.sql.Types.TIMESTAMP);
}

			
            try {
                nb_line_tDBOutput_3++;
				
                int processedCount_tDBOutput_3 = pstmt_tDBOutput_3.executeUpdate();
                insertedCount_tDBOutput_3 += processedCount_tDBOutput_3;
                rowsToCommitCount_tDBOutput_3 += processedCount_tDBOutput_3;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_3_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_3 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "produto_ranking"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_7");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



        if(pstmt_tDBOutput_3 != null) {
        		
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"produto_ranking");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());




/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tHashInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_1");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    row5Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row21.nm_programa = next_tHashInput_11.nm_programa;
	row21.data_inicio_execucao = next_tHashInput_11.data_inicio_execucao;
	row21.data_termino_execucao = next_tHashInput_11.data_termino_execucao;
	row21.mensagem = next_tHashInput_11.mensagem;
	row21.uuid = next_tHashInput_11.uuid;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row21.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row21.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row2Struct implements routines.system.IPersistableComparableLookupRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public Integer MEDIA001;

				public Integer getMEDIA001 () {
					return this.MEDIA001;
				}

				public Boolean MEDIA001IsNullable(){
				    return true;
				}
				public Boolean MEDIA001IsKey(){
				    return false;
				}
				public Integer MEDIA001Length(){
				    return null;
				}
				public Integer MEDIA001Precision(){
				    return null;
				}
				public String MEDIA001Default(){
				
					return null;
				
				}
				public String MEDIA001Comment(){
				
				    return "";
				
				}
				public String MEDIA001Pattern(){
				
					return "";
				
				}
				public String MEDIA001OriginalDbColumnName(){
				
					return "MEDIA001";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ITEM == null) ? 0 : this.COD_ITEM.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row2Struct other = (row2Struct) obj;
		
						if (this.COD_ITEM == null) {
							if (other.COD_ITEM != null)
								return false;
						
						} else if (!this.COD_ITEM.equals(other.COD_ITEM))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row2Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            other.MEDIA001 = this.MEDIA001;
	            
	}

	public void copyKeysDataTo(row2Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.MEDIA001 = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.MEDIA001 = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.MEDIA001, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.MEDIA001, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",MEDIA001="+String.valueOf(MEDIA001));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ITEM, other.COD_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();




	
	/**
	 * [tAdvancedHash_row2 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row2", false);
		start_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tAdvancedHash_row2 = 0;
		

			   		// connection name:row2
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_5) outputs:(row2,row2) | target node:tAdvancedHash_row2 - inputs:(row2) outputs:()
			   		// linked node: tMap_2 - inputs:(row1,row2) outputs:(out1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row2 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row2Struct> tHash_Lookup_row2 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row2Struct>getLookup(matchingModeEnum_row2);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row2", tHash_Lookup_row2);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row2 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row14Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row14Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    row14Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row2.COD_ITEM = next_tHashInput_6.COD_ITEM;
	row2.MEDIA001 = next_tHashInput_6.MEDIA001;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					


			   
			   

					row2Struct row2_HashRow = new row2Struct();
		   	   	   
				
				row2_HashRow.COD_ITEM = row2.COD_ITEM;
				
				row2_HashRow.MEDIA001 = row2.MEDIA001;
				
			tHash_Lookup_row2.put(row2_HashRow);
			
            




 


	tos_count_tAdvancedHash_row2++;

/**
 * [tAdvancedHash_row2 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row2 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

tHash_Lookup_row2.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row2", true);
end_Hash.put("tAdvancedHash_row2", System.currentTimeMillis());




/**
 * [tAdvancedHash_row2 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row2 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row2";
	
	

 



/**
 * [tAdvancedHash_row2 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableComparableLookupRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public Integer media010;

				public Integer getMedia010 () {
					return this.media010;
				}

				public Boolean media010IsNullable(){
				    return true;
				}
				public Boolean media010IsKey(){
				    return false;
				}
				public Integer media010Length(){
				    return null;
				}
				public Integer media010Precision(){
				    return null;
				}
				public String media010Default(){
				
					return null;
				
				}
				public String media010Comment(){
				
				    return "";
				
				}
				public String media010Pattern(){
				
					return "";
				
				}
				public String media010OriginalDbColumnName(){
				
					return "media010";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ITEM == null) ? 0 : this.COD_ITEM.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row3Struct other = (row3Struct) obj;
		
						if (this.COD_ITEM == null) {
							if (other.COD_ITEM != null)
								return false;
						
						} else if (!this.COD_ITEM.equals(other.COD_ITEM))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row3Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            other.media010 = this.media010;
	            
	}

	public void copyKeysDataTo(row3Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.media010 = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.media010 = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.media010, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.media010, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",media010="+String.valueOf(media010));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ITEM, other.COD_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();




	
	/**
	 * [tAdvancedHash_row3 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row3", false);
		start_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tAdvancedHash_row3 = 0;
		

			   		// connection name:row3
			   		// source node:tHashInput_7 - inputs:(after_tHashInput_5) outputs:(row3,row3) | target node:tAdvancedHash_row3 - inputs:(row3) outputs:()
			   		// linked node: tMap_3 - inputs:(out1,row3) outputs:(out2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row3 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row3Struct> tHash_Lookup_row3 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row3Struct>getLookup(matchingModeEnum_row3);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row3", tHash_Lookup_row3);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row3 begin ] stop
 */



	
	/**
	 * [tHashInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_7", false);
		start_Hash.put("tHashInput_7", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_7";
	
	
		int tos_count_tHashInput_7 = 0;
		


int nb_line_tHashInput_7 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_7=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row17Struct> tHashFile_tHashInput_7 = mf_tHashInput_7.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_7==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row17Struct> iterator_tHashInput_7 = tHashFile_tHashInput_7.iterator();
while (iterator_tHashInput_7.hasNext()) {
    row17Struct next_tHashInput_7 = iterator_tHashInput_7.next();

	row3.COD_ITEM = next_tHashInput_7.COD_ITEM;
	row3.media010 = next_tHashInput_7.media010;

 



/**
 * [tHashInput_7 begin ] stop
 */
	
	/**
	 * [tHashInput_7 main ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 


	tos_count_tHashInput_7++;

/**
 * [tHashInput_7 main ] stop
 */
	
	/**
	 * [tHashInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					


			   
			   

					row3Struct row3_HashRow = new row3Struct();
		   	   	   
				
				row3_HashRow.COD_ITEM = row3.COD_ITEM;
				
				row3_HashRow.media010 = row3.media010;
				
			tHash_Lookup_row3.put(row3_HashRow);
			
            




 


	tos_count_tAdvancedHash_row3++;

/**
 * [tAdvancedHash_row3 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row3 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_7 end ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	
    

		
			nb_line_tHashInput_7++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_7_NB_LINE", nb_line_tHashInput_7);       

 

ok_Hash.put("tHashInput_7", true);
end_Hash.put("tHashInput_7", System.currentTimeMillis());




/**
 * [tHashInput_7 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

tHash_Lookup_row3.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row3", true);
end_Hash.put("tAdvancedHash_row3", System.currentTimeMillis());




/**
 * [tAdvancedHash_row3 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_7 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_7";
	
	

 



/**
 * [tHashInput_7 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row3 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row3";
	
	

 



/**
 * [tAdvancedHash_row3 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_7_SUBPROCESS_STATE", 1);
	}
	


public static class row6Struct implements routines.system.IPersistableComparableLookupRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String COD_ITEM;

				public String getCOD_ITEM () {
					return this.COD_ITEM;
				}

				public Boolean COD_ITEMIsNullable(){
				    return true;
				}
				public Boolean COD_ITEMIsKey(){
				    return false;
				}
				public Integer COD_ITEMLength(){
				    return 5;
				}
				public Integer COD_ITEMPrecision(){
				    return null;
				}
				public String COD_ITEMDefault(){
				
					return null;
				
				}
				public String COD_ITEMComment(){
				
				    return "";
				
				}
				public String COD_ITEMPattern(){
				
					return "";
				
				}
				public String COD_ITEMOriginalDbColumnName(){
				
					return "COD_ITEM";
				
				}

				
			    public Integer media201;

				public Integer getMedia201 () {
					return this.media201;
				}

				public Boolean media201IsNullable(){
				    return true;
				}
				public Boolean media201IsKey(){
				    return false;
				}
				public Integer media201Length(){
				    return null;
				}
				public Integer media201Precision(){
				    return null;
				}
				public String media201Default(){
				
					return null;
				
				}
				public String media201Comment(){
				
				    return "";
				
				}
				public String media201Pattern(){
				
					return "";
				
				}
				public String media201OriginalDbColumnName(){
				
					return "media201";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.COD_ITEM == null) ? 0 : this.COD_ITEM.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row6Struct other = (row6Struct) obj;
		
						if (this.COD_ITEM == null) {
							if (other.COD_ITEM != null)
								return false;
						
						} else if (!this.COD_ITEM.equals(other.COD_ITEM))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row6Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            other.media201 = this.media201;
	            
	}

	public void copyKeysDataTo(row6Struct other) {

		other.COD_ITEM = this.COD_ITEM;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.COD_ITEM = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.COD_ITEM,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.media201 = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.media201 = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
					writeInteger(this.media201, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
					writeInteger(this.media201, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("COD_ITEM="+COD_ITEM);
		sb.append(",media201="+String.valueOf(media201));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.COD_ITEM, other.COD_ITEM);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();




	
	/**
	 * [tAdvancedHash_row6 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row6", false);
		start_Hash.put("tAdvancedHash_row6", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tAdvancedHash_row6 = 0;
		

			   		// connection name:row6
			   		// source node:tHashInput_8 - inputs:(after_tHashInput_5) outputs:(row6,row6) | target node:tAdvancedHash_row6 - inputs:(row6) outputs:()
			   		// linked node: tMap_4 - inputs:(out2,row6) outputs:(out3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row6 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row6Struct> tHash_Lookup_row6 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row6Struct>getLookup(matchingModeEnum_row6);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row6", tHash_Lookup_row6);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row6 begin ] stop
 */



	
	/**
	 * [tHashInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_8", false);
		start_Hash.put("tHashInput_8", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_8";
	
	
		int tos_count_tHashInput_8 = 0;
		


int nb_line_tHashInput_8 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_8=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row20Struct> tHashFile_tHashInput_8 = mf_tHashInput_8.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_8==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row20Struct> iterator_tHashInput_8 = tHashFile_tHashInput_8.iterator();
while (iterator_tHashInput_8.hasNext()) {
    row20Struct next_tHashInput_8 = iterator_tHashInput_8.next();

	row6.COD_ITEM = next_tHashInput_8.COD_ITEM;
	row6.media201 = next_tHashInput_8.media201;

 



/**
 * [tHashInput_8 begin ] stop
 */
	
	/**
	 * [tHashInput_8 main ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 


	tos_count_tHashInput_8++;

/**
 * [tHashInput_8 main ] stop
 */
	
	/**
	 * [tHashInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					


			   
			   

					row6Struct row6_HashRow = new row6Struct();
		   	   	   
				
				row6_HashRow.COD_ITEM = row6.COD_ITEM;
				
				row6_HashRow.media201 = row6.media201;
				
			tHash_Lookup_row6.put(row6_HashRow);
			
            




 


	tos_count_tAdvancedHash_row6++;

/**
 * [tAdvancedHash_row6 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row6 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_8 end ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	
    

		
			nb_line_tHashInput_8++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_8_NB_LINE", nb_line_tHashInput_8);       

 

ok_Hash.put("tHashInput_8", true);
end_Hash.put("tHashInput_8", System.currentTimeMillis());




/**
 * [tHashInput_8 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

tHash_Lookup_row6.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row6", true);
end_Hash.put("tAdvancedHash_row6", System.currentTimeMillis());




/**
 * [tAdvancedHash_row6 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_8 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_8";
	
	

 



/**
 * [tHashInput_8 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row6 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row6";
	
	

 



/**
 * [tAdvancedHash_row6 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class row16Struct implements routines.system.IPersistableComparableLookupRow<row16Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return 5;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public java.util.Date dt_ultima_compra;

				public java.util.Date getDt_ultima_compra () {
					return this.dt_ultima_compra;
				}

				public Boolean dt_ultima_compraIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_compraIsKey(){
				    return false;
				}
				public Integer dt_ultima_compraLength(){
				    return null;
				}
				public Integer dt_ultima_compraPrecision(){
				    return null;
				}
				public String dt_ultima_compraDefault(){
				
					return null;
				
				}
				public String dt_ultima_compraComment(){
				
				    return "";
				
				}
				public String dt_ultima_compraPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_compraOriginalDbColumnName(){
				
					return "dt_ultima_compra";
				
				}

				
			    public java.util.Date dt_ultima_venda;

				public java.util.Date getDt_ultima_venda () {
					return this.dt_ultima_venda;
				}

				public Boolean dt_ultima_vendaIsNullable(){
				    return true;
				}
				public Boolean dt_ultima_vendaIsKey(){
				    return false;
				}
				public Integer dt_ultima_vendaLength(){
				    return null;
				}
				public Integer dt_ultima_vendaPrecision(){
				    return null;
				}
				public String dt_ultima_vendaDefault(){
				
					return null;
				
				}
				public String dt_ultima_vendaComment(){
				
				    return "";
				
				}
				public String dt_ultima_vendaPattern(){
				
					return "dd-MM-yyyy";
				
				}
				public String dt_ultima_vendaOriginalDbColumnName(){
				
					return "dt_ultima_venda";
				
				}

				
			    public Integer dias_sem_venda;

				public Integer getDias_sem_venda () {
					return this.dias_sem_venda;
				}

				public Boolean dias_sem_vendaIsNullable(){
				    return true;
				}
				public Boolean dias_sem_vendaIsKey(){
				    return false;
				}
				public Integer dias_sem_vendaLength(){
				    return null;
				}
				public Integer dias_sem_vendaPrecision(){
				    return null;
				}
				public String dias_sem_vendaDefault(){
				
					return null;
				
				}
				public String dias_sem_vendaComment(){
				
				    return "";
				
				}
				public String dias_sem_vendaPattern(){
				
					return "";
				
				}
				public String dias_sem_vendaOriginalDbColumnName(){
				
					return "dias_sem_venda";
				
				}

				
			    public String curva_abc;

				public String getCurva_abc () {
					return this.curva_abc;
				}

				public Boolean curva_abcIsNullable(){
				    return true;
				}
				public Boolean curva_abcIsKey(){
				    return false;
				}
				public Integer curva_abcLength(){
				    return 3;
				}
				public Integer curva_abcPrecision(){
				    return null;
				}
				public String curva_abcDefault(){
				
					return null;
				
				}
				public String curva_abcComment(){
				
				    return "";
				
				}
				public String curva_abcPattern(){
				
					return "";
				
				}
				public String curva_abcOriginalDbColumnName(){
				
					return "curva_abc";
				
				}

				
			    public String curva_vlr;

				public String getCurva_vlr () {
					return this.curva_vlr;
				}

				public Boolean curva_vlrIsNullable(){
				    return true;
				}
				public Boolean curva_vlrIsKey(){
				    return false;
				}
				public Integer curva_vlrLength(){
				    return 3;
				}
				public Integer curva_vlrPrecision(){
				    return null;
				}
				public String curva_vlrDefault(){
				
					return null;
				
				}
				public String curva_vlrComment(){
				
				    return "";
				
				}
				public String curva_vlrPattern(){
				
					return "";
				
				}
				public String curva_vlrOriginalDbColumnName(){
				
					return "curva_vlr";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row16Struct other = (row16Struct) obj;
		
						if (this.cd_produto == null) {
							if (other.cd_produto != null)
								return false;
						
						} else if (!this.cd_produto.equals(other.cd_produto))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row16Struct other) {

		other.cd_produto = this.cd_produto;
	            other.dt_ultima_compra = this.dt_ultima_compra;
	            other.dt_ultima_venda = this.dt_ultima_venda;
	            other.dias_sem_venda = this.dias_sem_venda;
	            other.curva_abc = this.curva_abc;
	            other.curva_vlr = this.curva_vlr;
	            
	}

	public void copyKeysDataTo(row16Struct other) {

		other.cd_produto = this.cd_produto;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_dw_t_produto_ranking, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(DataInputStream dis, ObjectInputStream ois) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller ) throws IOException{
		java.util.Date dateReturn = null;
		int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

	private void writeDate(java.util.Date date1, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
	}
	
	private void writeDate(java.util.Date date1, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_dw_t_produto_ranking) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.dt_ultima_compra = readDate(dis,ois);
					
						this.dt_ultima_venda = readDate(dis,ois);
					
						this.dias_sem_venda = readInteger(dis,ois);
					
						this.curva_abc = readString(dis,ois);
					
						this.curva_vlr = readString(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.dt_ultima_compra = readDate(dis,objectIn);
					
						this.dt_ultima_venda = readDate(dis,objectIn);
					
						this.dias_sem_venda = readInteger(dis,objectIn);
					
						this.curva_abc = readString(dis,objectIn);
					
						this.curva_vlr = readString(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeDate(this.dt_ultima_compra, dos, oos);
					
						writeDate(this.dt_ultima_venda, dos, oos);
					
					writeInteger(this.dias_sem_venda, dos, oos);
					
						writeString(this.curva_abc, dos, oos);
					
						writeString(this.curva_vlr, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeDate(this.dt_ultima_compra, dos, objectOut);
					
						writeDate(this.dt_ultima_venda, dos, objectOut);
					
					writeInteger(this.dias_sem_venda, dos, objectOut);
					
						writeString(this.curva_abc, dos, objectOut);
					
						writeString(this.curva_vlr, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dt_ultima_compra="+String.valueOf(dt_ultima_compra));
		sb.append(",dt_ultima_venda="+String.valueOf(dt_ultima_venda));
		sb.append(",dias_sem_venda="+String.valueOf(dias_sem_venda));
		sb.append(",curva_abc="+curva_abc);
		sb.append(",curva_vlr="+curva_vlr);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_produto, other.cd_produto);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();




	
	/**
	 * [tAdvancedHash_row16 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row16", false);
		start_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tAdvancedHash_row16 = 0;
		

			   		// connection name:row16
			   		// source node:tHashInput_9 - inputs:(after_tHashInput_5) outputs:(row16,row16) | target node:tAdvancedHash_row16 - inputs:(row16) outputs:()
			   		// linked node: tMap_5 - inputs:(row12,row16) outputs:(out4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row16 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row16Struct> tHash_Lookup_row16 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row16Struct>getLookup(matchingModeEnum_row16);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row16", tHash_Lookup_row16);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row16 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row9Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row9Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    row9Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row16.cd_produto = next_tHashInput_9.cd_produto;
	row16.dt_ultima_compra = next_tHashInput_9.dt_ultima_compra;
	row16.dt_ultima_venda = next_tHashInput_9.dt_ultima_venda;
	row16.dias_sem_venda = next_tHashInput_9.dias_sem_venda;
	row16.curva_abc = next_tHashInput_9.curva_abc;
	row16.curva_vlr = next_tHashInput_9.curva_vlr;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row16"
						
						);
					}
					


			   
			   

					row16Struct row16_HashRow = new row16Struct();
		   	   	   
				
				row16_HashRow.cd_produto = row16.cd_produto;
				
				row16_HashRow.dt_ultima_compra = row16.dt_ultima_compra;
				
				row16_HashRow.dt_ultima_venda = row16.dt_ultima_venda;
				
				row16_HashRow.dias_sem_venda = row16.dias_sem_venda;
				
				row16_HashRow.curva_abc = row16.curva_abc;
				
				row16_HashRow.curva_vlr = row16.curva_vlr;
				
			tHash_Lookup_row16.put(row16_HashRow);
			
            




 


	tos_count_tAdvancedHash_row16++;

/**
 * [tAdvancedHash_row16 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row16 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_dw_t_produto_ranking_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

tHash_Lookup_row16.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row16", true);
end_Hash.put("tAdvancedHash_row16", System.currentTimeMillis());




/**
 * [tAdvancedHash_row16 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row16 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row16";
	
	

 



/**
 * [tAdvancedHash_row16 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_1", false);
		start_Hash.put("tPostjob_1", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_1";
	
	
		int tos_count_tPostjob_1 = 0;
		

 



/**
 * [tPostjob_1 begin ] stop
 */
	
	/**
	 * [tPostjob_1 main ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 


	tos_count_tPostjob_1++;

/**
 * [tPostjob_1 main ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_1 end ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 

ok_Hash.put("tPostjob_1", true);
end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tDBClose_1Process(globalMap);



/**
 * [tPostjob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_1 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_1";
	
	

 



/**
 * [tPostjob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
		
			conn_tDBClose_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tDBClose_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	



	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_1");
	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
        conn_tDBClose_2.close();
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final dw_t_produto_ranking dw_t_produto_rankingClass = new dw_t_produto_ranking();

        int exitCode = dw_t_produto_rankingClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = dw_t_produto_ranking.class.getClassLoader().getResourceAsStream("palacio_ferramentas/dw_t_produto_ranking_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = dw_t_produto_ranking.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs


this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_1) {
globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

e_tPostjob_1.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : dw_t_produto_ranking");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;


    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_1");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_1", globalMap.get("conn_tDBConnection_1"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     700870 characters generated by Talend Open Studio for Big Data 
 *     on the 25 de junho de 2024 14:19:48 BRT
 ************************************************************************************************/