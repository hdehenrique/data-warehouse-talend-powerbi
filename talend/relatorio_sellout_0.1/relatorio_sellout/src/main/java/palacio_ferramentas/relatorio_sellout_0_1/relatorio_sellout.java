// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package palacio_ferramentas.relatorio_sellout_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 




	//the import part of tJava_2
	//import java.util.List;

	//the import part of tJava_3
	import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

	//the import part of tJavaRow_1
	//import java.util.List;

	//the import part of tJava_1
	//import java.util.List;


@SuppressWarnings("unused")

/**
 * Job: relatorio_sellout Purpose: <br>
 * Description:  <br>
 * @author henriquesantos@palaciodasferramentas.com.br
 * @version 8.0.1.20230922_0317-SNAPSHOT
 * @status 
 */
public class relatorio_sellout implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	private Object[] multiThreadLockWrite = new Object[0];
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	

	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
		

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
			if(programa != null){
				
					this.setProperty("programa", programa.toString());
				
			}
			
			if(data_execucao != null){
				
					this.setProperty("data_execucao", data_execucao.toString());
				
			}
			
			if(EMAIL_PASSWORD_P != null){
				
					this.setProperty("EMAIL_PASSWORD_P", EMAIL_PASSWORD_P.toString());
				
			}
			
			if(EMAIL_P != null){
				
					this.setProperty("EMAIL_P", EMAIL_P.toString());
				
			}
			
			if(SEND_EMAIL != null){
				
					this.setProperty("SEND_EMAIL", SEND_EMAIL.toString());
				
			}
			
			if(versao != null){
				
					this.setProperty("versao", versao.toString());
				
			}
			
			if(excel != null){
				
					this.setProperty("excel", excel.toString());
				
			}
			
			if(SMTP_P != null){
				
					this.setProperty("SMTP_P", SMTP_P.toString());
				
			}
			
			if(SMTP_PORT_P != null){
				
					this.setProperty("SMTP_PORT_P", SMTP_PORT_P.toString());
				
			}
			
			if(AUTCOM_DB != null){
				
					this.setProperty("AUTCOM_DB", AUTCOM_DB.toString());
				
			}
			
			if(AUTCOM_HOST != null){
				
					this.setProperty("AUTCOM_HOST", AUTCOM_HOST.toString());
				
			}
			
			if(AUTCOM_PASSWORD != null){
				
					this.setProperty("AUTCOM_PASSWORD", AUTCOM_PASSWORD.toString());
				
			}
			
			if(AUTCOM_PORT != null){
				
					this.setProperty("AUTCOM_PORT", AUTCOM_PORT.toString());
				
			}
			
			if(AUTCOM_USER != null){
				
					this.setProperty("AUTCOM_USER", AUTCOM_USER.toString());
				
			}
			
			if(POSTGRES_DB != null){
				
					this.setProperty("POSTGRES_DB", POSTGRES_DB.toString());
				
			}
			
			if(POSTGRES_HOST != null){
				
					this.setProperty("POSTGRES_HOST", POSTGRES_HOST.toString());
				
			}
			
			if(POSTGRES_PASSWORD != null){
				
					this.setProperty("POSTGRES_PASSWORD", POSTGRES_PASSWORD.toString());
				
			}
			
			if(POSTGRES_PORT != null){
				
					this.setProperty("POSTGRES_PORT", POSTGRES_PORT.toString());
				
			}
			
			if(POSTGRES_USER != null){
				
					this.setProperty("POSTGRES_USER", POSTGRES_USER.toString());
				
			}
			
			if(JDBC_PARAMETERS != null){
				
					this.setProperty("JDBC_PARAMETERS", JDBC_PARAMETERS.toString());
				
			}
			
			if(caminho != null){
				
					this.setProperty("caminho", caminho.toString());
				
			}
			
		}
		
		//if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if(NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

public String programa;
public String getPrograma(){
	return this.programa;
}
public String data_execucao;
public String getData_execucao(){
	return this.data_execucao;
}
public String EMAIL_PASSWORD_P;
public String getEMAIL_PASSWORD_P(){
	return this.EMAIL_PASSWORD_P;
}
public String EMAIL_P;
public String getEMAIL_P(){
	return this.EMAIL_P;
}
public String SEND_EMAIL;
public String getSEND_EMAIL(){
	return this.SEND_EMAIL;
}
public Integer versao;
public Integer getVersao(){
	return this.versao;
}
public String excel;
public String getExcel(){
	return this.excel;
}
public String SMTP_P;
public String getSMTP_P(){
	return this.SMTP_P;
}
public String SMTP_PORT_P;
public String getSMTP_PORT_P(){
	return this.SMTP_PORT_P;
}
public String AUTCOM_DB;
public String getAUTCOM_DB(){
	return this.AUTCOM_DB;
}
public String AUTCOM_HOST;
public String getAUTCOM_HOST(){
	return this.AUTCOM_HOST;
}
public String AUTCOM_PASSWORD;
public String getAUTCOM_PASSWORD(){
	return this.AUTCOM_PASSWORD;
}
public String AUTCOM_PORT;
public String getAUTCOM_PORT(){
	return this.AUTCOM_PORT;
}
public String AUTCOM_USER;
public String getAUTCOM_USER(){
	return this.AUTCOM_USER;
}
public String POSTGRES_DB;
public String getPOSTGRES_DB(){
	return this.POSTGRES_DB;
}
public String POSTGRES_HOST;
public String getPOSTGRES_HOST(){
	return this.POSTGRES_HOST;
}
public String POSTGRES_PASSWORD;
public String getPOSTGRES_PASSWORD(){
	return this.POSTGRES_PASSWORD;
}
public String POSTGRES_PORT;
public String getPOSTGRES_PORT(){
	return this.POSTGRES_PORT;
}
public String POSTGRES_USER;
public String getPOSTGRES_USER(){
	return this.POSTGRES_USER;
}
public String JDBC_PARAMETERS;
public String getJDBC_PARAMETERS(){
	return this.JDBC_PARAMETERS;
}
public String caminho;
public String getCaminho(){
	return this.caminho;
}
	}
			
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "relatorio_sellout";
	private final String projectName = "PALACIO_FERRAMENTAS";
	public Integer errorCode = null;
	private String currentComponent = "";
	
	private String cLabel =  null;
	
		private final java.util.Map<String, Object> globalMap = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Object>());
		
	
		private final java.util.Map<String, Long> start_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Long> end_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Long>());
		private final java.util.Map<String, Boolean> ok_Hash = java.util.Collections.synchronizedMap(new java.util.HashMap<String, Boolean>());
		public  final java.util.List<String[]> globalBuffer = java.util.Collections.synchronizedList(new java.util.ArrayList<String[]>());
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}
	
	public void setDataSourceReferences(List serviceReferences) throws Exception{
		
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();
		
		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils.getServices(serviceReferences,  javax.sql.DataSource.class).entrySet()) {
                    dataSources.put(entry.getKey(), entry.getValue());
                    talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	
	private String currentComponent = null;
	private String cLabel =  null;
	
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}
	
	private TalendException(Exception e, String errorComponent, String errorComponentLabel, final java.util.Map<String, Object> globalMap) {
		this(e, errorComponent, globalMap);
		this.cLabel = errorComponentLabel;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				relatorio_sellout.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(relatorio_sellout.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tPrejob_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBConnection_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBConnection_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJavaRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tLogRow_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPostjob_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tPostjob_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBClose_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBClose_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tRowGenerator_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tRowGenerator_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUnite_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_12_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tUniqRow_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFlowToIterate_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashOutput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_11_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tSendMail_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tSendMail_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tJava_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tJava_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileDelete_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tFileDelete_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tHashInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tAdvancedHash_row41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				((java.util.Map)threadLocal.get()).put("status", "failure");
				
					tHashInput_10_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tPrejob_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBConnection_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tPostjob_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBClose_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tRowGenerator_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_16_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_12_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_11_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_10_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tSendMail_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tJava_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tFileDelete_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tHashInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	

public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPrejob_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tPrejob_1", false);
		start_Hash.put("tPrejob_1", System.currentTimeMillis());
		
	
	currentComponent="tPrejob_1";
	
	
		int tos_count_tPrejob_1 = 0;
		

 



/**
 * [tPrejob_1 begin ] stop
 */
	
	/**
	 * [tPrejob_1 main ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 


	tos_count_tPrejob_1++;

/**
 * [tPrejob_1 main ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_begin ] stop
 */
	
	/**
	 * [tPrejob_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 process_data_end ] stop
 */
	
	/**
	 * [tPrejob_1 end ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 

ok_Hash.put("tPrejob_1", true);
end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tJava_2Process(globalMap);



/**
 * [tPrejob_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPrejob_1 finally ] start
	 */

	

	
	
	currentComponent="tPrejob_1";
	
	

 



/**
 * [tPrejob_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}
	


public void tJava_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_2", false);
		start_Hash.put("tJava_2", System.currentTimeMillis());
		
	
	currentComponent="tJava_2";
	
	
		int tos_count_tJava_2 = 0;
		


System.out.println("*****************************************************");
System.out.println("Iniciando Relatorio Sellout");
System.out.println("Job Iniciado em: "+TalendDate.getCurrentDate());
System.out.println("*****************************************************");
 



/**
 * [tJava_2 begin ] stop
 */
	
	/**
	 * [tJava_2 main ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 


	tos_count_tJava_2++;

/**
 * [tJava_2 main ] stop
 */
	
	/**
	 * [tJava_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_begin ] stop
 */
	
	/**
	 * [tJava_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 process_data_end ] stop
 */
	
	/**
	 * [tJava_2 end ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 

ok_Hash.put("tJava_2", true);
end_Hash.put("tJava_2", System.currentTimeMillis());




/**
 * [tJava_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk11", 0, "ok");
								} 
							
							tDBConnection_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_2 finally ] start
	 */

	

	
	
	currentComponent="tJava_2";
	
	

 



/**
 * [tJava_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_2", false);
		start_Hash.put("tDBConnection_2", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_2";
	
	
		int tos_count_tDBConnection_2 = 0;
		
	

	
        String properties_tDBConnection_2 = System.getenv(context.JDBC_PARAMETERS);
        if (properties_tDBConnection_2 == null || properties_tDBConnection_2.trim().length() == 0) {
            properties_tDBConnection_2 = "rewriteBatchedStatements=true&allowLoadLocalInfile=true";
        }else {
            if (!properties_tDBConnection_2.contains("rewriteBatchedStatements=")) {
                properties_tDBConnection_2 += "&rewriteBatchedStatements=true";
            }

            if (!properties_tDBConnection_2.contains("allowLoadLocalInfile=")) {
                properties_tDBConnection_2 += "&allowLoadLocalInfile=true";
            }
        }

        String url_tDBConnection_2 = "jdbc:mysql://" + System.getenv(context.AUTCOM_HOST) + ":" + System.getenv(context.AUTCOM_PORT) + "/" + System.getenv(context.AUTCOM_DB) + "?" + properties_tDBConnection_2;
	String dbUser_tDBConnection_2 = System.getenv(context.AUTCOM_USER);
	
	
		
	final String decryptedPassword_tDBConnection_2 = System.getenv(context.AUTCOM_PASSWORD)
; 
		String dbPwd_tDBConnection_2 = decryptedPassword_tDBConnection_2;
	
	
	java.sql.Connection conn_tDBConnection_2 = null;
	
		
			String driverClass_tDBConnection_2 = "com.mysql.jdbc.Driver";
			java.lang.Class jdbcclazz_tDBConnection_2 = java.lang.Class.forName(driverClass_tDBConnection_2);
			globalMap.put("driverClass_tDBConnection_2", driverClass_tDBConnection_2);
		
			conn_tDBConnection_2 = java.sql.DriverManager.getConnection(url_tDBConnection_2,dbUser_tDBConnection_2,dbPwd_tDBConnection_2);

		globalMap.put("conn_tDBConnection_2", conn_tDBConnection_2);
	if (null != conn_tDBConnection_2) {
		
			conn_tDBConnection_2.setAutoCommit(false);
	}

	globalMap.put("db_tDBConnection_2",System.getenv(context.AUTCOM_DB));
 



/**
 * [tDBConnection_2 begin ] stop
 */
	
	/**
	 * [tDBConnection_2 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 


	tos_count_tDBConnection_2++;

/**
 * [tDBConnection_2 main ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_2 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 

ok_Hash.put("tDBConnection_2", true);
end_Hash.put("tDBConnection_2", System.currentTimeMillis());




/**
 * [tDBConnection_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk1", 0, "ok");
								} 
							
							tDBConnection_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_2 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_2";
	
	

 



/**
 * [tDBConnection_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBConnection_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBConnection_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBConnection_3", false);
		start_Hash.put("tDBConnection_3", System.currentTimeMillis());
		
	
	currentComponent="tDBConnection_3";
	
	
		int tos_count_tDBConnection_3 = 0;
		


	
            String dbProperties_tDBConnection_3 = "ApplicationName="+context.programa+"";
            String url_tDBConnection_3 = "jdbc:postgresql://"+System.getenv(context.POSTGRES_HOST)+":"+System.getenv(context.POSTGRES_PORT)+"/"+System.getenv(context.POSTGRES_DB);
            
            if(dbProperties_tDBConnection_3 != null && !"".equals(dbProperties_tDBConnection_3.trim())) {
                url_tDBConnection_3 = url_tDBConnection_3 + "?" + dbProperties_tDBConnection_3;
            }
	String dbUser_tDBConnection_3 = System.getenv(context.POSTGRES_USER);
	
	
		
	final String decryptedPassword_tDBConnection_3 = System.getenv(context.POSTGRES_PASSWORD)
; 
		String dbPwd_tDBConnection_3 = decryptedPassword_tDBConnection_3;
	
	
	java.sql.Connection conn_tDBConnection_3 = null;
	
        java.util.Enumeration<java.sql.Driver> drivers_tDBConnection_3 =  java.sql.DriverManager.getDrivers();
        java.util.Set<String> redShiftDriverNames_tDBConnection_3 = new java.util.HashSet<String>(java.util.Arrays
                .asList("com.amazon.redshift.jdbc.Driver","com.amazon.redshift.jdbc41.Driver","com.amazon.redshift.jdbc42.Driver"));
    while (drivers_tDBConnection_3.hasMoreElements()) {
        java.sql.Driver d_tDBConnection_3 = drivers_tDBConnection_3.nextElement();
        if (redShiftDriverNames_tDBConnection_3.contains(d_tDBConnection_3.getClass().getName())) {
            try {
                java.sql.DriverManager.deregisterDriver(d_tDBConnection_3);
                java.sql.DriverManager.registerDriver(d_tDBConnection_3);
            } catch (java.lang.Exception e_tDBConnection_3) {
globalMap.put("tDBConnection_3_ERROR_MESSAGE",e_tDBConnection_3.getMessage());
                    //do nothing
            }
        }
    }
					String driverClass_tDBConnection_3 = "org.postgresql.Driver";
			java.lang.Class jdbcclazz_tDBConnection_3 = java.lang.Class.forName(driverClass_tDBConnection_3);
			globalMap.put("driverClass_tDBConnection_3", driverClass_tDBConnection_3);
		
			conn_tDBConnection_3 = java.sql.DriverManager.getConnection(url_tDBConnection_3,dbUser_tDBConnection_3,dbPwd_tDBConnection_3);

		globalMap.put("conn_tDBConnection_3", conn_tDBConnection_3);
	if (null != conn_tDBConnection_3) {
		
			conn_tDBConnection_3.setAutoCommit(true);
	}

	globalMap.put("schema_" + "tDBConnection_3","");

 



/**
 * [tDBConnection_3 begin ] stop
 */
	
	/**
	 * [tDBConnection_3 main ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 


	tos_count_tDBConnection_3++;

/**
 * [tDBConnection_3 main ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBConnection_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 process_data_end ] stop
 */
	
	/**
	 * [tDBConnection_3 end ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 

ok_Hash.put("tDBConnection_3", true);
end_Hash.put("tDBConnection_3", System.currentTimeMillis());




/**
 * [tDBConnection_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBConnection_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk2", 0, "ok");
								} 
							
							tJava_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBConnection_3 finally ] start
	 */

	

	
	
	currentComponent="tDBConnection_3";
	
	

 



/**
 * [tDBConnection_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBConnection_3_SUBPROCESS_STATE", 1);
	}
	


public void tJava_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_3", false);
		start_Hash.put("tJava_3", System.currentTimeMillis());
		
	
	currentComponent="tJava_3";
	
	
		int tos_count_tJava_3 = 0;
		


Date dataNova = new Date();
DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
formato.setTimeZone(TimeZone.getTimeZone("America/Sao_Paulo"));
String data = formato.format(dataNova.getTime());


context.data_execucao = data;
 



/**
 * [tJava_3 begin ] stop
 */
	
	/**
	 * [tJava_3 main ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 


	tos_count_tJava_3++;

/**
 * [tJava_3 main ] stop
 */
	
	/**
	 * [tJava_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_begin ] stop
 */
	
	/**
	 * [tJava_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 process_data_end ] stop
 */
	
	/**
	 * [tJava_3 end ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 

ok_Hash.put("tJava_3", true);
end_Hash.put("tJava_3", System.currentTimeMillis());




/**
 * [tJava_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk27", 0, "ok");
								} 
							
							tDBInput_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_3 finally ] start
	 */

	

	
	
	currentComponent="tJava_3";
	
	

 



/**
 * [tJava_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_3_SUBPROCESS_STATE", 1);
	}
	


public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row26Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String job;

				public String getJob () {
					return this.job;
				}

				public Boolean jobIsNullable(){
				    return true;
				}
				public Boolean jobIsKey(){
				    return false;
				}
				public Integer jobLength(){
				    return null;
				}
				public Integer jobPrecision(){
				    return null;
				}
				public String jobDefault(){
				
					return null;
				
				}
				public String jobComment(){
				
				    return "";
				
				}
				public String jobPattern(){
				
					return "";
				
				}
				public String jobOriginalDbColumnName(){
				
					return "job";
				
				}

				
			    public String nm_relatorio;

				public String getNm_relatorio () {
					return this.nm_relatorio;
				}

				public Boolean nm_relatorioIsNullable(){
				    return true;
				}
				public Boolean nm_relatorioIsKey(){
				    return false;
				}
				public Integer nm_relatorioLength(){
				    return null;
				}
				public Integer nm_relatorioPrecision(){
				    return null;
				}
				public String nm_relatorioDefault(){
				
					return null;
				
				}
				public String nm_relatorioComment(){
				
				    return "";
				
				}
				public String nm_relatorioPattern(){
				
					return "";
				
				}
				public String nm_relatorioOriginalDbColumnName(){
				
					return "nm_relatorio";
				
				}

				
			    public String caminho;

				public String getCaminho () {
					return this.caminho;
				}

				public Boolean caminhoIsNullable(){
				    return true;
				}
				public Boolean caminhoIsKey(){
				    return false;
				}
				public Integer caminhoLength(){
				    return null;
				}
				public Integer caminhoPrecision(){
				    return null;
				}
				public String caminhoDefault(){
				
					return null;
				
				}
				public String caminhoComment(){
				
				    return "";
				
				}
				public String caminhoPattern(){
				
					return "";
				
				}
				public String caminhoOriginalDbColumnName(){
				
					return "caminho";
				
				}

				
			    public String email;

				public String getEmail () {
					return this.email;
				}

				public Boolean emailIsNullable(){
				    return true;
				}
				public Boolean emailIsKey(){
				    return false;
				}
				public Integer emailLength(){
				    return null;
				}
				public Integer emailPrecision(){
				    return null;
				}
				public String emailDefault(){
				
					return null;
				
				}
				public String emailComment(){
				
				    return "";
				
				}
				public String emailPattern(){
				
					return "";
				
				}
				public String emailOriginalDbColumnName(){
				
					return "email";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.job = readString(dis);
					
					this.nm_relatorio = readString(dis);
					
					this.caminho = readString(dis);
					
					this.email = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.job,dos);
					
					// String
				
						writeString(this.nm_relatorio,dos);
					
					// String
				
						writeString(this.caminho,dos);
					
					// String
				
						writeString(this.email,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("job="+job);
		sb.append(",nm_relatorio="+nm_relatorio);
		sb.append(",caminho="+caminho);
		sb.append(",email="+email);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row25Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row25Struct row25 = new row25Struct();
row26Struct row26 = new row26Struct();





	
	/**
	 * [tLogRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tLogRow_1", false);
		start_Hash.put("tLogRow_1", System.currentTimeMillis());
		
	
	currentComponent="tLogRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row26");
					}
				
		int tos_count_tLogRow_1 = 0;
		

	///////////////////////
	
         class Util_tLogRow_1 {

        String[] des_top = { ".", ".", "-", "+" };

        String[] des_head = { "|=", "=|", "-", "+" };

        String[] des_bottom = { "'", "'", "-", "+" };

        String name="";

        java.util.List<String[]> list = new java.util.ArrayList<String[]>();

        int[] colLengths = new int[4];

        public void addRow(String[] row) {

            for (int i = 0; i < 4; i++) {
                if (row[i]!=null) {
                  colLengths[i] = Math.max(colLengths[i], row[i].length());
                }
            }
            list.add(row);
        }

        public void setTableName(String name) {

            this.name = name;
        }

            public StringBuilder format() {
            
                StringBuilder sb = new StringBuilder();
  
            
                    sb.append(print(des_top));
    
                    int totals = 0;
                    for (int i = 0; i < colLengths.length; i++) {
                        totals = totals + colLengths[i];
                    }
    
                    // name
                    sb.append("|");
                    int k = 0;
                    for (k = 0; k < (totals + 3 - name.length()) / 2; k++) {
                        sb.append(' ');
                    }
                    sb.append(name);
                    for (int i = 0; i < totals + 3 - name.length() - k; i++) {
                        sb.append(' ');
                    }
                    sb.append("|\n");

                    // head and rows
                    sb.append(print(des_head));
                    for (int i = 0; i < list.size(); i++) {
    
                        String[] row = list.get(i);
    
                        java.util.Formatter formatter = new java.util.Formatter(new StringBuilder());
                        
                        StringBuilder sbformat = new StringBuilder();                                             
        			        sbformat.append("|%1$-");
        			        sbformat.append(colLengths[0]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%2$-");
        			        sbformat.append(colLengths[1]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%3$-");
        			        sbformat.append(colLengths[2]);
        			        sbformat.append("s");
        			              
        			        sbformat.append("|%4$-");
        			        sbformat.append(colLengths[3]);
        			        sbformat.append("s");
        			                      
                        sbformat.append("|\n");                    
       
                        formatter.format(sbformat.toString(), (Object[])row);	
                                
                        sb.append(formatter.toString());
                        if (i == 0)
                            sb.append(print(des_head)); // print the head
                    }
    
                    // end
                    sb.append(print(des_bottom));
                    return sb;
                }
            

            private StringBuilder print(String[] fillChars) {
                StringBuilder sb = new StringBuilder();
                //first column
                sb.append(fillChars[0]);                
                    for (int i = 0; i < colLengths[0] - fillChars[0].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);	                

                    for (int i = 0; i < colLengths[1] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                    for (int i = 0; i < colLengths[2] - fillChars[3].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }
                    sb.append(fillChars[3]);
                
                    //last column
                    for (int i = 0; i < colLengths[3] - fillChars[1].length() + 1; i++) {
                        sb.append(fillChars[2]);
                    }         
                sb.append(fillChars[1]);
                sb.append("\n");               
                return sb;
            }
            
            public boolean isTableEmpty(){
            	if (list.size() > 1)
            		return false;
            	return true;
            }
        }
        Util_tLogRow_1 util_tLogRow_1 = new Util_tLogRow_1();
        util_tLogRow_1.setTableName("tLogRow_1");
        util_tLogRow_1.addRow(new String[]{"job","nm_relatorio","caminho","email",});        
 		StringBuilder strBuffer_tLogRow_1 = null;
		int nb_line_tLogRow_1 = 0;
///////////////////////    			



 



/**
 * [tLogRow_1 begin ] stop
 */



	
	/**
	 * [tJavaRow_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJavaRow_1", false);
		start_Hash.put("tJavaRow_1", System.currentTimeMillis());
		
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row25");
					}
				
		int tos_count_tJavaRow_1 = 0;
		

int nb_line_tJavaRow_1 = 0;

 



/**
 * [tJavaRow_1 begin ] stop
 */



	
	/**
	 * [tDBInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_9", false);
		start_Hash.put("tDBInput_9", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_9";
	
	
		int tos_count_tDBInput_9 = 0;
		
	
    
	
		    int nb_line_tDBInput_9 = 0;
		    java.sql.Connection conn_tDBInput_9 = null;
				conn_tDBInput_9 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_9 = conn_tDBInput_9.createStatement();

		    String dbquery_tDBInput_9 = "select job,\n       nm_relatorio,\n--       REPLACE(caminho,'/','\\') \ncaminho,\n       string_agg(distinct trim(email"
+"),',') email\n  from dw_t_relatorio_email\nwhere job = '"+context.programa+"'\n group by job, nm_relatorio, caminho";
		    

		    globalMap.put("tDBInput_9_QUERY",dbquery_tDBInput_9);

		    java.sql.ResultSet rs_tDBInput_9 = null;

		    try {
		    	rs_tDBInput_9 = stmt_tDBInput_9.executeQuery(dbquery_tDBInput_9);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_9 = rs_tDBInput_9.getMetaData();
		    	int colQtyInRs_tDBInput_9 = rsmd_tDBInput_9.getColumnCount();

		    String tmpContent_tDBInput_9 = null;
		    
		    
		    while (rs_tDBInput_9.next()) {
		        nb_line_tDBInput_9++;
		        
							if(colQtyInRs_tDBInput_9 < 1) {
								row25.job = null;
							} else {
	                         		
        	row25.job = routines.system.JDBCUtil.getString(rs_tDBInput_9, 1, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 2) {
								row25.nm_relatorio = null;
							} else {
	                         		
        	row25.nm_relatorio = routines.system.JDBCUtil.getString(rs_tDBInput_9, 2, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 3) {
								row25.caminho = null;
							} else {
	                         		
        	row25.caminho = routines.system.JDBCUtil.getString(rs_tDBInput_9, 3, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 4) {
								row25.email = null;
							} else {
	                         		
        	row25.email = routines.system.JDBCUtil.getString(rs_tDBInput_9, 4, false);
		                    }
					


 



/**
 * [tDBInput_9 begin ] stop
 */
	
	/**
	 * [tDBInput_9 main ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 


	tos_count_tDBInput_9++;

/**
 * [tDBInput_9 main ] stop
 */
	
	/**
	 * [tDBInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 



/**
 * [tDBInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tJavaRow_1 main ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row25"
						
						);
					}
					

    //Code generated according to input schema and output schema
row26.job = row25.job;
row26.nm_relatorio = row25.nm_relatorio;
row26.caminho = row25.caminho;
row26.email = row25.email;
context.SEND_EMAIL = row25.email;
context.caminho = row25.caminho;
    nb_line_tJavaRow_1++;   

 


	tos_count_tJavaRow_1++;

/**
 * [tJavaRow_1 main ] stop
 */
	
	/**
	 * [tJavaRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_begin ] stop
 */

	
	/**
	 * [tLogRow_1 main ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row26"
						
						);
					}
					
///////////////////////		
						

				
				String[] row_tLogRow_1 = new String[4];
   				
	    		if(row26.job != null) { //              
                 row_tLogRow_1[0]=    						    
				                String.valueOf(row26.job)			
					          ;	
							
	    		} //			
    			   				
	    		if(row26.nm_relatorio != null) { //              
                 row_tLogRow_1[1]=    						    
				                String.valueOf(row26.nm_relatorio)			
					          ;	
							
	    		} //			
    			   				
	    		if(row26.caminho != null) { //              
                 row_tLogRow_1[2]=    						    
				                String.valueOf(row26.caminho)			
					          ;	
							
	    		} //			
    			   				
	    		if(row26.email != null) { //              
                 row_tLogRow_1[3]=    						    
				                String.valueOf(row26.email)			
					          ;	
							
	    		} //			
    			 

				util_tLogRow_1.addRow(row_tLogRow_1);	
				nb_line_tLogRow_1++;
//////

//////                    
                    
///////////////////////    			

 


	tos_count_tLogRow_1++;

/**
 * [tLogRow_1 main ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_begin ] stop
 */
	
	/**
	 * [tLogRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 process_data_end ] stop
 */



	
	/**
	 * [tJavaRow_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 



/**
 * [tDBInput_9 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_9 end ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

	}
}finally{
	if (rs_tDBInput_9 != null) {
		rs_tDBInput_9.close();
	}
	if (stmt_tDBInput_9 != null) {
		stmt_tDBInput_9.close();
	}
}
globalMap.put("tDBInput_9_NB_LINE",nb_line_tDBInput_9);
 

ok_Hash.put("tDBInput_9", true);
end_Hash.put("tDBInput_9", System.currentTimeMillis());




/**
 * [tDBInput_9 end ] stop
 */

	
	/**
	 * [tJavaRow_1 end ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

globalMap.put("tJavaRow_1_NB_LINE",nb_line_tJavaRow_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row25");
			  	}
			  	
 

ok_Hash.put("tJavaRow_1", true);
end_Hash.put("tJavaRow_1", System.currentTimeMillis());




/**
 * [tJavaRow_1 end ] stop
 */

	
	/**
	 * [tLogRow_1 end ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	


//////

                    
                    java.io.PrintStream consoleOut_tLogRow_1 = null;
                    if (globalMap.get("tLogRow_CONSOLE")!=null)
                    {
                    	consoleOut_tLogRow_1 = (java.io.PrintStream) globalMap.get("tLogRow_CONSOLE");
                    }
                    else
                    {
                    	consoleOut_tLogRow_1 = new java.io.PrintStream(new java.io.BufferedOutputStream(System.out));
                    	globalMap.put("tLogRow_CONSOLE",consoleOut_tLogRow_1);
                    }
                    
                    consoleOut_tLogRow_1.println(util_tLogRow_1.format().toString());
                    consoleOut_tLogRow_1.flush();
//////
globalMap.put("tLogRow_1_NB_LINE",nb_line_tLogRow_1);

///////////////////////    			

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row26");
			  	}
			  	
 

ok_Hash.put("tLogRow_1", true);
end_Hash.put("tLogRow_1", System.currentTimeMillis());




/**
 * [tLogRow_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_9 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_9";
	
	

 



/**
 * [tDBInput_9 finally ] stop
 */

	
	/**
	 * [tJavaRow_1 finally ] start
	 */

	

	
	
	currentComponent="tJavaRow_1";
	
	

 



/**
 * [tJavaRow_1 finally ] stop
 */

	
	/**
	 * [tLogRow_1 finally ] start
	 */

	

	
	
	currentComponent="tLogRow_1";
	
	

 



/**
 * [tLogRow_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_9_SUBPROCESS_STATE", 1);
	}
	


public void tPostjob_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tPostjob_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tPostjob_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tPostjob_2", false);
		start_Hash.put("tPostjob_2", System.currentTimeMillis());
		
	
	currentComponent="tPostjob_2";
	
	
		int tos_count_tPostjob_2 = 0;
		

 



/**
 * [tPostjob_2 begin ] stop
 */
	
	/**
	 * [tPostjob_2 main ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 


	tos_count_tPostjob_2++;

/**
 * [tPostjob_2 main ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_begin ] stop
 */
	
	/**
	 * [tPostjob_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 process_data_end ] stop
 */
	
	/**
	 * [tPostjob_2 end ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 

ok_Hash.put("tPostjob_2", true);
end_Hash.put("tPostjob_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tDBClose_2Process(globalMap);



/**
 * [tPostjob_2 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tPostjob_2 finally ] start
	 */

	

	
	
	currentComponent="tPostjob_2";
	
	

 



/**
 * [tPostjob_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tPostjob_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tDBClose_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_2", false);
		start_Hash.put("tDBClose_2", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_2";
	
	
		int tos_count_tDBClose_2 = 0;
		

 



/**
 * [tDBClose_2 begin ] stop
 */
	
	/**
	 * [tDBClose_2 main ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

	java.sql.Connection conn_tDBClose_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");

	if(conn_tDBClose_2 != null && !conn_tDBClose_2.isClosed())
	{
		
			conn_tDBClose_2.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_tDBConnection_2"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
	}

 


	tos_count_tDBClose_2++;

/**
 * [tDBClose_2 main ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_2 end ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 

ok_Hash.put("tDBClose_2", true);
end_Hash.put("tDBClose_2", System.currentTimeMillis());




/**
 * [tDBClose_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBClose_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk3", 0, "ok");
								} 
							
							tDBClose_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_2 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_2";
	
	

 



/**
 * [tDBClose_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_2_SUBPROCESS_STATE", 1);
	}
	


public void tDBClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBClose_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;





	
	/**
	 * [tDBClose_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBClose_1", false);
		start_Hash.put("tDBClose_1", System.currentTimeMillis());
		
	
	currentComponent="tDBClose_1";
	
	
		int tos_count_tDBClose_1 = 0;
		

 



/**
 * [tDBClose_1 begin ] stop
 */
	
	/**
	 * [tDBClose_1 main ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	



	java.sql.Connection conn_tDBClose_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	if(conn_tDBClose_1 != null && !conn_tDBClose_1.isClosed())
	{
        conn_tDBClose_1.close();
	}

 


	tos_count_tDBClose_1++;

/**
 * [tDBClose_1 main ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBClose_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 process_data_end ] stop
 */
	
	/**
	 * [tDBClose_1 end ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 

ok_Hash.put("tDBClose_1", true);
end_Hash.put("tDBClose_1", System.currentTimeMillis());




/**
 * [tDBClose_1 end ] stop
 */
				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBClose_1 finally ] start
	 */

	

	
	
	currentComponent="tDBClose_1";
	
	

 



/**
 * [tDBClose_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBClose_1_SUBPROCESS_STATE", 1);
	}
	


public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class insert_logStruct implements routines.system.IPersistableRow<insert_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				
			    public Integer versao;

				public Integer getVersao () {
					return this.versao;
				}

				public Boolean versaoIsNullable(){
				    return true;
				}
				public Boolean versaoIsKey(){
				    return false;
				}
				public Integer versaoLength(){
				    return null;
				}
				public Integer versaoPrecision(){
				    return null;
				}
				public String versaoDefault(){
				
					return null;
				
				}
				public String versaoComment(){
				
				    return "";
				
				}
				public String versaoPattern(){
				
					return "";
				
				}
				public String versaoOriginalDbColumnName(){
				
					return "versao";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
						this.versao = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
					// Integer
				
						writeInteger(this.versao,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
		sb.append(",versao="+String.valueOf(versao));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(insert_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public java.util.Date datainicio;

				public java.util.Date getDatainicio () {
					return this.datainicio;
				}

				public Boolean datainicioIsNullable(){
				    return true;
				}
				public Boolean datainicioIsKey(){
				    return false;
				}
				public Integer datainicioLength(){
				    return null;
				}
				public Integer datainicioPrecision(){
				    return null;
				}
				public String datainicioDefault(){
				
					return null;
				
				}
				public String datainicioComment(){
				
				    return "";
				
				}
				public String datainicioPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String datainicioOriginalDbColumnName(){
				
					return "datainicio";
				
				}

				



	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.datainicio = readDate(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// java.util.Date
				
						writeDate(this.datainicio,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("datainicio="+String.valueOf(datainicio));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tRowGenerator_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
insert_logStruct insert_log = new insert_logStruct();
row5Struct row5 = new row5Struct();






	
	/**
	 * [tHashOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_1", false);
		start_Hash.put("tHashOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tHashOutput_1 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashOutput_1 = null;
		String hashKey_tHashOutput_1 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_1";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_1)){
			    if(mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1) == null){
	      		    mf_tHashOutput_1.getResourceMap().put(hashKey_tHashOutput_1, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }else{
			    	tHashFile_tHashOutput_1 = mf_tHashOutput_1.getResourceMap().get(hashKey_tHashOutput_1);
			    }
			}
        int nb_line_tHashOutput_1 = 0;

 



/**
 * [tHashOutput_1 begin ] stop
 */



	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"insert_log");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





String dbschema_tDBOutput_1 = null;
	dbschema_tDBOutput_1 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_1 = null;
if(dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
	tableName_tDBOutput_1 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "\".\"" + ("dw_log_execucao").toLowerCase();
}


int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;
int rowsToCommitCount_tDBOutput_1=0;
int rejectedCount_tDBOutput_1=0;

boolean whetherReject_tDBOutput_1 = false;

java.sql.Connection conn_tDBOutput_1 = null;
String dbUser_tDBOutput_1 = null;

	conn_tDBOutput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_1=0;
        java.lang.StringBuilder sb_tDBOutput_1 = new java.lang.StringBuilder();
        sb_tDBOutput_1.append("INSERT INTO \"").append(tableName_tDBOutput_1).append("\" (\"nm_programa\",\"data_inicio_execucao\",\"data_termino_execucao\",\"mensagem\",\"uuid\",\"versao\") VALUES (?,?,?,?,?,?)");

        String insert_tDBOutput_1 = sb_tDBOutput_1.toString();
        
        
	    
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
insert_logStruct insert_log_tmp = new insert_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tRowGenerator_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tRowGenerator_1", false);
		start_Hash.put("tRowGenerator_1", System.currentTimeMillis());
		
	
	currentComponent="tRowGenerator_1";
	
	
		int tos_count_tRowGenerator_1 = 0;
		


int nb_line_tRowGenerator_1 = 0;
int nb_max_row_tRowGenerator_1 = 1;


class tRowGenerator_1Randomizer {
	public java.util.Date getRandomdatainicio() {
		
		return TalendDate.getCurrentDate();
		
	}
}
	tRowGenerator_1Randomizer randtRowGenerator_1 = new tRowGenerator_1Randomizer();
	
	for (int itRowGenerator_1=0; itRowGenerator_1<nb_max_row_tRowGenerator_1 ;itRowGenerator_1++) {
		row4.datainicio = randtRowGenerator_1.getRandomdatainicio();
		nb_line_tRowGenerator_1++;
		

 



/**
 * [tRowGenerator_1 begin ] stop
 */
	
	/**
	 * [tRowGenerator_1 main ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 


	tos_count_tRowGenerator_1++;

/**
 * [tRowGenerator_1 main ] stop
 */
	
	/**
	 * [tRowGenerator_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_1 = false;
		boolean mainRowRejected_tMap_1 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

insert_log = null;


// # Output table : 'insert_log'
insert_log_tmp.nm_programa = context.programa;
insert_log_tmp.data_inicio_execucao = row4.datainicio ;
insert_log_tmp.data_termino_execucao = null;
insert_log_tmp.mensagem = null;
insert_log_tmp.uuid = java.util.UUID.randomUUID().toString();;
insert_log_tmp.versao = context.versao;
insert_log = insert_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "insert_log"
if(insert_log != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"insert_log"
						
						);
					}
					



            row5 = null;
        whetherReject_tDBOutput_1 = false;
                    if(insert_log.nm_programa == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, insert_log.nm_programa);
}

                    if(insert_log.data_inicio_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(2, new java.sql.Timestamp(insert_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.data_termino_execucao != null) {
pstmt_tDBOutput_1.setTimestamp(3, new java.sql.Timestamp(insert_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_1.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(insert_log.mensagem == null) {
pstmt_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(4, insert_log.mensagem);
}

                    if(insert_log.uuid == null) {
pstmt_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(5, insert_log.uuid);
}

                    if(insert_log.versao == null) {
pstmt_tDBOutput_1.setNull(6, java.sql.Types.INTEGER);
} else {pstmt_tDBOutput_1.setInt(6, insert_log.versao);
}

			
            try {
                nb_line_tDBOutput_1++;
				
                int processedCount_tDBOutput_1 = pstmt_tDBOutput_1.executeUpdate();
                insertedCount_tDBOutput_1 += processedCount_tDBOutput_1;
                rowsToCommitCount_tDBOutput_1 += processedCount_tDBOutput_1;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_1_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_1 = true;
                        System.err.print(e.getMessage());
            }
            if(!whetherReject_tDBOutput_1) {
                            row5 = new row5Struct();
                                row5.nm_programa = insert_log.nm_programa;
                                row5.data_inicio_execucao = insert_log.data_inicio_execucao;
                                row5.data_termino_execucao = insert_log.data_termino_execucao;
                                row5.mensagem = insert_log.mensagem;
                                row5.uuid = insert_log.uuid;
                                row5.versao = insert_log.versao;
            }

 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
// Start of branch "row5"
if(row5 != null) { 



	
	/**
	 * [tHashOutput_1 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row5"
						
						);
					}
					



    
		row5Struct oneRow_tHashOutput_1 = new row5Struct();
				
					oneRow_tHashOutput_1.nm_programa = row5.nm_programa;
					oneRow_tHashOutput_1.data_inicio_execucao = row5.data_inicio_execucao;
					oneRow_tHashOutput_1.data_termino_execucao = row5.data_termino_execucao;
					oneRow_tHashOutput_1.mensagem = row5.mensagem;
					oneRow_tHashOutput_1.uuid = row5.uuid;
					oneRow_tHashOutput_1.versao = row5.versao;
		
        tHashFile_tHashOutput_1.put(oneRow_tHashOutput_1);
        nb_line_tHashOutput_1 ++;

 


	tos_count_tHashOutput_1++;

/**
 * [tHashOutput_1 main ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 process_data_end ] stop
 */

} // End of branch "row5"




	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "insert_log"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tRowGenerator_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 process_data_end ] stop
 */
	
	/**
	 * [tRowGenerator_1 end ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

}
globalMap.put("tRowGenerator_1_NB_LINE",nb_line_tRowGenerator_1);

 

ok_Hash.put("tRowGenerator_1", true);
end_Hash.put("tRowGenerator_1", System.currentTimeMillis());




/**
 * [tRowGenerator_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



        if(pstmt_tDBOutput_1 != null) {
        		
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"insert_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());




/**
 * [tDBOutput_1 end ] stop
 */

	
	/**
	 * [tHashOutput_1 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	
globalMap.put("tHashOutput_1_NB_LINE", nb_line_tHashOutput_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tHashOutput_1", true);
end_Hash.put("tHashOutput_1", System.currentTimeMillis());




/**
 * [tHashOutput_1 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tRowGenerator_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk8", 0, "ok");
								} 
							
							tDBInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tRowGenerator_1 finally ] start
	 */

	

	
	
	currentComponent="tRowGenerator_1";
	
	

 



/**
 * [tRowGenerator_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";
	
	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */

	
	/**
	 * [tHashOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_1";
	
	

 



/**
 * [tHashOutput_1 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", 1);
	}
	


public static class _produto_Struct implements routines.system.IPersistableRow<_produto_Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(_produto_Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();

		row22Struct row22 = new row22Struct();

			row23Struct row23 = new row23Struct();
row24Struct row24 = new row24Struct();
_produto_Struct _produto_ = new _produto_Struct();






	
	/**
	 * [tHashOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_4", false);
		start_Hash.put("tHashOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"_produto_");
					}
				
		int tos_count_tHashOutput_4 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<_produto_Struct> tHashFile_tHashOutput_4 = null;
		String hashKey_tHashOutput_4 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_4";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_4)){
			    if(mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4) == null){
	      		    mf_tHashOutput_4.getResourceMap().put(hashKey_tHashOutput_4, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<_produto_Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }else{
			    	tHashFile_tHashOutput_4 = mf_tHashOutput_4.getResourceMap().get(hashKey_tHashOutput_4);
			    }
			}
        int nb_line_tHashOutput_4 = 0;

 



/**
 * [tHashOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
_produto_Struct _produto__tmp = new _produto_Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tUniqRow_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_3", false);
		start_Hash.put("tUniqRow_3", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tUniqRow_3 = 0;
		

	
		class KeyStruct_tUniqRow_3 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String cd_produto;
					String dc_produto;
					String cd_marca;
					String dc_marca;
					String nm_fornecedor;
					String codigo_fabrica;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
								
								result = prime * result + ((this.dc_produto == null) ? 0 : this.dc_produto.hashCode());
								
								result = prime * result + ((this.cd_marca == null) ? 0 : this.cd_marca.hashCode());
								
								result = prime * result + ((this.dc_marca == null) ? 0 : this.dc_marca.hashCode());
								
								result = prime * result + ((this.nm_fornecedor == null) ? 0 : this.nm_fornecedor.hashCode());
								
								result = prime * result + ((this.codigo_fabrica == null) ? 0 : this.codigo_fabrica.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_3 other = (KeyStruct_tUniqRow_3) obj;
				
									if (this.cd_produto == null) {
										if (other.cd_produto != null) 
											return false;
								
									} else if (!this.cd_produto.equals(other.cd_produto))
								 
										return false;
								
									if (this.dc_produto == null) {
										if (other.dc_produto != null) 
											return false;
								
									} else if (!this.dc_produto.equals(other.dc_produto))
								 
										return false;
								
									if (this.cd_marca == null) {
										if (other.cd_marca != null) 
											return false;
								
									} else if (!this.cd_marca.equals(other.cd_marca))
								 
										return false;
								
									if (this.dc_marca == null) {
										if (other.dc_marca != null) 
											return false;
								
									} else if (!this.dc_marca.equals(other.dc_marca))
								 
										return false;
								
									if (this.nm_fornecedor == null) {
										if (other.nm_fornecedor != null) 
											return false;
								
									} else if (!this.nm_fornecedor.equals(other.nm_fornecedor))
								 
										return false;
								
									if (this.codigo_fabrica == null) {
										if (other.codigo_fabrica != null) 
											return false;
								
									} else if (!this.codigo_fabrica.equals(other.codigo_fabrica))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_3 = 0;
int nb_duplicates_tUniqRow_3 = 0;
KeyStruct_tUniqRow_3 finder_tUniqRow_3 = new KeyStruct_tUniqRow_3();
java.util.Set<KeyStruct_tUniqRow_3> keystUniqRow_3 = new java.util.HashSet<KeyStruct_tUniqRow_3>(); 

 



/**
 * [tUniqRow_3 begin ] stop
 */



	
	/**
	 * [tUnite_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tUnite_1", false);
		start_Hash.put("tUnite_1", System.currentTimeMillis());
		
	
	currentComponent="tUnite_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9","row22");
					}
				
		int tos_count_tUnite_1 = 0;
		

int nb_line_tUnite_1 = 0;

 



/**
 * [tUnite_1 begin ] stop
 */
	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";
	
	
		int tos_count_tDBInput_4 = 0;
		
	
    
	
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				conn_tDBInput_4 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "\nselect distinct prod.cd_produto,prod.dc_produto , prod.cd_marca , prod.dc_marca , forn.nm_fornecedor,prod.codigo_fabr"
+"ica\n  from dw_t_produto prod\ninner join dw_t_fornecedor forn on forn.cd_fornecedor = prod.cd_fornecedor\nwhere UPPER(p"
+"rod.dc_marca) in (\n'BEL',\n'BELFIX',\n'DRYKO',\n'EINHELL',\n'FERRARI',\n'MUNDIAL PRIME',\n'MY HEALTH',\n'MY PLACE',\n'N"
+"ORTON',\n'PDR PRO',\n'TEKNA',\n'TOYAMA',\n'V8 BRASIL',\n'V8',\n'ZMAX',\n'PDR',\n'LDR2',\n'GAMMA',\n'LEPONO',\n'LEPONO ZS"
+" POWER',\n'LEPONO DONGYIN',\n'PHILCO',\n'BRITANIA',\n'PDR PRO',\n'DRYKO')\n";
		    

		    globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);

		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row9.cd_produto = null;
							} else {
	                         		
        	row9.cd_produto = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row9.dc_produto = null;
							} else {
	                         		
        	row9.dc_produto = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row9.cd_marca = null;
							} else {
	                         		
        	row9.cd_marca = routines.system.JDBCUtil.getString(rs_tDBInput_4, 3, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row9.dc_marca = null;
							} else {
	                         		
        	row9.dc_marca = routines.system.JDBCUtil.getString(rs_tDBInput_4, 4, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row9.nm_fornecedor = null;
							} else {
	                         		
        	row9.nm_fornecedor = routines.system.JDBCUtil.getString(rs_tDBInput_4, 5, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row9.codigo_fabrica = null;
							} else {
	                         		
        	row9.codigo_fabrica = routines.system.JDBCUtil.getString(rs_tDBInput_4, 6, false);
		                    }
					


 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"row9"
									
							);
						}
						
//////////
 

// for output
			row23 = new row23Struct();
								
			row23.cd_produto = row9.cd_produto;								
			row23.dc_produto = row9.dc_produto;								
			row23.cd_marca = row9.cd_marca;								
			row23.dc_marca = row9.dc_marca;								
			row23.nm_fornecedor = row9.nm_fornecedor;								
			row23.codigo_fabrica = row9.codigo_fabrica;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_3 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					
row24 = null;			
if(row23.cd_produto == null){
	finder_tUniqRow_3.cd_produto = null;
}else{
	finder_tUniqRow_3.cd_produto = row23.cd_produto.toLowerCase();
}
if(row23.dc_produto == null){
	finder_tUniqRow_3.dc_produto = null;
}else{
	finder_tUniqRow_3.dc_produto = row23.dc_produto.toLowerCase();
}
if(row23.cd_marca == null){
	finder_tUniqRow_3.cd_marca = null;
}else{
	finder_tUniqRow_3.cd_marca = row23.cd_marca.toLowerCase();
}
if(row23.dc_marca == null){
	finder_tUniqRow_3.dc_marca = null;
}else{
	finder_tUniqRow_3.dc_marca = row23.dc_marca.toLowerCase();
}
if(row23.nm_fornecedor == null){
	finder_tUniqRow_3.nm_fornecedor = null;
}else{
	finder_tUniqRow_3.nm_fornecedor = row23.nm_fornecedor.toLowerCase();
}
if(row23.codigo_fabrica == null){
	finder_tUniqRow_3.codigo_fabrica = null;
}else{
	finder_tUniqRow_3.codigo_fabrica = row23.codigo_fabrica.toLowerCase();
}	
finder_tUniqRow_3.hashCodeDirty = true;
if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
		KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

		
if(row23.cd_produto == null){
	new_tUniqRow_3.cd_produto = null;
}else{
	new_tUniqRow_3.cd_produto = row23.cd_produto.toLowerCase();
}
if(row23.dc_produto == null){
	new_tUniqRow_3.dc_produto = null;
}else{
	new_tUniqRow_3.dc_produto = row23.dc_produto.toLowerCase();
}
if(row23.cd_marca == null){
	new_tUniqRow_3.cd_marca = null;
}else{
	new_tUniqRow_3.cd_marca = row23.cd_marca.toLowerCase();
}
if(row23.dc_marca == null){
	new_tUniqRow_3.dc_marca = null;
}else{
	new_tUniqRow_3.dc_marca = row23.dc_marca.toLowerCase();
}
if(row23.nm_fornecedor == null){
	new_tUniqRow_3.nm_fornecedor = null;
}else{
	new_tUniqRow_3.nm_fornecedor = row23.nm_fornecedor.toLowerCase();
}
if(row23.codigo_fabrica == null){
	new_tUniqRow_3.codigo_fabrica = null;
}else{
	new_tUniqRow_3.codigo_fabrica = row23.codigo_fabrica.toLowerCase();
}
		
		keystUniqRow_3.add(new_tUniqRow_3);if(row24 == null){ 
	
	row24 = new row24Struct();
}row24.cd_produto = row23.cd_produto;			row24.dc_produto = row23.dc_produto;			row24.cd_marca = row23.cd_marca;			row24.dc_marca = row23.dc_marca;			row24.nm_fornecedor = row23.nm_fornecedor;			row24.codigo_fabrica = row23.codigo_fabrica;					
		nb_uniques_tUniqRow_3++;
	} else {
	  nb_duplicates_tUniqRow_3++;
	}

 


	tos_count_tUniqRow_3++;

/**
 * [tUniqRow_3 main ] stop
 */
	
	/**
	 * [tUniqRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

_produto_ = null;


// # Output table : '_produto_'
_produto__tmp.cd_produto = row24.cd_produto;
_produto__tmp.dc_produto = row24.dc_produto;
_produto__tmp.cd_marca = row24.cd_marca;
_produto__tmp.dc_marca = row24.dc_marca;
_produto__tmp.nm_fornecedor = row24.nm_fornecedor;
_produto__tmp.codigo_fabrica = row24.codigo_fabrica ;
_produto_ = _produto__tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "_produto_"
if(_produto_ != null) { 



	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"_produto_"
						
						);
					}
					



    
		_produto_Struct oneRow_tHashOutput_4 = new _produto_Struct();
				
					oneRow_tHashOutput_4.cd_produto = _produto_.cd_produto;
					oneRow_tHashOutput_4.dc_produto = _produto_.dc_produto;
					oneRow_tHashOutput_4.cd_marca = _produto_.cd_marca;
					oneRow_tHashOutput_4.dc_marca = _produto_.dc_marca;
					oneRow_tHashOutput_4.nm_fornecedor = _produto_.nm_fornecedor;
					oneRow_tHashOutput_4.codigo_fabrica = _produto_.codigo_fabrica;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */

} // End of branch "_produto_"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tUniqRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
}
globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */
	
	/**
	 * [tDBInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_8", false);
		start_Hash.put("tDBInput_8", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_8";
	
	
		int tos_count_tDBInput_8 = 0;
		
	
    
	
		    int nb_line_tDBInput_8 = 0;
		    java.sql.Connection conn_tDBInput_8 = null;
				conn_tDBInput_8 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_8 = conn_tDBInput_8.createStatement();

		    String dbquery_tDBInput_8 = "\nselect\n	distinct prod.cd_produto,\n	prod.dc_produto ,\n	prod.cd_marca ,\n	prod.dc_marca ,\n	forn.nm_fornecedor,\n   "
+" prod.codigo_fabrica\nfrom\n	dw_t_produto prod\ninner join dw_t_fornecedor forn on\n	forn.cd_fornecedor = prod.cd_fornec"
+"edor\nwhere\n	upper(forn.nm_fornecedor) in ('BERLINER DO BRASIL MOTORES LTDA', \n	                              'MENEGOT"
+"TI INDUSTRIA METALURGICA LTDA', \n								  'MENEGOTTI INDUSTRIAS METALURGICAS LTDA', \n								  'MENEGOTTI IND. METALU"
+"RGICAS LTDA EM REC.JUD.', \n								  'BONISENNIA MECANICA DE PECAS INDUSTRIAIS EIRELI', \n								  'AEROFLEX IND. DE A"
+"EROSOL LTDA', \n								  'AEROFLEX INDUSTRIA DE AEROSOL LTDA',\n                                  'GAMMA SULAMERICANA C"
+"OM IMP. EXP. E DISTRIB. LTDA',\n								  'CALFLEX COMERCIO DE CALCADOS LTDA',\n								  'BRITANIA ELETRODOMESTICOS SA'"
+",\n'BERLINER DO BRASIL MOTORES LTDA',\n'BONISENNIA MECANICA DE PECAS INDUSTRIAIS EIRELI',\n'CALFLEX COMERCIO DE CALCADOS"
+" LTDA',\n'MP INDUSTRIA E COMERCIO DE EQUIPAMENTOS EM INOX E ALUMINIO E',\n'TOYAMA DO BRASIL MAQUINAS LTDA.',\n'TOYAMA DO"
+" BRASIL MAQUINAS LTDA',\n'INDUSTRIA DRYKO LTDA');\n";
		    

		    globalMap.put("tDBInput_8_QUERY",dbquery_tDBInput_8);

		    java.sql.ResultSet rs_tDBInput_8 = null;

		    try {
		    	rs_tDBInput_8 = stmt_tDBInput_8.executeQuery(dbquery_tDBInput_8);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_8 = rs_tDBInput_8.getMetaData();
		    	int colQtyInRs_tDBInput_8 = rsmd_tDBInput_8.getColumnCount();

		    String tmpContent_tDBInput_8 = null;
		    
		    
		    while (rs_tDBInput_8.next()) {
		        nb_line_tDBInput_8++;
		        
							if(colQtyInRs_tDBInput_8 < 1) {
								row22.cd_produto = null;
							} else {
	                         		
        	row22.cd_produto = routines.system.JDBCUtil.getString(rs_tDBInput_8, 1, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 2) {
								row22.dc_produto = null;
							} else {
	                         		
        	row22.dc_produto = routines.system.JDBCUtil.getString(rs_tDBInput_8, 2, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 3) {
								row22.cd_marca = null;
							} else {
	                         		
        	row22.cd_marca = routines.system.JDBCUtil.getString(rs_tDBInput_8, 3, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 4) {
								row22.dc_marca = null;
							} else {
	                         		
        	row22.dc_marca = routines.system.JDBCUtil.getString(rs_tDBInput_8, 4, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 5) {
								row22.nm_fornecedor = null;
							} else {
	                         		
        	row22.nm_fornecedor = routines.system.JDBCUtil.getString(rs_tDBInput_8, 5, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 6) {
								row22.codigo_fabrica = null;
							} else {
	                         		
        	row22.codigo_fabrica = routines.system.JDBCUtil.getString(rs_tDBInput_8, 6, false);
		                    }
					


 



/**
 * [tDBInput_8 begin ] stop
 */
	
	/**
	 * [tDBInput_8 main ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 


	tos_count_tDBInput_8++;

/**
 * [tDBInput_8 main ] stop
 */
	
	/**
	 * [tDBInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tUnite_1 main ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	
						if(execStat){
							runStat.updateStatOnConnection(iterateId,1,1
								
									,"row22"
									
							);
						}
						
//////////
 

// for output
			row23 = new row23Struct();
								
			row23.cd_produto = row22.cd_produto;								
			row23.dc_produto = row22.dc_produto;								
			row23.cd_marca = row22.cd_marca;								
			row23.dc_marca = row22.dc_marca;								
			row23.nm_fornecedor = row22.nm_fornecedor;								
			row23.codigo_fabrica = row22.codigo_fabrica;			

			nb_line_tUnite_1++;

//////////
 


	tos_count_tUnite_1++;

/**
 * [tUnite_1 main ] stop
 */
	
	/**
	 * [tUnite_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_3 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row23"
						
						);
					}
					
row24 = null;			
if(row23.cd_produto == null){
	finder_tUniqRow_3.cd_produto = null;
}else{
	finder_tUniqRow_3.cd_produto = row23.cd_produto.toLowerCase();
}
if(row23.dc_produto == null){
	finder_tUniqRow_3.dc_produto = null;
}else{
	finder_tUniqRow_3.dc_produto = row23.dc_produto.toLowerCase();
}
if(row23.cd_marca == null){
	finder_tUniqRow_3.cd_marca = null;
}else{
	finder_tUniqRow_3.cd_marca = row23.cd_marca.toLowerCase();
}
if(row23.dc_marca == null){
	finder_tUniqRow_3.dc_marca = null;
}else{
	finder_tUniqRow_3.dc_marca = row23.dc_marca.toLowerCase();
}
if(row23.nm_fornecedor == null){
	finder_tUniqRow_3.nm_fornecedor = null;
}else{
	finder_tUniqRow_3.nm_fornecedor = row23.nm_fornecedor.toLowerCase();
}
if(row23.codigo_fabrica == null){
	finder_tUniqRow_3.codigo_fabrica = null;
}else{
	finder_tUniqRow_3.codigo_fabrica = row23.codigo_fabrica.toLowerCase();
}	
finder_tUniqRow_3.hashCodeDirty = true;
if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
		KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

		
if(row23.cd_produto == null){
	new_tUniqRow_3.cd_produto = null;
}else{
	new_tUniqRow_3.cd_produto = row23.cd_produto.toLowerCase();
}
if(row23.dc_produto == null){
	new_tUniqRow_3.dc_produto = null;
}else{
	new_tUniqRow_3.dc_produto = row23.dc_produto.toLowerCase();
}
if(row23.cd_marca == null){
	new_tUniqRow_3.cd_marca = null;
}else{
	new_tUniqRow_3.cd_marca = row23.cd_marca.toLowerCase();
}
if(row23.dc_marca == null){
	new_tUniqRow_3.dc_marca = null;
}else{
	new_tUniqRow_3.dc_marca = row23.dc_marca.toLowerCase();
}
if(row23.nm_fornecedor == null){
	new_tUniqRow_3.nm_fornecedor = null;
}else{
	new_tUniqRow_3.nm_fornecedor = row23.nm_fornecedor.toLowerCase();
}
if(row23.codigo_fabrica == null){
	new_tUniqRow_3.codigo_fabrica = null;
}else{
	new_tUniqRow_3.codigo_fabrica = row23.codigo_fabrica.toLowerCase();
}
		
		keystUniqRow_3.add(new_tUniqRow_3);if(row24 == null){ 
	
	row24 = new row24Struct();
}row24.cd_produto = row23.cd_produto;			row24.dc_produto = row23.dc_produto;			row24.cd_marca = row23.cd_marca;			row24.dc_marca = row23.dc_marca;			row24.nm_fornecedor = row23.nm_fornecedor;			row24.codigo_fabrica = row23.codigo_fabrica;					
		nb_uniques_tUniqRow_3++;
	} else {
	  nb_duplicates_tUniqRow_3++;
	}

 


	tos_count_tUniqRow_3++;

/**
 * [tUniqRow_3 main ] stop
 */
	
	/**
	 * [tUniqRow_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_begin ] stop
 */
// Start of branch "row24"
if(row24 != null) { 



	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row24"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_6 = false;
		boolean mainRowRejected_tMap_6 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

_produto_ = null;


// # Output table : '_produto_'
_produto__tmp.cd_produto = row24.cd_produto;
_produto__tmp.dc_produto = row24.dc_produto;
_produto__tmp.cd_marca = row24.cd_marca;
_produto__tmp.dc_marca = row24.dc_marca;
_produto__tmp.nm_fornecedor = row24.nm_fornecedor;
_produto__tmp.codigo_fabrica = row24.codigo_fabrica ;
_produto_ = _produto__tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "_produto_"
if(_produto_ != null) { 



	
	/**
	 * [tHashOutput_4 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"_produto_"
						
						);
					}
					



    
		_produto_Struct oneRow_tHashOutput_4 = new _produto_Struct();
				
					oneRow_tHashOutput_4.cd_produto = _produto_.cd_produto;
					oneRow_tHashOutput_4.dc_produto = _produto_.dc_produto;
					oneRow_tHashOutput_4.cd_marca = _produto_.cd_marca;
					oneRow_tHashOutput_4.dc_marca = _produto_.dc_marca;
					oneRow_tHashOutput_4.nm_fornecedor = _produto_.nm_fornecedor;
					oneRow_tHashOutput_4.codigo_fabrica = _produto_.codigo_fabrica;
		
        tHashFile_tHashOutput_4.put(oneRow_tHashOutput_4);
        nb_line_tHashOutput_4 ++;

 


	tos_count_tHashOutput_4++;

/**
 * [tHashOutput_4 main ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 process_data_end ] stop
 */

} // End of branch "_produto_"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 process_data_end ] stop
 */

} // End of branch "row24"




	
	/**
	 * [tUniqRow_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 process_data_end ] stop
 */



	
	/**
	 * [tUnite_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_8 end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

	}
}finally{
	if (rs_tDBInput_8 != null) {
		rs_tDBInput_8.close();
	}
	if (stmt_tDBInput_8 != null) {
		stmt_tDBInput_8.close();
	}
}
globalMap.put("tDBInput_8_NB_LINE",nb_line_tDBInput_8);
 

ok_Hash.put("tDBInput_8", true);
end_Hash.put("tDBInput_8", System.currentTimeMillis());




/**
 * [tDBInput_8 end ] stop
 */
	
	/**
	 * [tUnite_1 end ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

globalMap.put("tUnite_1_NB_LINE", nb_line_tUnite_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9","row22");
			  	}
			  	
 

ok_Hash.put("tUnite_1", true);
end_Hash.put("tUnite_1", System.currentTimeMillis());




/**
 * [tUnite_1 end ] stop
 */

	
	/**
	 * [tUniqRow_3 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

globalMap.put("tUniqRow_3_NB_UNIQUES",nb_uniques_tUniqRow_3);
globalMap.put("tUniqRow_3_NB_DUPLICATES",nb_duplicates_tUniqRow_3);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tUniqRow_3", true);
end_Hash.put("tUniqRow_3", System.currentTimeMillis());




/**
 * [tUniqRow_3 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tHashOutput_4 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	
globalMap.put("tHashOutput_4_NB_LINE", nb_line_tHashOutput_4);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"_produto_");
			  	}
			  	
 

ok_Hash.put("tHashOutput_4", true);
end_Hash.put("tHashOutput_4", System.currentTimeMillis());




/**
 * [tHashOutput_4 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk17", 0, "ok");
								} 
							
							tDBInput_15Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";
	
	

 



/**
 * [tDBInput_4 finally ] stop
 */
	
	/**
	 * [tDBInput_8 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_8";
	
	

 



/**
 * [tDBInput_8 finally ] stop
 */
	
	/**
	 * [tUnite_1 finally ] start
	 */

	

	
	
	currentComponent="tUnite_1";
	
	

 



/**
 * [tUnite_1 finally ] stop
 */

	
	/**
	 * [tUniqRow_3 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_3";
	
	

 



/**
 * [tUniqRow_3 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";
	
	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tHashOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_4";
	
	

 



/**
 * [tHashOutput_4 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row40Struct implements routines.system.IPersistableRow<row40Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String ITE_CODEMP;

				public String getITE_CODEMP () {
					return this.ITE_CODEMP;
				}

				public Boolean ITE_CODEMPIsNullable(){
				    return true;
				}
				public Boolean ITE_CODEMPIsKey(){
				    return false;
				}
				public Integer ITE_CODEMPLength(){
				    return null;
				}
				public Integer ITE_CODEMPPrecision(){
				    return null;
				}
				public String ITE_CODEMPDefault(){
				
					return null;
				
				}
				public String ITE_CODEMPComment(){
				
				    return "";
				
				}
				public String ITE_CODEMPPattern(){
				
					return "";
				
				}
				public String ITE_CODEMPOriginalDbColumnName(){
				
					return "ITE_CODEMP";
				
				}

				
			    public String ITE_CODITE;

				public String getITE_CODITE () {
					return this.ITE_CODITE;
				}

				public Boolean ITE_CODITEIsNullable(){
				    return true;
				}
				public Boolean ITE_CODITEIsKey(){
				    return false;
				}
				public Integer ITE_CODITELength(){
				    return null;
				}
				public Integer ITE_CODITEPrecision(){
				    return null;
				}
				public String ITE_CODITEDefault(){
				
					return null;
				
				}
				public String ITE_CODITEComment(){
				
				    return "";
				
				}
				public String ITE_CODITEPattern(){
				
					return "";
				
				}
				public String ITE_CODITEOriginalDbColumnName(){
				
					return "ITE_CODITE";
				
				}

				
			    public BigDecimal ITE_IPIENT;

				public BigDecimal getITE_IPIENT () {
					return this.ITE_IPIENT;
				}

				public Boolean ITE_IPIENTIsNullable(){
				    return true;
				}
				public Boolean ITE_IPIENTIsKey(){
				    return false;
				}
				public Integer ITE_IPIENTLength(){
				    return 12;
				}
				public Integer ITE_IPIENTPrecision(){
				    return 2;
				}
				public String ITE_IPIENTDefault(){
				
					return null;
				
				}
				public String ITE_IPIENTComment(){
				
				    return "";
				
				}
				public String ITE_IPIENTPattern(){
				
					return "";
				
				}
				public String ITE_IPIENTOriginalDbColumnName(){
				
					return "ITE_IPIENT";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.ITE_CODEMP = readString(dis);
					
					this.ITE_CODITE = readString(dis);
					
						this.ITE_IPIENT = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.ITE_CODEMP = readString(dis);
					
					this.ITE_CODITE = readString(dis);
					
						this.ITE_IPIENT = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ITE_CODEMP,dos);
					
					// String
				
						writeString(this.ITE_CODITE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_IPIENT);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ITE_CODEMP,dos);
					
					// String
				
						writeString(this.ITE_CODITE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_IPIENT);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITE_CODEMP="+ITE_CODEMP);
		sb.append(",ITE_CODITE="+ITE_CODITE);
		sb.append(",ITE_IPIENT="+String.valueOf(ITE_IPIENT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row40Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String ITE_CODEMP;

				public String getITE_CODEMP () {
					return this.ITE_CODEMP;
				}

				public Boolean ITE_CODEMPIsNullable(){
				    return true;
				}
				public Boolean ITE_CODEMPIsKey(){
				    return false;
				}
				public Integer ITE_CODEMPLength(){
				    return null;
				}
				public Integer ITE_CODEMPPrecision(){
				    return null;
				}
				public String ITE_CODEMPDefault(){
				
					return null;
				
				}
				public String ITE_CODEMPComment(){
				
				    return "";
				
				}
				public String ITE_CODEMPPattern(){
				
					return "";
				
				}
				public String ITE_CODEMPOriginalDbColumnName(){
				
					return "ITE_CODEMP";
				
				}

				
			    public String ITE_CODITE;

				public String getITE_CODITE () {
					return this.ITE_CODITE;
				}

				public Boolean ITE_CODITEIsNullable(){
				    return true;
				}
				public Boolean ITE_CODITEIsKey(){
				    return false;
				}
				public Integer ITE_CODITELength(){
				    return null;
				}
				public Integer ITE_CODITEPrecision(){
				    return null;
				}
				public String ITE_CODITEDefault(){
				
					return null;
				
				}
				public String ITE_CODITEComment(){
				
				    return "";
				
				}
				public String ITE_CODITEPattern(){
				
					return "";
				
				}
				public String ITE_CODITEOriginalDbColumnName(){
				
					return "ITE_CODITE";
				
				}

				
			    public BigDecimal ITE_IPIENT;

				public BigDecimal getITE_IPIENT () {
					return this.ITE_IPIENT;
				}

				public Boolean ITE_IPIENTIsNullable(){
				    return true;
				}
				public Boolean ITE_IPIENTIsKey(){
				    return false;
				}
				public Integer ITE_IPIENTLength(){
				    return 12;
				}
				public Integer ITE_IPIENTPrecision(){
				    return 2;
				}
				public String ITE_IPIENTDefault(){
				
					return null;
				
				}
				public String ITE_IPIENTComment(){
				
				    return "";
				
				}
				public String ITE_IPIENTPattern(){
				
					return "";
				
				}
				public String ITE_IPIENTOriginalDbColumnName(){
				
					return "ITE_IPIENT";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.ITE_CODEMP = readString(dis);
					
					this.ITE_CODITE = readString(dis);
					
						this.ITE_IPIENT = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.ITE_CODEMP = readString(dis);
					
					this.ITE_CODITE = readString(dis);
					
						this.ITE_IPIENT = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ITE_CODEMP,dos);
					
					// String
				
						writeString(this.ITE_CODITE,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.ITE_IPIENT);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ITE_CODEMP,dos);
					
					// String
				
						writeString(this.ITE_CODITE,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.ITE_IPIENT);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITE_CODEMP="+ITE_CODEMP);
		sb.append(",ITE_CODITE="+ITE_CODITE);
		sb.append(",ITE_IPIENT="+String.valueOf(ITE_IPIENT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row39Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row39Struct row39 = new row39Struct();
row40Struct row40 = new row40Struct();





	
	/**
	 * [tHashOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_16", false);
		start_Hash.put("tHashOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row40");
					}
				
		int tos_count_tHashOutput_16 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row40Struct> tHashFile_tHashOutput_16 = null;
		String hashKey_tHashOutput_16 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_16";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_16)){
			    if(mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16) == null){
	      		    mf_tHashOutput_16.getResourceMap().put(hashKey_tHashOutput_16, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row40Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }else{
			    	tHashFile_tHashOutput_16 = mf_tHashOutput_16.getResourceMap().get(hashKey_tHashOutput_16);
			    }
			}
        int nb_line_tHashOutput_16 = 0;

 



/**
 * [tHashOutput_16 begin ] stop
 */



	
	/**
	 * [tUniqRow_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_4", false);
		start_Hash.put("tUniqRow_4", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row39");
					}
				
		int tos_count_tUniqRow_4 = 0;
		

	
		class KeyStruct_tUniqRow_4 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String ITE_CODEMP;
					String ITE_CODITE;
					BigDecimal ITE_IPIENT;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.ITE_CODEMP == null) ? 0 : this.ITE_CODEMP.hashCode());
								
								result = prime * result + ((this.ITE_CODITE == null) ? 0 : this.ITE_CODITE.hashCode());
								
								result = prime * result + ((this.ITE_IPIENT == null) ? 0 : this.ITE_IPIENT.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_4 other = (KeyStruct_tUniqRow_4) obj;
				
									if (this.ITE_CODEMP == null) {
										if (other.ITE_CODEMP != null) 
											return false;
								
									} else if (!this.ITE_CODEMP.equals(other.ITE_CODEMP))
								 
										return false;
								
									if (this.ITE_CODITE == null) {
										if (other.ITE_CODITE != null) 
											return false;
								
									} else if (!this.ITE_CODITE.equals(other.ITE_CODITE))
								 
										return false;
								
									if (this.ITE_IPIENT == null) {
										if (other.ITE_IPIENT != null) 
											return false;
								
									} else if (!this.ITE_IPIENT.equals(other.ITE_IPIENT))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_4 = 0;
int nb_duplicates_tUniqRow_4 = 0;
KeyStruct_tUniqRow_4 finder_tUniqRow_4 = new KeyStruct_tUniqRow_4();
java.util.Set<KeyStruct_tUniqRow_4> keystUniqRow_4 = new java.util.HashSet<KeyStruct_tUniqRow_4>(); 

 



/**
 * [tUniqRow_4 begin ] stop
 */



	
	/**
	 * [tDBInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_15", false);
		start_Hash.put("tDBInput_15", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_15";
	
	
		int tos_count_tDBInput_15 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_15 = java.util.Calendar.getInstance();
		    calendar_tDBInput_15.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_15 = calendar_tDBInput_15.getTime();
		    int nb_line_tDBInput_15 = 0;
		    java.sql.Connection conn_tDBInput_15 = null;
				conn_tDBInput_15 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_15 = conn_tDBInput_15.createStatement();

		    String dbquery_tDBInput_15 = "\nselect distinct ITE_CODEMP,\n                ITE_CODITE,\n                ITE_IPIENT \n from ITEGER\nwhere ITE_CODEMP"
+" in ('001','201','010') \n";
		    

		    globalMap.put("tDBInput_15_QUERY",dbquery_tDBInput_15);

		    java.sql.ResultSet rs_tDBInput_15 = null;

		    try {
		    	rs_tDBInput_15 = stmt_tDBInput_15.executeQuery(dbquery_tDBInput_15);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_15 = rs_tDBInput_15.getMetaData();
		    	int colQtyInRs_tDBInput_15 = rsmd_tDBInput_15.getColumnCount();

		    String tmpContent_tDBInput_15 = null;
		    
		    
		    while (rs_tDBInput_15.next()) {
		        nb_line_tDBInput_15++;
		        
							if(colQtyInRs_tDBInput_15 < 1) {
								row39.ITE_CODEMP = null;
							} else {
	                         		
        	row39.ITE_CODEMP = routines.system.JDBCUtil.getString(rs_tDBInput_15, 1, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 2) {
								row39.ITE_CODITE = null;
							} else {
	                         		
        	row39.ITE_CODITE = routines.system.JDBCUtil.getString(rs_tDBInput_15, 2, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 3) {
								row39.ITE_IPIENT = null;
							} else {
		                          
            row39.ITE_IPIENT = rs_tDBInput_15.getBigDecimal(3);
            if(rs_tDBInput_15.wasNull()){
                    row39.ITE_IPIENT = null;
            }
		                    }
					

 



/**
 * [tDBInput_15 begin ] stop
 */
	
	/**
	 * [tDBInput_15 main ] start
	 */

	

	
	
	currentComponent="tDBInput_15";
	
	

 


	tos_count_tDBInput_15++;

/**
 * [tDBInput_15 main ] stop
 */
	
	/**
	 * [tDBInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_15";
	
	

 



/**
 * [tDBInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tUniqRow_4 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row39"
						
						);
					}
					
row40 = null;			
if(row39.ITE_CODEMP == null){
	finder_tUniqRow_4.ITE_CODEMP = null;
}else{
	finder_tUniqRow_4.ITE_CODEMP = row39.ITE_CODEMP.toLowerCase();
}
if(row39.ITE_CODITE == null){
	finder_tUniqRow_4.ITE_CODITE = null;
}else{
	finder_tUniqRow_4.ITE_CODITE = row39.ITE_CODITE.toLowerCase();
}
finder_tUniqRow_4.ITE_IPIENT = row39.ITE_IPIENT;	
finder_tUniqRow_4.hashCodeDirty = true;
if (!keystUniqRow_4.contains(finder_tUniqRow_4)) {
		KeyStruct_tUniqRow_4 new_tUniqRow_4 = new KeyStruct_tUniqRow_4();

		
if(row39.ITE_CODEMP == null){
	new_tUniqRow_4.ITE_CODEMP = null;
}else{
	new_tUniqRow_4.ITE_CODEMP = row39.ITE_CODEMP.toLowerCase();
}
if(row39.ITE_CODITE == null){
	new_tUniqRow_4.ITE_CODITE = null;
}else{
	new_tUniqRow_4.ITE_CODITE = row39.ITE_CODITE.toLowerCase();
}
new_tUniqRow_4.ITE_IPIENT = row39.ITE_IPIENT;
		
		keystUniqRow_4.add(new_tUniqRow_4);if(row40 == null){ 
	
	row40 = new row40Struct();
}row40.ITE_CODEMP = row39.ITE_CODEMP;			row40.ITE_CODITE = row39.ITE_CODITE;			row40.ITE_IPIENT = row39.ITE_IPIENT;					
		nb_uniques_tUniqRow_4++;
	} else {
	  nb_duplicates_tUniqRow_4++;
	}

 


	tos_count_tUniqRow_4++;

/**
 * [tUniqRow_4 main ] stop
 */
	
	/**
	 * [tUniqRow_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_begin ] stop
 */
// Start of branch "row40"
if(row40 != null) { 



	
	/**
	 * [tHashOutput_16 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row40"
						
						);
					}
					



    
		row40Struct oneRow_tHashOutput_16 = new row40Struct();
				
					oneRow_tHashOutput_16.ITE_CODEMP = row40.ITE_CODEMP;
					oneRow_tHashOutput_16.ITE_CODITE = row40.ITE_CODITE;
					oneRow_tHashOutput_16.ITE_IPIENT = row40.ITE_IPIENT;
		
        tHashFile_tHashOutput_16.put(oneRow_tHashOutput_16);
        nb_line_tHashOutput_16 ++;

 


	tos_count_tHashOutput_16++;

/**
 * [tHashOutput_16 main ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 process_data_end ] stop
 */

} // End of branch "row40"




	
	/**
	 * [tUniqRow_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_15";
	
	

 



/**
 * [tDBInput_15 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_15 end ] start
	 */

	

	
	
	currentComponent="tDBInput_15";
	
	

	}
}finally{
	if (rs_tDBInput_15 != null) {
		rs_tDBInput_15.close();
	}
	if (stmt_tDBInput_15 != null) {
		stmt_tDBInput_15.close();
	}
}
globalMap.put("tDBInput_15_NB_LINE",nb_line_tDBInput_15);

 

ok_Hash.put("tDBInput_15", true);
end_Hash.put("tDBInput_15", System.currentTimeMillis());




/**
 * [tDBInput_15 end ] stop
 */

	
	/**
	 * [tUniqRow_4 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

globalMap.put("tUniqRow_4_NB_UNIQUES",nb_uniques_tUniqRow_4);
globalMap.put("tUniqRow_4_NB_DUPLICATES",nb_duplicates_tUniqRow_4);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row39");
			  	}
			  	
 

ok_Hash.put("tUniqRow_4", true);
end_Hash.put("tUniqRow_4", System.currentTimeMillis());




/**
 * [tUniqRow_4 end ] stop
 */

	
	/**
	 * [tHashOutput_16 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	
globalMap.put("tHashOutput_16_NB_LINE", nb_line_tHashOutput_16);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row40");
			  	}
			  	
 

ok_Hash.put("tHashOutput_16", true);
end_Hash.put("tHashOutput_16", System.currentTimeMillis());




/**
 * [tHashOutput_16 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_15:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk36", 0, "ok");
								} 
							
							tDBInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_15 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_15";
	
	

 



/**
 * [tDBInput_15 finally ] stop
 */

	
	/**
	 * [tUniqRow_4 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_4";
	
	

 



/**
 * [tUniqRow_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_16";
	
	

 



/**
 * [tHashOutput_16 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class _60_Struct implements routines.system.IPersistableRow<_60_Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__60__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__60__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__60__="+String.valueOf(__60__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(_60_Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
_60_Struct _60_ = new _60_Struct();





	
	/**
	 * [tHashOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_2", false);
		start_Hash.put("tHashOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"_60_");
					}
				
		int tos_count_tHashOutput_2 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<_60_Struct> tHashFile_tHashOutput_2 = null;
		String hashKey_tHashOutput_2 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_2";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_2)){
			    if(mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2) == null){
	      		    mf_tHashOutput_2.getResourceMap().put(hashKey_tHashOutput_2, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<_60_Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }else{
			    	tHashFile_tHashOutput_2 = mf_tHashOutput_2.getResourceMap().get(hashKey_tHashOutput_2);
			    }
			}
        int nb_line_tHashOutput_2 = 0;

 



/**
 * [tHashOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
_60_Struct _60__tmp = new _60_Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";
	
	
		int tos_count_tDBInput_1 = 0;
		
	
    
	
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				conn_tDBInput_1 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "select cod_item , sum(qtd_item ) total_venda\n from vw_faturamento\nwhere data <= current_date -1\nand data >= current_"
+"date - 61\ngroup by cod_item";
		    

		    globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);

		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row1.cod_item = null;
							} else {
	                         		
        	row1.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row1.total_venda = null;
							} else {
		                          
            row1.total_venda = rs_tDBInput_1.getInt(2);
            if(rs_tDBInput_1.wasNull()){
                    row1.total_venda = null;
            }
		                    }
					


 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_3 = false;
		boolean mainRowRejected_tMap_3 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

_60_ = null;


// # Output table : '_60_'
_60__tmp.cod_item = row1.cod_item ;
_60__tmp.item = null;
_60__tmp.__60__ = row1.total_venda ;
_60_ = _60__tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "_60_"
if(_60_ != null) { 



	
	/**
	 * [tHashOutput_2 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"_60_"
						
						);
					}
					



    
		_60_Struct oneRow_tHashOutput_2 = new _60_Struct();
				
					oneRow_tHashOutput_2.cod_item = _60_.cod_item;
					oneRow_tHashOutput_2.item = _60_.item;
					oneRow_tHashOutput_2.__60__ = _60_.__60__;
		
        tHashFile_tHashOutput_2.put(oneRow_tHashOutput_2);
        nb_line_tHashOutput_2 ++;

 


	tos_count_tHashOutput_2++;

/**
 * [tHashOutput_2 main ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 process_data_end ] stop
 */

} // End of branch "_60_"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
}
globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tHashOutput_2 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	
globalMap.put("tHashOutput_2_NB_LINE", nb_line_tHashOutput_2);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"_60_");
			  	}
			  	
 

ok_Hash.put("tHashOutput_2", true);
end_Hash.put("tHashOutput_2", System.currentTimeMillis());




/**
 * [tHashOutput_2 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk13", 0, "ok");
								} 
							
							tDBInput_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";
	
	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";
	
	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_2";
	
	

 



/**
 * [tHashOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class __30__Struct implements routines.system.IPersistableRow<__30__Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer _30_;

				public Integer get_30_ () {
					return this._30_;
				}

				public Boolean _30_IsNullable(){
				    return true;
				}
				public Boolean _30_IsKey(){
				    return false;
				}
				public Integer _30_Length(){
				    return null;
				}
				public Integer _30_Precision(){
				    return null;
				}
				public String _30_Default(){
				
					return null;
				
				}
				public String _30_Comment(){
				
				    return "";
				
				}
				public String _30_Pattern(){
				
					return "";
				
				}
				public String _30_OriginalDbColumnName(){
				
					return "_30_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._30_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._30_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._30_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._30_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",_30_="+String.valueOf(_30_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(__30__Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
__30__Struct __30__ = new __30__Struct();





	
	/**
	 * [tHashOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_3", false);
		start_Hash.put("tHashOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"__30__");
					}
				
		int tos_count_tHashOutput_3 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__30__Struct> tHashFile_tHashOutput_3 = null;
		String hashKey_tHashOutput_3 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_3";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_3)){
			    if(mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3) == null){
	      		    mf_tHashOutput_3.getResourceMap().put(hashKey_tHashOutput_3, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__30__Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }else{
			    	tHashFile_tHashOutput_3 = mf_tHashOutput_3.getResourceMap().get(hashKey_tHashOutput_3);
			    }
			}
        int nb_line_tHashOutput_3 = 0;

 



/**
 * [tHashOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
__30__Struct __30___tmp = new __30__Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";
	
	
		int tos_count_tDBInput_2 = 0;
		
	
    
	
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				conn_tDBInput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "select cod_item , sum(qtd_item ) total_venda\n from vw_faturamento\nwhere data <= current_date -1\nand data >= current_"
+"date -31\ngroup by cod_item";
		    

		    globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);

		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row2.cod_item = null;
							} else {
	                         		
        	row2.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row2.total_venda = null;
							} else {
		                          
            row2.total_venda = rs_tDBInput_2.getInt(2);
            if(rs_tDBInput_2.wasNull()){
                    row2.total_venda = null;
            }
		                    }
					


 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_4 = false;
		boolean mainRowRejected_tMap_4 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

__30__ = null;


// # Output table : '__30__'
__30___tmp.cod_item = row2.cod_item  ;
__30___tmp.item = null;
__30___tmp._30_ = row2.total_venda  ;
__30__ = __30___tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "__30__"
if(__30__ != null) { 



	
	/**
	 * [tHashOutput_3 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"__30__"
						
						);
					}
					



    
		__30__Struct oneRow_tHashOutput_3 = new __30__Struct();
				
					oneRow_tHashOutput_3.cod_item = __30__.cod_item;
					oneRow_tHashOutput_3.item = __30__.item;
					oneRow_tHashOutput_3._30_ = __30__._30_;
		
        tHashFile_tHashOutput_3.put(oneRow_tHashOutput_3);
        nb_line_tHashOutput_3 ++;

 


	tos_count_tHashOutput_3++;

/**
 * [tHashOutput_3 main ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 process_data_end ] stop
 */

} // End of branch "__30__"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
}
globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);
 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tHashOutput_3 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	
globalMap.put("tHashOutput_3_NB_LINE", nb_line_tHashOutput_3);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"__30__");
			  	}
			  	
 

ok_Hash.put("tHashOutput_3", true);
end_Hash.put("tHashOutput_3", System.currentTimeMillis());




/**
 * [tHashOutput_3 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk39", 0, "ok");
								} 
							
							tDBInput_5Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";
	
	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";
	
	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tHashOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_3";
	
	

 



/**
 * [tHashOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class __15__Struct implements routines.system.IPersistableRow<__15__Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer _15_;

				public Integer get_15_ () {
					return this._15_;
				}

				public Boolean _15_IsNullable(){
				    return true;
				}
				public Boolean _15_IsKey(){
				    return false;
				}
				public Integer _15_Length(){
				    return null;
				}
				public Integer _15_Precision(){
				    return null;
				}
				public String _15_Default(){
				
					return null;
				
				}
				public String _15_Comment(){
				
				    return "";
				
				}
				public String _15_Pattern(){
				
					return "";
				
				}
				public String _15_OriginalDbColumnName(){
				
					return "_15_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._15_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._15_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._15_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._15_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",_15_="+String.valueOf(_15_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(__15__Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();
__15__Struct __15__ = new __15__Struct();





	
	/**
	 * [tHashOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_5", false);
		start_Hash.put("tHashOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"__15__");
					}
				
		int tos_count_tHashOutput_5 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__15__Struct> tHashFile_tHashOutput_5 = null;
		String hashKey_tHashOutput_5 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_5";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_5)){
			    if(mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5) == null){
	      		    mf_tHashOutput_5.getResourceMap().put(hashKey_tHashOutput_5, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__15__Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }else{
			    	tHashFile_tHashOutput_5 = mf_tHashOutput_5.getResourceMap().get(hashKey_tHashOutput_5);
			    }
			}
        int nb_line_tHashOutput_5 = 0;

 



/**
 * [tHashOutput_5 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
__15__Struct __15___tmp = new __15__Struct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tDBInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_5", false);
		start_Hash.put("tDBInput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_5";
	
	
		int tos_count_tDBInput_5 = 0;
		
	
    
	
		    int nb_line_tDBInput_5 = 0;
		    java.sql.Connection conn_tDBInput_5 = null;
				conn_tDBInput_5 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

		    String dbquery_tDBInput_5 = "select cod_item , sum(qtd_item ) total_venda\n from vw_faturamento\nwhere data <= current_date -1\nand data >= current_"
+"date -16\ngroup by cod_item ";
		    

		    globalMap.put("tDBInput_5_QUERY",dbquery_tDBInput_5);

		    java.sql.ResultSet rs_tDBInput_5 = null;

		    try {
		    	rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
		    	int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

		    String tmpContent_tDBInput_5 = null;
		    
		    
		    while (rs_tDBInput_5.next()) {
		        nb_line_tDBInput_5++;
		        
							if(colQtyInRs_tDBInput_5 < 1) {
								row11.cod_item = null;
							} else {
	                         		
        	row11.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_5, 1, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 2) {
								row11.total_venda = null;
							} else {
		                          
            row11.total_venda = rs_tDBInput_5.getInt(2);
            if(rs_tDBInput_5.wasNull()){
                    row11.total_venda = null;
            }
		                    }
					


 



/**
 * [tDBInput_5 begin ] stop
 */
	
	/**
	 * [tDBInput_5 main ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 


	tos_count_tDBInput_5++;

/**
 * [tDBInput_5 main ] stop
 */
	
	/**
	 * [tDBInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row11"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_8 = false;
		boolean mainRowRejected_tMap_8 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

__15__ = null;


// # Output table : '__15__'
__15___tmp.cod_item = row11.cod_item  ;
__15___tmp.item = null;
__15___tmp._15_ = row11.total_venda  ;
__15__ = __15___tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "__15__"
if(__15__ != null) { 



	
	/**
	 * [tHashOutput_5 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"__15__"
						
						);
					}
					



    
		__15__Struct oneRow_tHashOutput_5 = new __15__Struct();
				
					oneRow_tHashOutput_5.cod_item = __15__.cod_item;
					oneRow_tHashOutput_5.item = __15__.item;
					oneRow_tHashOutput_5._15_ = __15__._15_;
		
        tHashFile_tHashOutput_5.put(oneRow_tHashOutput_5);
        nb_line_tHashOutput_5 ++;

 


	tos_count_tHashOutput_5++;

/**
 * [tHashOutput_5 main ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 process_data_end ] stop
 */

} // End of branch "__15__"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_5 end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

	}
}finally{
	if (rs_tDBInput_5 != null) {
		rs_tDBInput_5.close();
	}
	if (stmt_tDBInput_5 != null) {
		stmt_tDBInput_5.close();
	}
}
globalMap.put("tDBInput_5_NB_LINE",nb_line_tDBInput_5);
 

ok_Hash.put("tDBInput_5", true);
end_Hash.put("tDBInput_5", System.currentTimeMillis());




/**
 * [tDBInput_5 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tHashOutput_5 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	
globalMap.put("tHashOutput_5_NB_LINE", nb_line_tHashOutput_5);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"__15__");
			  	}
			  	
 

ok_Hash.put("tHashOutput_5", true);
end_Hash.put("tHashOutput_5", System.currentTimeMillis());




/**
 * [tHashOutput_5 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_5:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk40", 0, "ok");
								} 
							
							tDBInput_6Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_5";
	
	

 



/**
 * [tDBInput_5 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";
	
	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tHashOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_5";
	
	

 



/**
 * [tHashOutput_5 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class __07__Struct implements routines.system.IPersistableRow<__07__Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer _07_;

				public Integer get_07_ () {
					return this._07_;
				}

				public Boolean _07_IsNullable(){
				    return true;
				}
				public Boolean _07_IsKey(){
				    return false;
				}
				public Integer _07_Length(){
				    return null;
				}
				public Integer _07_Precision(){
				    return null;
				}
				public String _07_Default(){
				
					return null;
				
				}
				public String _07_Comment(){
				
				    return "";
				
				}
				public String _07_Pattern(){
				
					return "";
				
				}
				public String _07_OriginalDbColumnName(){
				
					return "_07_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._07_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._07_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._07_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._07_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",_07_="+String.valueOf(_07_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(__07__Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row12Struct implements routines.system.IPersistableRow<row12Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row12Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row12Struct row12 = new row12Struct();
__07__Struct __07__ = new __07__Struct();





	
	/**
	 * [tHashOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_6", false);
		start_Hash.put("tHashOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"__07__");
					}
				
		int tos_count_tHashOutput_6 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__07__Struct> tHashFile_tHashOutput_6 = null;
		String hashKey_tHashOutput_6 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_6";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_6)){
			    if(mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6) == null){
	      		    mf_tHashOutput_6.getResourceMap().put(hashKey_tHashOutput_6, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__07__Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }else{
			    	tHashFile_tHashOutput_6 = mf_tHashOutput_6.getResourceMap().get(hashKey_tHashOutput_6);
			    }
			}
        int nb_line_tHashOutput_6 = 0;

 



/**
 * [tHashOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row12");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
__07__Struct __07___tmp = new __07__Struct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tDBInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_6", false);
		start_Hash.put("tDBInput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_6";
	
	
		int tos_count_tDBInput_6 = 0;
		
	
    
	
		    int nb_line_tDBInput_6 = 0;
		    java.sql.Connection conn_tDBInput_6 = null;
				conn_tDBInput_6 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_6 = conn_tDBInput_6.createStatement();

		    String dbquery_tDBInput_6 = "select cod_item , sum(qtd_item ) total_venda\n from vw_faturamento\nwhere data <= current_date -1\nand data >= current_"
+"date -8\ngroup by cod_item ";
		    

		    globalMap.put("tDBInput_6_QUERY",dbquery_tDBInput_6);

		    java.sql.ResultSet rs_tDBInput_6 = null;

		    try {
		    	rs_tDBInput_6 = stmt_tDBInput_6.executeQuery(dbquery_tDBInput_6);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_6 = rs_tDBInput_6.getMetaData();
		    	int colQtyInRs_tDBInput_6 = rsmd_tDBInput_6.getColumnCount();

		    String tmpContent_tDBInput_6 = null;
		    
		    
		    while (rs_tDBInput_6.next()) {
		        nb_line_tDBInput_6++;
		        
							if(colQtyInRs_tDBInput_6 < 1) {
								row12.cod_item = null;
							} else {
	                         		
        	row12.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_6, 1, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 2) {
								row12.total_venda = null;
							} else {
		                          
            row12.total_venda = rs_tDBInput_6.getInt(2);
            if(rs_tDBInput_6.wasNull()){
                    row12.total_venda = null;
            }
		                    }
					


 



/**
 * [tDBInput_6 begin ] stop
 */
	
	/**
	 * [tDBInput_6 main ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 


	tos_count_tDBInput_6++;

/**
 * [tDBInput_6 main ] stop
 */
	
	/**
	 * [tDBInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row12"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_9 = false;
		boolean mainRowRejected_tMap_9 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

__07__ = null;


// # Output table : '__07__'
__07___tmp.cod_item = row12.cod_item  ;
__07___tmp.item = null;
__07___tmp._07_ = row12.total_venda  ;
__07__ = __07___tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "__07__"
if(__07__ != null) { 



	
	/**
	 * [tHashOutput_6 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"__07__"
						
						);
					}
					



    
		__07__Struct oneRow_tHashOutput_6 = new __07__Struct();
				
					oneRow_tHashOutput_6.cod_item = __07__.cod_item;
					oneRow_tHashOutput_6.item = __07__.item;
					oneRow_tHashOutput_6._07_ = __07__._07_;
		
        tHashFile_tHashOutput_6.put(oneRow_tHashOutput_6);
        nb_line_tHashOutput_6 ++;

 


	tos_count_tHashOutput_6++;

/**
 * [tHashOutput_6 main ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 process_data_end ] stop
 */

} // End of branch "__07__"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_6 end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

	}
}finally{
	if (rs_tDBInput_6 != null) {
		rs_tDBInput_6.close();
	}
	if (stmt_tDBInput_6 != null) {
		stmt_tDBInput_6.close();
	}
}
globalMap.put("tDBInput_6_NB_LINE",nb_line_tDBInput_6);
 

ok_Hash.put("tDBInput_6", true);
end_Hash.put("tDBInput_6", System.currentTimeMillis());




/**
 * [tDBInput_6 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row12");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tHashOutput_6 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	
globalMap.put("tHashOutput_6_NB_LINE", nb_line_tHashOutput_6);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"__07__");
			  	}
			  	
 

ok_Hash.put("tHashOutput_6", true);
end_Hash.put("tHashOutput_6", System.currentTimeMillis());




/**
 * [tHashOutput_6 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_6:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk28", 0, "ok");
								} 
							
							tDBInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_6";
	
	

 



/**
 * [tDBInput_6 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";
	
	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tHashOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_6";
	
	

 



/**
 * [tHashOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class copyOf__07__Struct implements routines.system.IPersistableRow<copyOf__07__Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._01_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this._01_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",_01_="+String.valueOf(_01_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOf__07__Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row27Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row27Struct row27 = new row27Struct();
copyOf__07__Struct copyOf__07__ = new copyOf__07__Struct();





	
	/**
	 * [tHashOutput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_10", false);
		start_Hash.put("tHashOutput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOf__07__");
					}
				
		int tos_count_tHashOutput_10 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOf__07__Struct> tHashFile_tHashOutput_10 = null;
		String hashKey_tHashOutput_10 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_10";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_10)){
			    if(mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10) == null){
	      		    mf_tHashOutput_10.getResourceMap().put(hashKey_tHashOutput_10, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOf__07__Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }else{
			    	tHashFile_tHashOutput_10 = mf_tHashOutput_10.getResourceMap().get(hashKey_tHashOutput_10);
			    }
			}
        int nb_line_tHashOutput_10 = 0;

 



/**
 * [tHashOutput_10 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row27");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOf__07__Struct copyOf__07___tmp = new copyOf__07__Struct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tDBInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_10", false);
		start_Hash.put("tDBInput_10", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_10";
	
	
		int tos_count_tDBInput_10 = 0;
		
	
    
	
		    int nb_line_tDBInput_10 = 0;
		    java.sql.Connection conn_tDBInput_10 = null;
				conn_tDBInput_10 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_10 = conn_tDBInput_10.createStatement();

		    String dbquery_tDBInput_10 = "select cod_item , sum(qtd_item ) total_venda\n from vw_faturamento\nwhere data <= current_date -1\nand data >= current_"
+"date -1\ngroup by cod_item ";
		    

		    globalMap.put("tDBInput_10_QUERY",dbquery_tDBInput_10);

		    java.sql.ResultSet rs_tDBInput_10 = null;

		    try {
		    	rs_tDBInput_10 = stmt_tDBInput_10.executeQuery(dbquery_tDBInput_10);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_10 = rs_tDBInput_10.getMetaData();
		    	int colQtyInRs_tDBInput_10 = rsmd_tDBInput_10.getColumnCount();

		    String tmpContent_tDBInput_10 = null;
		    
		    
		    while (rs_tDBInput_10.next()) {
		        nb_line_tDBInput_10++;
		        
							if(colQtyInRs_tDBInput_10 < 1) {
								row27.cod_item = null;
							} else {
	                         		
        	row27.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_10, 1, false);
		                    }
							if(colQtyInRs_tDBInput_10 < 2) {
								row27.total_venda = null;
							} else {
		                          
            row27.total_venda = rs_tDBInput_10.getInt(2);
            if(rs_tDBInput_10.wasNull()){
                    row27.total_venda = null;
            }
		                    }
					


 



/**
 * [tDBInput_10 begin ] stop
 */
	
	/**
	 * [tDBInput_10 main ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 


	tos_count_tDBInput_10++;

/**
 * [tDBInput_10 main ] stop
 */
	
	/**
	 * [tDBInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row27"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_13 = false;
		boolean mainRowRejected_tMap_13 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

copyOf__07__ = null;


// # Output table : 'copyOf__07__'
copyOf__07___tmp.cod_item = row27.cod_item  ;
copyOf__07___tmp.item = null;
copyOf__07___tmp._01_ = row27.total_venda  ;
copyOf__07__ = copyOf__07___tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "copyOf__07__"
if(copyOf__07__ != null) { 



	
	/**
	 * [tHashOutput_10 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOf__07__"
						
						);
					}
					



    
		copyOf__07__Struct oneRow_tHashOutput_10 = new copyOf__07__Struct();
				
					oneRow_tHashOutput_10.cod_item = copyOf__07__.cod_item;
					oneRow_tHashOutput_10.item = copyOf__07__.item;
					oneRow_tHashOutput_10._01_ = copyOf__07__._01_;
		
        tHashFile_tHashOutput_10.put(oneRow_tHashOutput_10);
        nb_line_tHashOutput_10 ++;

 


	tos_count_tHashOutput_10++;

/**
 * [tHashOutput_10 main ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 process_data_end ] stop
 */

} // End of branch "copyOf__07__"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_10 end ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

	}
}finally{
	if (rs_tDBInput_10 != null) {
		rs_tDBInput_10.close();
	}
	if (stmt_tDBInput_10 != null) {
		stmt_tDBInput_10.close();
	}
}
globalMap.put("tDBInput_10_NB_LINE",nb_line_tDBInput_10);
 

ok_Hash.put("tDBInput_10", true);
end_Hash.put("tDBInput_10", System.currentTimeMillis());




/**
 * [tDBInput_10 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row27");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tHashOutput_10 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	
globalMap.put("tHashOutput_10_NB_LINE", nb_line_tHashOutput_10);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOf__07__");
			  	}
			  	
 

ok_Hash.put("tHashOutput_10", true);
end_Hash.put("tHashOutput_10", System.currentTimeMillis());




/**
 * [tHashOutput_10 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk29", 0, "ok");
								} 
							
							tDBInput_16Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_10 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_10";
	
	

 



/**
 * [tDBInput_10 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";
	
	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tHashOutput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_10";
	
	

 



/**
 * [tHashOutput_10 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_10_SUBPROCESS_STATE", 1);
	}
	


public static class M0_Struct implements routines.system.IPersistableRow<M0_Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M0__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M0__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M0__="+String.valueOf(__M0__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(M0_Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row31Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row31Struct row31 = new row31Struct();
M0_Struct M0_ = new M0_Struct();





	
	/**
	 * [tHashOutput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_12", false);
		start_Hash.put("tHashOutput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"M0_");
					}
				
		int tos_count_tHashOutput_12 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M0_Struct> tHashFile_tHashOutput_12 = null;
		String hashKey_tHashOutput_12 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_12";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_12)){
			    if(mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12) == null){
	      		    mf_tHashOutput_12.getResourceMap().put(hashKey_tHashOutput_12, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M0_Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }else{
			    	tHashFile_tHashOutput_12 = mf_tHashOutput_12.getResourceMap().get(hashKey_tHashOutput_12);
			    }
			}
        int nb_line_tHashOutput_12 = 0;

 



/**
 * [tHashOutput_12 begin ] stop
 */



	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row31");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
M0_Struct M0__tmp = new M0_Struct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tDBInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_16", false);
		start_Hash.put("tDBInput_16", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_16";
	
	
		int tos_count_tDBInput_16 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_16 = java.util.Calendar.getInstance();
		    calendar_tDBInput_16.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_16 = calendar_tDBInput_16.getTime();
		    int nb_line_tDBInput_16 = 0;
		    java.sql.Connection conn_tDBInput_16 = null;
				conn_tDBInput_16 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_16 = conn_tDBInput_16.createStatement();

		    String dbquery_tDBInput_16 = "SELECT COD_ITEM , \n       SUM(QTD_ITEM ) TOTAL_VENDA\nFROM VW_FATURAMENTO\nWHERE DATA_ANO  = YEAR(CURRENT_DATE())\nAND"
+" DATA_MES = MONTH(CURRENT_DATE())\nGROUP BY COD_ITEM\n";
		    

		    globalMap.put("tDBInput_16_QUERY",dbquery_tDBInput_16);

		    java.sql.ResultSet rs_tDBInput_16 = null;

		    try {
		    	rs_tDBInput_16 = stmt_tDBInput_16.executeQuery(dbquery_tDBInput_16);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_16 = rs_tDBInput_16.getMetaData();
		    	int colQtyInRs_tDBInput_16 = rsmd_tDBInput_16.getColumnCount();

		    String tmpContent_tDBInput_16 = null;
		    
		    
		    while (rs_tDBInput_16.next()) {
		        nb_line_tDBInput_16++;
		        
							if(colQtyInRs_tDBInput_16 < 1) {
								row31.cod_item = null;
							} else {
	                         		
        	row31.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_16, 1, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 2) {
								row31.total_venda = null;
							} else {
		                          
            row31.total_venda = rs_tDBInput_16.getInt(2);
            if(rs_tDBInput_16.wasNull()){
                    row31.total_venda = null;
            }
		                    }
					

 



/**
 * [tDBInput_16 begin ] stop
 */
	
	/**
	 * [tDBInput_16 main ] start
	 */

	

	
	
	currentComponent="tDBInput_16";
	
	

 


	tos_count_tDBInput_16++;

/**
 * [tDBInput_16 main ] stop
 */
	
	/**
	 * [tDBInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_16";
	
	

 



/**
 * [tDBInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row31"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_16 = false;
		boolean mainRowRejected_tMap_16 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
        // ###############################
        // # Output tables

M0_ = null;


// # Output table : 'M0_'
M0__tmp.cod_item = row31.cod_item ;
M0__tmp.item = null;
M0__tmp.__M0__ = row31.total_venda ;
M0_ = M0__tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "M0_"
if(M0_ != null) { 



	
	/**
	 * [tHashOutput_12 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"M0_"
						
						);
					}
					



    
		M0_Struct oneRow_tHashOutput_12 = new M0_Struct();
				
					oneRow_tHashOutput_12.cod_item = M0_.cod_item;
					oneRow_tHashOutput_12.item = M0_.item;
					oneRow_tHashOutput_12.__M0__ = M0_.__M0__;
		
        tHashFile_tHashOutput_12.put(oneRow_tHashOutput_12);
        nb_line_tHashOutput_12 ++;

 


	tos_count_tHashOutput_12++;

/**
 * [tHashOutput_12 main ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 process_data_end ] stop
 */

} // End of branch "M0_"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_16";
	
	

 



/**
 * [tDBInput_16 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_16 end ] start
	 */

	

	
	
	currentComponent="tDBInput_16";
	
	

	}
}finally{
	if (rs_tDBInput_16 != null) {
		rs_tDBInput_16.close();
	}
	if (stmt_tDBInput_16 != null) {
		stmt_tDBInput_16.close();
	}
}
globalMap.put("tDBInput_16_NB_LINE",nb_line_tDBInput_16);

 

ok_Hash.put("tDBInput_16", true);
end_Hash.put("tDBInput_16", System.currentTimeMillis());




/**
 * [tDBInput_16 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row31");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */

	
	/**
	 * [tHashOutput_12 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	
globalMap.put("tHashOutput_12_NB_LINE", nb_line_tHashOutput_12);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"M0_");
			  	}
			  	
 

ok_Hash.put("tHashOutput_12", true);
end_Hash.put("tHashOutput_12", System.currentTimeMillis());




/**
 * [tHashOutput_12 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_16:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk31", 0, "ok");
								} 
							
							tDBInput_12Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_16 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_16";
	
	

 



/**
 * [tDBInput_16 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";
	
	

 



/**
 * [tMap_16 finally ] stop
 */

	
	/**
	 * [tHashOutput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_12";
	
	

 



/**
 * [tHashOutput_12 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class M1Struct implements routines.system.IPersistableRow<M1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M1__;

				public Integer get__M1__ () {
					return this.__M1__;
				}

				public Boolean __M1__IsNullable(){
				    return true;
				}
				public Boolean __M1__IsKey(){
				    return false;
				}
				public Integer __M1__Length(){
				    return null;
				}
				public Integer __M1__Precision(){
				    return null;
				}
				public String __M1__Default(){
				
					return null;
				
				}
				public String __M1__Comment(){
				
				    return "";
				
				}
				public String __M1__Pattern(){
				
					return "";
				
				}
				public String __M1__OriginalDbColumnName(){
				
					return "__M1__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M1__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M1__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M1__="+String.valueOf(__M1__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(M1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row33Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row33Struct row33 = new row33Struct();
M1Struct M1 = new M1Struct();





	
	/**
	 * [tHashOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_13", false);
		start_Hash.put("tHashOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"M1");
					}
				
		int tos_count_tHashOutput_13 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M1Struct> tHashFile_tHashOutput_13 = null;
		String hashKey_tHashOutput_13 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_13";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_13)){
			    if(mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13) == null){
	      		    mf_tHashOutput_13.getResourceMap().put(hashKey_tHashOutput_13, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M1Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }else{
			    	tHashFile_tHashOutput_13 = mf_tHashOutput_13.getResourceMap().get(hashKey_tHashOutput_13);
			    }
			}
        int nb_line_tHashOutput_13 = 0;

 



/**
 * [tHashOutput_13 begin ] stop
 */



	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row33");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
M1Struct M1_tmp = new M1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tDBInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_12", false);
		start_Hash.put("tDBInput_12", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_12";
	
	
		int tos_count_tDBInput_12 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_12 = java.util.Calendar.getInstance();
		    calendar_tDBInput_12.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_12 = calendar_tDBInput_12.getTime();
		    int nb_line_tDBInput_12 = 0;
		    java.sql.Connection conn_tDBInput_12 = null;
				conn_tDBInput_12 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_12 = conn_tDBInput_12.createStatement();

		    String dbquery_tDBInput_12 = "SELECT COD_ITEM , \n       SUM(QTD_ITEM ) TOTAL_VENDA\nFROM VW_FATURAMENTO\nWHERE DATA_ANO  = YEAR(CURRENT_DATE())\nAND"
+" DATA_MES = MONTH(CURRENT_DATE()) -1\nGROUP BY COD_ITEM\n";
		    

		    globalMap.put("tDBInput_12_QUERY",dbquery_tDBInput_12);

		    java.sql.ResultSet rs_tDBInput_12 = null;

		    try {
		    	rs_tDBInput_12 = stmt_tDBInput_12.executeQuery(dbquery_tDBInput_12);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_12 = rs_tDBInput_12.getMetaData();
		    	int colQtyInRs_tDBInput_12 = rsmd_tDBInput_12.getColumnCount();

		    String tmpContent_tDBInput_12 = null;
		    
		    
		    while (rs_tDBInput_12.next()) {
		        nb_line_tDBInput_12++;
		        
							if(colQtyInRs_tDBInput_12 < 1) {
								row33.cod_item = null;
							} else {
	                         		
        	row33.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_12, 1, false);
		                    }
							if(colQtyInRs_tDBInput_12 < 2) {
								row33.total_venda = null;
							} else {
		                          
            row33.total_venda = rs_tDBInput_12.getInt(2);
            if(rs_tDBInput_12.wasNull()){
                    row33.total_venda = null;
            }
		                    }
					

 



/**
 * [tDBInput_12 begin ] stop
 */
	
	/**
	 * [tDBInput_12 main ] start
	 */

	

	
	
	currentComponent="tDBInput_12";
	
	

 


	tos_count_tDBInput_12++;

/**
 * [tDBInput_12 main ] stop
 */
	
	/**
	 * [tDBInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_12";
	
	

 



/**
 * [tDBInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row33"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_18 = false;
		boolean mainRowRejected_tMap_18 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
        // ###############################
        // # Output tables

M1 = null;


// # Output table : 'M1'
M1_tmp.cod_item = row33.cod_item ;
M1_tmp.item = null;
M1_tmp.__M1__ = row33.total_venda ;
M1 = M1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "M1"
if(M1 != null) { 



	
	/**
	 * [tHashOutput_13 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"M1"
						
						);
					}
					



    
		M1Struct oneRow_tHashOutput_13 = new M1Struct();
				
					oneRow_tHashOutput_13.cod_item = M1.cod_item;
					oneRow_tHashOutput_13.item = M1.item;
					oneRow_tHashOutput_13.__M1__ = M1.__M1__;
		
        tHashFile_tHashOutput_13.put(oneRow_tHashOutput_13);
        nb_line_tHashOutput_13 ++;

 


	tos_count_tHashOutput_13++;

/**
 * [tHashOutput_13 main ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 process_data_end ] stop
 */

} // End of branch "M1"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_12";
	
	

 



/**
 * [tDBInput_12 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_12 end ] start
	 */

	

	
	
	currentComponent="tDBInput_12";
	
	

	}
}finally{
	if (rs_tDBInput_12 != null) {
		rs_tDBInput_12.close();
	}
	if (stmt_tDBInput_12 != null) {
		stmt_tDBInput_12.close();
	}
}
globalMap.put("tDBInput_12_NB_LINE",nb_line_tDBInput_12);

 

ok_Hash.put("tDBInput_12", true);
end_Hash.put("tDBInput_12", System.currentTimeMillis());




/**
 * [tDBInput_12 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row33");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */

	
	/**
	 * [tHashOutput_13 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	
globalMap.put("tHashOutput_13_NB_LINE", nb_line_tHashOutput_13);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"M1");
			  	}
			  	
 

ok_Hash.put("tHashOutput_13", true);
end_Hash.put("tHashOutput_13", System.currentTimeMillis());




/**
 * [tHashOutput_13 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_12:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk32", 0, "ok");
								} 
							
							tDBInput_13Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_12 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_12";
	
	

 



/**
 * [tDBInput_12 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";
	
	

 



/**
 * [tMap_18 finally ] stop
 */

	
	/**
	 * [tHashOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_13";
	
	

 



/**
 * [tHashOutput_13 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class M2Struct implements routines.system.IPersistableRow<M2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M2__;

				public Integer get__M2__ () {
					return this.__M2__;
				}

				public Boolean __M2__IsNullable(){
				    return true;
				}
				public Boolean __M2__IsKey(){
				    return false;
				}
				public Integer __M2__Length(){
				    return null;
				}
				public Integer __M2__Precision(){
				    return null;
				}
				public String __M2__Default(){
				
					return null;
				
				}
				public String __M2__Comment(){
				
				    return "";
				
				}
				public String __M2__Pattern(){
				
					return "";
				
				}
				public String __M2__OriginalDbColumnName(){
				
					return "__M2__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M2__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M2__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M2__="+String.valueOf(__M2__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(M2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row34Struct implements routines.system.IPersistableRow<row34Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row34Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row34Struct row34 = new row34Struct();
M2Struct M2 = new M2Struct();





	
	/**
	 * [tHashOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_14", false);
		start_Hash.put("tHashOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"M2");
					}
				
		int tos_count_tHashOutput_14 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M2Struct> tHashFile_tHashOutput_14 = null;
		String hashKey_tHashOutput_14 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_14";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_14)){
			    if(mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14) == null){
	      		    mf_tHashOutput_14.getResourceMap().put(hashKey_tHashOutput_14, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M2Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }else{
			    	tHashFile_tHashOutput_14 = mf_tHashOutput_14.getResourceMap().get(hashKey_tHashOutput_14);
			    }
			}
        int nb_line_tHashOutput_14 = 0;

 



/**
 * [tHashOutput_14 begin ] stop
 */



	
	/**
	 * [tMap_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_19", false);
		start_Hash.put("tMap_19", System.currentTimeMillis());
		
	
	currentComponent="tMap_19";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row34");
					}
				
		int tos_count_tMap_19 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_19__Struct  {
}
Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
M2Struct M2_tmp = new M2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_19 begin ] stop
 */



	
	/**
	 * [tDBInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_13", false);
		start_Hash.put("tDBInput_13", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_13";
	
	
		int tos_count_tDBInput_13 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_13 = java.util.Calendar.getInstance();
		    calendar_tDBInput_13.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_13 = calendar_tDBInput_13.getTime();
		    int nb_line_tDBInput_13 = 0;
		    java.sql.Connection conn_tDBInput_13 = null;
				conn_tDBInput_13 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_13 = conn_tDBInput_13.createStatement();

		    String dbquery_tDBInput_13 = "SELECT COD_ITEM , \n       SUM(QTD_ITEM ) TOTAL_VENDA\nFROM VW_FATURAMENTO\nWHERE DATA_ANO  = YEAR(CURRENT_DATE())\nAND"
+" DATA_MES = MONTH(CURRENT_DATE()) -2\nGROUP BY COD_ITEM\n";
		    

		    globalMap.put("tDBInput_13_QUERY",dbquery_tDBInput_13);

		    java.sql.ResultSet rs_tDBInput_13 = null;

		    try {
		    	rs_tDBInput_13 = stmt_tDBInput_13.executeQuery(dbquery_tDBInput_13);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_13 = rs_tDBInput_13.getMetaData();
		    	int colQtyInRs_tDBInput_13 = rsmd_tDBInput_13.getColumnCount();

		    String tmpContent_tDBInput_13 = null;
		    
		    
		    while (rs_tDBInput_13.next()) {
		        nb_line_tDBInput_13++;
		        
							if(colQtyInRs_tDBInput_13 < 1) {
								row34.cod_item = null;
							} else {
	                         		
        	row34.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_13, 1, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 2) {
								row34.total_venda = null;
							} else {
		                          
            row34.total_venda = rs_tDBInput_13.getInt(2);
            if(rs_tDBInput_13.wasNull()){
                    row34.total_venda = null;
            }
		                    }
					

 



/**
 * [tDBInput_13 begin ] stop
 */
	
	/**
	 * [tDBInput_13 main ] start
	 */

	

	
	
	currentComponent="tDBInput_13";
	
	

 


	tos_count_tDBInput_13++;

/**
 * [tDBInput_13 main ] stop
 */
	
	/**
	 * [tDBInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_13";
	
	

 



/**
 * [tDBInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tMap_19 main ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row34"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_19 = false;
		boolean mainRowRejected_tMap_19 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_19__Struct Var = Var__tMap_19;// ###############################
        // ###############################
        // # Output tables

M2 = null;


// # Output table : 'M2'
M2_tmp.cod_item = row34.cod_item ;
M2_tmp.item = null;
M2_tmp.__M2__ = row34.total_venda ;
M2 = M2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_19 = false;










 


	tos_count_tMap_19++;

/**
 * [tMap_19 main ] stop
 */
	
	/**
	 * [tMap_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_begin ] stop
 */
// Start of branch "M2"
if(M2 != null) { 



	
	/**
	 * [tHashOutput_14 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"M2"
						
						);
					}
					



    
		M2Struct oneRow_tHashOutput_14 = new M2Struct();
				
					oneRow_tHashOutput_14.cod_item = M2.cod_item;
					oneRow_tHashOutput_14.item = M2.item;
					oneRow_tHashOutput_14.__M2__ = M2.__M2__;
		
        tHashFile_tHashOutput_14.put(oneRow_tHashOutput_14);
        nb_line_tHashOutput_14 ++;

 


	tos_count_tHashOutput_14++;

/**
 * [tHashOutput_14 main ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 process_data_end ] stop
 */

} // End of branch "M2"




	
	/**
	 * [tMap_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_13";
	
	

 



/**
 * [tDBInput_13 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_13 end ] start
	 */

	

	
	
	currentComponent="tDBInput_13";
	
	

	}
}finally{
	if (rs_tDBInput_13 != null) {
		rs_tDBInput_13.close();
	}
	if (stmt_tDBInput_13 != null) {
		stmt_tDBInput_13.close();
	}
}
globalMap.put("tDBInput_13_NB_LINE",nb_line_tDBInput_13);

 

ok_Hash.put("tDBInput_13", true);
end_Hash.put("tDBInput_13", System.currentTimeMillis());




/**
 * [tDBInput_13 end ] stop
 */

	
	/**
	 * [tMap_19 end ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row34");
			  	}
			  	
 

ok_Hash.put("tMap_19", true);
end_Hash.put("tMap_19", System.currentTimeMillis());




/**
 * [tMap_19 end ] stop
 */

	
	/**
	 * [tHashOutput_14 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	
globalMap.put("tHashOutput_14_NB_LINE", nb_line_tHashOutput_14);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"M2");
			  	}
			  	
 

ok_Hash.put("tHashOutput_14", true);
end_Hash.put("tHashOutput_14", System.currentTimeMillis());




/**
 * [tHashOutput_14 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_13:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk33", 0, "ok");
								} 
							
							tDBInput_14Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_13 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_13";
	
	

 



/**
 * [tDBInput_13 finally ] stop
 */

	
	/**
	 * [tMap_19 finally ] start
	 */

	

	
	
	currentComponent="tMap_19";
	
	

 



/**
 * [tMap_19 finally ] stop
 */

	
	/**
	 * [tHashOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_14";
	
	

 



/**
 * [tHashOutput_14 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfM2Struct implements routines.system.IPersistableRow<copyOfM2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M3__;

				public Integer get__M3__ () {
					return this.__M3__;
				}

				public Boolean __M3__IsNullable(){
				    return true;
				}
				public Boolean __M3__IsKey(){
				    return false;
				}
				public Integer __M3__Length(){
				    return null;
				}
				public Integer __M3__Precision(){
				    return null;
				}
				public String __M3__Default(){
				
					return null;
				
				}
				public String __M3__Comment(){
				
				    return "";
				
				}
				public String __M3__Pattern(){
				
					return "";
				
				}
				public String __M3__OriginalDbColumnName(){
				
					return "__M3__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M3__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
					this.item = readString(dis);
					
						this.__M3__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// String
				
						writeString(this.item,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M3__="+String.valueOf(__M3__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfM2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public Integer total_venda;

				public Integer getTotal_venda () {
					return this.total_venda;
				}

				public Boolean total_vendaIsNullable(){
				    return true;
				}
				public Boolean total_vendaIsKey(){
				    return false;
				}
				public Integer total_vendaLength(){
				    return null;
				}
				public Integer total_vendaPrecision(){
				    return null;
				}
				public String total_vendaDefault(){
				
					return null;
				
				}
				public String total_vendaComment(){
				
				    return "";
				
				}
				public String total_vendaPattern(){
				
					return "";
				
				}
				public String total_vendaOriginalDbColumnName(){
				
					return "total_venda";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
						this.total_venda = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
					// Integer
				
						writeInteger(this.total_venda,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",total_venda="+String.valueOf(total_venda));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row35Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row35Struct row35 = new row35Struct();
copyOfM2Struct copyOfM2 = new copyOfM2Struct();





	
	/**
	 * [tHashOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_15", false);
		start_Hash.put("tHashOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfM2");
					}
				
		int tos_count_tHashOutput_15 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfM2Struct> tHashFile_tHashOutput_15 = null;
		String hashKey_tHashOutput_15 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_15";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_15)){
			    if(mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15) == null){
	      		    mf_tHashOutput_15.getResourceMap().put(hashKey_tHashOutput_15, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfM2Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }else{
			    	tHashFile_tHashOutput_15 = mf_tHashOutput_15.getResourceMap().get(hashKey_tHashOutput_15);
			    }
			}
        int nb_line_tHashOutput_15 = 0;

 



/**
 * [tHashOutput_15 begin ] stop
 */



	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row35");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfM2Struct copyOfM2_tmp = new copyOfM2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tDBInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_14", false);
		start_Hash.put("tDBInput_14", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_14";
	
	
		int tos_count_tDBInput_14 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_14 = java.util.Calendar.getInstance();
		    calendar_tDBInput_14.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_14 = calendar_tDBInput_14.getTime();
		    int nb_line_tDBInput_14 = 0;
		    java.sql.Connection conn_tDBInput_14 = null;
				conn_tDBInput_14 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_14 = conn_tDBInput_14.createStatement();

		    String dbquery_tDBInput_14 = "SELECT COD_ITEM , \n       SUM(QTD_ITEM ) TOTAL_VENDA\nFROM VW_FATURAMENTO\nWHERE DATA_ANO  = YEAR(CURRENT_DATE())\nAND"
+" DATA_MES = MONTH(CURRENT_DATE()) -3\nGROUP BY COD_ITEM\n";
		    

		    globalMap.put("tDBInput_14_QUERY",dbquery_tDBInput_14);

		    java.sql.ResultSet rs_tDBInput_14 = null;

		    try {
		    	rs_tDBInput_14 = stmt_tDBInput_14.executeQuery(dbquery_tDBInput_14);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_14 = rs_tDBInput_14.getMetaData();
		    	int colQtyInRs_tDBInput_14 = rsmd_tDBInput_14.getColumnCount();

		    String tmpContent_tDBInput_14 = null;
		    
		    
		    while (rs_tDBInput_14.next()) {
		        nb_line_tDBInput_14++;
		        
							if(colQtyInRs_tDBInput_14 < 1) {
								row35.cod_item = null;
							} else {
	                         		
        	row35.cod_item = routines.system.JDBCUtil.getString(rs_tDBInput_14, 1, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 2) {
								row35.total_venda = null;
							} else {
		                          
            row35.total_venda = rs_tDBInput_14.getInt(2);
            if(rs_tDBInput_14.wasNull()){
                    row35.total_venda = null;
            }
		                    }
					

 



/**
 * [tDBInput_14 begin ] stop
 */
	
	/**
	 * [tDBInput_14 main ] start
	 */

	

	
	
	currentComponent="tDBInput_14";
	
	

 


	tos_count_tDBInput_14++;

/**
 * [tDBInput_14 main ] stop
 */
	
	/**
	 * [tDBInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_14";
	
	

 



/**
 * [tDBInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row35"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_20 = false;
		boolean mainRowRejected_tMap_20 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;// ###############################
        // ###############################
        // # Output tables

copyOfM2 = null;


// # Output table : 'copyOfM2'
copyOfM2_tmp.cod_item = row35.cod_item ;
copyOfM2_tmp.item = null;
copyOfM2_tmp.__M3__ = row35.total_venda ;
copyOfM2 = copyOfM2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "copyOfM2"
if(copyOfM2 != null) { 



	
	/**
	 * [tHashOutput_15 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"copyOfM2"
						
						);
					}
					



    
		copyOfM2Struct oneRow_tHashOutput_15 = new copyOfM2Struct();
				
					oneRow_tHashOutput_15.cod_item = copyOfM2.cod_item;
					oneRow_tHashOutput_15.item = copyOfM2.item;
					oneRow_tHashOutput_15.__M3__ = copyOfM2.__M3__;
		
        tHashFile_tHashOutput_15.put(oneRow_tHashOutput_15);
        nb_line_tHashOutput_15 ++;

 


	tos_count_tHashOutput_15++;

/**
 * [tHashOutput_15 main ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 process_data_end ] stop
 */

} // End of branch "copyOfM2"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_14";
	
	

 



/**
 * [tDBInput_14 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_14 end ] start
	 */

	

	
	
	currentComponent="tDBInput_14";
	
	

	}
}finally{
	if (rs_tDBInput_14 != null) {
		rs_tDBInput_14.close();
	}
	if (stmt_tDBInput_14 != null) {
		stmt_tDBInput_14.close();
	}
}
globalMap.put("tDBInput_14_NB_LINE",nb_line_tDBInput_14);

 

ok_Hash.put("tDBInput_14", true);
end_Hash.put("tDBInput_14", System.currentTimeMillis());




/**
 * [tDBInput_14 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row35");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */

	
	/**
	 * [tHashOutput_15 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	
globalMap.put("tHashOutput_15_NB_LINE", nb_line_tHashOutput_15);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfM2");
			  	}
			  	
 

ok_Hash.put("tHashOutput_15", true);
end_Hash.put("tHashOutput_15", System.currentTimeMillis());




/**
 * [tHashOutput_15 end ] stop
 */






				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_14:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk34", 0, "ok");
								} 
							
							tHashInput_4Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_14 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_14";
	
	

 



/**
 * [tDBInput_14 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";
	
	

 



/**
 * [tMap_20 finally ] stop
 */

	
	/**
	 * [tHashOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_15";
	
	

 



/**
 * [tHashOutput_15 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				
			    public Integer __M1__;

				public Integer get__M1__ () {
					return this.__M1__;
				}

				public Boolean __M1__IsNullable(){
				    return true;
				}
				public Boolean __M1__IsKey(){
				    return false;
				}
				public Integer __M1__Length(){
				    return null;
				}
				public Integer __M1__Precision(){
				    return null;
				}
				public String __M1__Default(){
				
					return null;
				
				}
				public String __M1__Comment(){
				
				    return "";
				
				}
				public String __M1__Pattern(){
				
					return "";
				
				}
				public String __M1__OriginalDbColumnName(){
				
					return "__M1__";
				
				}

				
			    public Integer __M2__;

				public Integer get__M2__ () {
					return this.__M2__;
				}

				public Boolean __M2__IsNullable(){
				    return true;
				}
				public Boolean __M2__IsKey(){
				    return false;
				}
				public Integer __M2__Length(){
				    return null;
				}
				public Integer __M2__Precision(){
				    return null;
				}
				public String __M2__Default(){
				
					return null;
				
				}
				public String __M2__Comment(){
				
				    return "";
				
				}
				public String __M2__Pattern(){
				
					return "";
				
				}
				public String __M2__OriginalDbColumnName(){
				
					return "__M2__";
				
				}

				
			    public Integer __M3__;

				public Integer get__M3__ () {
					return this.__M3__;
				}

				public Boolean __M3__IsNullable(){
				    return true;
				}
				public Boolean __M3__IsKey(){
				    return false;
				}
				public Integer __M3__Length(){
				    return null;
				}
				public Integer __M3__Precision(){
				    return null;
				}
				public String __M3__Default(){
				
					return null;
				
				}
				public String __M3__Comment(){
				
				    return "";
				
				}
				public String __M3__Pattern(){
				
					return "";
				
				}
				public String __M3__OriginalDbColumnName(){
				
					return "__M3__";
				
				}

				
			    public BigDecimal frete_meli;

				public BigDecimal getFrete_meli () {
					return this.frete_meli;
				}

				public Boolean frete_meliIsNullable(){
				    return true;
				}
				public Boolean frete_meliIsKey(){
				    return false;
				}
				public Integer frete_meliLength(){
				    return 20;
				}
				public Integer frete_meliPrecision(){
				    return 10;
				}
				public String frete_meliDefault(){
				
					return null;
				
				}
				public String frete_meliComment(){
				
				    return "";
				
				}
				public String frete_meliPattern(){
				
					return "";
				
				}
				public String frete_meliOriginalDbColumnName(){
				
					return "frete_meli";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this._01_ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
						this.__M3__ = readInteger(dis);
					
						this.frete_meli = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this._01_ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
						this.__M3__ = readInteger(dis);
					
						this.frete_meli = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.frete_meli);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.frete_meli);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",_01_="+String.valueOf(_01_));
		sb.append(",__07__="+String.valueOf(__07__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__M0__="+String.valueOf(__M0__));
		sb.append(",__M1__="+String.valueOf(__M1__));
		sb.append(",__M2__="+String.valueOf(__M2__));
		sb.append(",__M3__="+String.valueOf(__M3__));
		sb.append(",frete_meli="+String.valueOf(frete_meli));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class INSERTStruct implements routines.system.IPersistableRow<INSERTStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				
			    public Integer __M1__;

				public Integer get__M1__ () {
					return this.__M1__;
				}

				public Boolean __M1__IsNullable(){
				    return true;
				}
				public Boolean __M1__IsKey(){
				    return false;
				}
				public Integer __M1__Length(){
				    return null;
				}
				public Integer __M1__Precision(){
				    return null;
				}
				public String __M1__Default(){
				
					return null;
				
				}
				public String __M1__Comment(){
				
				    return "";
				
				}
				public String __M1__Pattern(){
				
					return "";
				
				}
				public String __M1__OriginalDbColumnName(){
				
					return "__M1__";
				
				}

				
			    public Integer __M2__;

				public Integer get__M2__ () {
					return this.__M2__;
				}

				public Boolean __M2__IsNullable(){
				    return true;
				}
				public Boolean __M2__IsKey(){
				    return false;
				}
				public Integer __M2__Length(){
				    return null;
				}
				public Integer __M2__Precision(){
				    return null;
				}
				public String __M2__Default(){
				
					return null;
				
				}
				public String __M2__Comment(){
				
				    return "";
				
				}
				public String __M2__Pattern(){
				
					return "";
				
				}
				public String __M2__OriginalDbColumnName(){
				
					return "__M2__";
				
				}

				
			    public Integer __M3__;

				public Integer get__M3__ () {
					return this.__M3__;
				}

				public Boolean __M3__IsNullable(){
				    return true;
				}
				public Boolean __M3__IsKey(){
				    return false;
				}
				public Integer __M3__Length(){
				    return null;
				}
				public Integer __M3__Precision(){
				    return null;
				}
				public String __M3__Default(){
				
					return null;
				
				}
				public String __M3__Comment(){
				
				    return "";
				
				}
				public String __M3__Pattern(){
				
					return "";
				
				}
				public String __M3__OriginalDbColumnName(){
				
					return "__M3__";
				
				}

				
			    public BigDecimal frete_meli;

				public BigDecimal getFrete_meli () {
					return this.frete_meli;
				}

				public Boolean frete_meliIsNullable(){
				    return true;
				}
				public Boolean frete_meliIsKey(){
				    return false;
				}
				public Integer frete_meliLength(){
				    return 20;
				}
				public Integer frete_meliPrecision(){
				    return 10;
				}
				public String frete_meliDefault(){
				
					return null;
				
				}
				public String frete_meliComment(){
				
				    return "";
				
				}
				public String frete_meliPattern(){
				
					return "";
				
				}
				public String frete_meliOriginalDbColumnName(){
				
					return "frete_meli";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this._01_ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
						this.__M3__ = readInteger(dis);
					
						this.frete_meli = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this._01_ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
						this.__M3__ = readInteger(dis);
					
						this.frete_meli = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.frete_meli);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.frete_meli);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",_01_="+String.valueOf(_01_));
		sb.append(",__07__="+String.valueOf(__07__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__M0__="+String.valueOf(__M0__));
		sb.append(",__M1__="+String.valueOf(__M1__));
		sb.append(",__M2__="+String.valueOf(__M2__));
		sb.append(",__M3__="+String.valueOf(__M3__));
		sb.append(",frete_meli="+String.valueOf(frete_meli));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(INSERTStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class M3_Struct implements routines.system.IPersistableRow<M3_Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				
			    public Integer __M1__;

				public Integer get__M1__ () {
					return this.__M1__;
				}

				public Boolean __M1__IsNullable(){
				    return true;
				}
				public Boolean __M1__IsKey(){
				    return false;
				}
				public Integer __M1__Length(){
				    return null;
				}
				public Integer __M1__Precision(){
				    return null;
				}
				public String __M1__Default(){
				
					return null;
				
				}
				public String __M1__Comment(){
				
				    return "";
				
				}
				public String __M1__Pattern(){
				
					return "";
				
				}
				public String __M1__OriginalDbColumnName(){
				
					return "__M1__";
				
				}

				
			    public Integer __M2__;

				public Integer get__M2__ () {
					return this.__M2__;
				}

				public Boolean __M2__IsNullable(){
				    return true;
				}
				public Boolean __M2__IsKey(){
				    return false;
				}
				public Integer __M2__Length(){
				    return null;
				}
				public Integer __M2__Precision(){
				    return null;
				}
				public String __M2__Default(){
				
					return null;
				
				}
				public String __M2__Comment(){
				
				    return "";
				
				}
				public String __M2__Pattern(){
				
					return "";
				
				}
				public String __M2__OriginalDbColumnName(){
				
					return "__M2__";
				
				}

				
			    public Integer __M3__;

				public Integer get__M3__ () {
					return this.__M3__;
				}

				public Boolean __M3__IsNullable(){
				    return true;
				}
				public Boolean __M3__IsKey(){
				    return false;
				}
				public Integer __M3__Length(){
				    return null;
				}
				public Integer __M3__Precision(){
				    return null;
				}
				public String __M3__Default(){
				
					return null;
				
				}
				public String __M3__Comment(){
				
				    return "";
				
				}
				public String __M3__Pattern(){
				
					return "";
				
				}
				public String __M3__OriginalDbColumnName(){
				
					return "__M3__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this._01_ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
						this.__M3__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this._01_ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
						this.__M3__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
					// Integer
				
						writeInteger(this.__M3__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",_01_="+String.valueOf(_01_));
		sb.append(",__07__="+String.valueOf(__07__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__M0__="+String.valueOf(__M0__));
		sb.append(",__M1__="+String.valueOf(__M1__));
		sb.append(",__M2__="+String.valueOf(__M2__));
		sb.append(",__M3__="+String.valueOf(__M3__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(M3_Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class M2_Struct implements routines.system.IPersistableRow<M2_Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				
			    public Integer __M1__;

				public Integer get__M1__ () {
					return this.__M1__;
				}

				public Boolean __M1__IsNullable(){
				    return true;
				}
				public Boolean __M1__IsKey(){
				    return false;
				}
				public Integer __M1__Length(){
				    return null;
				}
				public Integer __M1__Precision(){
				    return null;
				}
				public String __M1__Default(){
				
					return null;
				
				}
				public String __M1__Comment(){
				
				    return "";
				
				}
				public String __M1__Pattern(){
				
					return "";
				
				}
				public String __M1__OriginalDbColumnName(){
				
					return "__M1__";
				
				}

				
			    public Integer __M2__;

				public Integer get__M2__ () {
					return this.__M2__;
				}

				public Boolean __M2__IsNullable(){
				    return true;
				}
				public Boolean __M2__IsKey(){
				    return false;
				}
				public Integer __M2__Length(){
				    return null;
				}
				public Integer __M2__Precision(){
				    return null;
				}
				public String __M2__Default(){
				
					return null;
				
				}
				public String __M2__Comment(){
				
				    return "";
				
				}
				public String __M2__Pattern(){
				
					return "";
				
				}
				public String __M2__OriginalDbColumnName(){
				
					return "__M2__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
						this.__M2__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
					// Integer
				
						writeInteger(this.__M2__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__07__="+String.valueOf(__07__));
		sb.append(",_01_="+String.valueOf(_01_));
		sb.append(",__M0__="+String.valueOf(__M0__));
		sb.append(",__M1__="+String.valueOf(__M1__));
		sb.append(",__M2__="+String.valueOf(__M2__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(M2_Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class M1_Struct implements routines.system.IPersistableRow<M1_Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				
			    public Integer __M1__;

				public Integer get__M1__ () {
					return this.__M1__;
				}

				public Boolean __M1__IsNullable(){
				    return true;
				}
				public Boolean __M1__IsKey(){
				    return false;
				}
				public Integer __M1__Length(){
				    return null;
				}
				public Integer __M1__Precision(){
				    return null;
				}
				public String __M1__Default(){
				
					return null;
				
				}
				public String __M1__Comment(){
				
				    return "";
				
				}
				public String __M1__Pattern(){
				
					return "";
				
				}
				public String __M1__OriginalDbColumnName(){
				
					return "__M1__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
						this.__M1__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
					// Integer
				
						writeInteger(this.__M1__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__07__="+String.valueOf(__07__));
		sb.append(",_01_="+String.valueOf(_01_));
		sb.append(",__M0__="+String.valueOf(__M0__));
		sb.append(",__M1__="+String.valueOf(__M1__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(M1_Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class M0Struct implements routines.system.IPersistableRow<M0Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
						this.__M0__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
					// Integer
				
						writeInteger(this.__M0__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__07__="+String.valueOf(__07__));
		sb.append(",_01_="+String.valueOf(_01_));
		sb.append(",__M0__="+String.valueOf(__M0__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(M0Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out6Struct implements routines.system.IPersistableRow<out6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
						this._01_ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
					// Integer
				
						writeInteger(this._01_,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__07__="+String.valueOf(__07__));
		sb.append(",_01_="+String.valueOf(_01_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out4Struct implements routines.system.IPersistableRow<out4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
						this.__07__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
					// Integer
				
						writeInteger(this.__07__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
		sb.append(",__07__="+String.valueOf(__07__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out3Struct implements routines.system.IPersistableRow<out3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
						this.__15__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
					// Integer
				
						writeInteger(this.__15__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__30__="+String.valueOf(__30__));
		sb.append(",__15__="+String.valueOf(__15__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out2Struct implements routines.system.IPersistableRow<out2Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
						this.__30__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
					// Integer
				
						writeInteger(this.__30__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
		sb.append(",__30__="+String.valueOf(__30__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class out1Struct implements routines.system.IPersistableRow<out1Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
						this.__60__ = readInteger(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
					// Integer
				
						writeInteger(this.__60__,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
		sb.append(",__60__="+String.valueOf(__60__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(out1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_4Struct implements routines.system.IPersistableRow<after_tHashInput_4Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_2Process(globalMap);
		tHashInput_3Process(globalMap);
		tHashInput_6Process(globalMap);
		tHashInput_5Process(globalMap);
		tHashInput_11Process(globalMap);
		tHashInput_13Process(globalMap);
		tHashInput_14Process(globalMap);
		tHashInput_15Process(globalMap);
		tHashInput_16Process(globalMap);
		tDBInput_17Process(globalMap);

		row7Struct row7 = new row7Struct();
out1Struct out1 = new out1Struct();
out2Struct out2 = new out2Struct();
out3Struct out3 = new out3Struct();
out4Struct out4 = new out4Struct();
out6Struct out6 = new out6Struct();
M0Struct M0 = new M0Struct();
M1_Struct M1_ = new M1_Struct();
M2_Struct M2_ = new M2_Struct();
M3_Struct M3_ = new M3_Struct();
INSERTStruct INSERT = new INSERTStruct();
row19Struct row19 = new row19Struct();















	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		
		int columnIndex_tFileOutputExcel_1 = 0;
		boolean headerIsInserted_tFileOutputExcel_1 = false;
		
		
		String fileName_tFileOutputExcel_1="/root/e_mail/relatorio_sellout_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_1.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_1.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_1.setSheet("PRODUTO");
		xlsxTool_tFileOutputExcel_1.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("ARIAL");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("cd_produto");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("dc_produto");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("cd_marca");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("dc_marca");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("nm_fornecedor");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("codigo_fabrica");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("_01_");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__07__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__30__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__15__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__60__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__M0__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__M1__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__M2__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("__M3__");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("frete_meli");
		
		nb_line_tFileOutputExcel_1++;
		headerIsInserted_tFileOutputExcel_1 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tUniqRow_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tUniqRow_2", false);
		start_Hash.put("tUniqRow_2", System.currentTimeMillis());
		
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"INSERT");
					}
				
		int tos_count_tUniqRow_2 = 0;
		

	
		class KeyStruct_tUniqRow_2 {
	
			private static final int DEFAULT_HASHCODE = 1;
		    private static final int PRIME = 31;
		    private int hashCode = DEFAULT_HASHCODE;
		    public boolean hashCodeDirty = true;
	
	        
					String cd_produto;
					String dc_produto;
					String cd_marca;
					String dc_marca;
					String nm_fornecedor;
					Integer _01_;
					Integer __07__;
					Integer __30__;
					Integer __15__;
					Integer __60__;
					Integer __M0__;
					Integer __M1__;
					Integer __M2__;
					Integer __M3__;        
	        
		    @Override
			public int hashCode() {
				if (this.hashCodeDirty) {
					final int prime = PRIME;
					int result = DEFAULT_HASHCODE;
			
								result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
								
								result = prime * result + ((this.dc_produto == null) ? 0 : this.dc_produto.hashCode());
								
								result = prime * result + ((this.cd_marca == null) ? 0 : this.cd_marca.hashCode());
								
								result = prime * result + ((this.dc_marca == null) ? 0 : this.dc_marca.hashCode());
								
								result = prime * result + ((this.nm_fornecedor == null) ? 0 : this.nm_fornecedor.hashCode());
								
								result = prime * result + ((this._01_ == null) ? 0 : this._01_.hashCode());
								
								result = prime * result + ((this.__07__ == null) ? 0 : this.__07__.hashCode());
								
								result = prime * result + ((this.__30__ == null) ? 0 : this.__30__.hashCode());
								
								result = prime * result + ((this.__15__ == null) ? 0 : this.__15__.hashCode());
								
								result = prime * result + ((this.__60__ == null) ? 0 : this.__60__.hashCode());
								
								result = prime * result + ((this.__M0__ == null) ? 0 : this.__M0__.hashCode());
								
								result = prime * result + ((this.__M1__ == null) ? 0 : this.__M1__.hashCode());
								
								result = prime * result + ((this.__M2__ == null) ? 0 : this.__M2__.hashCode());
								
								result = prime * result + ((this.__M3__ == null) ? 0 : this.__M3__.hashCode());
								
		    		this.hashCode = result;
		    		this.hashCodeDirty = false;		
				}
				return this.hashCode;
			}
			
			@Override
			public boolean equals(Object obj) {
				if (this == obj) return true;
				if (obj == null) return false;
				if (getClass() != obj.getClass()) return false;
				final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;
				
									if (this.cd_produto == null) {
										if (other.cd_produto != null) 
											return false;
								
									} else if (!this.cd_produto.equals(other.cd_produto))
								 
										return false;
								
									if (this.dc_produto == null) {
										if (other.dc_produto != null) 
											return false;
								
									} else if (!this.dc_produto.equals(other.dc_produto))
								 
										return false;
								
									if (this.cd_marca == null) {
										if (other.cd_marca != null) 
											return false;
								
									} else if (!this.cd_marca.equals(other.cd_marca))
								 
										return false;
								
									if (this.dc_marca == null) {
										if (other.dc_marca != null) 
											return false;
								
									} else if (!this.dc_marca.equals(other.dc_marca))
								 
										return false;
								
									if (this.nm_fornecedor == null) {
										if (other.nm_fornecedor != null) 
											return false;
								
									} else if (!this.nm_fornecedor.equals(other.nm_fornecedor))
								 
										return false;
								
									if (this._01_ == null) {
										if (other._01_ != null) 
											return false;
								
									} else if (!this._01_.equals(other._01_))
								 
										return false;
								
									if (this.__07__ == null) {
										if (other.__07__ != null) 
											return false;
								
									} else if (!this.__07__.equals(other.__07__))
								 
										return false;
								
									if (this.__30__ == null) {
										if (other.__30__ != null) 
											return false;
								
									} else if (!this.__30__.equals(other.__30__))
								 
										return false;
								
									if (this.__15__ == null) {
										if (other.__15__ != null) 
											return false;
								
									} else if (!this.__15__.equals(other.__15__))
								 
										return false;
								
									if (this.__60__ == null) {
										if (other.__60__ != null) 
											return false;
								
									} else if (!this.__60__.equals(other.__60__))
								 
										return false;
								
									if (this.__M0__ == null) {
										if (other.__M0__ != null) 
											return false;
								
									} else if (!this.__M0__.equals(other.__M0__))
								 
										return false;
								
									if (this.__M1__ == null) {
										if (other.__M1__ != null) 
											return false;
								
									} else if (!this.__M1__.equals(other.__M1__))
								 
										return false;
								
									if (this.__M2__ == null) {
										if (other.__M2__ != null) 
											return false;
								
									} else if (!this.__M2__.equals(other.__M2__))
								 
										return false;
								
									if (this.__M3__ == null) {
										if (other.__M3__ != null) 
											return false;
								
									} else if (!this.__M3__.equals(other.__M3__))
								 
										return false;
								
				
				return true;
			}
	  
	        
		}

	
int nb_uniques_tUniqRow_2 = 0;
int nb_duplicates_tUniqRow_2 = 0;
KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>(); 

 



/**
 * [tUniqRow_2 begin ] stop
 */



	
	/**
	 * [tMap_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_12", false);
		start_Hash.put("tMap_12", System.currentTimeMillis());
		
	
	currentComponent="tMap_12";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"M3_");
					}
				
		int tos_count_tMap_12 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct>) 
					globalMap.get( "tHash_Lookup_row15" ))
					;					
					
	

row15Struct row15HashKey = new row15Struct();
row15Struct row15Default = new row15Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_12__Struct  {
}
Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
INSERTStruct INSERT_tmp = new INSERTStruct();
// ###############################

        
        



        









 



/**
 * [tMap_12 begin ] stop
 */



	
	/**
	 * [tMap_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_23", false);
		start_Hash.put("tMap_23", System.currentTimeMillis());
		
	
	currentComponent="tMap_23";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"M2_");
					}
				
		int tos_count_tMap_23 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) 
					globalMap.get( "tHash_Lookup_row38" ))
					;					
					
	

row38Struct row38HashKey = new row38Struct();
row38Struct row38Default = new row38Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_23__Struct  {
}
Var__tMap_23__Struct Var__tMap_23 = new Var__tMap_23__Struct();
// ###############################

// ###############################
// # Outputs initialization
M3_Struct M3__tmp = new M3_Struct();
// ###############################

        
        



        









 



/**
 * [tMap_23 begin ] stop
 */



	
	/**
	 * [tMap_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_22", false);
		start_Hash.put("tMap_22", System.currentTimeMillis());
		
	
	currentComponent="tMap_22";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"M1_");
					}
				
		int tos_count_tMap_22 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct> tHash_Lookup_row37 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct>) 
					globalMap.get( "tHash_Lookup_row37" ))
					;					
					
	

row37Struct row37HashKey = new row37Struct();
row37Struct row37Default = new row37Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_22__Struct  {
}
Var__tMap_22__Struct Var__tMap_22 = new Var__tMap_22__Struct();
// ###############################

// ###############################
// # Outputs initialization
M2_Struct M2__tmp = new M2_Struct();
// ###############################

        
        



        









 



/**
 * [tMap_22 begin ] stop
 */



	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"M0");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct>) 
					globalMap.get( "tHash_Lookup_row36" ))
					;					
					
	

row36Struct row36HashKey = new row36Struct();
row36Struct row36Default = new row36Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
M1_Struct M1__tmp = new M1_Struct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out6");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct>) 
					globalMap.get( "tHash_Lookup_row32" ))
					;					
					
	

row32Struct row32HashKey = new row32Struct();
row32Struct row32Default = new row32Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
M0Struct M0_tmp = new M0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out4");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct>) 
					globalMap.get( "tHash_Lookup_row28" ))
					;					
					
	

row28Struct row28HashKey = new row28Struct();
row28Struct row28Default = new row28Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
out6Struct out6_tmp = new out6Struct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tMap_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_11", false);
		start_Hash.put("tMap_11", System.currentTimeMillis());
		
	
	currentComponent="tMap_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out3");
					}
				
		int tos_count_tMap_11 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) 
					globalMap.get( "tHash_Lookup_row14" ))
					;					
					
	

row14Struct row14HashKey = new row14Struct();
row14Struct row14Default = new row14Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_11__Struct  {
}
Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
out4Struct out4_tmp = new out4Struct();
// ###############################

        
        



        









 



/**
 * [tMap_11 begin ] stop
 */



	
	/**
	 * [tMap_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_10", false);
		start_Hash.put("tMap_10", System.currentTimeMillis());
		
	
	currentComponent="tMap_10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out2");
					}
				
		int tos_count_tMap_10 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct>) 
					globalMap.get( "tHash_Lookup_row13" ))
					;					
					
	

row13Struct row13HashKey = new row13Struct();
row13Struct row13Default = new row13Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_10__Struct  {
}
Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
out3Struct out3_tmp = new out3Struct();
// ###############################

        
        



        









 



/**
 * [tMap_10 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out1");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) 
					globalMap.get( "tHash_Lookup_row8" ))
					;					
					
	

row8Struct row8HashKey = new row8Struct();
row8Struct row8Default = new row8Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
out2Struct out2_tmp = new out2Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) 
					globalMap.get( "tHash_Lookup_row10" ))
					;					
					
	

row10Struct row10HashKey = new row10Struct();
row10Struct row10Default = new row10Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
out1Struct out1_tmp = new out1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tHashInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_4", false);
		start_Hash.put("tHashInput_4", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_4";
	
	
		int tos_count_tHashInput_4 = 0;
		


int nb_line_tHashInput_4 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_4=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<_produto_Struct> tHashFile_tHashInput_4 = mf_tHashInput_4.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_4==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<_produto_Struct> iterator_tHashInput_4 = tHashFile_tHashInput_4.iterator();
while (iterator_tHashInput_4.hasNext()) {
    _produto_Struct next_tHashInput_4 = iterator_tHashInput_4.next();

	row7.cd_produto = next_tHashInput_4.cd_produto;
	row7.dc_produto = next_tHashInput_4.dc_produto;
	row7.cd_marca = next_tHashInput_4.cd_marca;
	row7.dc_marca = next_tHashInput_4.dc_marca;
	row7.nm_fornecedor = next_tHashInput_4.nm_fornecedor;
	row7.codigo_fabrica = next_tHashInput_4.codigo_fabrica;

 



/**
 * [tHashInput_4 begin ] stop
 */
	
	/**
	 * [tHashInput_4 main ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 


	tos_count_tHashInput_4++;

/**
 * [tHashInput_4 main ] stop
 */
	
	/**
	 * [tHashInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row7"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
						row10Struct row10 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_7 = false;
		boolean mainRowRejected_tMap_7 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row10" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow10 = false;
       		  	    	
       		  	    	
 							row10Struct row10ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_7) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_7 = false;
								
                        		    		    row10HashKey.cod_item = row7.cd_produto ;
                        		    		

								
		                        	row10HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row10.lookup( row10HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row10' and it contains more one result from keys :  row10.cod_item = '" + row10HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row10Struct fromLookup_row10 = null;
							row10 = row10Default;
										 
							
								 
							
							
								if (tHash_Lookup_row10 !=null && tHash_Lookup_row10.hasNext()) { // G 099
								
							
								
								fromLookup_row10 = tHash_Lookup_row10.next();

							
							
								} // G 099
							
							

							if(fromLookup_row10 != null) {
								row10 = fromLookup_row10;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

out1 = null;


// # Output table : 'out1'
out1_tmp.cd_produto = row7.cd_produto ;
out1_tmp.dc_produto = row7.dc_produto ;
out1_tmp.cd_marca = row7.cd_marca ;
out1_tmp.dc_marca = row7.dc_marca ;
out1_tmp.nm_fornecedor = row7.nm_fornecedor ;
out1_tmp.codigo_fabrica = row7.codigo_fabrica ;
out1_tmp.__60__ = row10.__60__ ;
out1 = out1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "out1"
if(out1 != null) { 



	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out1"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
						row8Struct row8 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_5 = false;
		boolean mainRowRejected_tMap_5 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row8" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow8 = false;
       		  	    	
       		  	    	
 							row8Struct row8ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_5) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_5 = false;
								
                        		    		    row8HashKey.cod_item = out1.cd_produto ;
                        		    		

								
		                        	row8HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row8.lookup( row8HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8' and it contains more one result from keys :  row8.cod_item = '" + row8HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row8Struct fromLookup_row8 = null;
							row8 = row8Default;
										 
							
								 
							
							
								if (tHash_Lookup_row8 !=null && tHash_Lookup_row8.hasNext()) { // G 099
								
							
								
								fromLookup_row8 = tHash_Lookup_row8.next();

							
							
								} // G 099
							
							

							if(fromLookup_row8 != null) {
								row8 = fromLookup_row8;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

out2 = null;


// # Output table : 'out2'
out2_tmp.cd_produto = out1.cd_produto  ;
out2_tmp.dc_produto = out1.dc_produto ;
out2_tmp.cd_marca = out1.cd_marca  ;
out2_tmp.dc_marca = out1.dc_marca  ;
out2_tmp.nm_fornecedor = out1.nm_fornecedor ;
out2_tmp.codigo_fabrica = out1.codigo_fabrica ;
out2_tmp.__60__ = out1.__60__  ;
out2_tmp.__30__ = row8.__30__  ;
out2 = out2_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "out2"
if(out2 != null) { 



	
	/**
	 * [tMap_10 main ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out2"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;
		
						row13Struct row13 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_10 = false;
		boolean mainRowRejected_tMap_10 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row13" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow13 = false;
       		  	    	
       		  	    	
 							row13Struct row13ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_10) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_10 = false;
								
                        		    		    row13HashKey.cod_item = out2.cd_produto ;
                        		    		

								
		                        	row13HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row13.lookup( row13HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row13 != null && tHash_Lookup_row13.getCount(row13HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row13' and it contains more one result from keys :  row13.cod_item = '" + row13HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row13Struct fromLookup_row13 = null;
							row13 = row13Default;
										 
							
								 
							
							
								if (tHash_Lookup_row13 !=null && tHash_Lookup_row13.hasNext()) { // G 099
								
							
								
								fromLookup_row13 = tHash_Lookup_row13.next();

							
							
								} // G 099
							
							

							if(fromLookup_row13 != null) {
								row13 = fromLookup_row13;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
        // ###############################
        // # Output tables

out3 = null;


// # Output table : 'out3'
out3_tmp.cd_produto = out2.cd_produto ;
out3_tmp.dc_produto = out2.dc_produto ;
out3_tmp.cd_marca = out2.cd_marca ;
out3_tmp.dc_marca = out2.dc_marca ;
out3_tmp.nm_fornecedor = out2.nm_fornecedor ;
out3_tmp.codigo_fabrica = out2.codigo_fabrica ;
out3_tmp.__60__ = out2.__60__ ;
out3_tmp.__30__ = out2.__30__ ;
out3_tmp.__15__ = row13.__15__ ;
out3 = out3_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_10 = false;










 


	tos_count_tMap_10++;

/**
 * [tMap_10 main ] stop
 */
	
	/**
	 * [tMap_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_begin ] stop
 */
// Start of branch "out3"
if(out3 != null) { 



	
	/**
	 * [tMap_11 main ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out3"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;
		
						row14Struct row14 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_11 = false;
		boolean mainRowRejected_tMap_11 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row14" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow14 = false;
       		  	    	
       		  	    	
 							row14Struct row14ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_11) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_11 = false;
								
                        		    		    row14HashKey.cod_item = out3.cd_produto ;
                        		    		

								
		                        	row14HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row14.lookup( row14HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row14' and it contains more one result from keys :  row14.cod_item = '" + row14HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row14Struct fromLookup_row14 = null;
							row14 = row14Default;
										 
							
								 
							
							
								if (tHash_Lookup_row14 !=null && tHash_Lookup_row14.hasNext()) { // G 099
								
							
								
								fromLookup_row14 = tHash_Lookup_row14.next();

							
							
								} // G 099
							
							

							if(fromLookup_row14 != null) {
								row14 = fromLookup_row14;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
        // ###############################
        // # Output tables

out4 = null;


// # Output table : 'out4'
out4_tmp.cd_produto = out3.cd_produto ;
out4_tmp.dc_produto = out3.dc_produto ;
out4_tmp.cd_marca = out3.cd_marca ;
out4_tmp.dc_marca = out3.dc_marca ;
out4_tmp.nm_fornecedor = out3.nm_fornecedor ;
out4_tmp.codigo_fabrica = out3.codigo_fabrica ;
out4_tmp.__60__ = out3.__60__ ;
out4_tmp.__30__ = out3.__30__ ;
out4_tmp.__15__ = out3.__15__ ;
out4_tmp.__07__ = row14.__07__ ;
out4 = out4_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_11 = false;










 


	tos_count_tMap_11++;

/**
 * [tMap_11 main ] stop
 */
	
	/**
	 * [tMap_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_begin ] stop
 */
// Start of branch "out4"
if(out4 != null) { 



	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out4"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		
						row28Struct row28 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_14 = false;
		boolean mainRowRejected_tMap_14 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row28" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow28 = false;
       		  	    	
       		  	    	
 							row28Struct row28ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_14) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_14 = false;
								
                        		    		    row28HashKey.cod_item = out4.cd_produto ;
                        		    		

								
		                        	row28HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row28.lookup( row28HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row28 != null && tHash_Lookup_row28.getCount(row28HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row28' and it contains more one result from keys :  row28.cod_item = '" + row28HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row28Struct fromLookup_row28 = null;
							row28 = row28Default;
										 
							
								 
							
							
								if (tHash_Lookup_row28 !=null && tHash_Lookup_row28.hasNext()) { // G 099
								
							
								
								fromLookup_row28 = tHash_Lookup_row28.next();

							
							
								} // G 099
							
							

							if(fromLookup_row28 != null) {
								row28 = fromLookup_row28;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
        // ###############################
        // # Output tables

out6 = null;


// # Output table : 'out6'
out6_tmp.cd_produto = out4.cd_produto ;
out6_tmp.dc_produto = out4.dc_produto ;
out6_tmp.cd_marca = out4.cd_marca ;
out6_tmp.dc_marca = out4.dc_marca ;
out6_tmp.nm_fornecedor = out4.nm_fornecedor ;
out6_tmp.codigo_fabrica = out4.codigo_fabrica ;
out6_tmp.__60__ = out4.__60__ ;
out6_tmp.__30__ = out4.__30__ ;
out6_tmp.__15__ = out4.__15__ ;
out6_tmp.__07__ = out4.__07__ ;
out6_tmp._01_ = row28._01_ ;
out6 = out6_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "out6"
if(out6 != null) { 



	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		
						row32Struct row32 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_17 = false;
		boolean mainRowRejected_tMap_17 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row32" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow32 = false;
       		  	    	
       		  	    	
 							row32Struct row32ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_17) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_17 = false;
								
                        		    		    row32HashKey.cod_item = out6.cd_produto ;
                        		    		

								
		                        	row32HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row32.lookup( row32HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row32 != null && tHash_Lookup_row32.getCount(row32HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row32' and it contains more one result from keys :  row32.cod_item = '" + row32HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row32Struct fromLookup_row32 = null;
							row32 = row32Default;
										 
							
								 
							
							
								if (tHash_Lookup_row32 !=null && tHash_Lookup_row32.hasNext()) { // G 099
								
							
								
								fromLookup_row32 = tHash_Lookup_row32.next();

							
							
								} // G 099
							
							

							if(fromLookup_row32 != null) {
								row32 = fromLookup_row32;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;// ###############################
        // ###############################
        // # Output tables

M0 = null;


// # Output table : 'M0'
M0_tmp.cd_produto = out6.cd_produto;
M0_tmp.dc_produto = out6.dc_produto;
M0_tmp.cd_marca = out6.cd_marca;
M0_tmp.dc_marca = out6.dc_marca;
M0_tmp.nm_fornecedor = out6.nm_fornecedor;
M0_tmp.codigo_fabrica = out6.codigo_fabrica;
M0_tmp.__60__ = out6.__60__;
M0_tmp.__30__ = out6.__30__;
M0_tmp.__15__ = out6.__15__;
M0_tmp.__07__ = out6.__07__;
M0_tmp._01_ = out6._01_;
M0_tmp.__M0__ = row32.__M0__ ;
M0 = M0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "M0"
if(M0 != null) { 



	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"M0"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		
						row36Struct row36 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_21 = false;
		boolean mainRowRejected_tMap_21 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row36" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow36 = false;
       		  	    	
       		  	    	
 							row36Struct row36ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_21) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_21 = false;
								
                        		    		    row36HashKey.cod_item = M0.cd_produto ;
                        		    		

								
		                        	row36HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row36.lookup( row36HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row36 != null && tHash_Lookup_row36.getCount(row36HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row36' and it contains more one result from keys :  row36.cod_item = '" + row36HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row36Struct fromLookup_row36 = null;
							row36 = row36Default;
										 
							
								 
							
							
								if (tHash_Lookup_row36 !=null && tHash_Lookup_row36.hasNext()) { // G 099
								
							
								
								fromLookup_row36 = tHash_Lookup_row36.next();

							
							
								} // G 099
							
							

							if(fromLookup_row36 != null) {
								row36 = fromLookup_row36;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
        // ###############################
        // # Output tables

M1_ = null;


// # Output table : 'M1_'
M1__tmp.cd_produto = M0.cd_produto;
M1__tmp.dc_produto = M0.dc_produto;
M1__tmp.cd_marca = M0.cd_marca;
M1__tmp.dc_marca = M0.dc_marca;
M1__tmp.nm_fornecedor = M0.nm_fornecedor;
M1__tmp.codigo_fabrica = M0.codigo_fabrica;
M1__tmp.__60__ = M0.__60__;
M1__tmp.__30__ = M0.__30__;
M1__tmp.__15__ = M0.__15__;
M1__tmp.__07__ = M0.__07__;
M1__tmp._01_ = M0._01_;
M1__tmp.__M0__ = M0.__M0__;
M1__tmp.__M1__ = row36.__M1__ ;
M1_ = M1__tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "M1_"
if(M1_ != null) { 



	
	/**
	 * [tMap_22 main ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"M1_"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_22 = false;
		
						row37Struct row37 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_22 = false;
		boolean mainRowRejected_tMap_22 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row37" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow37 = false;
       		  	    	
       		  	    	
 							row37Struct row37ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_22) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_22 = false;
								
                        		    		    row37HashKey.cod_item = M1_.cd_produto ;
                        		    		

								
		                        	row37HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row37.lookup( row37HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row37 != null && tHash_Lookup_row37.getCount(row37HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row37' and it contains more one result from keys :  row37.cod_item = '" + row37HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row37Struct fromLookup_row37 = null;
							row37 = row37Default;
										 
							
								 
							
							
								if (tHash_Lookup_row37 !=null && tHash_Lookup_row37.hasNext()) { // G 099
								
							
								
								fromLookup_row37 = tHash_Lookup_row37.next();

							
							
								} // G 099
							
							

							if(fromLookup_row37 != null) {
								row37 = fromLookup_row37;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_22__Struct Var = Var__tMap_22;// ###############################
        // ###############################
        // # Output tables

M2_ = null;


// # Output table : 'M2_'
M2__tmp.cd_produto = M1_.cd_produto;
M2__tmp.dc_produto = M1_.dc_produto;
M2__tmp.cd_marca = M1_.cd_marca;
M2__tmp.dc_marca = M1_.dc_marca;
M2__tmp.nm_fornecedor = M1_.nm_fornecedor;
M2__tmp.codigo_fabrica = M1_.codigo_fabrica;
M2__tmp.__60__ = M1_.__60__;
M2__tmp.__30__ = M1_.__30__;
M2__tmp.__15__ = M1_.__15__;
M2__tmp.__07__ = M1_.__07__;
M2__tmp._01_ = M1_._01_;
M2__tmp.__M0__ = M1_.__M0__;
M2__tmp.__M1__ = M1_.__M1__ ;
M2__tmp.__M2__ = row37.__M2__ ;
M2_ = M2__tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_22 = false;










 


	tos_count_tMap_22++;

/**
 * [tMap_22 main ] stop
 */
	
	/**
	 * [tMap_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 process_data_begin ] stop
 */
// Start of branch "M2_"
if(M2_ != null) { 



	
	/**
	 * [tMap_23 main ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"M2_"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_23 = false;
		
						row38Struct row38 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_23 = false;
		boolean mainRowRejected_tMap_23 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row38" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow38 = false;
       		  	    	
       		  	    	
 							row38Struct row38ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_23) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_23 = false;
								
                        		    		    row38HashKey.cod_item = M2_.cd_produto ;
                        		    		

								
		                        	row38HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row38.lookup( row38HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row38 != null && tHash_Lookup_row38.getCount(row38HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row38' and it contains more one result from keys :  row38.cod_item = '" + row38HashKey.cod_item + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row38Struct fromLookup_row38 = null;
							row38 = row38Default;
										 
							
								 
							
							
								if (tHash_Lookup_row38 !=null && tHash_Lookup_row38.hasNext()) { // G 099
								
							
								
								fromLookup_row38 = tHash_Lookup_row38.next();

							
							
								} // G 099
							
							

							if(fromLookup_row38 != null) {
								row38 = fromLookup_row38;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_23__Struct Var = Var__tMap_23;// ###############################
        // ###############################
        // # Output tables

M3_ = null;


// # Output table : 'M3_'
M3__tmp.cd_produto = M2_.cd_produto;
M3__tmp.dc_produto = M2_.dc_produto;
M3__tmp.cd_marca = M2_.cd_marca;
M3__tmp.dc_marca = M2_.dc_marca;
M3__tmp.nm_fornecedor = M2_.nm_fornecedor;
M3__tmp.codigo_fabrica = M2_.codigo_fabrica;
M3__tmp._01_ = M2_._01_ != null ? M2_._01_ : 0 ;
M3__tmp.__07__ = M2_.__07__ != null ? M2_.__07__ : 0 ;
M3__tmp.__30__ = M2_.__30__ != null ? M2_.__30__ : 0 ;
M3__tmp.__15__ = M2_.__15__ != null ? M2_.__15__ : 0 ;
M3__tmp.__60__ = M2_.__60__ != null ? M2_.__60__ : 0 ;
M3__tmp.__M0__ = M2_.__M0__ != null ? M2_.__M0__ : 0 ;
M3__tmp.__M1__ = M2_.__M1__ != null ? M2_.__M1__ : 0 ;
M3__tmp.__M2__ = M2_.__M2__ != null ? M2_.__M2__ : 0 ;
M3__tmp.__M3__ = row38.__M3__ != null ? row38.__M3__ : 0 ;
M3_ = M3__tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_23 = false;










 


	tos_count_tMap_23++;

/**
 * [tMap_23 main ] stop
 */
	
	/**
	 * [tMap_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 process_data_begin ] stop
 */
// Start of branch "M3_"
if(M3_ != null) { 



	
	/**
	 * [tMap_12 main ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"M3_"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;
		
						row15Struct row15 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_12 = false;
		boolean mainRowRejected_tMap_12 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row15" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow15 = false;
       		  	    	
       		  	    	
 							row15Struct row15ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_12) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_12 = false;
								
                        		    		    row15HashKey.NUM_CODITE = M3_.cd_produto ;
                        		    		

								
		                        	row15HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row15.lookup( row15HashKey );

	  							

	  							

 								
		  				
	  								
						
									
  									  		
 								



							} // G_TM_M_020
			           		  	  
							
				           		if(tHash_Lookup_row15 != null && tHash_Lookup_row15.getCount(row15HashKey) > 1) { // G 071
			  							
			  						
									 		
									//System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row15' and it contains more one result from keys :  row15.NUM_CODITE = '" + row15HashKey.NUM_CODITE + "'");
								} // G 071
							

							
                    		  	 
							   
                    		  	 
	       		  	    	row15Struct fromLookup_row15 = null;
							row15 = row15Default;
										 
							
								 
							
							
								if (tHash_Lookup_row15 !=null && tHash_Lookup_row15.hasNext()) { // G 099
								
							
								
								fromLookup_row15 = tHash_Lookup_row15.next();

							
							
								} // G 099
							
							

							if(fromLookup_row15 != null) {
								row15 = fromLookup_row15;
							}
							
							
							
			  							
								
	                    		  	
		                    
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
        // ###############################
        // # Output tables

INSERT = null;


// # Output table : 'INSERT'
INSERT_tmp.cd_produto = M3_.cd_produto;
INSERT_tmp.dc_produto = M3_.dc_produto;
INSERT_tmp.cd_marca = M3_.cd_marca;
INSERT_tmp.dc_marca = M3_.dc_marca;
INSERT_tmp.nm_fornecedor = M3_.nm_fornecedor;
INSERT_tmp.codigo_fabrica = M3_.codigo_fabrica;
INSERT_tmp._01_ = M3_._01_;
INSERT_tmp.__07__ = M3_.__07__;
INSERT_tmp.__30__ = M3_.__30__;
INSERT_tmp.__15__ = M3_.__15__;
INSERT_tmp.__60__ = M3_.__60__;
INSERT_tmp.__M0__ = M3_.__M0__;
INSERT_tmp.__M1__ = M3_.__M1__;
INSERT_tmp.__M2__ = M3_.__M2__;
INSERT_tmp.__M3__ = M3_.__M3__;
INSERT_tmp.frete_meli = row15.NUM_VALATR ;
INSERT = INSERT_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_12 = false;










 


	tos_count_tMap_12++;

/**
 * [tMap_12 main ] stop
 */
	
	/**
	 * [tMap_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_begin ] stop
 */
// Start of branch "INSERT"
if(INSERT != null) { 



	
	/**
	 * [tUniqRow_2 main ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"INSERT"
						
						);
					}
					
row19 = null;			
if(INSERT.cd_produto == null){
	finder_tUniqRow_2.cd_produto = null;
}else{
	finder_tUniqRow_2.cd_produto = INSERT.cd_produto.toLowerCase();
}
if(INSERT.dc_produto == null){
	finder_tUniqRow_2.dc_produto = null;
}else{
	finder_tUniqRow_2.dc_produto = INSERT.dc_produto.toLowerCase();
}
if(INSERT.cd_marca == null){
	finder_tUniqRow_2.cd_marca = null;
}else{
	finder_tUniqRow_2.cd_marca = INSERT.cd_marca.toLowerCase();
}
if(INSERT.dc_marca == null){
	finder_tUniqRow_2.dc_marca = null;
}else{
	finder_tUniqRow_2.dc_marca = INSERT.dc_marca.toLowerCase();
}
if(INSERT.nm_fornecedor == null){
	finder_tUniqRow_2.nm_fornecedor = null;
}else{
	finder_tUniqRow_2.nm_fornecedor = INSERT.nm_fornecedor.toLowerCase();
}
finder_tUniqRow_2._01_ = INSERT._01_;
finder_tUniqRow_2.__07__ = INSERT.__07__;
finder_tUniqRow_2.__30__ = INSERT.__30__;
finder_tUniqRow_2.__15__ = INSERT.__15__;
finder_tUniqRow_2.__60__ = INSERT.__60__;
finder_tUniqRow_2.__M0__ = INSERT.__M0__;
finder_tUniqRow_2.__M1__ = INSERT.__M1__;
finder_tUniqRow_2.__M2__ = INSERT.__M2__;
finder_tUniqRow_2.__M3__ = INSERT.__M3__;	
finder_tUniqRow_2.hashCodeDirty = true;
if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
		KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

		
if(INSERT.cd_produto == null){
	new_tUniqRow_2.cd_produto = null;
}else{
	new_tUniqRow_2.cd_produto = INSERT.cd_produto.toLowerCase();
}
if(INSERT.dc_produto == null){
	new_tUniqRow_2.dc_produto = null;
}else{
	new_tUniqRow_2.dc_produto = INSERT.dc_produto.toLowerCase();
}
if(INSERT.cd_marca == null){
	new_tUniqRow_2.cd_marca = null;
}else{
	new_tUniqRow_2.cd_marca = INSERT.cd_marca.toLowerCase();
}
if(INSERT.dc_marca == null){
	new_tUniqRow_2.dc_marca = null;
}else{
	new_tUniqRow_2.dc_marca = INSERT.dc_marca.toLowerCase();
}
if(INSERT.nm_fornecedor == null){
	new_tUniqRow_2.nm_fornecedor = null;
}else{
	new_tUniqRow_2.nm_fornecedor = INSERT.nm_fornecedor.toLowerCase();
}
new_tUniqRow_2._01_ = INSERT._01_;
new_tUniqRow_2.__07__ = INSERT.__07__;
new_tUniqRow_2.__30__ = INSERT.__30__;
new_tUniqRow_2.__15__ = INSERT.__15__;
new_tUniqRow_2.__60__ = INSERT.__60__;
new_tUniqRow_2.__M0__ = INSERT.__M0__;
new_tUniqRow_2.__M1__ = INSERT.__M1__;
new_tUniqRow_2.__M2__ = INSERT.__M2__;
new_tUniqRow_2.__M3__ = INSERT.__M3__;
		
		keystUniqRow_2.add(new_tUniqRow_2);if(row19 == null){ 
	
	row19 = new row19Struct();
}row19.cd_produto = INSERT.cd_produto;			row19.dc_produto = INSERT.dc_produto;			row19.cd_marca = INSERT.cd_marca;			row19.dc_marca = INSERT.dc_marca;			row19.nm_fornecedor = INSERT.nm_fornecedor;			row19.codigo_fabrica = INSERT.codigo_fabrica;			row19._01_ = INSERT._01_;			row19.__07__ = INSERT.__07__;			row19.__30__ = INSERT.__30__;			row19.__15__ = INSERT.__15__;			row19.__60__ = INSERT.__60__;			row19.__M0__ = INSERT.__M0__;			row19.__M1__ = INSERT.__M1__;			row19.__M2__ = INSERT.__M2__;			row19.__M3__ = INSERT.__M3__;			row19.frete_meli = INSERT.frete_meli;					
		nb_uniques_tUniqRow_2++;
	} else {
	  nb_duplicates_tUniqRow_2++;
	}

 


	tos_count_tUniqRow_2++;

/**
 * [tUniqRow_2 main ] stop
 */
	
	/**
	 * [tUniqRow_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_begin ] stop
 */
// Start of branch "row19"
if(row19 != null) { 



	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row19"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(row19.cd_produto != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row19.cd_produto));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.dc_produto != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row19.dc_produto));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.cd_marca != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row19.cd_marca));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.dc_marca != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row19.dc_marca));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.nm_fornecedor != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row19.nm_fornecedor));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.codigo_fabrica != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(row19.codigo_fabrica));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19._01_ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19._01_)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__07__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__07__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__30__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__30__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__15__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__15__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__60__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__60__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__M0__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__M0__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__M1__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__M1__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__M2__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__M2__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.__M3__ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(Double.parseDouble(String.valueOf(row19.__M3__)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(row19.frete_meli != null) {
    						
							xlsxTool_tFileOutputExcel_1.addCellValue((row19.frete_meli.setScale(10, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */

} // End of branch "row19"




	
	/**
	 * [tUniqRow_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 process_data_end ] stop
 */

} // End of branch "INSERT"




	
	/**
	 * [tMap_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 process_data_end ] stop
 */

} // End of branch "M3_"




	
	/**
	 * [tMap_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 process_data_end ] stop
 */

} // End of branch "M2_"




	
	/**
	 * [tMap_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 process_data_end ] stop
 */

} // End of branch "M1_"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 process_data_end ] stop
 */

} // End of branch "M0"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 process_data_end ] stop
 */

} // End of branch "out6"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 process_data_end ] stop
 */

} // End of branch "out4"




	
	/**
	 * [tMap_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 process_data_end ] stop
 */

} // End of branch "out3"




	
	/**
	 * [tMap_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 process_data_end ] stop
 */

} // End of branch "out2"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 process_data_end ] stop
 */

} // End of branch "out1"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_4 end ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	
    

		
			nb_line_tHashInput_4++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_4_NB_LINE", nb_line_tHashInput_4);       

 

ok_Hash.put("tHashInput_4", true);
end_Hash.put("tHashInput_4", System.currentTimeMillis());




/**
 * [tHashInput_4 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row10 != null) {
						tHash_Lookup_row10.endGet();
					}
					globalMap.remove( "tHash_Lookup_row10" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row8 != null) {
						tHash_Lookup_row8.endGet();
					}
					globalMap.remove( "tHash_Lookup_row8" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out1");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tMap_10 end ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row13 != null) {
						tHash_Lookup_row13.endGet();
					}
					globalMap.remove( "tHash_Lookup_row13" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out2");
			  	}
			  	
 

ok_Hash.put("tMap_10", true);
end_Hash.put("tMap_10", System.currentTimeMillis());




/**
 * [tMap_10 end ] stop
 */

	
	/**
	 * [tMap_11 end ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row14 != null) {
						tHash_Lookup_row14.endGet();
					}
					globalMap.remove( "tHash_Lookup_row14" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out3");
			  	}
			  	
 

ok_Hash.put("tMap_11", true);
end_Hash.put("tMap_11", System.currentTimeMillis());




/**
 * [tMap_11 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row28 != null) {
						tHash_Lookup_row28.endGet();
					}
					globalMap.remove( "tHash_Lookup_row28" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out4");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row32 != null) {
						tHash_Lookup_row32.endGet();
					}
					globalMap.remove( "tHash_Lookup_row32" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out6");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row36 != null) {
						tHash_Lookup_row36.endGet();
					}
					globalMap.remove( "tHash_Lookup_row36" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"M0");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */

	
	/**
	 * [tMap_22 end ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row37 != null) {
						tHash_Lookup_row37.endGet();
					}
					globalMap.remove( "tHash_Lookup_row37" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"M1_");
			  	}
			  	
 

ok_Hash.put("tMap_22", true);
end_Hash.put("tMap_22", System.currentTimeMillis());




/**
 * [tMap_22 end ] stop
 */

	
	/**
	 * [tMap_23 end ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row38 != null) {
						tHash_Lookup_row38.endGet();
					}
					globalMap.remove( "tHash_Lookup_row38" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"M2_");
			  	}
			  	
 

ok_Hash.put("tMap_23", true);
end_Hash.put("tMap_23", System.currentTimeMillis());




/**
 * [tMap_23 end ] stop
 */

	
	/**
	 * [tMap_12 end ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row15 != null) {
						tHash_Lookup_row15.endGet();
					}
					globalMap.remove( "tHash_Lookup_row15" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"M3_");
			  	}
			  	
 

ok_Hash.put("tMap_12", true);
end_Hash.put("tMap_12", System.currentTimeMillis());




/**
 * [tMap_12 end ] stop
 */

	
	/**
	 * [tUniqRow_2 end ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

globalMap.put("tUniqRow_2_NB_UNIQUES",nb_uniques_tUniqRow_2);
globalMap.put("tUniqRow_2_NB_DUPLICATES",nb_duplicates_tUniqRow_2);

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"INSERT");
			  	}
			  	
 

ok_Hash.put("tUniqRow_2", true);
end_Hash.put("tUniqRow_2", System.currentTimeMillis());




/**
 * [tUniqRow_2 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		if(headerIsInserted_tFileOutputExcel_1 && nb_line_tFileOutputExcel_1 > 0){
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		}
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */




































				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_4:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk14", 0, "ok");
								} 
							
							tHashInput_9Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_12"
					     			globalMap.remove("tHash_Lookup_row15"); 
				     			
					     			//free memory for "tMap_23"
					     			globalMap.remove("tHash_Lookup_row38"); 
				     			
					     			//free memory for "tMap_22"
					     			globalMap.remove("tHash_Lookup_row37"); 
				     			
					     			//free memory for "tMap_21"
					     			globalMap.remove("tHash_Lookup_row36"); 
				     			
					     			//free memory for "tMap_17"
					     			globalMap.remove("tHash_Lookup_row32"); 
				     			
					     			//free memory for "tMap_14"
					     			globalMap.remove("tHash_Lookup_row28"); 
				     			
					     			//free memory for "tMap_11"
					     			globalMap.remove("tHash_Lookup_row14"); 
				     			
					     			//free memory for "tMap_10"
					     			globalMap.remove("tHash_Lookup_row13"); 
				     			
					     			//free memory for "tMap_5"
					     			globalMap.remove("tHash_Lookup_row8"); 
				     			
					     			//free memory for "tMap_7"
					     			globalMap.remove("tHash_Lookup_row10"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_4 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_4";
	
	

 



/**
 * [tHashInput_4 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";
	
	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";
	
	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tMap_10 finally ] start
	 */

	

	
	
	currentComponent="tMap_10";
	
	

 



/**
 * [tMap_10 finally ] stop
 */

	
	/**
	 * [tMap_11 finally ] start
	 */

	

	
	
	currentComponent="tMap_11";
	
	

 



/**
 * [tMap_11 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";
	
	

 



/**
 * [tMap_14 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";
	
	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";
	
	

 



/**
 * [tMap_21 finally ] stop
 */

	
	/**
	 * [tMap_22 finally ] start
	 */

	

	
	
	currentComponent="tMap_22";
	
	

 



/**
 * [tMap_22 finally ] stop
 */

	
	/**
	 * [tMap_23 finally ] start
	 */

	

	
	
	currentComponent="tMap_23";
	
	

 



/**
 * [tMap_23 finally ] stop
 */

	
	/**
	 * [tMap_12 finally ] start
	 */

	

	
	
	currentComponent="tMap_12";
	
	

 



/**
 * [tMap_12 finally ] stop
 */

	
	/**
	 * [tUniqRow_2 finally ] start
	 */

	

	
	
	currentComponent="tUniqRow_2";
	
	

 



/**
 * [tUniqRow_2 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";
	
	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */




































				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer saldo_fisico;

				public Integer getSaldo_fisico () {
					return this.saldo_fisico;
				}

				public Boolean saldo_fisicoIsNullable(){
				    return true;
				}
				public Boolean saldo_fisicoIsKey(){
				    return false;
				}
				public Integer saldo_fisicoLength(){
				    return null;
				}
				public Integer saldo_fisicoPrecision(){
				    return null;
				}
				public String saldo_fisicoDefault(){
				
					return null;
				
				}
				public String saldo_fisicoComment(){
				
				    return "";
				
				}
				public String saldo_fisicoPattern(){
				
					return "";
				
				}
				public String saldo_fisicoOriginalDbColumnName(){
				
					return "saldo_fisico";
				
				}

				
			    public Integer reservado_externo;

				public Integer getReservado_externo () {
					return this.reservado_externo;
				}

				public Boolean reservado_externoIsNullable(){
				    return true;
				}
				public Boolean reservado_externoIsKey(){
				    return false;
				}
				public Integer reservado_externoLength(){
				    return null;
				}
				public Integer reservado_externoPrecision(){
				    return null;
				}
				public String reservado_externoDefault(){
				
					return null;
				
				}
				public String reservado_externoComment(){
				
				    return "";
				
				}
				public String reservado_externoPattern(){
				
					return "";
				
				}
				public String reservado_externoOriginalDbColumnName(){
				
					return "reservado_externo";
				
				}

				
			    public Integer reservado_enderecamento;

				public Integer getReservado_enderecamento () {
					return this.reservado_enderecamento;
				}

				public Boolean reservado_enderecamentoIsNullable(){
				    return true;
				}
				public Boolean reservado_enderecamentoIsKey(){
				    return false;
				}
				public Integer reservado_enderecamentoLength(){
				    return null;
				}
				public Integer reservado_enderecamentoPrecision(){
				    return null;
				}
				public String reservado_enderecamentoDefault(){
				
					return null;
				
				}
				public String reservado_enderecamentoComment(){
				
				    return "";
				
				}
				public String reservado_enderecamentoPattern(){
				
					return "";
				
				}
				public String reservado_enderecamentoOriginalDbColumnName(){
				
					return "reservado_enderecamento";
				
				}

				
			    public Integer reservado_pedido_venda;

				public Integer getReservado_pedido_venda () {
					return this.reservado_pedido_venda;
				}

				public Boolean reservado_pedido_vendaIsNullable(){
				    return true;
				}
				public Boolean reservado_pedido_vendaIsKey(){
				    return false;
				}
				public Integer reservado_pedido_vendaLength(){
				    return null;
				}
				public Integer reservado_pedido_vendaPrecision(){
				    return null;
				}
				public String reservado_pedido_vendaDefault(){
				
					return null;
				
				}
				public String reservado_pedido_vendaComment(){
				
				    return "";
				
				}
				public String reservado_pedido_vendaPattern(){
				
					return "";
				
				}
				public String reservado_pedido_vendaOriginalDbColumnName(){
				
					return "reservado_pedido_venda";
				
				}

				
			    public Integer reservado_garantia;

				public Integer getReservado_garantia () {
					return this.reservado_garantia;
				}

				public Boolean reservado_garantiaIsNullable(){
				    return true;
				}
				public Boolean reservado_garantiaIsKey(){
				    return false;
				}
				public Integer reservado_garantiaLength(){
				    return null;
				}
				public Integer reservado_garantiaPrecision(){
				    return null;
				}
				public String reservado_garantiaDefault(){
				
					return null;
				
				}
				public String reservado_garantiaComment(){
				
				    return "";
				
				}
				public String reservado_garantiaPattern(){
				
					return "";
				
				}
				public String reservado_garantiaOriginalDbColumnName(){
				
					return "reservado_garantia";
				
				}

				
			    public Integer saldo_disponivel;

				public Integer getSaldo_disponivel () {
					return this.saldo_disponivel;
				}

				public Boolean saldo_disponivelIsNullable(){
				    return true;
				}
				public Boolean saldo_disponivelIsKey(){
				    return false;
				}
				public Integer saldo_disponivelLength(){
				    return null;
				}
				public Integer saldo_disponivelPrecision(){
				    return null;
				}
				public String saldo_disponivelDefault(){
				
					return null;
				
				}
				public String saldo_disponivelComment(){
				
				    return "";
				
				}
				public String saldo_disponivelPattern(){
				
					return "";
				
				}
				public String saldo_disponivelOriginalDbColumnName(){
				
					return "saldo_disponivel";
				
				}

				
			    public Float st;

				public Float getSt () {
					return this.st;
				}

				public Boolean stIsNullable(){
				    return true;
				}
				public Boolean stIsKey(){
				    return false;
				}
				public Integer stLength(){
				    return null;
				}
				public Integer stPrecision(){
				    return null;
				}
				public String stDefault(){
				
					return null;
				
				}
				public String stComment(){
				
				    return "";
				
				}
				public String stPattern(){
				
					return "";
				
				}
				public String stOriginalDbColumnName(){
				
					return "st";
				
				}

				
			    public String importado;

				public String getImportado () {
					return this.importado;
				}

				public Boolean importadoIsNullable(){
				    return true;
				}
				public Boolean importadoIsKey(){
				    return false;
				}
				public Integer importadoLength(){
				    return null;
				}
				public Integer importadoPrecision(){
				    return null;
				}
				public String importadoDefault(){
				
					return null;
				
				}
				public String importadoComment(){
				
				    return "";
				
				}
				public String importadoPattern(){
				
					return "";
				
				}
				public String importadoOriginalDbColumnName(){
				
					return "importado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_empresa="+cd_empresa);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",saldo_fisico="+String.valueOf(saldo_fisico));
		sb.append(",reservado_externo="+String.valueOf(reservado_externo));
		sb.append(",reservado_enderecamento="+String.valueOf(reservado_enderecamento));
		sb.append(",reservado_pedido_venda="+String.valueOf(reservado_pedido_venda));
		sb.append(",reservado_garantia="+String.valueOf(reservado_garantia));
		sb.append(",saldo_disponivel="+String.valueOf(saldo_disponivel));
		sb.append(",st="+String.valueOf(st));
		sb.append(",importado="+importado);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public String dc_produto;

				public String getDc_produto () {
					return this.dc_produto;
				}

				public Boolean dc_produtoIsNullable(){
				    return true;
				}
				public Boolean dc_produtoIsKey(){
				    return false;
				}
				public Integer dc_produtoLength(){
				    return null;
				}
				public Integer dc_produtoPrecision(){
				    return null;
				}
				public String dc_produtoDefault(){
				
					return null;
				
				}
				public String dc_produtoComment(){
				
				    return "";
				
				}
				public String dc_produtoPattern(){
				
					return "";
				
				}
				public String dc_produtoOriginalDbColumnName(){
				
					return "dc_produto";
				
				}

				
			    public String cd_marca;

				public String getCd_marca () {
					return this.cd_marca;
				}

				public Boolean cd_marcaIsNullable(){
				    return true;
				}
				public Boolean cd_marcaIsKey(){
				    return false;
				}
				public Integer cd_marcaLength(){
				    return null;
				}
				public Integer cd_marcaPrecision(){
				    return null;
				}
				public String cd_marcaDefault(){
				
					return null;
				
				}
				public String cd_marcaComment(){
				
				    return "";
				
				}
				public String cd_marcaPattern(){
				
					return "";
				
				}
				public String cd_marcaOriginalDbColumnName(){
				
					return "cd_marca";
				
				}

				
			    public String dc_marca;

				public String getDc_marca () {
					return this.dc_marca;
				}

				public Boolean dc_marcaIsNullable(){
				    return true;
				}
				public Boolean dc_marcaIsKey(){
				    return false;
				}
				public Integer dc_marcaLength(){
				    return null;
				}
				public Integer dc_marcaPrecision(){
				    return null;
				}
				public String dc_marcaDefault(){
				
					return null;
				
				}
				public String dc_marcaComment(){
				
				    return "";
				
				}
				public String dc_marcaPattern(){
				
					return "";
				
				}
				public String dc_marcaOriginalDbColumnName(){
				
					return "dc_marca";
				
				}

				
			    public String nm_fornecedor;

				public String getNm_fornecedor () {
					return this.nm_fornecedor;
				}

				public Boolean nm_fornecedorIsNullable(){
				    return true;
				}
				public Boolean nm_fornecedorIsKey(){
				    return false;
				}
				public Integer nm_fornecedorLength(){
				    return null;
				}
				public Integer nm_fornecedorPrecision(){
				    return null;
				}
				public String nm_fornecedorDefault(){
				
					return null;
				
				}
				public String nm_fornecedorComment(){
				
				    return "";
				
				}
				public String nm_fornecedorPattern(){
				
					return "";
				
				}
				public String nm_fornecedorOriginalDbColumnName(){
				
					return "nm_fornecedor";
				
				}

				
			    public String codigo_fabrica;

				public String getCodigo_fabrica () {
					return this.codigo_fabrica;
				}

				public Boolean codigo_fabricaIsNullable(){
				    return true;
				}
				public Boolean codigo_fabricaIsKey(){
				    return false;
				}
				public Integer codigo_fabricaLength(){
				    return null;
				}
				public Integer codigo_fabricaPrecision(){
				    return null;
				}
				public String codigo_fabricaDefault(){
				
					return null;
				
				}
				public String codigo_fabricaComment(){
				
				    return "";
				
				}
				public String codigo_fabricaPattern(){
				
					return "";
				
				}
				public String codigo_fabricaOriginalDbColumnName(){
				
					return "codigo_fabrica";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_produto = readString(dis);
					
					this.dc_produto = readString(dis);
					
					this.cd_marca = readString(dis);
					
					this.dc_marca = readString(dis);
					
					this.nm_fornecedor = readString(dis);
					
					this.codigo_fabrica = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_produto,dos);
					
					// String
				
						writeString(this.dc_produto,dos);
					
					// String
				
						writeString(this.cd_marca,dos);
					
					// String
				
						writeString(this.dc_marca,dos);
					
					// String
				
						writeString(this.nm_fornecedor,dos);
					
					// String
				
						writeString(this.codigo_fabrica,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_produto="+cd_produto);
		sb.append(",dc_produto="+dc_produto);
		sb.append(",cd_marca="+cd_marca);
		sb.append(",dc_marca="+dc_marca);
		sb.append(",nm_fornecedor="+nm_fornecedor);
		sb.append(",codigo_fabrica="+codigo_fabrica);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();
row3Struct row3 = new row3Struct();




	
	/**
	 * [tFlowToIterate_1 begin ] start
	 */

				
			int NB_ITERATE_tDBInput_3 = 0; //for statistics
			

	
		
		ok_Hash.put("tFlowToIterate_1", false);
		start_Hash.put("tFlowToIterate_1", System.currentTimeMillis());
		
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tFlowToIterate_1 = 0;
		

int nb_line_tFlowToIterate_1 = 0;
int counter_tFlowToIterate_1 = 0;

 



/**
 * [tFlowToIterate_1 begin ] stop
 */



	
	/**
	 * [tHashInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_9", false);
		start_Hash.put("tHashInput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_9";
	
	
		int tos_count_tHashInput_9 = 0;
		


int nb_line_tHashInput_9 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<_produto_Struct> tHashFile_tHashInput_9 = mf_tHashInput_9.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_4");
if(tHashFile_tHashInput_9==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<_produto_Struct> iterator_tHashInput_9 = tHashFile_tHashInput_9.iterator();
while (iterator_tHashInput_9.hasNext()) {
    _produto_Struct next_tHashInput_9 = iterator_tHashInput_9.next();

	row20.cd_produto = next_tHashInput_9.cd_produto;
	row20.dc_produto = next_tHashInput_9.dc_produto;
	row20.cd_marca = next_tHashInput_9.cd_marca;
	row20.dc_marca = next_tHashInput_9.dc_marca;
	row20.nm_fornecedor = next_tHashInput_9.nm_fornecedor;
	row20.codigo_fabrica = next_tHashInput_9.codigo_fabrica;

 



/**
 * [tHashInput_9 begin ] stop
 */
	
	/**
	 * [tHashInput_9 main ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 


	tos_count_tHashInput_9++;

/**
 * [tHashInput_9 main ] stop
 */
	
	/**
	 * [tHashInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tFlowToIterate_1 main ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row20"
						
						);
					}
					


    	            
            globalMap.put("row20.cd_produto", row20.cd_produto);
    	            
            globalMap.put("row20.dc_produto", row20.dc_produto);
    	            
            globalMap.put("row20.cd_marca", row20.cd_marca);
    	            
            globalMap.put("row20.dc_marca", row20.dc_marca);
    	            
            globalMap.put("row20.nm_fornecedor", row20.nm_fornecedor);
    	            
            globalMap.put("row20.codigo_fabrica", row20.codigo_fabrica);
    	
 
	   nb_line_tFlowToIterate_1++;  
       counter_tFlowToIterate_1++;
       globalMap.put("tFlowToIterate_1_CURRENT_ITERATION", counter_tFlowToIterate_1);
 


	tos_count_tFlowToIterate_1++;

/**
 * [tFlowToIterate_1 main ] stop
 */
	
	/**
	 * [tFlowToIterate_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_begin ] stop
 */
	NB_ITERATE_tDBInput_3++;
	
	
					if(execStat){				
	       				runStat.updateStatOnConnection("row3", 3, 0);
					}           			
				
				if(execStat){
					runStat.updateStatOnConnection("iterate1", 1, "exec" + NB_ITERATE_tDBInput_3);
					//Thread.sleep(1000);
				}				
			


	
	/**
	 * [tHashOutput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_9", false);
		start_Hash.put("tHashOutput_9", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tHashOutput_9 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_9=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row3Struct> tHashFile_tHashOutput_9 = null;
		String hashKey_tHashOutput_9 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_9";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_9)){
			    if(mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9) == null){
	      		    mf_tHashOutput_9.getResourceMap().put(hashKey_tHashOutput_9, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row3Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }else{
			    	tHashFile_tHashOutput_9 = mf_tHashOutput_9.getResourceMap().get(hashKey_tHashOutput_9);
			    }
			}
        int nb_line_tHashOutput_9 = 0;

 



/**
 * [tHashOutput_9 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";
	
	
		int tos_count_tDBInput_3 = 0;
		
	
    
	
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				conn_tDBInput_3 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "select cd_empresa,\n       cd_produto,\n       sum(saldo_fisico) as saldo_fisico,\n       sum(reservado_externo) as res"
+"ervado_externo,\n       sum(reservado_enderecamento) as reservado_enderecamento,\n       sum(reservado_pedido_venda) as "
+"reservado_pedido_venda,\n       sum(reservado_garantia ) as reservado_garantia,\n       sum(saldo_fisico - reservado_ord"
+"em_producao - reservado_pedido_venda - reservado_garantia - reservado_externo + reservado_enderecamento) saldo_disponive"
+"l,\n       st,\n       importado \n  from stg_t_produto_empresa\n    where cd_produto = '"+ ((String)globalMap.get("row20.cd_produto")) +"' \n        and cd_empresa in ('001','201','010')\n group by cd_empresa,cd_produto, st, importado;\n";
		    

		    globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);

		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row3.cd_empresa = null;
							} else {
	                         		
        	row3.cd_empresa = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row3.cd_produto = null;
							} else {
	                         		
        	row3.cd_produto = routines.system.JDBCUtil.getString(rs_tDBInput_3, 2, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row3.saldo_fisico = null;
							} else {
		                          
            row3.saldo_fisico = rs_tDBInput_3.getInt(3);
            if(rs_tDBInput_3.wasNull()){
                    row3.saldo_fisico = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row3.reservado_externo = null;
							} else {
		                          
            row3.reservado_externo = rs_tDBInput_3.getInt(4);
            if(rs_tDBInput_3.wasNull()){
                    row3.reservado_externo = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 5) {
								row3.reservado_enderecamento = null;
							} else {
		                          
            row3.reservado_enderecamento = rs_tDBInput_3.getInt(5);
            if(rs_tDBInput_3.wasNull()){
                    row3.reservado_enderecamento = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 6) {
								row3.reservado_pedido_venda = null;
							} else {
		                          
            row3.reservado_pedido_venda = rs_tDBInput_3.getInt(6);
            if(rs_tDBInput_3.wasNull()){
                    row3.reservado_pedido_venda = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 7) {
								row3.reservado_garantia = null;
							} else {
		                          
            row3.reservado_garantia = rs_tDBInput_3.getInt(7);
            if(rs_tDBInput_3.wasNull()){
                    row3.reservado_garantia = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 8) {
								row3.saldo_disponivel = null;
							} else {
		                          
            row3.saldo_disponivel = rs_tDBInput_3.getInt(8);
            if(rs_tDBInput_3.wasNull()){
                    row3.saldo_disponivel = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 9) {
								row3.st = null;
							} else {
		                          
            row3.st = rs_tDBInput_3.getFloat(9);
            if(rs_tDBInput_3.wasNull()){
                    row3.st = null;
            }
		                    }
							if(colQtyInRs_tDBInput_3 < 10) {
								row3.importado = null;
							} else {
	                         		
        	row3.importado = routines.system.JDBCUtil.getString(rs_tDBInput_3, 10, false);
		                    }
					


 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_9 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row3"
						
						);
					}
					



    
		row3Struct oneRow_tHashOutput_9 = new row3Struct();
				
					oneRow_tHashOutput_9.cd_empresa = row3.cd_empresa;
					oneRow_tHashOutput_9.cd_produto = row3.cd_produto;
					oneRow_tHashOutput_9.saldo_fisico = row3.saldo_fisico;
					oneRow_tHashOutput_9.reservado_externo = row3.reservado_externo;
					oneRow_tHashOutput_9.reservado_enderecamento = row3.reservado_enderecamento;
					oneRow_tHashOutput_9.reservado_pedido_venda = row3.reservado_pedido_venda;
					oneRow_tHashOutput_9.reservado_garantia = row3.reservado_garantia;
					oneRow_tHashOutput_9.saldo_disponivel = row3.saldo_disponivel;
					oneRow_tHashOutput_9.st = row3.st;
					oneRow_tHashOutput_9.importado = row3.importado;
		
        tHashFile_tHashOutput_9.put(oneRow_tHashOutput_9);
        nb_line_tHashOutput_9 ++;

 


	tos_count_tHashOutput_9++;

/**
 * [tHashOutput_9 main ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
}
globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tHashOutput_9 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	
globalMap.put("tHashOutput_9_NB_LINE", nb_line_tHashOutput_9);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tHashOutput_9", true);
end_Hash.put("tHashOutput_9", System.currentTimeMillis());




/**
 * [tHashOutput_9 end ] stop
 */



						if(execStat){
							runStat.updateStatOnConnection("iterate1", 2, "exec" + NB_ITERATE_tDBInput_3);
						}				
					




	
	/**
	 * [tFlowToIterate_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_9 end ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	
    

		
			nb_line_tHashInput_9++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_4");
	


	globalMap.put("tHashInput_9_NB_LINE", nb_line_tHashInput_9);       

 

ok_Hash.put("tHashInput_9", true);
end_Hash.put("tHashInput_9", System.currentTimeMillis());




/**
 * [tHashInput_9 end ] stop
 */

	
	/**
	 * [tFlowToIterate_1 end ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

globalMap.put("tFlowToIterate_1_NB_LINE",nb_line_tFlowToIterate_1);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tFlowToIterate_1", true);
end_Hash.put("tFlowToIterate_1", System.currentTimeMillis());




/**
 * [tFlowToIterate_1 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_9:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk23", 0, "ok");
								} 
							
							tDBInput_11Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_9";
	
	

 



/**
 * [tHashInput_9 finally ] stop
 */

	
	/**
	 * [tFlowToIterate_1 finally ] start
	 */

	

	
	
	currentComponent="tFlowToIterate_1";
	
	

 



/**
 * [tFlowToIterate_1 finally ] stop
 */

	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";
	
	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tHashOutput_9 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_9";
	
	

 



/**
 * [tHashOutput_9 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public BigDecimal vl_compra;

				public BigDecimal getVl_compra () {
					return this.vl_compra;
				}

				public Boolean vl_compraIsNullable(){
				    return true;
				}
				public Boolean vl_compraIsKey(){
				    return false;
				}
				public Integer vl_compraLength(){
				    return 12;
				}
				public Integer vl_compraPrecision(){
				    return 2;
				}
				public String vl_compraDefault(){
				
					return null;
				
				}
				public String vl_compraComment(){
				
				    return "";
				
				}
				public String vl_compraPattern(){
				
					return "";
				
				}
				public String vl_compraOriginalDbColumnName(){
				
					return "vl_compra";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.vl_compra = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.vl_compra = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_compra);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_compra);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_empresa="+cd_empresa);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",vl_compra="+String.valueOf(vl_compra));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row29Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row29Struct row29 = new row29Struct();




	
	/**
	 * [tHashOutput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashOutput_11", false);
		start_Hash.put("tHashOutput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row29");
					}
				
		int tos_count_tHashOutput_11 = 0;
		



org.talend.designer.components.hashfile.common.MapHashFile mf_tHashOutput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();    
		org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct> tHashFile_tHashOutput_11 = null;
		String hashKey_tHashOutput_11 = "tHashFile_relatorio_sellout_" + pid + "_tHashOutput_11";
			synchronized(org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.get(hashKey_tHashOutput_11)){
			    if(mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11) == null){
	      		    mf_tHashOutput_11.getResourceMap().put(hashKey_tHashOutput_11, new org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct>(org.talend.designer.components.hashfile.common.MATCHING_MODE.KEEP_ALL));
	      		    tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }else{
			    	tHashFile_tHashOutput_11 = mf_tHashOutput_11.getResourceMap().get(hashKey_tHashOutput_11);
			    }
			}
        int nb_line_tHashOutput_11 = 0;

 



/**
 * [tHashOutput_11 begin ] stop
 */



	
	/**
	 * [tDBInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_11", false);
		start_Hash.put("tDBInput_11", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_11";
	
	
		int tos_count_tDBInput_11 = 0;
		
	
    
	
		    int nb_line_tDBInput_11 = 0;
		    java.sql.Connection conn_tDBInput_11 = null;
				conn_tDBInput_11 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
				
		    
			java.sql.Statement stmt_tDBInput_11 = conn_tDBInput_11.createStatement();

		    String dbquery_tDBInput_11 = "select distinct cd_empresa,cd_produto, vl_compra  \n  from stg_t_produto_empresa\nwhere cd_empresa in ('001','201','010"
+"');\n";
		    

		    globalMap.put("tDBInput_11_QUERY",dbquery_tDBInput_11);

		    java.sql.ResultSet rs_tDBInput_11 = null;

		    try {
		    	rs_tDBInput_11 = stmt_tDBInput_11.executeQuery(dbquery_tDBInput_11);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_11 = rs_tDBInput_11.getMetaData();
		    	int colQtyInRs_tDBInput_11 = rsmd_tDBInput_11.getColumnCount();

		    String tmpContent_tDBInput_11 = null;
		    
		    
		    while (rs_tDBInput_11.next()) {
		        nb_line_tDBInput_11++;
		        
							if(colQtyInRs_tDBInput_11 < 1) {
								row29.cd_empresa = null;
							} else {
	                         		
        	row29.cd_empresa = routines.system.JDBCUtil.getString(rs_tDBInput_11, 1, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 2) {
								row29.cd_produto = null;
							} else {
	                         		
        	row29.cd_produto = routines.system.JDBCUtil.getString(rs_tDBInput_11, 2, false);
		                    }
							if(colQtyInRs_tDBInput_11 < 3) {
								row29.vl_compra = null;
							} else {
		                          
            row29.vl_compra = rs_tDBInput_11.getBigDecimal(3);
            if(rs_tDBInput_11.wasNull()){
                    row29.vl_compra = null;
            }
		                    }
					


 



/**
 * [tDBInput_11 begin ] stop
 */
	
	/**
	 * [tDBInput_11 main ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 


	tos_count_tDBInput_11++;

/**
 * [tDBInput_11 main ] stop
 */
	
	/**
	 * [tDBInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 



/**
 * [tDBInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tHashOutput_11 main ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row29"
						
						);
					}
					



    
		row29Struct oneRow_tHashOutput_11 = new row29Struct();
				
					oneRow_tHashOutput_11.cd_empresa = row29.cd_empresa;
					oneRow_tHashOutput_11.cd_produto = row29.cd_produto;
					oneRow_tHashOutput_11.vl_compra = row29.vl_compra;
		
        tHashFile_tHashOutput_11.put(oneRow_tHashOutput_11);
        nb_line_tHashOutput_11 ++;

 


	tos_count_tHashOutput_11++;

/**
 * [tHashOutput_11 main ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_begin ] stop
 */
	
	/**
	 * [tHashOutput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 



/**
 * [tDBInput_11 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_11 end ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

	}
}finally{
	if (rs_tDBInput_11 != null) {
		rs_tDBInput_11.close();
	}
	if (stmt_tDBInput_11 != null) {
		stmt_tDBInput_11.close();
	}
}
globalMap.put("tDBInput_11_NB_LINE",nb_line_tDBInput_11);
 

ok_Hash.put("tDBInput_11", true);
end_Hash.put("tDBInput_11", System.currentTimeMillis());




/**
 * [tDBInput_11 end ] stop
 */

	
	/**
	 * [tHashOutput_11 end ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	
globalMap.put("tHashOutput_11_NB_LINE", nb_line_tHashOutput_11);
				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row29");
			  	}
			  	
 

ok_Hash.put("tHashOutput_11", true);
end_Hash.put("tHashOutput_11", System.currentTimeMillis());




/**
 * [tHashOutput_11 end ] stop
 */



				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tDBInput_11:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk30", 0, "ok");
								} 
							
							tHashInput_10Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_11 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_11";
	
	

 



/**
 * [tDBInput_11 finally ] stop
 */

	
	/**
	 * [tHashOutput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashOutput_11";
	
	

 



/**
 * [tHashOutput_11 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class IPIStruct implements routines.system.IPersistableRow<IPIStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer saldo_fisico;

				public Integer getSaldo_fisico () {
					return this.saldo_fisico;
				}

				public Boolean saldo_fisicoIsNullable(){
				    return true;
				}
				public Boolean saldo_fisicoIsKey(){
				    return false;
				}
				public Integer saldo_fisicoLength(){
				    return null;
				}
				public Integer saldo_fisicoPrecision(){
				    return null;
				}
				public String saldo_fisicoDefault(){
				
					return null;
				
				}
				public String saldo_fisicoComment(){
				
				    return "";
				
				}
				public String saldo_fisicoPattern(){
				
					return "";
				
				}
				public String saldo_fisicoOriginalDbColumnName(){
				
					return "saldo_fisico";
				
				}

				
			    public Integer reservado_externo;

				public Integer getReservado_externo () {
					return this.reservado_externo;
				}

				public Boolean reservado_externoIsNullable(){
				    return true;
				}
				public Boolean reservado_externoIsKey(){
				    return false;
				}
				public Integer reservado_externoLength(){
				    return null;
				}
				public Integer reservado_externoPrecision(){
				    return null;
				}
				public String reservado_externoDefault(){
				
					return null;
				
				}
				public String reservado_externoComment(){
				
				    return "";
				
				}
				public String reservado_externoPattern(){
				
					return "";
				
				}
				public String reservado_externoOriginalDbColumnName(){
				
					return "reservado_externo";
				
				}

				
			    public Integer reservado_enderecamento;

				public Integer getReservado_enderecamento () {
					return this.reservado_enderecamento;
				}

				public Boolean reservado_enderecamentoIsNullable(){
				    return true;
				}
				public Boolean reservado_enderecamentoIsKey(){
				    return false;
				}
				public Integer reservado_enderecamentoLength(){
				    return null;
				}
				public Integer reservado_enderecamentoPrecision(){
				    return null;
				}
				public String reservado_enderecamentoDefault(){
				
					return null;
				
				}
				public String reservado_enderecamentoComment(){
				
				    return "";
				
				}
				public String reservado_enderecamentoPattern(){
				
					return "";
				
				}
				public String reservado_enderecamentoOriginalDbColumnName(){
				
					return "reservado_enderecamento";
				
				}

				
			    public Integer reservado_pedido_venda;

				public Integer getReservado_pedido_venda () {
					return this.reservado_pedido_venda;
				}

				public Boolean reservado_pedido_vendaIsNullable(){
				    return true;
				}
				public Boolean reservado_pedido_vendaIsKey(){
				    return false;
				}
				public Integer reservado_pedido_vendaLength(){
				    return null;
				}
				public Integer reservado_pedido_vendaPrecision(){
				    return null;
				}
				public String reservado_pedido_vendaDefault(){
				
					return null;
				
				}
				public String reservado_pedido_vendaComment(){
				
				    return "";
				
				}
				public String reservado_pedido_vendaPattern(){
				
					return "";
				
				}
				public String reservado_pedido_vendaOriginalDbColumnName(){
				
					return "reservado_pedido_venda";
				
				}

				
			    public Integer reservado_garantia;

				public Integer getReservado_garantia () {
					return this.reservado_garantia;
				}

				public Boolean reservado_garantiaIsNullable(){
				    return true;
				}
				public Boolean reservado_garantiaIsKey(){
				    return false;
				}
				public Integer reservado_garantiaLength(){
				    return null;
				}
				public Integer reservado_garantiaPrecision(){
				    return null;
				}
				public String reservado_garantiaDefault(){
				
					return null;
				
				}
				public String reservado_garantiaComment(){
				
				    return "";
				
				}
				public String reservado_garantiaPattern(){
				
					return "";
				
				}
				public String reservado_garantiaOriginalDbColumnName(){
				
					return "reservado_garantia";
				
				}

				
			    public Integer saldo_disponivel;

				public Integer getSaldo_disponivel () {
					return this.saldo_disponivel;
				}

				public Boolean saldo_disponivelIsNullable(){
				    return true;
				}
				public Boolean saldo_disponivelIsKey(){
				    return false;
				}
				public Integer saldo_disponivelLength(){
				    return null;
				}
				public Integer saldo_disponivelPrecision(){
				    return null;
				}
				public String saldo_disponivelDefault(){
				
					return null;
				
				}
				public String saldo_disponivelComment(){
				
				    return "";
				
				}
				public String saldo_disponivelPattern(){
				
					return "";
				
				}
				public String saldo_disponivelOriginalDbColumnName(){
				
					return "saldo_disponivel";
				
				}

				
			    public BigDecimal vl_compra;

				public BigDecimal getVl_compra () {
					return this.vl_compra;
				}

				public Boolean vl_compraIsNullable(){
				    return true;
				}
				public Boolean vl_compraIsKey(){
				    return false;
				}
				public Integer vl_compraLength(){
				    return 12;
				}
				public Integer vl_compraPrecision(){
				    return 2;
				}
				public String vl_compraDefault(){
				
					return null;
				
				}
				public String vl_compraComment(){
				
				    return "";
				
				}
				public String vl_compraPattern(){
				
					return "";
				
				}
				public String vl_compraOriginalDbColumnName(){
				
					return "vl_compra";
				
				}

				
			    public Float st;

				public Float getSt () {
					return this.st;
				}

				public Boolean stIsNullable(){
				    return true;
				}
				public Boolean stIsKey(){
				    return false;
				}
				public Integer stLength(){
				    return null;
				}
				public Integer stPrecision(){
				    return null;
				}
				public String stDefault(){
				
					return null;
				
				}
				public String stComment(){
				
				    return "";
				
				}
				public String stPattern(){
				
					return "";
				
				}
				public String stOriginalDbColumnName(){
				
					return "st";
				
				}

				
			    public String importado;

				public String getImportado () {
					return this.importado;
				}

				public Boolean importadoIsNullable(){
				    return true;
				}
				public Boolean importadoIsKey(){
				    return false;
				}
				public Integer importadoLength(){
				    return null;
				}
				public Integer importadoPrecision(){
				    return null;
				}
				public String importadoDefault(){
				
					return null;
				
				}
				public String importadoComment(){
				
				    return "";
				
				}
				public String importadoPattern(){
				
					return "";
				
				}
				public String importadoOriginalDbColumnName(){
				
					return "importado";
				
				}

				
			    public BigDecimal vl_ipi;

				public BigDecimal getVl_ipi () {
					return this.vl_ipi;
				}

				public Boolean vl_ipiIsNullable(){
				    return true;
				}
				public Boolean vl_ipiIsKey(){
				    return false;
				}
				public Integer vl_ipiLength(){
				    return 12;
				}
				public Integer vl_ipiPrecision(){
				    return 2;
				}
				public String vl_ipiDefault(){
				
					return null;
				
				}
				public String vl_ipiComment(){
				
				    return "";
				
				}
				public String vl_ipiPattern(){
				
					return "";
				
				}
				public String vl_ipiOriginalDbColumnName(){
				
					return "vl_ipi";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
						this.vl_compra = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
						this.vl_ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
						this.vl_compra = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
						this.vl_ipi = (BigDecimal) dis.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_compra);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_compra);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_ipi);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_empresa="+cd_empresa);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",saldo_fisico="+String.valueOf(saldo_fisico));
		sb.append(",reservado_externo="+String.valueOf(reservado_externo));
		sb.append(",reservado_enderecamento="+String.valueOf(reservado_enderecamento));
		sb.append(",reservado_pedido_venda="+String.valueOf(reservado_pedido_venda));
		sb.append(",reservado_garantia="+String.valueOf(reservado_garantia));
		sb.append(",saldo_disponivel="+String.valueOf(saldo_disponivel));
		sb.append(",vl_compra="+String.valueOf(vl_compra));
		sb.append(",st="+String.valueOf(st));
		sb.append(",importado="+importado);
		sb.append(",vl_ipi="+String.valueOf(vl_ipi));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(IPIStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class outStruct implements routines.system.IPersistableRow<outStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer saldo_fisico;

				public Integer getSaldo_fisico () {
					return this.saldo_fisico;
				}

				public Boolean saldo_fisicoIsNullable(){
				    return true;
				}
				public Boolean saldo_fisicoIsKey(){
				    return false;
				}
				public Integer saldo_fisicoLength(){
				    return null;
				}
				public Integer saldo_fisicoPrecision(){
				    return null;
				}
				public String saldo_fisicoDefault(){
				
					return null;
				
				}
				public String saldo_fisicoComment(){
				
				    return "";
				
				}
				public String saldo_fisicoPattern(){
				
					return "";
				
				}
				public String saldo_fisicoOriginalDbColumnName(){
				
					return "saldo_fisico";
				
				}

				
			    public Integer reservado_externo;

				public Integer getReservado_externo () {
					return this.reservado_externo;
				}

				public Boolean reservado_externoIsNullable(){
				    return true;
				}
				public Boolean reservado_externoIsKey(){
				    return false;
				}
				public Integer reservado_externoLength(){
				    return null;
				}
				public Integer reservado_externoPrecision(){
				    return null;
				}
				public String reservado_externoDefault(){
				
					return null;
				
				}
				public String reservado_externoComment(){
				
				    return "";
				
				}
				public String reservado_externoPattern(){
				
					return "";
				
				}
				public String reservado_externoOriginalDbColumnName(){
				
					return "reservado_externo";
				
				}

				
			    public Integer reservado_enderecamento;

				public Integer getReservado_enderecamento () {
					return this.reservado_enderecamento;
				}

				public Boolean reservado_enderecamentoIsNullable(){
				    return true;
				}
				public Boolean reservado_enderecamentoIsKey(){
				    return false;
				}
				public Integer reservado_enderecamentoLength(){
				    return null;
				}
				public Integer reservado_enderecamentoPrecision(){
				    return null;
				}
				public String reservado_enderecamentoDefault(){
				
					return null;
				
				}
				public String reservado_enderecamentoComment(){
				
				    return "";
				
				}
				public String reservado_enderecamentoPattern(){
				
					return "";
				
				}
				public String reservado_enderecamentoOriginalDbColumnName(){
				
					return "reservado_enderecamento";
				
				}

				
			    public Integer reservado_pedido_venda;

				public Integer getReservado_pedido_venda () {
					return this.reservado_pedido_venda;
				}

				public Boolean reservado_pedido_vendaIsNullable(){
				    return true;
				}
				public Boolean reservado_pedido_vendaIsKey(){
				    return false;
				}
				public Integer reservado_pedido_vendaLength(){
				    return null;
				}
				public Integer reservado_pedido_vendaPrecision(){
				    return null;
				}
				public String reservado_pedido_vendaDefault(){
				
					return null;
				
				}
				public String reservado_pedido_vendaComment(){
				
				    return "";
				
				}
				public String reservado_pedido_vendaPattern(){
				
					return "";
				
				}
				public String reservado_pedido_vendaOriginalDbColumnName(){
				
					return "reservado_pedido_venda";
				
				}

				
			    public Integer reservado_garantia;

				public Integer getReservado_garantia () {
					return this.reservado_garantia;
				}

				public Boolean reservado_garantiaIsNullable(){
				    return true;
				}
				public Boolean reservado_garantiaIsKey(){
				    return false;
				}
				public Integer reservado_garantiaLength(){
				    return null;
				}
				public Integer reservado_garantiaPrecision(){
				    return null;
				}
				public String reservado_garantiaDefault(){
				
					return null;
				
				}
				public String reservado_garantiaComment(){
				
				    return "";
				
				}
				public String reservado_garantiaPattern(){
				
					return "";
				
				}
				public String reservado_garantiaOriginalDbColumnName(){
				
					return "reservado_garantia";
				
				}

				
			    public Integer saldo_disponivel;

				public Integer getSaldo_disponivel () {
					return this.saldo_disponivel;
				}

				public Boolean saldo_disponivelIsNullable(){
				    return true;
				}
				public Boolean saldo_disponivelIsKey(){
				    return false;
				}
				public Integer saldo_disponivelLength(){
				    return null;
				}
				public Integer saldo_disponivelPrecision(){
				    return null;
				}
				public String saldo_disponivelDefault(){
				
					return null;
				
				}
				public String saldo_disponivelComment(){
				
				    return "";
				
				}
				public String saldo_disponivelPattern(){
				
					return "";
				
				}
				public String saldo_disponivelOriginalDbColumnName(){
				
					return "saldo_disponivel";
				
				}

				
			    public BigDecimal vl_compra;

				public BigDecimal getVl_compra () {
					return this.vl_compra;
				}

				public Boolean vl_compraIsNullable(){
				    return true;
				}
				public Boolean vl_compraIsKey(){
				    return false;
				}
				public Integer vl_compraLength(){
				    return 12;
				}
				public Integer vl_compraPrecision(){
				    return 2;
				}
				public String vl_compraDefault(){
				
					return null;
				
				}
				public String vl_compraComment(){
				
				    return "";
				
				}
				public String vl_compraPattern(){
				
					return "";
				
				}
				public String vl_compraOriginalDbColumnName(){
				
					return "vl_compra";
				
				}

				
			    public Float st;

				public Float getSt () {
					return this.st;
				}

				public Boolean stIsNullable(){
				    return true;
				}
				public Boolean stIsKey(){
				    return false;
				}
				public Integer stLength(){
				    return null;
				}
				public Integer stPrecision(){
				    return null;
				}
				public String stDefault(){
				
					return null;
				
				}
				public String stComment(){
				
				    return "";
				
				}
				public String stPattern(){
				
					return "";
				
				}
				public String stOriginalDbColumnName(){
				
					return "st";
				
				}

				
			    public String importado;

				public String getImportado () {
					return this.importado;
				}

				public Boolean importadoIsNullable(){
				    return true;
				}
				public Boolean importadoIsKey(){
				    return false;
				}
				public Integer importadoLength(){
				    return null;
				}
				public Integer importadoPrecision(){
				    return null;
				}
				public String importadoDefault(){
				
					return null;
				
				}
				public String importadoComment(){
				
				    return "";
				
				}
				public String importadoPattern(){
				
					return "";
				
				}
				public String importadoOriginalDbColumnName(){
				
					return "importado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
						this.vl_compra = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
						this.vl_compra = (BigDecimal) dis.readObject();
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// BigDecimal
				
       			    	dos.writeObject(this.vl_compra);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// BigDecimal
				
						dos.clearInstanceCache();
						dos.writeObject(this.vl_compra);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_empresa="+cd_empresa);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",saldo_fisico="+String.valueOf(saldo_fisico));
		sb.append(",reservado_externo="+String.valueOf(reservado_externo));
		sb.append(",reservado_enderecamento="+String.valueOf(reservado_enderecamento));
		sb.append(",reservado_pedido_venda="+String.valueOf(reservado_pedido_venda));
		sb.append(",reservado_garantia="+String.valueOf(reservado_garantia));
		sb.append(",saldo_disponivel="+String.valueOf(saldo_disponivel));
		sb.append(",vl_compra="+String.valueOf(vl_compra));
		sb.append(",st="+String.valueOf(st));
		sb.append(",importado="+importado);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(outStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer saldo_fisico;

				public Integer getSaldo_fisico () {
					return this.saldo_fisico;
				}

				public Boolean saldo_fisicoIsNullable(){
				    return true;
				}
				public Boolean saldo_fisicoIsKey(){
				    return false;
				}
				public Integer saldo_fisicoLength(){
				    return null;
				}
				public Integer saldo_fisicoPrecision(){
				    return null;
				}
				public String saldo_fisicoDefault(){
				
					return null;
				
				}
				public String saldo_fisicoComment(){
				
				    return "";
				
				}
				public String saldo_fisicoPattern(){
				
					return "";
				
				}
				public String saldo_fisicoOriginalDbColumnName(){
				
					return "saldo_fisico";
				
				}

				
			    public Integer reservado_externo;

				public Integer getReservado_externo () {
					return this.reservado_externo;
				}

				public Boolean reservado_externoIsNullable(){
				    return true;
				}
				public Boolean reservado_externoIsKey(){
				    return false;
				}
				public Integer reservado_externoLength(){
				    return null;
				}
				public Integer reservado_externoPrecision(){
				    return null;
				}
				public String reservado_externoDefault(){
				
					return null;
				
				}
				public String reservado_externoComment(){
				
				    return "";
				
				}
				public String reservado_externoPattern(){
				
					return "";
				
				}
				public String reservado_externoOriginalDbColumnName(){
				
					return "reservado_externo";
				
				}

				
			    public Integer reservado_enderecamento;

				public Integer getReservado_enderecamento () {
					return this.reservado_enderecamento;
				}

				public Boolean reservado_enderecamentoIsNullable(){
				    return true;
				}
				public Boolean reservado_enderecamentoIsKey(){
				    return false;
				}
				public Integer reservado_enderecamentoLength(){
				    return null;
				}
				public Integer reservado_enderecamentoPrecision(){
				    return null;
				}
				public String reservado_enderecamentoDefault(){
				
					return null;
				
				}
				public String reservado_enderecamentoComment(){
				
				    return "";
				
				}
				public String reservado_enderecamentoPattern(){
				
					return "";
				
				}
				public String reservado_enderecamentoOriginalDbColumnName(){
				
					return "reservado_enderecamento";
				
				}

				
			    public Integer reservado_pedido_venda;

				public Integer getReservado_pedido_venda () {
					return this.reservado_pedido_venda;
				}

				public Boolean reservado_pedido_vendaIsNullable(){
				    return true;
				}
				public Boolean reservado_pedido_vendaIsKey(){
				    return false;
				}
				public Integer reservado_pedido_vendaLength(){
				    return null;
				}
				public Integer reservado_pedido_vendaPrecision(){
				    return null;
				}
				public String reservado_pedido_vendaDefault(){
				
					return null;
				
				}
				public String reservado_pedido_vendaComment(){
				
				    return "";
				
				}
				public String reservado_pedido_vendaPattern(){
				
					return "";
				
				}
				public String reservado_pedido_vendaOriginalDbColumnName(){
				
					return "reservado_pedido_venda";
				
				}

				
			    public Integer reservado_garantia;

				public Integer getReservado_garantia () {
					return this.reservado_garantia;
				}

				public Boolean reservado_garantiaIsNullable(){
				    return true;
				}
				public Boolean reservado_garantiaIsKey(){
				    return false;
				}
				public Integer reservado_garantiaLength(){
				    return null;
				}
				public Integer reservado_garantiaPrecision(){
				    return null;
				}
				public String reservado_garantiaDefault(){
				
					return null;
				
				}
				public String reservado_garantiaComment(){
				
				    return "";
				
				}
				public String reservado_garantiaPattern(){
				
					return "";
				
				}
				public String reservado_garantiaOriginalDbColumnName(){
				
					return "reservado_garantia";
				
				}

				
			    public Integer saldo_disponivel;

				public Integer getSaldo_disponivel () {
					return this.saldo_disponivel;
				}

				public Boolean saldo_disponivelIsNullable(){
				    return true;
				}
				public Boolean saldo_disponivelIsKey(){
				    return false;
				}
				public Integer saldo_disponivelLength(){
				    return null;
				}
				public Integer saldo_disponivelPrecision(){
				    return null;
				}
				public String saldo_disponivelDefault(){
				
					return null;
				
				}
				public String saldo_disponivelComment(){
				
				    return "";
				
				}
				public String saldo_disponivelPattern(){
				
					return "";
				
				}
				public String saldo_disponivelOriginalDbColumnName(){
				
					return "saldo_disponivel";
				
				}

				
			    public Float st;

				public Float getSt () {
					return this.st;
				}

				public Boolean stIsNullable(){
				    return true;
				}
				public Boolean stIsKey(){
				    return false;
				}
				public Integer stLength(){
				    return null;
				}
				public Integer stPrecision(){
				    return null;
				}
				public String stDefault(){
				
					return null;
				
				}
				public String stComment(){
				
				    return "";
				
				}
				public String stPattern(){
				
					return "";
				
				}
				public String stOriginalDbColumnName(){
				
					return "st";
				
				}

				
			    public String importado;

				public String getImportado () {
					return this.importado;
				}

				public Boolean importadoIsNullable(){
				    return true;
				}
				public Boolean importadoIsKey(){
				    return false;
				}
				public Integer importadoLength(){
				    return null;
				}
				public Integer importadoPrecision(){
				    return null;
				}
				public String importadoDefault(){
				
					return null;
				
				}
				public String importadoComment(){
				
				    return "";
				
				}
				public String importadoPattern(){
				
					return "";
				
				}
				public String importadoOriginalDbColumnName(){
				
					return "importado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_empresa="+cd_empresa);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",saldo_fisico="+String.valueOf(saldo_fisico));
		sb.append(",reservado_externo="+String.valueOf(reservado_externo));
		sb.append(",reservado_enderecamento="+String.valueOf(reservado_enderecamento));
		sb.append(",reservado_pedido_venda="+String.valueOf(reservado_pedido_venda));
		sb.append(",reservado_garantia="+String.valueOf(reservado_garantia));
		sb.append(",saldo_disponivel="+String.valueOf(saldo_disponivel));
		sb.append(",st="+String.valueOf(st));
		sb.append(",importado="+importado);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class after_tHashInput_10Struct implements routines.system.IPersistableRow<after_tHashInput_10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public Integer saldo_fisico;

				public Integer getSaldo_fisico () {
					return this.saldo_fisico;
				}

				public Boolean saldo_fisicoIsNullable(){
				    return true;
				}
				public Boolean saldo_fisicoIsKey(){
				    return false;
				}
				public Integer saldo_fisicoLength(){
				    return null;
				}
				public Integer saldo_fisicoPrecision(){
				    return null;
				}
				public String saldo_fisicoDefault(){
				
					return null;
				
				}
				public String saldo_fisicoComment(){
				
				    return "";
				
				}
				public String saldo_fisicoPattern(){
				
					return "";
				
				}
				public String saldo_fisicoOriginalDbColumnName(){
				
					return "saldo_fisico";
				
				}

				
			    public Integer reservado_externo;

				public Integer getReservado_externo () {
					return this.reservado_externo;
				}

				public Boolean reservado_externoIsNullable(){
				    return true;
				}
				public Boolean reservado_externoIsKey(){
				    return false;
				}
				public Integer reservado_externoLength(){
				    return null;
				}
				public Integer reservado_externoPrecision(){
				    return null;
				}
				public String reservado_externoDefault(){
				
					return null;
				
				}
				public String reservado_externoComment(){
				
				    return "";
				
				}
				public String reservado_externoPattern(){
				
					return "";
				
				}
				public String reservado_externoOriginalDbColumnName(){
				
					return "reservado_externo";
				
				}

				
			    public Integer reservado_enderecamento;

				public Integer getReservado_enderecamento () {
					return this.reservado_enderecamento;
				}

				public Boolean reservado_enderecamentoIsNullable(){
				    return true;
				}
				public Boolean reservado_enderecamentoIsKey(){
				    return false;
				}
				public Integer reservado_enderecamentoLength(){
				    return null;
				}
				public Integer reservado_enderecamentoPrecision(){
				    return null;
				}
				public String reservado_enderecamentoDefault(){
				
					return null;
				
				}
				public String reservado_enderecamentoComment(){
				
				    return "";
				
				}
				public String reservado_enderecamentoPattern(){
				
					return "";
				
				}
				public String reservado_enderecamentoOriginalDbColumnName(){
				
					return "reservado_enderecamento";
				
				}

				
			    public Integer reservado_pedido_venda;

				public Integer getReservado_pedido_venda () {
					return this.reservado_pedido_venda;
				}

				public Boolean reservado_pedido_vendaIsNullable(){
				    return true;
				}
				public Boolean reservado_pedido_vendaIsKey(){
				    return false;
				}
				public Integer reservado_pedido_vendaLength(){
				    return null;
				}
				public Integer reservado_pedido_vendaPrecision(){
				    return null;
				}
				public String reservado_pedido_vendaDefault(){
				
					return null;
				
				}
				public String reservado_pedido_vendaComment(){
				
				    return "";
				
				}
				public String reservado_pedido_vendaPattern(){
				
					return "";
				
				}
				public String reservado_pedido_vendaOriginalDbColumnName(){
				
					return "reservado_pedido_venda";
				
				}

				
			    public Integer reservado_garantia;

				public Integer getReservado_garantia () {
					return this.reservado_garantia;
				}

				public Boolean reservado_garantiaIsNullable(){
				    return true;
				}
				public Boolean reservado_garantiaIsKey(){
				    return false;
				}
				public Integer reservado_garantiaLength(){
				    return null;
				}
				public Integer reservado_garantiaPrecision(){
				    return null;
				}
				public String reservado_garantiaDefault(){
				
					return null;
				
				}
				public String reservado_garantiaComment(){
				
				    return "";
				
				}
				public String reservado_garantiaPattern(){
				
					return "";
				
				}
				public String reservado_garantiaOriginalDbColumnName(){
				
					return "reservado_garantia";
				
				}

				
			    public Integer saldo_disponivel;

				public Integer getSaldo_disponivel () {
					return this.saldo_disponivel;
				}

				public Boolean saldo_disponivelIsNullable(){
				    return true;
				}
				public Boolean saldo_disponivelIsKey(){
				    return false;
				}
				public Integer saldo_disponivelLength(){
				    return null;
				}
				public Integer saldo_disponivelPrecision(){
				    return null;
				}
				public String saldo_disponivelDefault(){
				
					return null;
				
				}
				public String saldo_disponivelComment(){
				
				    return "";
				
				}
				public String saldo_disponivelPattern(){
				
					return "";
				
				}
				public String saldo_disponivelOriginalDbColumnName(){
				
					return "saldo_disponivel";
				
				}

				
			    public Float st;

				public Float getSt () {
					return this.st;
				}

				public Boolean stIsNullable(){
				    return true;
				}
				public Boolean stIsKey(){
				    return false;
				}
				public Integer stLength(){
				    return null;
				}
				public Integer stPrecision(){
				    return null;
				}
				public String stDefault(){
				
					return null;
				
				}
				public String stComment(){
				
				    return "";
				
				}
				public String stPattern(){
				
					return "";
				
				}
				public String stOriginalDbColumnName(){
				
					return "st";
				
				}

				
			    public String importado;

				public String getImportado () {
					return this.importado;
				}

				public Boolean importadoIsNullable(){
				    return true;
				}
				public Boolean importadoIsKey(){
				    return false;
				}
				public Integer importadoLength(){
				    return null;
				}
				public Integer importadoPrecision(){
				    return null;
				}
				public String importadoDefault(){
				
					return null;
				
				}
				public String importadoComment(){
				
				    return "";
				
				}
				public String importadoPattern(){
				
					return "";
				
				}
				public String importadoOriginalDbColumnName(){
				
					return "importado";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	private Integer readInteger(ObjectInputStream dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
	    	intReturn = dis.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
						this.saldo_fisico = readInteger(dis);
					
						this.reservado_externo = readInteger(dis);
					
						this.reservado_enderecamento = readInteger(dis);
					
						this.reservado_pedido_venda = readInteger(dis);
					
						this.reservado_garantia = readInteger(dis);
					
						this.saldo_disponivel = readInteger(dis);
					
			            length = dis.readByte();
           				if (length == -1) {
           	    			this.st = null;
           				} else {
           			    	this.st = dis.readFloat();
           				}
					
					this.importado = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
					// Integer
				
						writeInteger(this.saldo_fisico,dos);
					
					// Integer
				
						writeInteger(this.reservado_externo,dos);
					
					// Integer
				
						writeInteger(this.reservado_enderecamento,dos);
					
					// Integer
				
						writeInteger(this.reservado_pedido_venda,dos);
					
					// Integer
				
						writeInteger(this.reservado_garantia,dos);
					
					// Integer
				
						writeInteger(this.saldo_disponivel,dos);
					
					// Float
				
						if(this.st == null) {
			                dos.writeByte(-1);
						} else {
               				dos.writeByte(0);
           			    	dos.writeFloat(this.st);
		            	}
					
					// String
				
						writeString(this.importado,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_empresa="+cd_empresa);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",saldo_fisico="+String.valueOf(saldo_fisico));
		sb.append(",reservado_externo="+String.valueOf(reservado_externo));
		sb.append(",reservado_enderecamento="+String.valueOf(reservado_enderecamento));
		sb.append(",reservado_pedido_venda="+String.valueOf(reservado_pedido_venda));
		sb.append(",reservado_garantia="+String.valueOf(reservado_garantia));
		sb.append(",saldo_disponivel="+String.valueOf(saldo_disponivel));
		sb.append(",st="+String.valueOf(st));
		sb.append(",importado="+importado);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(after_tHashInput_10Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_10_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;


		tHashInput_12Process(globalMap);
		tHashInput_17Process(globalMap);

		row21Struct row21 = new row21Struct();
outStruct out = new outStruct();
IPIStruct IPI = new IPIStruct();






	
	/**
	 * [tFileOutputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_2", false);
		start_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"IPI");
					}
				
		int tos_count_tFileOutputExcel_2 = 0;
		


		
		int columnIndex_tFileOutputExcel_2 = 0;
		boolean headerIsInserted_tFileOutputExcel_2 = false;
		
		
		String fileName_tFileOutputExcel_2="/root/e_mail/relatorio_sellout_"+context.data_execucao+".xlsx";
		int nb_line_tFileOutputExcel_2 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_2 = new org.talend.ExcelTool();
		xlsxTool_tFileOutputExcel_2.setUseSharedStringTable(false);
		
    xlsxTool_tFileOutputExcel_2.setTruncateExceedingCharacters(false);
		xlsxTool_tFileOutputExcel_2.setSheet("ESTOQUE");
		xlsxTool_tFileOutputExcel_2.setAppend(true,false, false);
		xlsxTool_tFileOutputExcel_2.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_2.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_2 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_2 = chm_tFileOutputExcel_2.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_2", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_2) {
			
				xlsxTool_tFileOutputExcel_2.prepareXlsxFile(fileName_tFileOutputExcel_2);
			
		}
		
		xlsxTool_tFileOutputExcel_2.setFont("");
		
		if (xlsxTool_tFileOutputExcel_2.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_2.addRow();
		
		xlsxTool_tFileOutputExcel_2.addCellValue("cd_empresa");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("cd_produto");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("saldo_fisico");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("reservado_externo");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("reservado_enderecamento");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("reservado_pedido_venda");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("reservado_garantia");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("saldo_disponivel");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("vl_compra");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("st");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("importado");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("vl_ipi");
		
		nb_line_tFileOutputExcel_2++;
		headerIsInserted_tFileOutputExcel_2 = true;
		
	}
		

 



/**
 * [tFileOutputExcel_2 begin ] stop
 */



	
	/**
	 * [tMap_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_24", false);
		start_Hash.put("tMap_24", System.currentTimeMillis());
		
	
	currentComponent="tMap_24";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"out");
					}
				
		int tos_count_tMap_24 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct> tHash_Lookup_row41 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct>) 
					globalMap.get( "tHash_Lookup_row41" ))
					;					
					
	

row41Struct row41HashKey = new row41Struct();
row41Struct row41Default = new row41Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_24__Struct  {
}
Var__tMap_24__Struct Var__tMap_24 = new Var__tMap_24__Struct();
// ###############################

// ###############################
// # Outputs initialization
IPIStruct IPI_tmp = new IPIStruct();
// ###############################

        
        



        









 



/**
 * [tMap_24 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
	
		org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
				((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct>) 
					globalMap.get( "tHash_Lookup_row30" ))
					;					
					
	

row30Struct row30HashKey = new row30Struct();
row30Struct row30Default = new row30Struct();
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
outStruct out_tmp = new outStruct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tHashInput_10 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_10", false);
		start_Hash.put("tHashInput_10", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_10";
	
	
		int tos_count_tHashInput_10 = 0;
		


int nb_line_tHashInput_10 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_10=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row3Struct> tHashFile_tHashInput_10 = mf_tHashInput_10.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_9");
if(tHashFile_tHashInput_10==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row3Struct> iterator_tHashInput_10 = tHashFile_tHashInput_10.iterator();
while (iterator_tHashInput_10.hasNext()) {
    row3Struct next_tHashInput_10 = iterator_tHashInput_10.next();

	row21.cd_empresa = next_tHashInput_10.cd_empresa;
	row21.cd_produto = next_tHashInput_10.cd_produto;
	row21.saldo_fisico = next_tHashInput_10.saldo_fisico;
	row21.reservado_externo = next_tHashInput_10.reservado_externo;
	row21.reservado_enderecamento = next_tHashInput_10.reservado_enderecamento;
	row21.reservado_pedido_venda = next_tHashInput_10.reservado_pedido_venda;
	row21.reservado_garantia = next_tHashInput_10.reservado_garantia;
	row21.saldo_disponivel = next_tHashInput_10.saldo_disponivel;
	row21.st = next_tHashInput_10.st;
	row21.importado = next_tHashInput_10.importado;

 



/**
 * [tHashInput_10 begin ] stop
 */
	
	/**
	 * [tHashInput_10 main ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 


	tos_count_tHashInput_10++;

/**
 * [tHashInput_10 main ] stop
 */
	
	/**
	 * [tHashInput_10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_begin ] stop
 */

	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row21"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
						row30Struct row30 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_15 = false;
		boolean mainRowRejected_tMap_15 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row30" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow30 = false;
       		  	    	
       		  	    	
 							row30Struct row30ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_15) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_15 = false;
								
                        		    		    row30HashKey.cd_empresa = row21.cd_empresa ;
                        		    		
                        		    		    row30HashKey.cd_produto = row21.cd_produto ;
                        		    		

								
		                        	row30HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row30.lookup( row30HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row30.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow30 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow30 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row30 != null && tHash_Lookup_row30.hasNext()) || forceLooprow30) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row30'
									
                    		  	 
							   
                    		  	 
	       		  	    	row30Struct fromLookup_row30 = null;
							row30 = row30Default;
										 
							
								
								if(!forceLooprow30) { // G 46
								
							
								 
							
								
								fromLookup_row30 = tHash_Lookup_row30.next();

							

							if(fromLookup_row30 != null) {
								row30 = fromLookup_row30;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow30 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

out = null;


// # Output table : 'out'
out_tmp.cd_empresa = row21.cd_empresa ;
out_tmp.cd_produto = row21.cd_produto;
out_tmp.saldo_fisico = row21.saldo_fisico;
out_tmp.reservado_externo = row21.reservado_externo;
out_tmp.reservado_enderecamento = row21.reservado_enderecamento;
out_tmp.reservado_pedido_venda = row21.reservado_pedido_venda;
out_tmp.reservado_garantia = row21.reservado_garantia;
out_tmp.saldo_disponivel = row21.saldo_disponivel;
out_tmp.vl_compra = row30.vl_compra ;
out_tmp.st = row21.st ;
out_tmp.importado = row21.importado ;
out = out_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "out"
if(out != null) { 



	
	/**
	 * [tMap_24 main ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"out"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_24 = false;
		
						row41Struct row41 = null;
					
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_24 = false;
		boolean mainRowRejected_tMap_24 = false;
		

				///////////////////////////////////////////////
				// Starting Lookup Table "row41" 
				///////////////////////////////////////////////


				
				
                            
 					    boolean forceLooprow41 = false;
       		  	    	
       		  	    	
 							row41Struct row41ObjectFromLookup = null;
                          
		           		  	if(!rejectedInnerJoin_tMap_24) { // G_TM_M_020

								
								hasCasePrimitiveKeyWithNull_tMap_24 = false;
								
                        		    		    row41HashKey.ITE_CODEMP = out.cd_empresa ;
                        		    		
                        		    		    row41HashKey.ITE_CODITE = out.cd_produto ;
                        		    		

								
		                        	row41HashKey.hashCodeDirty = true;
                        		
	  					
	  							
			  					
			  					
	  					
		  							tHash_Lookup_row41.lookup( row41HashKey );

	  							

	  							

 								
								  
								  if(!tHash_Lookup_row41.hasNext()) { // G_TM_M_090

  								
		  				
	  								
						
									
	
		  								forceLooprow41 = true;
	  					
  									
  									  		
 								
								  
								  } // G_TM_M_090

  								



							} // G_TM_M_020
			           		  	  
							
								
								else { // G 20 - G 21
   									forceLooprow41 = true;
			           		  	} // G 21
                    		  	
                    		

							
                    		  	 
							

								while ((tHash_Lookup_row41 != null && tHash_Lookup_row41.hasNext()) || forceLooprow41) { // G_TM_M_043

								
									 // CALL close loop of lookup 'row41'
									
                    		  	 
							   
                    		  	 
	       		  	    	row41Struct fromLookup_row41 = null;
							row41 = row41Default;
										 
							
								
								if(!forceLooprow41) { // G 46
								
							
								 
							
								
								fromLookup_row41 = tHash_Lookup_row41.next();

							

							if(fromLookup_row41 != null) {
								row41 = fromLookup_row41;
							}
							
							
							
			  							
								
	                    		  	
		                    
	                    	
	                    		} // G 46
	                    		  	
								forceLooprow41 = false;
									 	
							
	            	
	            	
	            // ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_24__Struct Var = Var__tMap_24;// ###############################
        // ###############################
        // # Output tables

IPI = null;


// # Output table : 'IPI'
IPI_tmp.cd_empresa = out.cd_empresa ;
IPI_tmp.cd_produto = out.cd_produto;
IPI_tmp.saldo_fisico = out.saldo_fisico;
IPI_tmp.reservado_externo = out.reservado_externo;
IPI_tmp.reservado_enderecamento = out.reservado_enderecamento;
IPI_tmp.reservado_pedido_venda = out.reservado_pedido_venda;
IPI_tmp.reservado_garantia = out.reservado_garantia;
IPI_tmp.saldo_disponivel = out.saldo_disponivel;
IPI_tmp.vl_compra = out.vl_compra;
IPI_tmp.st = out.st;
IPI_tmp.importado = out.importado;
IPI_tmp.vl_ipi = row41.ITE_IPIENT != null ? row41.ITE_IPIENT : new BigDecimal(0);
IPI = IPI_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_24 = false;










 


	tos_count_tMap_24++;

/**
 * [tMap_24 main ] stop
 */
	
	/**
	 * [tMap_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	

 



/**
 * [tMap_24 process_data_begin ] stop
 */
// Start of branch "IPI"
if(IPI != null) { 



	
	/**
	 * [tFileOutputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"IPI"
						
						);
					}
					

				xlsxTool_tFileOutputExcel_2.addRow();
									   				
	    				if(IPI.cd_empresa != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(IPI.cd_empresa));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.cd_produto != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(IPI.cd_produto));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.saldo_fisico != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(IPI.saldo_fisico)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.reservado_externo != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(IPI.reservado_externo)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.reservado_enderecamento != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(IPI.reservado_enderecamento)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.reservado_pedido_venda != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(IPI.reservado_pedido_venda)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.reservado_garantia != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(IPI.reservado_garantia)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.saldo_disponivel != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(IPI.saldo_disponivel)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.vl_compra != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((IPI.vl_compra.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.st != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(Double.parseDouble(String.valueOf(IPI.st)));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.importado != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(IPI.importado));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(IPI.vl_ipi != null) {
    						
							xlsxTool_tFileOutputExcel_2.addCellValue((IPI.vl_ipi.setScale(2, java.math.RoundingMode.HALF_UP)).doubleValue());
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_2++;
				
 


	tos_count_tFileOutputExcel_2++;

/**
 * [tFileOutputExcel_2 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 process_data_end ] stop
 */

} // End of branch "IPI"



	
		} // close loop of lookup 'row41' // G_TM_M_043
	
	
	/**
	 * [tMap_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	

 



/**
 * [tMap_24 process_data_end ] stop
 */

} // End of branch "out"



	
		} // close loop of lookup 'row30' // G_TM_M_043
	
	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_10 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_10 end ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	
    

		
			nb_line_tHashInput_10++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_9");
	


	globalMap.put("tHashInput_10_NB_LINE", nb_line_tHashInput_10);       

 

ok_Hash.put("tHashInput_10", true);
end_Hash.put("tHashInput_10", System.currentTimeMillis());




/**
 * [tHashInput_10 end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row30 != null) {
						tHash_Lookup_row30.endGet();
					}
					globalMap.remove( "tHash_Lookup_row30" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tMap_24 end ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	


// ###############################
// # Lookup hashes releasing
					if(tHash_Lookup_row41 != null) {
						tHash_Lookup_row41.endGet();
					}
					globalMap.remove( "tHash_Lookup_row41" );

					
					
				
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"out");
			  	}
			  	
 

ok_Hash.put("tMap_24", true);
end_Hash.put("tMap_24", System.currentTimeMillis());




/**
 * [tMap_24 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

							columnIndex_tFileOutputExcel_2 = 0;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 1;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 2;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 3;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 4;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 5;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 6;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 7;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 8;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 9;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 10;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
							columnIndex_tFileOutputExcel_2 = 11;
						
					xlsxTool_tFileOutputExcel_2.setColAutoSize(columnIndex_tFileOutputExcel_2);
	
	
	
	
			xlsxTool_tFileOutputExcel_2.writeExcel(fileName_tFileOutputExcel_2,true);
	
		if(headerIsInserted_tFileOutputExcel_2 && nb_line_tFileOutputExcel_2 > 0){
			nb_line_tFileOutputExcel_2 = nb_line_tFileOutputExcel_2 -1;
		}
		globalMap.put("tFileOutputExcel_2_NB_LINE",nb_line_tFileOutputExcel_2);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"IPI");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_2", true);
end_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());




/**
 * [tFileOutputExcel_2 end ] stop
 */









				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tHashInput_10:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk15", 0, "ok");
								} 
							
							tSendMail_2Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
					     			//free memory for "tMap_24"
					     			globalMap.remove("tHash_Lookup_row41"); 
				     			
					     			//free memory for "tMap_15"
					     			globalMap.remove("tHash_Lookup_row30"); 
				     			
				try{
					
	
	/**
	 * [tHashInput_10 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_10";
	
	

 



/**
 * [tHashInput_10 finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";
	
	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tMap_24 finally ] start
	 */

	

	
	
	currentComponent="tMap_24";
	
	

 



/**
 * [tMap_24 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";
	
	

 



/**
 * [tFileOutputExcel_2 finally ] stop
 */









				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_10_SUBPROCESS_STATE", 1);
	}
	


public void tSendMail_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tSendMail_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tSendMail_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tSendMail_2", false);
		start_Hash.put("tSendMail_2", System.currentTimeMillis());
		
	
	currentComponent="tSendMail_2";
	
	
		int tos_count_tSendMail_2 = 0;
		

 



/**
 * [tSendMail_2 begin ] stop
 */
	
	/**
	 * [tSendMail_2 main ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 

	String smtpHost_tSendMail_2 = System.getenv(context.SMTP_P);
        String smtpPort_tSendMail_2 = System.getenv(context.SMTP_PORT_P);
	String from_tSendMail_2 = (System.getenv(context.EMAIL_P));
    String to_tSendMail_2 = (context.SEND_EMAIL).replace(";",",");
    String cc_tSendMail_2 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String bcc_tSendMail_2 = (("")==null || "".equals(""))?null:("").replace(";",",");
    String subject_tSendMail_2 = ("[Ad Hoc] Relatório Sellout-"+context.data_execucao+"");
    
	java.util.List<java.util.Map<String, String>> headers_tSendMail_2 = new java.util.ArrayList<java.util.Map<String,String>>();
	java.util.List<String> attachments_tSendMail_2 = new java.util.ArrayList<String>();
	java.util.List<String> contentTransferEncoding_tSendMail_2 = new java.util.ArrayList<String>();
		attachments_tSendMail_2.add("/root/e_mail/relatorio_sellout_"+context.data_execucao+".xlsx");
		contentTransferEncoding_tSendMail_2.add("DEFAULT");	

	String message_tSendMail_2 = (("Olá, bom dia!\n\nSegue em anexo o relatório Sellout.\n\n\nAtt,\n\nPlataforma de Dados | BI\nPalácio das Ferramentas e P"
+"arafusos LTDA\nwww.palaciodasferramentas.com.br") == null || "".equals("Olá, bom dia!\n\nSegue em anexo o relatório Sellout.\n\n\nAtt,\n\nPlataforma de Dados | BI\nPalácio das Ferramentas e P"
+"arafusos LTDA\nwww.palaciodasferramentas.com.br")) ? "\"\"" : ("Olá, bom dia!\n\nSegue em anexo o relatório Sellout.\n\n\nAtt,\n\nPlataforma de Dados | BI\nPalácio das Ferramentas e P"
+"arafusos LTDA\nwww.palaciodasferramentas.com.br") ;
	java.util.Properties props_tSendMail_2 = System.getProperties();     
	props_tSendMail_2.put("mail.smtp.host", smtpHost_tSendMail_2);
	props_tSendMail_2.put("mail.smtp.port", smtpPort_tSendMail_2);
	
		props_tSendMail_2.put("mail.mime.encodefilename", "true");
		props_tSendMail_2.put("mail.smtp.starttls.enable","true");     
	try {
		
		
			props_tSendMail_2.put("mail.smtp.auth", "true");
			javax.mail.Session session_tSendMail_2 = javax.mail.Session.getInstance(props_tSendMail_2, new javax.mail.Authenticator(){         
				protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
				
                
	final String decryptedPassword_tSendMail_2 = System.getenv(context.EMAIL_PASSWORD_P); 
				
				
				return new javax.mail.PasswordAuthentication(System.getenv(context.EMAIL_P), decryptedPassword_tSendMail_2); 
				}         
			});   
		
		
		javax.mail.Message msg_tSendMail_2 = new javax.mail.internet.MimeMessage(session_tSendMail_2);
		msg_tSendMail_2.setFrom(new javax.mail.internet.InternetAddress(from_tSendMail_2, null));
		msg_tSendMail_2.setRecipients(javax.mail.Message.RecipientType.TO,javax.mail.internet.InternetAddress.parse(to_tSendMail_2, false));
		if (cc_tSendMail_2 != null) msg_tSendMail_2.setRecipients(javax.mail.Message.RecipientType.CC, javax.mail.internet.InternetAddress.parse(cc_tSendMail_2, false));
		if (bcc_tSendMail_2 != null) msg_tSendMail_2.setRecipients(javax.mail.Message.RecipientType.BCC, javax.mail.internet.InternetAddress.parse(bcc_tSendMail_2, false));
		msg_tSendMail_2.setSubject(subject_tSendMail_2);

		for (int i_tSendMail_2 = 0; i_tSendMail_2 < headers_tSendMail_2.size(); i_tSendMail_2++) {
			java.util.Map<String, String> header_tSendMail_2 = headers_tSendMail_2.get(i_tSendMail_2);
			msg_tSendMail_2.setHeader(header_tSendMail_2.get("KEY"), header_tSendMail_2.get("VALUE"));    
		}  
		msg_tSendMail_2.setSentDate(new Date());
		msg_tSendMail_2.setHeader("X-Priority", "3"); //High->1 Normal->3 Low->5
		javax.mail.Multipart mp_tSendMail_2 = new javax.mail.internet.MimeMultipart();
		javax.mail.internet.MimeBodyPart mbpText_tSendMail_2 = new javax.mail.internet.MimeBodyPart();
		mbpText_tSendMail_2.setText(message_tSendMail_2,"ISO-8859-15", "plain");
		mp_tSendMail_2.addBodyPart(mbpText_tSendMail_2);
  
		javax.mail.internet.MimeBodyPart mbpFile_tSendMail_2 = null;

		for (int i_tSendMail_2 = 0; i_tSendMail_2 < attachments_tSendMail_2.size(); i_tSendMail_2++){
			String filename_tSendMail_2 = attachments_tSendMail_2.get(i_tSendMail_2);
			javax.activation.FileDataSource fds_tSendMail_2 = null;
			java.io.File file_tSendMail_2 = new java.io.File(filename_tSendMail_2);
			
    		if (file_tSendMail_2.isDirectory()){
				java.io.File[] subFiles_tSendMail_2 = file_tSendMail_2.listFiles();
				for(java.io.File subFile_tSendMail_2 : subFiles_tSendMail_2){
					if (subFile_tSendMail_2.isFile()){
						fds_tSendMail_2 = new javax.activation.FileDataSource(subFile_tSendMail_2.getAbsolutePath());
						mbpFile_tSendMail_2 = new javax.mail.internet.MimeBodyPart();
						mbpFile_tSendMail_2.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_2));
						mbpFile_tSendMail_2.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_2.getName()));
						if(contentTransferEncoding_tSendMail_2.get(i_tSendMail_2).equalsIgnoreCase("base64")){
							mbpFile_tSendMail_2.setHeader("Content-Transfer-Encoding", "base64");
						}
						mp_tSendMail_2.addBodyPart(mbpFile_tSendMail_2);
					}
				}
    		}else{
				mbpFile_tSendMail_2 = new javax.mail.internet.MimeBodyPart();
				fds_tSendMail_2 = new javax.activation.FileDataSource(filename_tSendMail_2);
				mbpFile_tSendMail_2.setDataHandler(new javax.activation.DataHandler(fds_tSendMail_2)); 
				mbpFile_tSendMail_2.setFileName(javax.mail.internet.MimeUtility.encodeText(fds_tSendMail_2.getName()));
				if(contentTransferEncoding_tSendMail_2.get(i_tSendMail_2).equalsIgnoreCase("base64")){
					mbpFile_tSendMail_2.setHeader("Content-Transfer-Encoding", "base64");
				}
				mp_tSendMail_2.addBodyPart(mbpFile_tSendMail_2);
			}
		}
		// -- set the content --
		msg_tSendMail_2.setContent(mp_tSendMail_2);
		// add handlers for main MIME types
		javax.activation.MailcapCommandMap mc_tSendMail_2 = ( javax.activation.MailcapCommandMap)javax.activation.CommandMap.getDefaultCommandMap();
		mc_tSendMail_2.addMailcap("text/html;; x-java-content-handler=com.sun.mail.handlers.text_html");
		mc_tSendMail_2.addMailcap("text/xml;; x-java-content-handler=com.sun.mail.handlers.text_xml");
		mc_tSendMail_2.addMailcap("text/plain;; x-java-content-handler=com.sun.mail.handlers.text_plain");
		mc_tSendMail_2.addMailcap("multipart/*;; x-java-content-handler=com.sun.mail.handlers.multipart_mixed");
		mc_tSendMail_2.addMailcap("message/rfc822;; x-java-content-handler=com.sun.mail.handlers.message_rfc822");
		javax.activation.CommandMap.setDefaultCommandMap(mc_tSendMail_2);
		// add com.sun.mail.handlers to job imports / depenencies (TESB-27110)
		com.sun.mail.handlers.text_plain text_plain_h_tSendMail_2 = null;
		// -- Send the message --
		javax.mail.Transport.send(msg_tSendMail_2);
	} catch(java.lang.Exception e){
globalMap.put("tSendMail_2_ERROR_MESSAGE",e.getMessage());
  		
			throw(e);
		
	}finally{
		props_tSendMail_2.remove("mail.smtp.host");
		props_tSendMail_2.remove("mail.smtp.port");
		
		props_tSendMail_2.remove("mail.mime.encodefilename");
		
			props_tSendMail_2.remove("mail.smtp.starttls.enable");
		
		props_tSendMail_2.remove("mail.smtp.auth");     
	}

 


	tos_count_tSendMail_2++;

/**
 * [tSendMail_2 main ] stop
 */
	
	/**
	 * [tSendMail_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 



/**
 * [tSendMail_2 process_data_begin ] stop
 */
	
	/**
	 * [tSendMail_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 



/**
 * [tSendMail_2 process_data_end ] stop
 */
	
	/**
	 * [tSendMail_2 end ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 

ok_Hash.put("tSendMail_2", true);
end_Hash.put("tSendMail_2", System.currentTimeMillis());




/**
 * [tSendMail_2 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tSendMail_2:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk6", 0, "ok");
								} 
							
							tJava_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tSendMail_2 finally ] start
	 */

	

	
	
	currentComponent="tSendMail_2";
	
	

 



/**
 * [tSendMail_2 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tSendMail_2_SUBPROCESS_STATE", 1);
	}
	


public void tJava_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tJava_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tJava_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tJava_1", false);
		start_Hash.put("tJava_1", System.currentTimeMillis());
		
	
	currentComponent="tJava_1";
	
	
		int tos_count_tJava_1 = 0;
		


System.out.println("**************************************************************************");
System.out.println("Finalizado o processo de envio de emails :"+TalendDate.getCurrentDate());
System.out.println("**************************************************************************");
 



/**
 * [tJava_1 begin ] stop
 */
	
	/**
	 * [tJava_1 main ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 


	tos_count_tJava_1++;

/**
 * [tJava_1 main ] stop
 */
	
	/**
	 * [tJava_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_begin ] stop
 */
	
	/**
	 * [tJava_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 process_data_end ] stop
 */
	
	/**
	 * [tJava_1 end ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 

ok_Hash.put("tJava_1", true);
end_Hash.put("tJava_1", System.currentTimeMillis());




/**
 * [tJava_1 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tJava_1:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk24", 0, "ok");
								} 
							
							tFileDelete_3Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tJava_1 finally ] start
	 */

	

	
	
	currentComponent="tJava_1";
	
	

 



/**
 * [tJava_1 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tJava_1_SUBPROCESS_STATE", 1);
	}
	


public void tFileDelete_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tFileDelete_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		


	
	/**
	 * [tFileDelete_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileDelete_3", false);
		start_Hash.put("tFileDelete_3", System.currentTimeMillis());
		
	
	currentComponent="tFileDelete_3";
	
	
		int tos_count_tFileDelete_3 = 0;
		

 



/**
 * [tFileDelete_3 begin ] stop
 */
	
	/**
	 * [tFileDelete_3 main ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 

class DeleteFoldertFileDelete_3{
	 /**
     * delete all the sub-files in 'file'
     * 
     * @param file
     */
	public boolean delete(java.io.File file) {
        java.io.File[] files = file.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) {
                files[i].delete();
            } else if (files[i].isDirectory()) {
                if (!files[i].delete()) {
                    delete(files[i]);
                }
            }
        }
        deleteDirectory(file);
        return file.delete();
    }

    /**
     * delete all the sub-folders in 'file'
     * 
     * @param file
     */
    private void deleteDirectory(java.io.File file) {
        java.io.File[] filed = file.listFiles();
        for (int i = 0; i < filed.length; i++) {
        	if(filed[i].isDirectory()) {
            	deleteDirectory(filed[i]);
            }
            filed[i].delete();
        }
    }

}
    java.io.File file_tFileDelete_3=new java.io.File("/root/e_mail/relatorio_sellout_"+context.data_execucao+".xlsx");
    if(file_tFileDelete_3.exists()&& file_tFileDelete_3.isFile()){
    	if(file_tFileDelete_3.delete()){
    		globalMap.put("tFileDelete_3_CURRENT_STATUS", "File deleted.");
		}else{
			globalMap.put("tFileDelete_3_CURRENT_STATUS", "No file deleted.");
				throw new RuntimeException("File " + file_tFileDelete_3.getAbsolutePath() + " can not be deleted.");
		}
	}else{
		globalMap.put("tFileDelete_3_CURRENT_STATUS", "File does not exist or is invalid.");
			throw new RuntimeException("File " + file_tFileDelete_3.getAbsolutePath() + " does not exist or is invalid or is not a file.");
	}
	globalMap.put("tFileDelete_3_DELETE_PATH","/root/e_mail/relatorio_sellout_"+context.data_execucao+".xlsx");
 


	tos_count_tFileDelete_3++;

/**
 * [tFileDelete_3 main ] stop
 */
	
	/**
	 * [tFileDelete_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 process_data_begin ] stop
 */
	
	/**
	 * [tFileDelete_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 process_data_end ] stop
 */
	
	/**
	 * [tFileDelete_3 end ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 

ok_Hash.put("tFileDelete_3", true);
end_Hash.put("tFileDelete_3", System.currentTimeMillis());




/**
 * [tFileDelete_3 end ] stop
 */
				}//end the resume

				
				    			if(resumeEntryMethodName == null || globalResumeTicket){
				    				resumeUtil.addLog("CHECKPOINT", "CONNECTION:SUBJOB_OK:tFileDelete_3:OnSubjobOk", "", Thread.currentThread().getId() + "", "", "", "", "", "");
								}	    				    			
					    	
								if(execStat){    	
									runStat.updateStatOnConnection("OnSubjobOk25", 0, "ok");
								} 
							
							tHashInput_1Process(globalMap); 
						



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tFileDelete_3 finally ] start
	 */

	

	
	
	currentComponent="tFileDelete_3";
	
	

 



/**
 * [tFileDelete_3 finally ] stop
 */
				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tFileDelete_3_SUBPROCESS_STATE", 1);
	}
	


public static class update_logStruct implements routines.system.IPersistableRow<update_logStruct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(update_logStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];

	
			    public String nm_programa;

				public String getNm_programa () {
					return this.nm_programa;
				}

				public Boolean nm_programaIsNullable(){
				    return true;
				}
				public Boolean nm_programaIsKey(){
				    return false;
				}
				public Integer nm_programaLength(){
				    return 50;
				}
				public Integer nm_programaPrecision(){
				    return null;
				}
				public String nm_programaDefault(){
				
					return null;
				
				}
				public String nm_programaComment(){
				
				    return "";
				
				}
				public String nm_programaPattern(){
				
					return "";
				
				}
				public String nm_programaOriginalDbColumnName(){
				
					return "nm_programa";
				
				}

				
			    public java.util.Date data_inicio_execucao;

				public java.util.Date getData_inicio_execucao () {
					return this.data_inicio_execucao;
				}

				public Boolean data_inicio_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_inicio_execucaoIsKey(){
				    return false;
				}
				public Integer data_inicio_execucaoLength(){
				    return null;
				}
				public Integer data_inicio_execucaoPrecision(){
				    return null;
				}
				public String data_inicio_execucaoDefault(){
				
					return null;
				
				}
				public String data_inicio_execucaoComment(){
				
				    return "";
				
				}
				public String data_inicio_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_inicio_execucaoOriginalDbColumnName(){
				
					return "data_inicio_execucao";
				
				}

				
			    public java.util.Date data_termino_execucao;

				public java.util.Date getData_termino_execucao () {
					return this.data_termino_execucao;
				}

				public Boolean data_termino_execucaoIsNullable(){
				    return true;
				}
				public Boolean data_termino_execucaoIsKey(){
				    return false;
				}
				public Integer data_termino_execucaoLength(){
				    return null;
				}
				public Integer data_termino_execucaoPrecision(){
				    return null;
				}
				public String data_termino_execucaoDefault(){
				
					return null;
				
				}
				public String data_termino_execucaoComment(){
				
				    return "";
				
				}
				public String data_termino_execucaoPattern(){
				
					return "yyyy-MM-dd HH:mm:ss";
				
				}
				public String data_termino_execucaoOriginalDbColumnName(){
				
					return "data_termino_execucao";
				
				}

				
			    public String mensagem;

				public String getMensagem () {
					return this.mensagem;
				}

				public Boolean mensagemIsNullable(){
				    return true;
				}
				public Boolean mensagemIsKey(){
				    return false;
				}
				public Integer mensagemLength(){
				    return 100;
				}
				public Integer mensagemPrecision(){
				    return null;
				}
				public String mensagemDefault(){
				
					return null;
				
				}
				public String mensagemComment(){
				
				    return "";
				
				}
				public String mensagemPattern(){
				
					return "yyyy-MM-dd";
				
				}
				public String mensagemOriginalDbColumnName(){
				
					return "mensagem";
				
				}

				
			    public String uuid;

				public String getUuid () {
					return this.uuid;
				}

				public Boolean uuidIsNullable(){
				    return true;
				}
				public Boolean uuidIsKey(){
				    return false;
				}
				public Integer uuidLength(){
				    return 50;
				}
				public Integer uuidPrecision(){
				    return null;
				}
				public String uuidDefault(){
				
					return null;
				
				}
				public String uuidComment(){
				
				    return "";
				
				}
				public String uuidPattern(){
				
					return "";
				
				}
				public String uuidOriginalDbColumnName(){
				
					return "uuid";
				
				}

				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

	private java.util.Date readDate(ObjectInputStream dis) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(dis.readLong());
		}
		return dateReturn;
	}
	
	private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		java.util.Date dateReturn = null;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			dateReturn = null;
		} else {
	    	dateReturn = new Date(unmarshaller.readLong());
		}
		return dateReturn;
	}

    private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException{
		if(date1 == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeLong(date1.getTime());
    	}
    }
    
    private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(date1 == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeLong(date1.getTime());
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.nm_programa = readString(dis);
					
					this.data_inicio_execucao = readDate(dis);
					
					this.data_termino_execucao = readDate(dis);
					
					this.mensagem = readString(dis);
					
					this.uuid = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.nm_programa,dos);
					
					// java.util.Date
				
						writeDate(this.data_inicio_execucao,dos);
					
					// java.util.Date
				
						writeDate(this.data_termino_execucao,dos);
					
					// String
				
						writeString(this.mensagem,dos);
					
					// String
				
						writeString(this.uuid,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("nm_programa="+nm_programa);
		sb.append(",data_inicio_execucao="+String.valueOf(data_inicio_execucao));
		sb.append(",data_termino_execucao="+String.valueOf(data_termino_execucao));
		sb.append(",mensagem="+mensagem);
		sb.append(",uuid="+uuid);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
update_logStruct update_log = new update_logStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"update_log");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





String dbschema_tDBOutput_2 = null;
	dbschema_tDBOutput_2 = (String)globalMap.get("schema_" + "tDBConnection_3");
	

String tableName_tDBOutput_2 = null;
if(dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
	tableName_tDBOutput_2 = ("dw_log_execucao").toLowerCase();
} else {
	tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "\".\"" + ("dw_log_execucao").toLowerCase();
}

        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        } else if (updateKeyCount_tDBOutput_2 == 5 && true) {        
                throw new RuntimeException("For update, every Schema column can not be a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;
int rowsToCommitCount_tDBOutput_2=0;
int rejectedCount_tDBOutput_2=0;

boolean whetherReject_tDBOutput_2 = false;

java.sql.Connection conn_tDBOutput_2 = null;
String dbUser_tDBOutput_2 = null;

	conn_tDBOutput_2 = (java.sql.Connection)globalMap.get("conn_tDBConnection_3");
	
	



int count_tDBOutput_2=0;
	    String update_tDBOutput_2 = "UPDATE \"" + tableName_tDBOutput_2 + "\" SET \"nm_programa\" = ?,\"data_inicio_execucao\" = ?,\"data_termino_execucao\" = ?,\"mensagem\" = ? WHERE \"uuid\" = ?";
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
update_logStruct update_log_tmp = new update_logStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tHashInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_1", false);
		start_Hash.put("tHashInput_1", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_1";
	
	
		int tos_count_tHashInput_1 = 0;
		


int nb_line_tHashInput_1 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_1=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row5Struct> tHashFile_tHashInput_1 = mf_tHashInput_1.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_1");
if(tHashFile_tHashInput_1==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row5Struct> iterator_tHashInput_1 = tHashFile_tHashInput_1.iterator();
while (iterator_tHashInput_1.hasNext()) {
    row5Struct next_tHashInput_1 = iterator_tHashInput_1.next();

	row6.nm_programa = next_tHashInput_1.nm_programa;
	row6.data_inicio_execucao = next_tHashInput_1.data_inicio_execucao;
	row6.data_termino_execucao = next_tHashInput_1.data_termino_execucao;
	row6.mensagem = next_tHashInput_1.mensagem;
	row6.uuid = next_tHashInput_1.uuid;

 



/**
 * [tHashInput_1 begin ] stop
 */
	
	/**
	 * [tHashInput_1 main ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 


	tos_count_tHashInput_1++;

/**
 * [tHashInput_1 main ] stop
 */
	
	/**
	 * [tHashInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row6"
						
						);
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
		// ###############################
		// # Input tables (lookups)
		
		boolean rejectedInnerJoin_tMap_2 = false;
		boolean mainRowRejected_tMap_2 = false;
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

update_log = null;


// # Output table : 'update_log'
update_log_tmp.nm_programa = context.programa;
update_log_tmp.data_inicio_execucao = row6.data_inicio_execucao;
update_log_tmp.data_termino_execucao = TalendDate.getCurrentDate();
update_log_tmp.mensagem = "Finalizado com sucesso";
update_log_tmp.uuid = row6.uuid ;
update_log = update_log_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "update_log"
if(update_log != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"update_log"
						
						);
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(update_log.nm_programa == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, update_log.nm_programa);
}

                    if(update_log.data_inicio_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(2, new java.sql.Timestamp(update_log.data_inicio_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(2, java.sql.Types.TIMESTAMP);
}

                    if(update_log.data_termino_execucao != null) {
pstmt_tDBOutput_2.setTimestamp(3, new java.sql.Timestamp(update_log.data_termino_execucao.getTime()));
} else {
pstmt_tDBOutput_2.setNull(3, java.sql.Types.TIMESTAMP);
}

                    if(update_log.mensagem == null) {
pstmt_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(4, update_log.mensagem);
}

                    if(update_log.uuid == null) {
pstmt_tDBOutput_2.setNull(5 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(5 + count_tDBOutput_2, update_log.uuid);
}


            try {
                nb_line_tDBOutput_2++;
				
                int processedCount_tDBOutput_2 = pstmt_tDBOutput_2.executeUpdate();
                updatedCount_tDBOutput_2 += processedCount_tDBOutput_2;
                rowsToCommitCount_tDBOutput_2 += processedCount_tDBOutput_2;
				
            } catch(java.lang.Exception e) {
globalMap.put("tDBOutput_2_ERROR_MESSAGE",e.getMessage());
				
                whetherReject_tDBOutput_2 = true;
                        System.err.print(e.getMessage());
            }

 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "update_log"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_1 end ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	
    

		
			nb_line_tHashInput_1++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_1");
	


	globalMap.put("tHashInput_1_NB_LINE", nb_line_tHashInput_1);       

 

ok_Hash.put("tHashInput_1", true);
end_Hash.put("tHashInput_1", System.currentTimeMillis());




/**
 * [tHashInput_1 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



        if(pstmt_tDBOutput_2 != null) {
        		
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    

	


				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"update_log");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());




/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_1 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_1";
	
	

 



/**
 * [tHashInput_1 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";
	
	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";
	
	



    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class row10Struct implements routines.system.IPersistableComparableLookupRow<row10Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __60__;

				public Integer get__60__ () {
					return this.__60__;
				}

				public Boolean __60__IsNullable(){
				    return true;
				}
				public Boolean __60__IsKey(){
				    return false;
				}
				public Integer __60__Length(){
				    return null;
				}
				public Integer __60__Precision(){
				    return null;
				}
				public String __60__Default(){
				
					return null;
				
				}
				public String __60__Comment(){
				
				    return "";
				
				}
				public String __60__Pattern(){
				
					return "";
				
				}
				public String __60__OriginalDbColumnName(){
				
					return "__60__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row10Struct other = (row10Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row10Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__60__ = this.__60__;
	            
	}

	public void copyKeysDataTo(row10Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__60__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__60__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__60__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__60__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__60__="+String.valueOf(__60__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row10Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row10Struct row10 = new row10Struct();




	
	/**
	 * [tAdvancedHash_row10 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row10", false);
		start_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row10");
					}
				
		int tos_count_tAdvancedHash_row10 = 0;
		

			   		// connection name:row10
			   		// source node:tHashInput_2 - inputs:(after_tHashInput_4) outputs:(row10,row10) | target node:tAdvancedHash_row10 - inputs:(row10) outputs:()
			   		// linked node: tMap_7 - inputs:(row7,row10) outputs:(out1)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row10 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row10Struct>getLookup(matchingModeEnum_row10);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row10", tHash_Lookup_row10);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row10 begin ] stop
 */



	
	/**
	 * [tHashInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_2", false);
		start_Hash.put("tHashInput_2", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_2";
	
	
		int tos_count_tHashInput_2 = 0;
		


int nb_line_tHashInput_2 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_2=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<_60_Struct> tHashFile_tHashInput_2 = mf_tHashInput_2.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_2");
if(tHashFile_tHashInput_2==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<_60_Struct> iterator_tHashInput_2 = tHashFile_tHashInput_2.iterator();
while (iterator_tHashInput_2.hasNext()) {
    _60_Struct next_tHashInput_2 = iterator_tHashInput_2.next();

	row10.cod_item = next_tHashInput_2.cod_item;
	row10.item = next_tHashInput_2.item;
	row10.__60__ = next_tHashInput_2.__60__;

 



/**
 * [tHashInput_2 begin ] stop
 */
	
	/**
	 * [tHashInput_2 main ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 


	tos_count_tHashInput_2++;

/**
 * [tHashInput_2 main ] stop
 */
	
	/**
	 * [tHashInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row10"
						
						);
					}
					


			   
			   

					row10Struct row10_HashRow = new row10Struct();
		   	   	   
				
				row10_HashRow.cod_item = row10.cod_item;
				
				row10_HashRow.item = row10.item;
				
				row10_HashRow.__60__ = row10.__60__;
				
			tHash_Lookup_row10.put(row10_HashRow);
			
            




 


	tos_count_tAdvancedHash_row10++;

/**
 * [tAdvancedHash_row10 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row10 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_2 end ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	
    

		
			nb_line_tHashInput_2++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_2");
	


	globalMap.put("tHashInput_2_NB_LINE", nb_line_tHashInput_2);       

 

ok_Hash.put("tHashInput_2", true);
end_Hash.put("tHashInput_2", System.currentTimeMillis());




/**
 * [tHashInput_2 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

tHash_Lookup_row10.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row10");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row10", true);
end_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());




/**
 * [tAdvancedHash_row10 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_2 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_2";
	
	

 



/**
 * [tHashInput_2 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row10 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row10";
	
	

 



/**
 * [tAdvancedHash_row10 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class row8Struct implements routines.system.IPersistableComparableLookupRow<row8Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __30__;

				public Integer get__30__ () {
					return this.__30__;
				}

				public Boolean __30__IsNullable(){
				    return true;
				}
				public Boolean __30__IsKey(){
				    return false;
				}
				public Integer __30__Length(){
				    return null;
				}
				public Integer __30__Precision(){
				    return null;
				}
				public String __30__Default(){
				
					return null;
				
				}
				public String __30__Comment(){
				
				    return "";
				
				}
				public String __30__Pattern(){
				
					return "";
				
				}
				public String __30__OriginalDbColumnName(){
				
					return "__30__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row8Struct other = (row8Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row8Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__30__ = this.__30__;
	            
	}

	public void copyKeysDataTo(row8Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__30__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__30__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__30__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__30__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__30__="+String.valueOf(__30__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();




	
	/**
	 * [tAdvancedHash_row8 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row8", false);
		start_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tAdvancedHash_row8 = 0;
		

			   		// connection name:row8
			   		// source node:tHashInput_3 - inputs:(after_tHashInput_4) outputs:(row8,row8) | target node:tAdvancedHash_row8 - inputs:(row8) outputs:()
			   		// linked node: tMap_5 - inputs:(out1,row8) outputs:(out2)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row8 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row8Struct>getLookup(matchingModeEnum_row8);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row8", tHash_Lookup_row8);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row8 begin ] stop
 */



	
	/**
	 * [tHashInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_3", false);
		start_Hash.put("tHashInput_3", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_3";
	
	
		int tos_count_tHashInput_3 = 0;
		


int nb_line_tHashInput_3 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_3=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__30__Struct> tHashFile_tHashInput_3 = mf_tHashInput_3.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_3");
if(tHashFile_tHashInput_3==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<__30__Struct> iterator_tHashInput_3 = tHashFile_tHashInput_3.iterator();
while (iterator_tHashInput_3.hasNext()) {
    __30__Struct next_tHashInput_3 = iterator_tHashInput_3.next();

	row8.cod_item = next_tHashInput_3.cod_item;
	row8.item = next_tHashInput_3.item;
	row8.__30__ = next_tHashInput_3._30_;

 



/**
 * [tHashInput_3 begin ] stop
 */
	
	/**
	 * [tHashInput_3 main ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 


	tos_count_tHashInput_3++;

/**
 * [tHashInput_3 main ] stop
 */
	
	/**
	 * [tHashInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row8"
						
						);
					}
					


			   
			   

					row8Struct row8_HashRow = new row8Struct();
		   	   	   
				
				row8_HashRow.cod_item = row8.cod_item;
				
				row8_HashRow.item = row8.item;
				
				row8_HashRow.__30__ = row8.__30__;
				
			tHash_Lookup_row8.put(row8_HashRow);
			
            




 


	tos_count_tAdvancedHash_row8++;

/**
 * [tAdvancedHash_row8 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row8 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_3 end ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	
    

		
			nb_line_tHashInput_3++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_3");
	


	globalMap.put("tHashInput_3_NB_LINE", nb_line_tHashInput_3);       

 

ok_Hash.put("tHashInput_3", true);
end_Hash.put("tHashInput_3", System.currentTimeMillis());




/**
 * [tHashInput_3 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

tHash_Lookup_row8.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row8", true);
end_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());




/**
 * [tAdvancedHash_row8 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_3 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_3";
	
	

 



/**
 * [tHashInput_3 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row8 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row8";
	
	

 



/**
 * [tAdvancedHash_row8 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class row13Struct implements routines.system.IPersistableComparableLookupRow<row13Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __15__;

				public Integer get__15__ () {
					return this.__15__;
				}

				public Boolean __15__IsNullable(){
				    return true;
				}
				public Boolean __15__IsKey(){
				    return false;
				}
				public Integer __15__Length(){
				    return null;
				}
				public Integer __15__Precision(){
				    return null;
				}
				public String __15__Default(){
				
					return null;
				
				}
				public String __15__Comment(){
				
				    return "";
				
				}
				public String __15__Pattern(){
				
					return "";
				
				}
				public String __15__OriginalDbColumnName(){
				
					return "__15__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row13Struct other = (row13Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row13Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__15__ = this.__15__;
	            
	}

	public void copyKeysDataTo(row13Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__15__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__15__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__15__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__15__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__15__="+String.valueOf(__15__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();




	
	/**
	 * [tAdvancedHash_row13 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row13", false);
		start_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tAdvancedHash_row13 = 0;
		

			   		// connection name:row13
			   		// source node:tHashInput_6 - inputs:(after_tHashInput_4) outputs:(row13,row13) | target node:tAdvancedHash_row13 - inputs:(row13) outputs:()
			   		// linked node: tMap_10 - inputs:(out2,row13) outputs:(out3)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row13 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row13Struct> tHash_Lookup_row13 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row13Struct>getLookup(matchingModeEnum_row13);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row13", tHash_Lookup_row13);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row13 begin ] stop
 */



	
	/**
	 * [tHashInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_6", false);
		start_Hash.put("tHashInput_6", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_6";
	
	
		int tos_count_tHashInput_6 = 0;
		


int nb_line_tHashInput_6 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_6=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__15__Struct> tHashFile_tHashInput_6 = mf_tHashInput_6.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_5");
if(tHashFile_tHashInput_6==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<__15__Struct> iterator_tHashInput_6 = tHashFile_tHashInput_6.iterator();
while (iterator_tHashInput_6.hasNext()) {
    __15__Struct next_tHashInput_6 = iterator_tHashInput_6.next();

	row13.cod_item = next_tHashInput_6.cod_item;
	row13.item = next_tHashInput_6.item;
	row13.__15__ = next_tHashInput_6._15_;

 



/**
 * [tHashInput_6 begin ] stop
 */
	
	/**
	 * [tHashInput_6 main ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 


	tos_count_tHashInput_6++;

/**
 * [tHashInput_6 main ] stop
 */
	
	/**
	 * [tHashInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row13"
						
						);
					}
					


			   
			   

					row13Struct row13_HashRow = new row13Struct();
		   	   	   
				
				row13_HashRow.cod_item = row13.cod_item;
				
				row13_HashRow.item = row13.item;
				
				row13_HashRow.__15__ = row13.__15__;
				
			tHash_Lookup_row13.put(row13_HashRow);
			
            




 


	tos_count_tAdvancedHash_row13++;

/**
 * [tAdvancedHash_row13 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row13 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_6 end ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	
    

		
			nb_line_tHashInput_6++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_5");
	


	globalMap.put("tHashInput_6_NB_LINE", nb_line_tHashInput_6);       

 

ok_Hash.put("tHashInput_6", true);
end_Hash.put("tHashInput_6", System.currentTimeMillis());




/**
 * [tHashInput_6 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

tHash_Lookup_row13.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row13", true);
end_Hash.put("tAdvancedHash_row13", System.currentTimeMillis());




/**
 * [tAdvancedHash_row13 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_6 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_6";
	
	

 



/**
 * [tHashInput_6 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row13 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row13";
	
	

 



/**
 * [tAdvancedHash_row13 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class row14Struct implements routines.system.IPersistableComparableLookupRow<row14Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __07__;

				public Integer get__07__ () {
					return this.__07__;
				}

				public Boolean __07__IsNullable(){
				    return true;
				}
				public Boolean __07__IsKey(){
				    return false;
				}
				public Integer __07__Length(){
				    return null;
				}
				public Integer __07__Precision(){
				    return null;
				}
				public String __07__Default(){
				
					return null;
				
				}
				public String __07__Comment(){
				
				    return "";
				
				}
				public String __07__Pattern(){
				
					return "";
				
				}
				public String __07__OriginalDbColumnName(){
				
					return "__07__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row14Struct other = (row14Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row14Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__07__ = this.__07__;
	            
	}

	public void copyKeysDataTo(row14Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__07__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__07__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__07__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__07__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__07__="+String.valueOf(__07__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();




	
	/**
	 * [tAdvancedHash_row14 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row14", false);
		start_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tAdvancedHash_row14 = 0;
		

			   		// connection name:row14
			   		// source node:tHashInput_5 - inputs:(after_tHashInput_4) outputs:(row14,row14) | target node:tAdvancedHash_row14 - inputs:(row14) outputs:()
			   		// linked node: tMap_11 - inputs:(out3,row14) outputs:(out4)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row14 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row14Struct>getLookup(matchingModeEnum_row14);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row14", tHash_Lookup_row14);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row14 begin ] stop
 */



	
	/**
	 * [tHashInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_5", false);
		start_Hash.put("tHashInput_5", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_5";
	
	
		int tos_count_tHashInput_5 = 0;
		


int nb_line_tHashInput_5 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_5=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<__07__Struct> tHashFile_tHashInput_5 = mf_tHashInput_5.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_6");
if(tHashFile_tHashInput_5==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<__07__Struct> iterator_tHashInput_5 = tHashFile_tHashInput_5.iterator();
while (iterator_tHashInput_5.hasNext()) {
    __07__Struct next_tHashInput_5 = iterator_tHashInput_5.next();

	row14.cod_item = next_tHashInput_5.cod_item;
	row14.item = next_tHashInput_5.item;
	row14.__07__ = next_tHashInput_5._07_;

 



/**
 * [tHashInput_5 begin ] stop
 */
	
	/**
	 * [tHashInput_5 main ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 


	tos_count_tHashInput_5++;

/**
 * [tHashInput_5 main ] stop
 */
	
	/**
	 * [tHashInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row14"
						
						);
					}
					


			   
			   

					row14Struct row14_HashRow = new row14Struct();
		   	   	   
				
				row14_HashRow.cod_item = row14.cod_item;
				
				row14_HashRow.item = row14.item;
				
				row14_HashRow.__07__ = row14.__07__;
				
			tHash_Lookup_row14.put(row14_HashRow);
			
            




 


	tos_count_tAdvancedHash_row14++;

/**
 * [tAdvancedHash_row14 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row14 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_5 end ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	
    

		
			nb_line_tHashInput_5++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_6");
	


	globalMap.put("tHashInput_5_NB_LINE", nb_line_tHashInput_5);       

 

ok_Hash.put("tHashInput_5", true);
end_Hash.put("tHashInput_5", System.currentTimeMillis());




/**
 * [tHashInput_5 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

tHash_Lookup_row14.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row14", true);
end_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());




/**
 * [tAdvancedHash_row14 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_5 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_5";
	
	

 



/**
 * [tHashInput_5 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row14 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row14";
	
	

 



/**
 * [tAdvancedHash_row14 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class row28Struct implements routines.system.IPersistableComparableLookupRow<row28Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer _01_;

				public Integer get_01_ () {
					return this._01_;
				}

				public Boolean _01_IsNullable(){
				    return true;
				}
				public Boolean _01_IsKey(){
				    return false;
				}
				public Integer _01_Length(){
				    return null;
				}
				public Integer _01_Precision(){
				    return null;
				}
				public String _01_Default(){
				
					return null;
				
				}
				public String _01_Comment(){
				
				    return "";
				
				}
				public String _01_Pattern(){
				
					return "";
				
				}
				public String _01_OriginalDbColumnName(){
				
					return "_01_";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row28Struct other = (row28Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row28Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other._01_ = this._01_;
	            
	}

	public void copyKeysDataTo(row28Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this._01_ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this._01_ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this._01_, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this._01_, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",_01_="+String.valueOf(_01_));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row28Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_11Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_11_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row28Struct row28 = new row28Struct();




	
	/**
	 * [tAdvancedHash_row28 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row28", false);
		start_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row28";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row28");
					}
				
		int tos_count_tAdvancedHash_row28 = 0;
		

			   		// connection name:row28
			   		// source node:tHashInput_11 - inputs:(after_tHashInput_4) outputs:(row28,row28) | target node:tAdvancedHash_row28 - inputs:(row28) outputs:()
			   		// linked node: tMap_14 - inputs:(out4,row28) outputs:(out6)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row28 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row28Struct> tHash_Lookup_row28 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row28Struct>getLookup(matchingModeEnum_row28);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row28", tHash_Lookup_row28);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row28 begin ] stop
 */



	
	/**
	 * [tHashInput_11 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_11", false);
		start_Hash.put("tHashInput_11", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_11";
	
	
		int tos_count_tHashInput_11 = 0;
		


int nb_line_tHashInput_11 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_11=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOf__07__Struct> tHashFile_tHashInput_11 = mf_tHashInput_11.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_10");
if(tHashFile_tHashInput_11==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<copyOf__07__Struct> iterator_tHashInput_11 = tHashFile_tHashInput_11.iterator();
while (iterator_tHashInput_11.hasNext()) {
    copyOf__07__Struct next_tHashInput_11 = iterator_tHashInput_11.next();

	row28.cod_item = next_tHashInput_11.cod_item;
	row28.item = next_tHashInput_11.item;
	row28._01_ = next_tHashInput_11._01_;

 



/**
 * [tHashInput_11 begin ] stop
 */
	
	/**
	 * [tHashInput_11 main ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 


	tos_count_tHashInput_11++;

/**
 * [tHashInput_11 main ] stop
 */
	
	/**
	 * [tHashInput_11 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row28"
						
						);
					}
					


			   
			   

					row28Struct row28_HashRow = new row28Struct();
		   	   	   
				
				row28_HashRow.cod_item = row28.cod_item;
				
				row28_HashRow.item = row28.item;
				
				row28_HashRow._01_ = row28._01_;
				
			tHash_Lookup_row28.put(row28_HashRow);
			
            




 


	tos_count_tAdvancedHash_row28++;

/**
 * [tAdvancedHash_row28 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row28 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_11 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_11 end ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	
    

		
			nb_line_tHashInput_11++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_10");
	


	globalMap.put("tHashInput_11_NB_LINE", nb_line_tHashInput_11);       

 

ok_Hash.put("tHashInput_11", true);
end_Hash.put("tHashInput_11", System.currentTimeMillis());




/**
 * [tHashInput_11 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

tHash_Lookup_row28.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row28");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row28", true);
end_Hash.put("tAdvancedHash_row28", System.currentTimeMillis());




/**
 * [tAdvancedHash_row28 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_11 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_11";
	
	

 



/**
 * [tHashInput_11 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row28 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row28";
	
	

 



/**
 * [tAdvancedHash_row28 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_11_SUBPROCESS_STATE", 1);
	}
	


public static class row32Struct implements routines.system.IPersistableComparableLookupRow<row32Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M0__;

				public Integer get__M0__ () {
					return this.__M0__;
				}

				public Boolean __M0__IsNullable(){
				    return true;
				}
				public Boolean __M0__IsKey(){
				    return false;
				}
				public Integer __M0__Length(){
				    return null;
				}
				public Integer __M0__Precision(){
				    return null;
				}
				public String __M0__Default(){
				
					return null;
				
				}
				public String __M0__Comment(){
				
				    return "";
				
				}
				public String __M0__Pattern(){
				
					return "";
				
				}
				public String __M0__OriginalDbColumnName(){
				
					return "__M0__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row32Struct other = (row32Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row32Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__M0__ = this.__M0__;
	            
	}

	public void copyKeysDataTo(row32Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__M0__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__M0__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__M0__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__M0__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M0__="+String.valueOf(__M0__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row32Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row32Struct row32 = new row32Struct();




	
	/**
	 * [tAdvancedHash_row32 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row32", false);
		start_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row32";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row32");
					}
				
		int tos_count_tAdvancedHash_row32 = 0;
		

			   		// connection name:row32
			   		// source node:tHashInput_13 - inputs:(after_tHashInput_4) outputs:(row32,row32) | target node:tAdvancedHash_row32 - inputs:(row32) outputs:()
			   		// linked node: tMap_17 - inputs:(out6,row32) outputs:(M0)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row32 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row32Struct> tHash_Lookup_row32 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row32Struct>getLookup(matchingModeEnum_row32);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row32", tHash_Lookup_row32);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row32 begin ] stop
 */



	
	/**
	 * [tHashInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_13", false);
		start_Hash.put("tHashInput_13", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_13";
	
	
		int tos_count_tHashInput_13 = 0;
		


int nb_line_tHashInput_13 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_13=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M0_Struct> tHashFile_tHashInput_13 = mf_tHashInput_13.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_12");
if(tHashFile_tHashInput_13==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<M0_Struct> iterator_tHashInput_13 = tHashFile_tHashInput_13.iterator();
while (iterator_tHashInput_13.hasNext()) {
    M0_Struct next_tHashInput_13 = iterator_tHashInput_13.next();

	row32.cod_item = next_tHashInput_13.cod_item;
	row32.item = next_tHashInput_13.item;
	row32.__M0__ = next_tHashInput_13.__M0__;

 



/**
 * [tHashInput_13 begin ] stop
 */
	
	/**
	 * [tHashInput_13 main ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 


	tos_count_tHashInput_13++;

/**
 * [tHashInput_13 main ] stop
 */
	
	/**
	 * [tHashInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row32"
						
						);
					}
					


			   
			   

					row32Struct row32_HashRow = new row32Struct();
		   	   	   
				
				row32_HashRow.cod_item = row32.cod_item;
				
				row32_HashRow.item = row32.item;
				
				row32_HashRow.__M0__ = row32.__M0__;
				
			tHash_Lookup_row32.put(row32_HashRow);
			
            




 


	tos_count_tAdvancedHash_row32++;

/**
 * [tAdvancedHash_row32 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row32 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_13 end ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	
    

		
			nb_line_tHashInput_13++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_12");
	


	globalMap.put("tHashInput_13_NB_LINE", nb_line_tHashInput_13);       

 

ok_Hash.put("tHashInput_13", true);
end_Hash.put("tHashInput_13", System.currentTimeMillis());




/**
 * [tHashInput_13 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

tHash_Lookup_row32.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row32");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row32", true);
end_Hash.put("tAdvancedHash_row32", System.currentTimeMillis());




/**
 * [tAdvancedHash_row32 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_13 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_13";
	
	

 



/**
 * [tHashInput_13 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row32 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row32";
	
	

 



/**
 * [tAdvancedHash_row32 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class row36Struct implements routines.system.IPersistableComparableLookupRow<row36Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M1__;

				public Integer get__M1__ () {
					return this.__M1__;
				}

				public Boolean __M1__IsNullable(){
				    return true;
				}
				public Boolean __M1__IsKey(){
				    return false;
				}
				public Integer __M1__Length(){
				    return null;
				}
				public Integer __M1__Precision(){
				    return null;
				}
				public String __M1__Default(){
				
					return null;
				
				}
				public String __M1__Comment(){
				
				    return "";
				
				}
				public String __M1__Pattern(){
				
					return "";
				
				}
				public String __M1__OriginalDbColumnName(){
				
					return "__M1__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row36Struct other = (row36Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row36Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__M1__ = this.__M1__;
	            
	}

	public void copyKeysDataTo(row36Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__M1__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__M1__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__M1__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__M1__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M1__="+String.valueOf(__M1__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row36Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row36Struct row36 = new row36Struct();




	
	/**
	 * [tAdvancedHash_row36 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row36", false);
		start_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row36";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row36");
					}
				
		int tos_count_tAdvancedHash_row36 = 0;
		

			   		// connection name:row36
			   		// source node:tHashInput_14 - inputs:(after_tHashInput_4) outputs:(row36,row36) | target node:tAdvancedHash_row36 - inputs:(row36) outputs:()
			   		// linked node: tMap_21 - inputs:(M0,row36) outputs:(M1_)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row36 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row36Struct> tHash_Lookup_row36 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row36Struct>getLookup(matchingModeEnum_row36);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row36", tHash_Lookup_row36);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row36 begin ] stop
 */



	
	/**
	 * [tHashInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_14", false);
		start_Hash.put("tHashInput_14", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_14";
	
	
		int tos_count_tHashInput_14 = 0;
		


int nb_line_tHashInput_14 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_14=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M1Struct> tHashFile_tHashInput_14 = mf_tHashInput_14.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_13");
if(tHashFile_tHashInput_14==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<M1Struct> iterator_tHashInput_14 = tHashFile_tHashInput_14.iterator();
while (iterator_tHashInput_14.hasNext()) {
    M1Struct next_tHashInput_14 = iterator_tHashInput_14.next();

	row36.cod_item = next_tHashInput_14.cod_item;
	row36.item = next_tHashInput_14.item;
	row36.__M1__ = next_tHashInput_14.__M1__;

 



/**
 * [tHashInput_14 begin ] stop
 */
	
	/**
	 * [tHashInput_14 main ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 


	tos_count_tHashInput_14++;

/**
 * [tHashInput_14 main ] stop
 */
	
	/**
	 * [tHashInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row36"
						
						);
					}
					


			   
			   

					row36Struct row36_HashRow = new row36Struct();
		   	   	   
				
				row36_HashRow.cod_item = row36.cod_item;
				
				row36_HashRow.item = row36.item;
				
				row36_HashRow.__M1__ = row36.__M1__;
				
			tHash_Lookup_row36.put(row36_HashRow);
			
            




 


	tos_count_tAdvancedHash_row36++;

/**
 * [tAdvancedHash_row36 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row36 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_14 end ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	
    

		
			nb_line_tHashInput_14++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_13");
	


	globalMap.put("tHashInput_14_NB_LINE", nb_line_tHashInput_14);       

 

ok_Hash.put("tHashInput_14", true);
end_Hash.put("tHashInput_14", System.currentTimeMillis());




/**
 * [tHashInput_14 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

tHash_Lookup_row36.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row36");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row36", true);
end_Hash.put("tAdvancedHash_row36", System.currentTimeMillis());




/**
 * [tAdvancedHash_row36 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_14 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_14";
	
	

 



/**
 * [tHashInput_14 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row36 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row36";
	
	

 



/**
 * [tAdvancedHash_row36 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class row37Struct implements routines.system.IPersistableComparableLookupRow<row37Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M2__;

				public Integer get__M2__ () {
					return this.__M2__;
				}

				public Boolean __M2__IsNullable(){
				    return true;
				}
				public Boolean __M2__IsKey(){
				    return false;
				}
				public Integer __M2__Length(){
				    return null;
				}
				public Integer __M2__Precision(){
				    return null;
				}
				public String __M2__Default(){
				
					return null;
				
				}
				public String __M2__Comment(){
				
				    return "";
				
				}
				public String __M2__Pattern(){
				
					return "";
				
				}
				public String __M2__OriginalDbColumnName(){
				
					return "__M2__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row37Struct other = (row37Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row37Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__M2__ = this.__M2__;
	            
	}

	public void copyKeysDataTo(row37Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__M2__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__M2__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__M2__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__M2__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M2__="+String.valueOf(__M2__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row37Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row37Struct row37 = new row37Struct();




	
	/**
	 * [tAdvancedHash_row37 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row37", false);
		start_Hash.put("tAdvancedHash_row37", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row37";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row37");
					}
				
		int tos_count_tAdvancedHash_row37 = 0;
		

			   		// connection name:row37
			   		// source node:tHashInput_15 - inputs:(after_tHashInput_4) outputs:(row37,row37) | target node:tAdvancedHash_row37 - inputs:(row37) outputs:()
			   		// linked node: tMap_22 - inputs:(M1_,row37) outputs:(M2_)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row37 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row37Struct> tHash_Lookup_row37 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row37Struct>getLookup(matchingModeEnum_row37);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row37", tHash_Lookup_row37);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row37 begin ] stop
 */



	
	/**
	 * [tHashInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_15", false);
		start_Hash.put("tHashInput_15", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_15";
	
	
		int tos_count_tHashInput_15 = 0;
		


int nb_line_tHashInput_15 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_15=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<M2Struct> tHashFile_tHashInput_15 = mf_tHashInput_15.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_14");
if(tHashFile_tHashInput_15==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<M2Struct> iterator_tHashInput_15 = tHashFile_tHashInput_15.iterator();
while (iterator_tHashInput_15.hasNext()) {
    M2Struct next_tHashInput_15 = iterator_tHashInput_15.next();

	row37.cod_item = next_tHashInput_15.cod_item;
	row37.item = next_tHashInput_15.item;
	row37.__M2__ = next_tHashInput_15.__M2__;

 



/**
 * [tHashInput_15 begin ] stop
 */
	
	/**
	 * [tHashInput_15 main ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 


	tos_count_tHashInput_15++;

/**
 * [tHashInput_15 main ] stop
 */
	
	/**
	 * [tHashInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row37"
						
						);
					}
					


			   
			   

					row37Struct row37_HashRow = new row37Struct();
		   	   	   
				
				row37_HashRow.cod_item = row37.cod_item;
				
				row37_HashRow.item = row37.item;
				
				row37_HashRow.__M2__ = row37.__M2__;
				
			tHash_Lookup_row37.put(row37_HashRow);
			
            




 


	tos_count_tAdvancedHash_row37++;

/**
 * [tAdvancedHash_row37 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row37 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

 



/**
 * [tAdvancedHash_row37 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row37 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

 



/**
 * [tAdvancedHash_row37 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_15 end ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	
    

		
			nb_line_tHashInput_15++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_14");
	


	globalMap.put("tHashInput_15_NB_LINE", nb_line_tHashInput_15);       

 

ok_Hash.put("tHashInput_15", true);
end_Hash.put("tHashInput_15", System.currentTimeMillis());




/**
 * [tHashInput_15 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

tHash_Lookup_row37.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row37");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row37", true);
end_Hash.put("tAdvancedHash_row37", System.currentTimeMillis());




/**
 * [tAdvancedHash_row37 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_15 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_15";
	
	

 



/**
 * [tHashInput_15 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row37 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row37";
	
	

 



/**
 * [tAdvancedHash_row37 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class row38Struct implements routines.system.IPersistableComparableLookupRow<row38Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cod_item;

				public String getCod_item () {
					return this.cod_item;
				}

				public Boolean cod_itemIsNullable(){
				    return true;
				}
				public Boolean cod_itemIsKey(){
				    return false;
				}
				public Integer cod_itemLength(){
				    return null;
				}
				public Integer cod_itemPrecision(){
				    return null;
				}
				public String cod_itemDefault(){
				
					return null;
				
				}
				public String cod_itemComment(){
				
				    return "";
				
				}
				public String cod_itemPattern(){
				
					return "";
				
				}
				public String cod_itemOriginalDbColumnName(){
				
					return "cod_item";
				
				}

				
			    public String item;

				public String getItem () {
					return this.item;
				}

				public Boolean itemIsNullable(){
				    return true;
				}
				public Boolean itemIsKey(){
				    return false;
				}
				public Integer itemLength(){
				    return null;
				}
				public Integer itemPrecision(){
				    return null;
				}
				public String itemDefault(){
				
					return null;
				
				}
				public String itemComment(){
				
				    return "";
				
				}
				public String itemPattern(){
				
					return "";
				
				}
				public String itemOriginalDbColumnName(){
				
					return "item";
				
				}

				
			    public Integer __M3__;

				public Integer get__M3__ () {
					return this.__M3__;
				}

				public Boolean __M3__IsNullable(){
				    return true;
				}
				public Boolean __M3__IsKey(){
				    return false;
				}
				public Integer __M3__Length(){
				    return null;
				}
				public Integer __M3__Precision(){
				    return null;
				}
				public String __M3__Default(){
				
					return null;
				
				}
				public String __M3__Comment(){
				
				    return "";
				
				}
				public String __M3__Pattern(){
				
					return "";
				
				}
				public String __M3__OriginalDbColumnName(){
				
					return "__M3__";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cod_item == null) ? 0 : this.cod_item.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row38Struct other = (row38Struct) obj;
		
						if (this.cod_item == null) {
							if (other.cod_item != null)
								return false;
						
						} else if (!this.cod_item.equals(other.cod_item))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row38Struct other) {

		other.cod_item = this.cod_item;
	            other.item = this.item;
	            other.__M3__ = this.__M3__;
	            
	}

	public void copyKeysDataTo(row38Struct other) {

		other.cod_item = this.cod_item;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }
	
	private String readString(DataInputStream dis, ObjectInputStream ois) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			dis.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			byte[] byteArray = new byte[length];
			unmarshaller.read(byteArray);
			strReturn = new String(byteArray, utf8Charset);
		}
		return strReturn;
	}
	
	private void writeString(String str, DataOutputStream dos, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
	}

	private void writeString(String str, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
	}
	private Integer readInteger(DataInputStream dis, ObjectInputStream ois) throws IOException{
		Integer intReturn;
        int length = 0;
        length = dis.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = dis.readInt();
		}
		return intReturn;
	}
	
	private Integer readInteger(DataInputStream dis, org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		Integer intReturn;
        int length = 0;
        length = unmarshaller.readByte();
		if (length == -1) {
			intReturn = null;
		} else {
			intReturn = unmarshaller.readInt();
		}
		return intReturn;
	}

	private void writeInteger(Integer intNum, DataOutputStream dos, ObjectOutputStream oos) throws IOException{
		if(intNum == null) {
            dos.writeByte(-1);
		} else {
			dos.writeByte(0);
	    	dos.writeInt(intNum);
    	}
	}
	
	private void writeInteger(Integer intNum, DataOutputStream dos,org.jboss.marshalling.Marshaller marshaller ) throws IOException{
		if(intNum == null) {
			marshaller.writeByte(-1);
		} else {
			marshaller.writeByte(0);
			marshaller.writeInt(intNum);
    	}
	}

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cod_item = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cod_item,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
						this.item = readString(dis,ois);
					
						this.__M3__ = readInteger(dis,ois);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
						this.item = readString(dis,objectIn);
					
						this.__M3__ = readInteger(dis,objectIn);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
						writeString(this.item, dos, oos);
					
					writeInteger(this.__M3__, dos, oos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						writeString(this.item, dos, objectOut);
					
					writeInteger(this.__M3__, dos, objectOut);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cod_item="+cod_item);
		sb.append(",item="+item);
		sb.append(",__M3__="+String.valueOf(__M3__));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row38Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cod_item, other.cod_item);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row38Struct row38 = new row38Struct();




	
	/**
	 * [tAdvancedHash_row38 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row38", false);
		start_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row38";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row38");
					}
				
		int tos_count_tAdvancedHash_row38 = 0;
		

			   		// connection name:row38
			   		// source node:tHashInput_16 - inputs:(after_tHashInput_4) outputs:(row38,row38) | target node:tAdvancedHash_row38 - inputs:(row38) outputs:()
			   		// linked node: tMap_23 - inputs:(M2_,row38) outputs:(M3_)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row38 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row38Struct>getLookup(matchingModeEnum_row38);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row38", tHash_Lookup_row38);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row38 begin ] stop
 */



	
	/**
	 * [tHashInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_16", false);
		start_Hash.put("tHashInput_16", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_16";
	
	
		int tos_count_tHashInput_16 = 0;
		


int nb_line_tHashInput_16 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_16=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<copyOfM2Struct> tHashFile_tHashInput_16 = mf_tHashInput_16.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_15");
if(tHashFile_tHashInput_16==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<copyOfM2Struct> iterator_tHashInput_16 = tHashFile_tHashInput_16.iterator();
while (iterator_tHashInput_16.hasNext()) {
    copyOfM2Struct next_tHashInput_16 = iterator_tHashInput_16.next();

	row38.cod_item = next_tHashInput_16.cod_item;
	row38.item = next_tHashInput_16.item;
	row38.__M3__ = next_tHashInput_16.__M3__;

 



/**
 * [tHashInput_16 begin ] stop
 */
	
	/**
	 * [tHashInput_16 main ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 


	tos_count_tHashInput_16++;

/**
 * [tHashInput_16 main ] stop
 */
	
	/**
	 * [tHashInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row38"
						
						);
					}
					


			   
			   

					row38Struct row38_HashRow = new row38Struct();
		   	   	   
				
				row38_HashRow.cod_item = row38.cod_item;
				
				row38_HashRow.item = row38.item;
				
				row38_HashRow.__M3__ = row38.__M3__;
				
			tHash_Lookup_row38.put(row38_HashRow);
			
            




 


	tos_count_tAdvancedHash_row38++;

/**
 * [tAdvancedHash_row38 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row38 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

 



/**
 * [tAdvancedHash_row38 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row38 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

 



/**
 * [tAdvancedHash_row38 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_16 end ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	
    

		
			nb_line_tHashInput_16++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_15");
	


	globalMap.put("tHashInput_16_NB_LINE", nb_line_tHashInput_16);       

 

ok_Hash.put("tHashInput_16", true);
end_Hash.put("tHashInput_16", System.currentTimeMillis());




/**
 * [tHashInput_16 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

tHash_Lookup_row38.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row38");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row38", true);
end_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());




/**
 * [tAdvancedHash_row38 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_16 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_16";
	
	

 



/**
 * [tHashInput_16 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row38 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row38";
	
	

 



/**
 * [tAdvancedHash_row38 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class row15Struct implements routines.system.IPersistableComparableLookupRow<row15Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String NUM_CODITE;

				public String getNUM_CODITE () {
					return this.NUM_CODITE;
				}

				public Boolean NUM_CODITEIsNullable(){
				    return true;
				}
				public Boolean NUM_CODITEIsKey(){
				    return false;
				}
				public Integer NUM_CODITELength(){
				    return null;
				}
				public Integer NUM_CODITEPrecision(){
				    return null;
				}
				public String NUM_CODITEDefault(){
				
					return null;
				
				}
				public String NUM_CODITEComment(){
				
				    return "";
				
				}
				public String NUM_CODITEPattern(){
				
					return "";
				
				}
				public String NUM_CODITEOriginalDbColumnName(){
				
					return "NUM_CODITE";
				
				}

				
			    public BigDecimal NUM_VALATR;

				public BigDecimal getNUM_VALATR () {
					return this.NUM_VALATR;
				}

				public Boolean NUM_VALATRIsNullable(){
				    return true;
				}
				public Boolean NUM_VALATRIsKey(){
				    return false;
				}
				public Integer NUM_VALATRLength(){
				    return 20;
				}
				public Integer NUM_VALATRPrecision(){
				    return 10;
				}
				public String NUM_VALATRDefault(){
				
					return null;
				
				}
				public String NUM_VALATRComment(){
				
				    return "";
				
				}
				public String NUM_VALATRPattern(){
				
					return "";
				
				}
				public String NUM_VALATROriginalDbColumnName(){
				
					return "NUM_VALATR";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.NUM_CODITE == null) ? 0 : this.NUM_CODITE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row15Struct other = (row15Struct) obj;
		
						if (this.NUM_CODITE == null) {
							if (other.NUM_CODITE != null)
								return false;
						
						} else if (!this.NUM_CODITE.equals(other.NUM_CODITE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row15Struct other) {

		other.NUM_CODITE = this.NUM_CODITE;
	            other.NUM_VALATR = this.NUM_VALATR;
	            
	}

	public void copyKeysDataTo(row15Struct other) {

		other.NUM_CODITE = this.NUM_CODITE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.NUM_CODITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.NUM_CODITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.NUM_CODITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.NUM_CODITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.NUM_VALATR = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.NUM_VALATR = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.NUM_VALATR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.NUM_VALATR);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("NUM_CODITE="+NUM_CODITE);
		sb.append(",NUM_VALATR="+String.valueOf(NUM_VALATR));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.NUM_CODITE, other.NUM_CODITE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tDBInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();




	
	/**
	 * [tAdvancedHash_row15 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row15", false);
		start_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tAdvancedHash_row15 = 0;
		

			   		// connection name:row15
			   		// source node:tDBInput_17 - inputs:(after_tHashInput_4) outputs:(row15,row15) | target node:tAdvancedHash_row15 - inputs:(row15) outputs:()
			   		// linked node: tMap_12 - inputs:(M3_,row15) outputs:(INSERT)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row15 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row15Struct> tHash_Lookup_row15 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row15Struct>getLookup(matchingModeEnum_row15);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row15", tHash_Lookup_row15);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row15 begin ] stop
 */



	
	/**
	 * [tDBInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_17", false);
		start_Hash.put("tDBInput_17", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_17";
	
	
		int tos_count_tDBInput_17 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_17 = java.util.Calendar.getInstance();
		    calendar_tDBInput_17.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_17 = calendar_tDBInput_17.getTime();
		    int nb_line_tDBInput_17 = 0;
		    java.sql.Connection conn_tDBInput_17 = null;
				conn_tDBInput_17 = (java.sql.Connection)globalMap.get("conn_tDBConnection_2");
				
		    
			java.sql.Statement stmt_tDBInput_17 = conn_tDBInput_17.createStatement();

		    String dbquery_tDBInput_17 = "\nSELECT NUM_CODITE,\n       NUM_VALATR \n  FROM ATRNUM\n  WHERE NUM_CODATR = 00003\n";
		    

		    globalMap.put("tDBInput_17_QUERY",dbquery_tDBInput_17);

		    java.sql.ResultSet rs_tDBInput_17 = null;

		    try {
		    	rs_tDBInput_17 = stmt_tDBInput_17.executeQuery(dbquery_tDBInput_17);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_17 = rs_tDBInput_17.getMetaData();
		    	int colQtyInRs_tDBInput_17 = rsmd_tDBInput_17.getColumnCount();

		    String tmpContent_tDBInput_17 = null;
		    
		    
		    while (rs_tDBInput_17.next()) {
		        nb_line_tDBInput_17++;
		        
							if(colQtyInRs_tDBInput_17 < 1) {
								row15.NUM_CODITE = null;
							} else {
	                         		
        	row15.NUM_CODITE = routines.system.JDBCUtil.getString(rs_tDBInput_17, 1, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 2) {
								row15.NUM_VALATR = null;
							} else {
		                          
            row15.NUM_VALATR = rs_tDBInput_17.getBigDecimal(2);
            if(rs_tDBInput_17.wasNull()){
                    row15.NUM_VALATR = null;
            }
		                    }
					

 



/**
 * [tDBInput_17 begin ] stop
 */
	
	/**
	 * [tDBInput_17 main ] start
	 */

	

	
	
	currentComponent="tDBInput_17";
	
	

 


	tos_count_tDBInput_17++;

/**
 * [tDBInput_17 main ] stop
 */
	
	/**
	 * [tDBInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_17";
	
	

 



/**
 * [tDBInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row15"
						
						);
					}
					


			   
			   

					row15Struct row15_HashRow = new row15Struct();
		   	   	   
				
				row15_HashRow.NUM_CODITE = row15.NUM_CODITE;
				
				row15_HashRow.NUM_VALATR = row15.NUM_VALATR;
				
			tHash_Lookup_row15.put(row15_HashRow);
			
            




 


	tos_count_tAdvancedHash_row15++;

/**
 * [tAdvancedHash_row15 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row15 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_17";
	
	

 



/**
 * [tDBInput_17 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_17 end ] start
	 */

	

	
	
	currentComponent="tDBInput_17";
	
	

	}
}finally{
	if (rs_tDBInput_17 != null) {
		rs_tDBInput_17.close();
	}
	if (stmt_tDBInput_17 != null) {
		stmt_tDBInput_17.close();
	}
}
globalMap.put("tDBInput_17_NB_LINE",nb_line_tDBInput_17);

 

ok_Hash.put("tDBInput_17", true);
end_Hash.put("tDBInput_17", System.currentTimeMillis());




/**
 * [tDBInput_17 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

tHash_Lookup_row15.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row15", true);
end_Hash.put("tAdvancedHash_row15", System.currentTimeMillis());




/**
 * [tAdvancedHash_row15 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_17 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_17";
	
	

 



/**
 * [tDBInput_17 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row15 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row15";
	
	

 



/**
 * [tAdvancedHash_row15 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class row30Struct implements routines.system.IPersistableComparableLookupRow<row30Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String cd_empresa;

				public String getCd_empresa () {
					return this.cd_empresa;
				}

				public Boolean cd_empresaIsNullable(){
				    return true;
				}
				public Boolean cd_empresaIsKey(){
				    return false;
				}
				public Integer cd_empresaLength(){
				    return null;
				}
				public Integer cd_empresaPrecision(){
				    return null;
				}
				public String cd_empresaDefault(){
				
					return null;
				
				}
				public String cd_empresaComment(){
				
				    return "";
				
				}
				public String cd_empresaPattern(){
				
					return "";
				
				}
				public String cd_empresaOriginalDbColumnName(){
				
					return "cd_empresa";
				
				}

				
			    public String cd_produto;

				public String getCd_produto () {
					return this.cd_produto;
				}

				public Boolean cd_produtoIsNullable(){
				    return true;
				}
				public Boolean cd_produtoIsKey(){
				    return false;
				}
				public Integer cd_produtoLength(){
				    return null;
				}
				public Integer cd_produtoPrecision(){
				    return null;
				}
				public String cd_produtoDefault(){
				
					return null;
				
				}
				public String cd_produtoComment(){
				
				    return "";
				
				}
				public String cd_produtoPattern(){
				
					return "";
				
				}
				public String cd_produtoOriginalDbColumnName(){
				
					return "cd_produto";
				
				}

				
			    public BigDecimal vl_compra;

				public BigDecimal getVl_compra () {
					return this.vl_compra;
				}

				public Boolean vl_compraIsNullable(){
				    return true;
				}
				public Boolean vl_compraIsKey(){
				    return false;
				}
				public Integer vl_compraLength(){
				    return 12;
				}
				public Integer vl_compraPrecision(){
				    return 2;
				}
				public String vl_compraDefault(){
				
					return null;
				
				}
				public String vl_compraComment(){
				
				    return "";
				
				}
				public String vl_compraPattern(){
				
					return "";
				
				}
				public String vl_compraOriginalDbColumnName(){
				
					return "vl_compra";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.cd_empresa == null) ? 0 : this.cd_empresa.hashCode());
					
						result = prime * result + ((this.cd_produto == null) ? 0 : this.cd_produto.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row30Struct other = (row30Struct) obj;
		
						if (this.cd_empresa == null) {
							if (other.cd_empresa != null)
								return false;
						
						} else if (!this.cd_empresa.equals(other.cd_empresa))
						
							return false;
					
						if (this.cd_produto == null) {
							if (other.cd_produto != null)
								return false;
						
						} else if (!this.cd_produto.equals(other.cd_produto))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row30Struct other) {

		other.cd_empresa = this.cd_empresa;
	            other.cd_produto = this.cd_produto;
	            other.vl_compra = this.vl_compra;
	            
	}

	public void copyKeysDataTo(row30Struct other) {

		other.cd_empresa = this.cd_empresa;
	            	other.cd_produto = this.cd_produto;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.cd_empresa = readString(dis);
					
					this.cd_produto = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.cd_empresa,dos);
					
					// String
				
						writeString(this.cd_produto,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.vl_compra = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.vl_compra = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.vl_compra);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.vl_compra);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("cd_empresa="+cd_empresa);
		sb.append(",cd_produto="+cd_produto);
		sb.append(",vl_compra="+String.valueOf(vl_compra));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row30Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.cd_empresa, other.cd_empresa);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.cd_produto, other.cd_produto);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_12_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row30Struct row30 = new row30Struct();




	
	/**
	 * [tAdvancedHash_row30 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row30", false);
		start_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row30");
					}
				
		int tos_count_tAdvancedHash_row30 = 0;
		

			   		// connection name:row30
			   		// source node:tHashInput_12 - inputs:(after_tHashInput_10) outputs:(row30,row30) | target node:tAdvancedHash_row30 - inputs:(row30) outputs:()
			   		// linked node: tMap_15 - inputs:(row21,row30) outputs:(out)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row30 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row30Struct> tHash_Lookup_row30 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row30Struct>getLookup(matchingModeEnum_row30);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row30", tHash_Lookup_row30);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row30 begin ] stop
 */



	
	/**
	 * [tHashInput_12 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_12", false);
		start_Hash.put("tHashInput_12", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_12";
	
	
		int tos_count_tHashInput_12 = 0;
		


int nb_line_tHashInput_12 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_12=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row29Struct> tHashFile_tHashInput_12 = mf_tHashInput_12.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_11");
if(tHashFile_tHashInput_12==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row29Struct> iterator_tHashInput_12 = tHashFile_tHashInput_12.iterator();
while (iterator_tHashInput_12.hasNext()) {
    row29Struct next_tHashInput_12 = iterator_tHashInput_12.next();

	row30.cd_empresa = next_tHashInput_12.cd_empresa;
	row30.cd_produto = next_tHashInput_12.cd_produto;
	row30.vl_compra = next_tHashInput_12.vl_compra;

 



/**
 * [tHashInput_12 begin ] stop
 */
	
	/**
	 * [tHashInput_12 main ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 


	tos_count_tHashInput_12++;

/**
 * [tHashInput_12 main ] stop
 */
	
	/**
	 * [tHashInput_12 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row30"
						
						);
					}
					


			   
			   

					row30Struct row30_HashRow = new row30Struct();
		   	   	   
				
				row30_HashRow.cd_empresa = row30.cd_empresa;
				
				row30_HashRow.cd_produto = row30.cd_produto;
				
				row30_HashRow.vl_compra = row30.vl_compra;
				
			tHash_Lookup_row30.put(row30_HashRow);
			
            




 


	tos_count_tAdvancedHash_row30++;

/**
 * [tAdvancedHash_row30 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row30 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_12 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_12 end ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	
    

		
			nb_line_tHashInput_12++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_11");
	


	globalMap.put("tHashInput_12_NB_LINE", nb_line_tHashInput_12);       

 

ok_Hash.put("tHashInput_12", true);
end_Hash.put("tHashInput_12", System.currentTimeMillis());




/**
 * [tHashInput_12 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

tHash_Lookup_row30.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row30");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row30", true);
end_Hash.put("tAdvancedHash_row30", System.currentTimeMillis());




/**
 * [tAdvancedHash_row30 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_12 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_12";
	
	

 



/**
 * [tHashInput_12 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row30 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row30";
	
	

 



/**
 * [tAdvancedHash_row30 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_12_SUBPROCESS_STATE", 1);
	}
	


public static class row41Struct implements routines.system.IPersistableComparableLookupRow<row41Struct> {
    final static byte[] commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
    static byte[] commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String ITE_CODEMP;

				public String getITE_CODEMP () {
					return this.ITE_CODEMP;
				}

				public Boolean ITE_CODEMPIsNullable(){
				    return true;
				}
				public Boolean ITE_CODEMPIsKey(){
				    return false;
				}
				public Integer ITE_CODEMPLength(){
				    return null;
				}
				public Integer ITE_CODEMPPrecision(){
				    return null;
				}
				public String ITE_CODEMPDefault(){
				
					return null;
				
				}
				public String ITE_CODEMPComment(){
				
				    return "";
				
				}
				public String ITE_CODEMPPattern(){
				
					return "";
				
				}
				public String ITE_CODEMPOriginalDbColumnName(){
				
					return "ITE_CODEMP";
				
				}

				
			    public String ITE_CODITE;

				public String getITE_CODITE () {
					return this.ITE_CODITE;
				}

				public Boolean ITE_CODITEIsNullable(){
				    return true;
				}
				public Boolean ITE_CODITEIsKey(){
				    return false;
				}
				public Integer ITE_CODITELength(){
				    return null;
				}
				public Integer ITE_CODITEPrecision(){
				    return null;
				}
				public String ITE_CODITEDefault(){
				
					return null;
				
				}
				public String ITE_CODITEComment(){
				
				    return "";
				
				}
				public String ITE_CODITEPattern(){
				
					return "";
				
				}
				public String ITE_CODITEOriginalDbColumnName(){
				
					return "ITE_CODITE";
				
				}

				
			    public BigDecimal ITE_IPIENT;

				public BigDecimal getITE_IPIENT () {
					return this.ITE_IPIENT;
				}

				public Boolean ITE_IPIENTIsNullable(){
				    return true;
				}
				public Boolean ITE_IPIENTIsKey(){
				    return false;
				}
				public Integer ITE_IPIENTLength(){
				    return 12;
				}
				public Integer ITE_IPIENTPrecision(){
				    return 2;
				}
				public String ITE_IPIENTDefault(){
				
					return null;
				
				}
				public String ITE_IPIENTComment(){
				
				    return "";
				
				}
				public String ITE_IPIENTPattern(){
				
					return "";
				
				}
				public String ITE_IPIENTOriginalDbColumnName(){
				
					return "ITE_IPIENT";
				
				}

				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ITE_CODEMP == null) ? 0 : this.ITE_CODEMP.hashCode());
					
						result = prime * result + ((this.ITE_CODITE == null) ? 0 : this.ITE_CODITE.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final row41Struct other = (row41Struct) obj;
		
						if (this.ITE_CODEMP == null) {
							if (other.ITE_CODEMP != null)
								return false;
						
						} else if (!this.ITE_CODEMP.equals(other.ITE_CODEMP))
						
							return false;
					
						if (this.ITE_CODITE == null) {
							if (other.ITE_CODITE != null)
								return false;
						
						} else if (!this.ITE_CODITE.equals(other.ITE_CODITE))
						
							return false;
					

		return true;
    }

	public void copyDataTo(row41Struct other) {

		other.ITE_CODEMP = this.ITE_CODEMP;
	            other.ITE_CODITE = this.ITE_CODITE;
	            other.ITE_IPIENT = this.ITE_IPIENT;
	            
	}

	public void copyKeysDataTo(row41Struct other) {

		other.ITE_CODEMP = this.ITE_CODEMP;
	            	other.ITE_CODITE = this.ITE_CODITE;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}
	
	private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException{
		String strReturn = null;
		int length = 0;
        length = unmarshaller.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length) {
				if(length < 1024 && commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout.length == 0) {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[1024];
				} else {
   					commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout = new byte[2 * length];
   				}
			}
			unmarshaller.readFully(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length);
			strReturn = new String(commonByteArray_PALACIO_FERRAMENTAS_relatorio_sellout, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }
    
    private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException{
		if(str == null) {
			marshaller.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
            marshaller.writeInt(byteArray.length);
            marshaller.write(byteArray);
    	}
    }

    public void readKeysData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.ITE_CODEMP = readString(dis);
					
					this.ITE_CODITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }
    
    public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

		synchronized(commonByteArrayLock_PALACIO_FERRAMENTAS_relatorio_sellout) {

        	try {

        		int length = 0;
		
					this.ITE_CODEMP = readString(dis);
					
					this.ITE_CODITE = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeKeysData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.ITE_CODEMP,dos);
					
					// String
				
						writeString(this.ITE_CODITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }
    
    public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
        try {

		
					// String
				
						writeString(this.ITE_CODEMP,dos);
					
					// String
				
						writeString(this.ITE_CODITE,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }



    /**
     * Fill Values data by reading ObjectInputStream.
     */
    public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
        try {

			int length = 0;
		
       			    	this.ITE_IPIENT = (BigDecimal) ois.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }
    
    public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
        try {
			int length = 0;
		
       			    	this.ITE_IPIENT = (BigDecimal) objectIn.readObject();
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		
			} catch(ClassNotFoundException eCNFE) {
				 throw new RuntimeException(eCNFE);
		

        }

		

    }

    /**
     * Return a byte array which represents Values data.
     */
    public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
        try {

		
       			    	oos.writeObject(this.ITE_IPIENT);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}

    }
    
    public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut){
                try {

		
						objectOut.clearInstanceCache();
						objectOut.writeObject(this.ITE_IPIENT);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        	}
    }


    
    public boolean supportMarshaller(){
        return true;
    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("ITE_CODEMP="+ITE_CODEMP);
		sb.append(",ITE_CODITE="+ITE_CODITE);
		sb.append(",ITE_IPIENT="+String.valueOf(ITE_IPIENT));
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row41Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ITE_CODEMP, other.ITE_CODEMP);
						if(returnValue != 0) {
							return returnValue;
						}

					
						returnValue = checkNullsAndCompare(this.ITE_CODITE, other.ITE_CODITE);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public void tHashInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tHashInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	

	
		String iterateId = "";
	
	
	String currentComponent = "";
	String cLabel =  null;
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row41Struct row41 = new row41Struct();




	
	/**
	 * [tAdvancedHash_row41 begin ] start
	 */

	

	
		
		ok_Hash.put("tAdvancedHash_row41", false);
		start_Hash.put("tAdvancedHash_row41", System.currentTimeMillis());
		
	
	currentComponent="tAdvancedHash_row41";
	
	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row41");
					}
				
		int tos_count_tAdvancedHash_row41 = 0;
		

			   		// connection name:row41
			   		// source node:tHashInput_17 - inputs:(after_tHashInput_10) outputs:(row41,row41) | target node:tAdvancedHash_row41 - inputs:(row41) outputs:()
			   		// linked node: tMap_24 - inputs:(out,row41) outputs:(IPI)
			   
			   		org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row41 = 
			   			org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.ALL_MATCHES;
			   			
			   
	   			org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row41Struct> tHash_Lookup_row41 =org.talend.designer.components.lookup.memory.AdvancedMemoryLookup.
	   						<row41Struct>getLookup(matchingModeEnum_row41);
	   						   
		   	   	   globalMap.put("tHash_Lookup_row41", tHash_Lookup_row41);
		   	   	   
				
           

 



/**
 * [tAdvancedHash_row41 begin ] stop
 */



	
	/**
	 * [tHashInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tHashInput_17", false);
		start_Hash.put("tHashInput_17", System.currentTimeMillis());
		
	
	currentComponent="tHashInput_17";
	
	
		int tos_count_tHashInput_17 = 0;
		


int nb_line_tHashInput_17 = 0;
	
org.talend.designer.components.hashfile.common.MapHashFile mf_tHashInput_17=org.talend.designer.components.hashfile.common.MapHashFile.getMapHashFile();
org.talend.designer.components.hashfile.memory.AdvancedMemoryHashFile<row40Struct> tHashFile_tHashInput_17 = mf_tHashInput_17.getAdvancedMemoryHashFile("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_16");
if(tHashFile_tHashInput_17==null) {
	throw new RuntimeException("The hash is not initialized : The hash must exist before you read from it");
}
java.util.Iterator<row40Struct> iterator_tHashInput_17 = tHashFile_tHashInput_17.iterator();
while (iterator_tHashInput_17.hasNext()) {
    row40Struct next_tHashInput_17 = iterator_tHashInput_17.next();

	row41.ITE_CODEMP = next_tHashInput_17.ITE_CODEMP;
	row41.ITE_CODITE = next_tHashInput_17.ITE_CODITE;
	row41.ITE_IPIENT = next_tHashInput_17.ITE_IPIENT;

 



/**
 * [tHashInput_17 begin ] stop
 */
	
	/**
	 * [tHashInput_17 main ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 


	tos_count_tHashInput_17++;

/**
 * [tHashInput_17 main ] stop
 */
	
	/**
	 * [tHashInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 main ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1
						
							,"row41"
						
						);
					}
					


			   
			   

					row41Struct row41_HashRow = new row41Struct();
		   	   	   
				
				row41_HashRow.ITE_CODEMP = row41.ITE_CODEMP;
				
				row41_HashRow.ITE_CODITE = row41.ITE_CODITE;
				
				row41_HashRow.ITE_IPIENT = row41.ITE_IPIENT;
				
			tHash_Lookup_row41.put(row41_HashRow);
			
            




 


	tos_count_tAdvancedHash_row41++;

/**
 * [tAdvancedHash_row41 main ] stop
 */
	
	/**
	 * [tAdvancedHash_row41 process_data_begin ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 process_data_begin ] stop
 */
	
	/**
	 * [tAdvancedHash_row41 process_data_end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 process_data_end ] stop
 */



	
	/**
	 * [tHashInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 process_data_end ] stop
 */
	
	/**
	 * [tHashInput_17 end ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	
    

		
			nb_line_tHashInput_17++;
		}	
    	
		org.talend.designer.components.hashfile.common.MapHashFile.resourceLockMap.remove("tHashFile_relatorio_sellout_" + pid +"_tHashOutput_16");
	


	globalMap.put("tHashInput_17_NB_LINE", nb_line_tHashInput_17);       

 

ok_Hash.put("tHashInput_17", true);
end_Hash.put("tHashInput_17", System.currentTimeMillis());




/**
 * [tHashInput_17 end ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 end ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

tHash_Lookup_row41.endPut();

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row41");
			  	}
			  	
 

ok_Hash.put("tAdvancedHash_row41", true);
end_Hash.put("tAdvancedHash_row41", System.currentTimeMillis());




/**
 * [tAdvancedHash_row41 end ] stop
 */



				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, cLabel, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tHashInput_17 finally ] start
	 */

	

	
	
	currentComponent="tHashInput_17";
	
	

 



/**
 * [tHashInput_17 finally ] stop
 */

	
	/**
	 * [tAdvancedHash_row41 finally ] start
	 */

	

	
	
	currentComponent="tAdvancedHash_row41";
	
	

 



/**
 * [tAdvancedHash_row41 finally ] stop
 */



				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tHashInput_17_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };

    private SyncInt runningThreadCount =new SyncInt();

    private class SyncInt
    {
        private int count = 0;
        public synchronized void add(int i)
        {
            count +=i;
        }

        public synchronized int getCount()
        {
            return count;
        }
    }

    protected PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    
    
    private final static java.util.Properties jobInfo = new java.util.Properties();
    private final static java.util.Map<String,String> mdcInfo = new java.util.HashMap<>();
    private final static java.util.concurrent.atomic.AtomicLong subJobPidCounter = new java.util.concurrent.atomic.AtomicLong();


    public static void main(String[] args){
        final relatorio_sellout relatorio_selloutClass = new relatorio_sellout();

        int exitCode = relatorio_selloutClass.runJobInTOS(args);

        System.exit(exitCode);
    }
	

	
	
	private void getjobInfo() {
		final String TEMPLATE_PATH = "src/main/templates/jobInfo_template.properties";
		final String BUILD_PATH = "../jobInfo.properties";
		final String path = this.getClass().getResource("").getPath();
		if(path.lastIndexOf("target") > 0) {
			final java.io.File templateFile = new java.io.File(
					path.substring(0, path.lastIndexOf("target")).concat(TEMPLATE_PATH));
			if (templateFile.exists()) {
				readJobInfo(templateFile);
				return;
			}
		}
			readJobInfo(new java.io.File(BUILD_PATH));
	}

    private void readJobInfo(java.io.File jobInfoFile){
	
        if(jobInfoFile.exists()) {
            try (java.io.InputStream is = new java.io.FileInputStream(jobInfoFile)) {
            	jobInfo.load(is);
            } catch (IOException e) {
            	 
                
            }
        }
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));


		
		

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }


        if (rootPid==null) {
            rootPid = pid;
        }


        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }
        boolean inOSGi = routines.system.BundleUtils.inOSGi();

        try {
            java.util.Dictionary<String, Object> jobProperties = null;
            if (inOSGi) {
                jobProperties = routines.system.BundleUtils.getJobProperties(jobName);
    
                if (jobProperties != null && jobProperties.get("context") != null) {
                    contextStr = (String)jobProperties.get("context");
                }
            }
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = relatorio_sellout.class.getClassLoader().getResourceAsStream("palacio_ferramentas/relatorio_sellout_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = relatorio_sellout.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                try {
                    //defaultProps is in order to keep the original context value
                    if(context != null && context.isEmpty()) {
    	                defaultProps.load(inContext);
    	                if (inOSGi && jobProperties != null) {
                             java.util.Enumeration<String> keys = jobProperties.keys();
                             while (keys.hasMoreElements()) {
                                 String propKey = keys.nextElement();
                                 if (defaultProps.containsKey(propKey)) {
                                     defaultProps.put(propKey, (String) jobProperties.get(propKey));
                                 }
                             }
    	                }
    	                context = new ContextProperties(defaultProps);
                    }
                } finally {
                    inContext.close();
                }
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                        context.setContextType("programa", "id_String");
                        if(context.getStringValue("programa") == null) {
                            context.programa = null;
                        } else {
                            context.programa=(String) context.getProperty("programa");
                        }
                        context.setContextType("data_execucao", "id_String");
                        if(context.getStringValue("data_execucao") == null) {
                            context.data_execucao = null;
                        } else {
                            context.data_execucao=(String) context.getProperty("data_execucao");
                        }
                        context.setContextType("EMAIL_PASSWORD_P", "id_String");
                        if(context.getStringValue("EMAIL_PASSWORD_P") == null) {
                            context.EMAIL_PASSWORD_P = null;
                        } else {
                            context.EMAIL_PASSWORD_P=(String) context.getProperty("EMAIL_PASSWORD_P");
                        }
                        context.setContextType("EMAIL_P", "id_String");
                        if(context.getStringValue("EMAIL_P") == null) {
                            context.EMAIL_P = null;
                        } else {
                            context.EMAIL_P=(String) context.getProperty("EMAIL_P");
                        }
                        context.setContextType("SEND_EMAIL", "id_String");
                        if(context.getStringValue("SEND_EMAIL") == null) {
                            context.SEND_EMAIL = null;
                        } else {
                            context.SEND_EMAIL=(String) context.getProperty("SEND_EMAIL");
                        }
                        context.setContextType("versao", "id_Integer");
                        if(context.getStringValue("versao") == null) {
                            context.versao = null;
                        } else {
                            try{
                                context.versao=routines.system.ParserUtils.parseTo_Integer (context.getProperty("versao"));
                            } catch(NumberFormatException e){
                                System.err.println(String.format("Null value will be used for context parameter %s: %s", "versao", e.getMessage()));
                                context.versao=null;
                            }
                        }
                        context.setContextType("excel", "id_String");
                        if(context.getStringValue("excel") == null) {
                            context.excel = null;
                        } else {
                            context.excel=(String) context.getProperty("excel");
                        }
                        context.setContextType("SMTP_P", "id_String");
                        if(context.getStringValue("SMTP_P") == null) {
                            context.SMTP_P = null;
                        } else {
                            context.SMTP_P=(String) context.getProperty("SMTP_P");
                        }
                        context.setContextType("SMTP_PORT_P", "id_String");
                        if(context.getStringValue("SMTP_PORT_P") == null) {
                            context.SMTP_PORT_P = null;
                        } else {
                            context.SMTP_PORT_P=(String) context.getProperty("SMTP_PORT_P");
                        }
                        context.setContextType("AUTCOM_DB", "id_String");
                        if(context.getStringValue("AUTCOM_DB") == null) {
                            context.AUTCOM_DB = null;
                        } else {
                            context.AUTCOM_DB=(String) context.getProperty("AUTCOM_DB");
                        }
                        context.setContextType("AUTCOM_HOST", "id_String");
                        if(context.getStringValue("AUTCOM_HOST") == null) {
                            context.AUTCOM_HOST = null;
                        } else {
                            context.AUTCOM_HOST=(String) context.getProperty("AUTCOM_HOST");
                        }
                        context.setContextType("AUTCOM_PASSWORD", "id_String");
                        if(context.getStringValue("AUTCOM_PASSWORD") == null) {
                            context.AUTCOM_PASSWORD = null;
                        } else {
                            context.AUTCOM_PASSWORD=(String) context.getProperty("AUTCOM_PASSWORD");
                        }
                        context.setContextType("AUTCOM_PORT", "id_String");
                        if(context.getStringValue("AUTCOM_PORT") == null) {
                            context.AUTCOM_PORT = null;
                        } else {
                            context.AUTCOM_PORT=(String) context.getProperty("AUTCOM_PORT");
                        }
                        context.setContextType("AUTCOM_USER", "id_String");
                        if(context.getStringValue("AUTCOM_USER") == null) {
                            context.AUTCOM_USER = null;
                        } else {
                            context.AUTCOM_USER=(String) context.getProperty("AUTCOM_USER");
                        }
                        context.setContextType("POSTGRES_DB", "id_String");
                        if(context.getStringValue("POSTGRES_DB") == null) {
                            context.POSTGRES_DB = null;
                        } else {
                            context.POSTGRES_DB=(String) context.getProperty("POSTGRES_DB");
                        }
                        context.setContextType("POSTGRES_HOST", "id_String");
                        if(context.getStringValue("POSTGRES_HOST") == null) {
                            context.POSTGRES_HOST = null;
                        } else {
                            context.POSTGRES_HOST=(String) context.getProperty("POSTGRES_HOST");
                        }
                        context.setContextType("POSTGRES_PASSWORD", "id_String");
                        if(context.getStringValue("POSTGRES_PASSWORD") == null) {
                            context.POSTGRES_PASSWORD = null;
                        } else {
                            context.POSTGRES_PASSWORD=(String) context.getProperty("POSTGRES_PASSWORD");
                        }
                        context.setContextType("POSTGRES_PORT", "id_String");
                        if(context.getStringValue("POSTGRES_PORT") == null) {
                            context.POSTGRES_PORT = null;
                        } else {
                            context.POSTGRES_PORT=(String) context.getProperty("POSTGRES_PORT");
                        }
                        context.setContextType("POSTGRES_USER", "id_String");
                        if(context.getStringValue("POSTGRES_USER") == null) {
                            context.POSTGRES_USER = null;
                        } else {
                            context.POSTGRES_USER=(String) context.getProperty("POSTGRES_USER");
                        }
                        context.setContextType("JDBC_PARAMETERS", "id_String");
                        if(context.getStringValue("JDBC_PARAMETERS") == null) {
                            context.JDBC_PARAMETERS = null;
                        } else {
                            context.JDBC_PARAMETERS=(String) context.getProperty("JDBC_PARAMETERS");
                        }
                        context.setContextType("caminho", "id_String");
                        if(context.getStringValue("caminho") == null) {
                            context.caminho = null;
                        } else {
                            context.caminho=(String) context.getProperty("caminho");
                        }
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {if (parentContextMap.containsKey("programa")) {
                context.programa = (String) parentContextMap.get("programa");
            }if (parentContextMap.containsKey("data_execucao")) {
                context.data_execucao = (String) parentContextMap.get("data_execucao");
            }if (parentContextMap.containsKey("EMAIL_PASSWORD_P")) {
                context.EMAIL_PASSWORD_P = (String) parentContextMap.get("EMAIL_PASSWORD_P");
            }if (parentContextMap.containsKey("EMAIL_P")) {
                context.EMAIL_P = (String) parentContextMap.get("EMAIL_P");
            }if (parentContextMap.containsKey("SEND_EMAIL")) {
                context.SEND_EMAIL = (String) parentContextMap.get("SEND_EMAIL");
            }if (parentContextMap.containsKey("versao")) {
                context.versao = (Integer) parentContextMap.get("versao");
            }if (parentContextMap.containsKey("excel")) {
                context.excel = (String) parentContextMap.get("excel");
            }if (parentContextMap.containsKey("SMTP_P")) {
                context.SMTP_P = (String) parentContextMap.get("SMTP_P");
            }if (parentContextMap.containsKey("SMTP_PORT_P")) {
                context.SMTP_PORT_P = (String) parentContextMap.get("SMTP_PORT_P");
            }if (parentContextMap.containsKey("AUTCOM_DB")) {
                context.AUTCOM_DB = (String) parentContextMap.get("AUTCOM_DB");
            }if (parentContextMap.containsKey("AUTCOM_HOST")) {
                context.AUTCOM_HOST = (String) parentContextMap.get("AUTCOM_HOST");
            }if (parentContextMap.containsKey("AUTCOM_PASSWORD")) {
                context.AUTCOM_PASSWORD = (String) parentContextMap.get("AUTCOM_PASSWORD");
            }if (parentContextMap.containsKey("AUTCOM_PORT")) {
                context.AUTCOM_PORT = (String) parentContextMap.get("AUTCOM_PORT");
            }if (parentContextMap.containsKey("AUTCOM_USER")) {
                context.AUTCOM_USER = (String) parentContextMap.get("AUTCOM_USER");
            }if (parentContextMap.containsKey("POSTGRES_DB")) {
                context.POSTGRES_DB = (String) parentContextMap.get("POSTGRES_DB");
            }if (parentContextMap.containsKey("POSTGRES_HOST")) {
                context.POSTGRES_HOST = (String) parentContextMap.get("POSTGRES_HOST");
            }if (parentContextMap.containsKey("POSTGRES_PASSWORD")) {
                context.POSTGRES_PASSWORD = (String) parentContextMap.get("POSTGRES_PASSWORD");
            }if (parentContextMap.containsKey("POSTGRES_PORT")) {
                context.POSTGRES_PORT = (String) parentContextMap.get("POSTGRES_PORT");
            }if (parentContextMap.containsKey("POSTGRES_USER")) {
                context.POSTGRES_USER = (String) parentContextMap.get("POSTGRES_USER");
            }if (parentContextMap.containsKey("JDBC_PARAMETERS")) {
                context.JDBC_PARAMETERS = (String) parentContextMap.get("JDBC_PARAMETERS");
            }if (parentContextMap.containsKey("caminho")) {
                context.caminho = (String) parentContextMap.get("caminho");
            }
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,ContextProperties.class,parametersToEncrypt));


if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();


this.globalResumeTicket = true;//to run tPreJob

try {
errorCode = null;tPrejob_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPrejob_1) {
globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

e_tPrejob_1.printStackTrace();

}




this.globalResumeTicket = false;//to run others jobs
final Thread launchingThread = Thread.currentThread();
        runningThreadCount.add(1);
        new Thread(){
            public void run() {

                java.util.Map threadRunResultMap = new java.util.HashMap();
                threadRunResultMap.put("errorCode", null);
                threadRunResultMap.put("status", "");
                threadLocal.set(threadRunResultMap);

                try {
((java.util.Map) threadLocal.get()).put("errorCode", null);tRowGenerator_1Process(globalMap);
if ( !"failure".equals(((java.util.Map)threadLocal.get()).get("status")) ) {
((java.util.Map) threadLocal.get()).put("status", "end");
}
}catch (TalendException e_tRowGenerator_1) {
globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", -1);

e_tRowGenerator_1.printStackTrace();

}catch (java.lang.Error e_tRowGenerator_1) {
globalMap.put("tRowGenerator_1_SUBPROCESS_STATE", -1);
((java.util.Map) threadLocal.get()).put("status", "failure");throw e_tRowGenerator_1;

}
                finally {
                    Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
                    String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
                    if (localErrorCode != null) {
                        if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                           errorCode = localErrorCode;
                        }
                    }
                    if (!status.equals("failure")){
                        status = localStatus;
                    }

                    if ("true".equals(((java.util.Map) threadLocal.get()).get("JobInterrupted"))) {
                        launchingThread.interrupt();
                    }

                    runningThreadCount.add(-1);
                }
            }
        }.start();

    boolean interrupted = false;
    while (runningThreadCount.getCount() > 0) {
        try {
            Thread.sleep(10);
        } catch (java.lang.InterruptedException e) {
            interrupted = true;
        } catch (java.lang.Exception e) {
            e.printStackTrace();
        }
    }

    if (interrupted) {
        Thread.currentThread().interrupt();
    }



this.globalResumeTicket = true;//to run tPostJob

try {
errorCode = null;tPostjob_2Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tPostjob_2) {
globalMap.put("tPostjob_2_SUBPROCESS_STATE", -1);

e_tPostjob_2.printStackTrace();

}



        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : relatorio_sellout");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;

        Integer localErrorCode = (Integer)(((java.util.Map)threadLocal.get()).get("errorCode"));
        String localStatus = (String)(((java.util.Map)threadLocal.get()).get("status"));
        if (localErrorCode != null) {
            if (errorCode == null || localErrorCode.compareTo(errorCode) > 0) {
                   errorCode = localErrorCode;
            }
        }
        if (localStatus != null && !status.equals("failure")){
            status = localStatus;
        }

    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");
    resumeUtil.flush();


    return returnCode;

  }

    // only for OSGi env
    public void destroy() {
    closeSqlDbConnections();


    }



    private void closeSqlDbConnections() {
        try {
            Object obj_conn;
            obj_conn = globalMap.remove("conn_tDBConnection_2");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
            obj_conn = globalMap.remove("conn_tDBConnection_3");
            if (null != obj_conn) {
                ((java.sql.Connection) obj_conn).close();
            }
        } catch (java.lang.Exception e) {
        }
    }











    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
            connections.put("conn_tDBConnection_2", globalMap.get("conn_tDBConnection_2"));
            connections.put("conn_tDBConnection_3", globalMap.get("conn_tDBConnection_3"));






        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1318138 characters generated by Talend Open Studio for Big Data 
 *     on the 1 de abril de 2025 17:52:59 BRT
 ************************************************************************************************/